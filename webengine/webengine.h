// +build !minimal

#pragma once

#ifndef GO_QTWEBENGINE_H
#define GO_QTWEBENGINE_H

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

struct QtWebEngine_PackedString { char* data; long long len; };
struct QtWebEngine_PackedList { void* data; long long len; };
struct QtWebEngine_PackedString QQuickWebEngineProfile_CachePath(void* ptr);
struct QtWebEngine_PackedString QQuickWebEngineProfile_HttpAcceptLanguage(void* ptr);
int QQuickWebEngineProfile_HttpCacheMaximumSize(void* ptr);
long long QQuickWebEngineProfile_HttpCacheType(void* ptr);
struct QtWebEngine_PackedString QQuickWebEngineProfile_HttpUserAgent(void* ptr);
char QQuickWebEngineProfile_IsOffTheRecord(void* ptr);
long long QQuickWebEngineProfile_PersistentCookiesPolicy(void* ptr);
struct QtWebEngine_PackedString QQuickWebEngineProfile_PersistentStoragePath(void* ptr);
void QQuickWebEngineProfile_SetCachePath(void* ptr, char* path);
void QQuickWebEngineProfile_SetHttpAcceptLanguage(void* ptr, char* httpAcceptLanguage);
void QQuickWebEngineProfile_SetHttpCacheMaximumSize(void* ptr, int maxSize);
void QQuickWebEngineProfile_SetHttpCacheType(void* ptr, long long vqq);
void QQuickWebEngineProfile_SetHttpUserAgent(void* ptr, char* userAgent);
void QQuickWebEngineProfile_SetOffTheRecord(void* ptr, char offTheRecord);
void QQuickWebEngineProfile_SetPersistentCookiesPolicy(void* ptr, long long vqq);
void QQuickWebEngineProfile_SetPersistentStoragePath(void* ptr, char* path);
void QQuickWebEngineProfile_SetStorageName(void* ptr, char* name);
struct QtWebEngine_PackedString QQuickWebEngineProfile_StorageName(void* ptr);
void* QQuickWebEngineProfile_NewQQuickWebEngineProfile(void* parent);
void QQuickWebEngineProfile_ConnectCachePathChanged(void* ptr);
void QQuickWebEngineProfile_DisconnectCachePathChanged(void* ptr);
void QQuickWebEngineProfile_CachePathChanged(void* ptr);
void QQuickWebEngineProfile_ClearHttpCache(void* ptr);
void* QQuickWebEngineProfile_CookieStore(void* ptr);
void* QQuickWebEngineProfile_QQuickWebEngineProfile_DefaultProfile();
void QQuickWebEngineProfile_ConnectHttpAcceptLanguageChanged(void* ptr);
void QQuickWebEngineProfile_DisconnectHttpAcceptLanguageChanged(void* ptr);
void QQuickWebEngineProfile_HttpAcceptLanguageChanged(void* ptr);
void QQuickWebEngineProfile_ConnectHttpCacheMaximumSizeChanged(void* ptr);
void QQuickWebEngineProfile_DisconnectHttpCacheMaximumSizeChanged(void* ptr);
void QQuickWebEngineProfile_HttpCacheMaximumSizeChanged(void* ptr);
void QQuickWebEngineProfile_ConnectHttpCacheTypeChanged(void* ptr);
void QQuickWebEngineProfile_DisconnectHttpCacheTypeChanged(void* ptr);
void QQuickWebEngineProfile_HttpCacheTypeChanged(void* ptr);
void QQuickWebEngineProfile_ConnectHttpUserAgentChanged(void* ptr);
void QQuickWebEngineProfile_DisconnectHttpUserAgentChanged(void* ptr);
void QQuickWebEngineProfile_HttpUserAgentChanged(void* ptr);
void QQuickWebEngineProfile_InstallUrlSchemeHandler(void* ptr, void* scheme, void* handler);
void QQuickWebEngineProfile_ConnectOffTheRecordChanged(void* ptr);
void QQuickWebEngineProfile_DisconnectOffTheRecordChanged(void* ptr);
void QQuickWebEngineProfile_OffTheRecordChanged(void* ptr);
void QQuickWebEngineProfile_ConnectPersistentCookiesPolicyChanged(void* ptr);
void QQuickWebEngineProfile_DisconnectPersistentCookiesPolicyChanged(void* ptr);
void QQuickWebEngineProfile_PersistentCookiesPolicyChanged(void* ptr);
void QQuickWebEngineProfile_ConnectPersistentStoragePathChanged(void* ptr);
void QQuickWebEngineProfile_DisconnectPersistentStoragePathChanged(void* ptr);
void QQuickWebEngineProfile_PersistentStoragePathChanged(void* ptr);
void QQuickWebEngineProfile_RemoveAllUrlSchemeHandlers(void* ptr);
void QQuickWebEngineProfile_RemoveUrlScheme(void* ptr, void* scheme);
void QQuickWebEngineProfile_RemoveUrlSchemeHandler(void* ptr, void* handler);
void QQuickWebEngineProfile_SetRequestInterceptor(void* ptr, void* interceptor);
void QQuickWebEngineProfile_ConnectStorageNameChanged(void* ptr);
void QQuickWebEngineProfile_DisconnectStorageNameChanged(void* ptr);
void QQuickWebEngineProfile_StorageNameChanged(void* ptr);
void* QQuickWebEngineProfile_UrlSchemeHandler(void* ptr, void* scheme);
void QQuickWebEngineProfile_TimerEvent(void* ptr, void* event);
void QQuickWebEngineProfile_TimerEventDefault(void* ptr, void* event);
void QQuickWebEngineProfile_ChildEvent(void* ptr, void* event);
void QQuickWebEngineProfile_ChildEventDefault(void* ptr, void* event);
void QQuickWebEngineProfile_ConnectNotify(void* ptr, void* sign);
void QQuickWebEngineProfile_ConnectNotifyDefault(void* ptr, void* sign);
void QQuickWebEngineProfile_CustomEvent(void* ptr, void* event);
void QQuickWebEngineProfile_CustomEventDefault(void* ptr, void* event);
void QQuickWebEngineProfile_DeleteLater(void* ptr);
void QQuickWebEngineProfile_DeleteLaterDefault(void* ptr);
void QQuickWebEngineProfile_DisconnectNotify(void* ptr, void* sign);
void QQuickWebEngineProfile_DisconnectNotifyDefault(void* ptr, void* sign);
char QQuickWebEngineProfile_Event(void* ptr, void* e);
char QQuickWebEngineProfile_EventDefault(void* ptr, void* e);
char QQuickWebEngineProfile_EventFilter(void* ptr, void* watched, void* event);
char QQuickWebEngineProfile_EventFilterDefault(void* ptr, void* watched, void* event);
void* QQuickWebEngineProfile_MetaObject(void* ptr);
void* QQuickWebEngineProfile_MetaObjectDefault(void* ptr);
long long QWebEngineCertificateError_Error(void* ptr);
struct QtWebEngine_PackedString QWebEngineCertificateError_ErrorDescription(void* ptr);
char QWebEngineCertificateError_IsOverridable(void* ptr);
void* QWebEngineCertificateError_Url(void* ptr);
void* QWebEngineContextMenuData_NewQWebEngineContextMenuData();
void* QWebEngineContextMenuData_NewQWebEngineContextMenuData2(void* other);
char QWebEngineContextMenuData_IsContentEditable(void* ptr);
char QWebEngineContextMenuData_IsValid(void* ptr);
struct QtWebEngine_PackedString QWebEngineContextMenuData_LinkText(void* ptr);
void* QWebEngineContextMenuData_LinkUrl(void* ptr);
long long QWebEngineContextMenuData_MediaType(void* ptr);
void* QWebEngineContextMenuData_MediaUrl(void* ptr);
void* QWebEngineContextMenuData_Position(void* ptr);
struct QtWebEngine_PackedString QWebEngineContextMenuData_SelectedText(void* ptr);
void QWebEngineContextMenuData_DestroyQWebEngineContextMenuData(void* ptr);
void QWebEngineCookieStore_ConnectCookieAdded(void* ptr);
void QWebEngineCookieStore_DisconnectCookieAdded(void* ptr);
void QWebEngineCookieStore_CookieAdded(void* ptr, void* cookie);
void QWebEngineCookieStore_ConnectCookieRemoved(void* ptr);
void QWebEngineCookieStore_DisconnectCookieRemoved(void* ptr);
void QWebEngineCookieStore_CookieRemoved(void* ptr, void* cookie);
void QWebEngineCookieStore_DeleteAllCookies(void* ptr);
void QWebEngineCookieStore_DeleteCookie(void* ptr, void* cookie, void* origin);
void QWebEngineCookieStore_DeleteSessionCookies(void* ptr);
void QWebEngineCookieStore_LoadAllCookies(void* ptr);
void QWebEngineCookieStore_SetCookie(void* ptr, void* cookie, void* origin);
void QWebEngineCookieStore_DestroyQWebEngineCookieStore(void* ptr);
void QWebEngineCookieStore_DestroyQWebEngineCookieStoreDefault(void* ptr);
void QWebEngineCookieStore_TimerEvent(void* ptr, void* event);
void QWebEngineCookieStore_TimerEventDefault(void* ptr, void* event);
void QWebEngineCookieStore_ChildEvent(void* ptr, void* event);
void QWebEngineCookieStore_ChildEventDefault(void* ptr, void* event);
void QWebEngineCookieStore_ConnectNotify(void* ptr, void* sign);
void QWebEngineCookieStore_ConnectNotifyDefault(void* ptr, void* sign);
void QWebEngineCookieStore_CustomEvent(void* ptr, void* event);
void QWebEngineCookieStore_CustomEventDefault(void* ptr, void* event);
void QWebEngineCookieStore_DeleteLater(void* ptr);
void QWebEngineCookieStore_DeleteLaterDefault(void* ptr);
void QWebEngineCookieStore_DisconnectNotify(void* ptr, void* sign);
void QWebEngineCookieStore_DisconnectNotifyDefault(void* ptr, void* sign);
char QWebEngineCookieStore_Event(void* ptr, void* e);
char QWebEngineCookieStore_EventDefault(void* ptr, void* e);
char QWebEngineCookieStore_EventFilter(void* ptr, void* watched, void* event);
char QWebEngineCookieStore_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebEngineCookieStore_MetaObject(void* ptr);
void* QWebEngineCookieStore_MetaObjectDefault(void* ptr);
void QWebEngineDownloadItem_Accept(void* ptr);
void QWebEngineDownloadItem_Cancel(void* ptr);
void QWebEngineDownloadItem_ConnectDownloadProgress(void* ptr);
void QWebEngineDownloadItem_DisconnectDownloadProgress(void* ptr);
void QWebEngineDownloadItem_DownloadProgress(void* ptr, long long bytesReceived, long long bytesTotal);
void QWebEngineDownloadItem_ConnectFinished(void* ptr);
void QWebEngineDownloadItem_DisconnectFinished(void* ptr);
void QWebEngineDownloadItem_Finished(void* ptr);
unsigned int QWebEngineDownloadItem_Id(void* ptr);
char QWebEngineDownloadItem_IsFinished(void* ptr);
struct QtWebEngine_PackedString QWebEngineDownloadItem_MimeType(void* ptr);
struct QtWebEngine_PackedString QWebEngineDownloadItem_Path(void* ptr);
long long QWebEngineDownloadItem_ReceivedBytes(void* ptr);
long long QWebEngineDownloadItem_SavePageFormat(void* ptr);
void QWebEngineDownloadItem_SetPath(void* ptr, char* path);
void QWebEngineDownloadItem_SetSavePageFormat(void* ptr, long long format);
long long QWebEngineDownloadItem_State(void* ptr);
void QWebEngineDownloadItem_ConnectStateChanged(void* ptr);
void QWebEngineDownloadItem_DisconnectStateChanged(void* ptr);
void QWebEngineDownloadItem_StateChanged(void* ptr, long long state);
long long QWebEngineDownloadItem_TotalBytes(void* ptr);
void* QWebEngineDownloadItem_Url(void* ptr);
void QWebEngineDownloadItem_TimerEvent(void* ptr, void* event);
void QWebEngineDownloadItem_TimerEventDefault(void* ptr, void* event);
void QWebEngineDownloadItem_ChildEvent(void* ptr, void* event);
void QWebEngineDownloadItem_ChildEventDefault(void* ptr, void* event);
void QWebEngineDownloadItem_ConnectNotify(void* ptr, void* sign);
void QWebEngineDownloadItem_ConnectNotifyDefault(void* ptr, void* sign);
void QWebEngineDownloadItem_CustomEvent(void* ptr, void* event);
void QWebEngineDownloadItem_CustomEventDefault(void* ptr, void* event);
void QWebEngineDownloadItem_DeleteLater(void* ptr);
void QWebEngineDownloadItem_DeleteLaterDefault(void* ptr);
void QWebEngineDownloadItem_DisconnectNotify(void* ptr, void* sign);
void QWebEngineDownloadItem_DisconnectNotifyDefault(void* ptr, void* sign);
char QWebEngineDownloadItem_Event(void* ptr, void* e);
char QWebEngineDownloadItem_EventDefault(void* ptr, void* e);
char QWebEngineDownloadItem_EventFilter(void* ptr, void* watched, void* event);
char QWebEngineDownloadItem_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebEngineDownloadItem_MetaObject(void* ptr);
void* QWebEngineDownloadItem_MetaObjectDefault(void* ptr);
void QWebEngineFullScreenRequest_Accept(void* ptr);
void* QWebEngineFullScreenRequest_Origin(void* ptr);
void QWebEngineFullScreenRequest_Reject(void* ptr);
char QWebEngineFullScreenRequest_ToggleOn(void* ptr);
void QWebEngineHistory_Back(void* ptr);
void* QWebEngineHistory_BackItem(void* ptr);
struct QtWebEngine_PackedList QWebEngineHistory_BackItems(void* ptr, int maxItems);
char QWebEngineHistory_CanGoBack(void* ptr);
char QWebEngineHistory_CanGoForward(void* ptr);
void QWebEngineHistory_Clear(void* ptr);
int QWebEngineHistory_Count(void* ptr);
void* QWebEngineHistory_CurrentItem(void* ptr);
int QWebEngineHistory_CurrentItemIndex(void* ptr);
void QWebEngineHistory_Forward(void* ptr);
void* QWebEngineHistory_ForwardItem(void* ptr);
struct QtWebEngine_PackedList QWebEngineHistory_ForwardItems(void* ptr, int maxItems);
void QWebEngineHistory_GoToItem(void* ptr, void* item);
void* QWebEngineHistory_ItemAt(void* ptr, int i);
struct QtWebEngine_PackedList QWebEngineHistory_Items(void* ptr);
void* QWebEngineHistory_backItems_atList(void* ptr, int i);
void* QWebEngineHistory_forwardItems_atList(void* ptr, int i);
void* QWebEngineHistory_items_atList(void* ptr, int i);
void* QWebEngineHistoryItem_NewQWebEngineHistoryItem(void* other);
char QWebEngineHistoryItem_IsValid(void* ptr);
void* QWebEngineHistoryItem_LastVisited(void* ptr);
void* QWebEngineHistoryItem_OriginalUrl(void* ptr);
struct QtWebEngine_PackedString QWebEngineHistoryItem_Title(void* ptr);
void* QWebEngineHistoryItem_Url(void* ptr);
void QWebEngineHistoryItem_DestroyQWebEngineHistoryItem(void* ptr);
void* QWebEngineHistoryItem_IconUrl(void* ptr);
void QWebEngineHistoryItem_Swap(void* ptr, void* other);
void* QWebEnginePage_NewQWebEnginePage(void* parent);
char QWebEnginePage_AcceptNavigationRequest(void* ptr, void* url, long long ty, char isMainFrame);
char QWebEnginePage_AcceptNavigationRequestDefault(void* ptr, void* url, long long ty, char isMainFrame);
void* QWebEnginePage_Action(void* ptr, long long action);
void* QWebEnginePage_BackgroundColor(void* ptr);
char QWebEnginePage_CertificateError(void* ptr, void* certificateError);
char QWebEnginePage_CertificateErrorDefault(void* ptr, void* certificateError);
struct QtWebEngine_PackedString QWebEnginePage_ChooseFiles(void* ptr, long long mode, char* oldFiles, char* acceptedMimeTypes);
struct QtWebEngine_PackedString QWebEnginePage_ChooseFilesDefault(void* ptr, long long mode, char* oldFiles, char* acceptedMimeTypes);
void* QWebEnginePage_ContentsSize(void* ptr);
void* QWebEnginePage_CreateStandardContextMenu(void* ptr);
void* QWebEnginePage_CreateWindow(void* ptr, long long ty);
void* QWebEnginePage_CreateWindowDefault(void* ptr, long long ty);
char QWebEnginePage_HasSelection(void* ptr);
void* QWebEnginePage_History(void* ptr);
void* QWebEnginePage_Icon(void* ptr);
void* QWebEnginePage_IconUrl(void* ptr);
char QWebEnginePage_IsAudioMuted(void* ptr);
void QWebEnginePage_JavaScriptAlert(void* ptr, void* securityOrigin, char* msg);
void QWebEnginePage_JavaScriptAlertDefault(void* ptr, void* securityOrigin, char* msg);
char QWebEnginePage_JavaScriptConfirm(void* ptr, void* securityOrigin, char* msg);
char QWebEnginePage_JavaScriptConfirmDefault(void* ptr, void* securityOrigin, char* msg);
void QWebEnginePage_JavaScriptConsoleMessage(void* ptr, long long level, char* message, int lineNumber, char* sourceID);
void QWebEnginePage_JavaScriptConsoleMessageDefault(void* ptr, long long level, char* message, int lineNumber, char* sourceID);
char QWebEnginePage_JavaScriptPrompt(void* ptr, void* securityOrigin, char* msg, char* defaultValue, char* result);
char QWebEnginePage_JavaScriptPromptDefault(void* ptr, void* securityOrigin, char* msg, char* defaultValue, char* result);
void QWebEnginePage_Load(void* ptr, void* url);
char QWebEnginePage_RecentlyAudible(void* ptr);
void* QWebEnginePage_RequestedUrl(void* ptr);
void QWebEnginePage_RunJavaScript4(void* ptr, char* scriptSource);
void QWebEnginePage_RunJavaScript2(void* ptr, char* scriptSource, unsigned int worldId);
void* QWebEnginePage_ScrollPosition(void* ptr);
struct QtWebEngine_PackedString QWebEnginePage_SelectedText(void* ptr);
void QWebEnginePage_SetAudioMuted(void* ptr, char muted);
void QWebEnginePage_SetBackgroundColor(void* ptr, void* color);
void QWebEnginePage_SetContent(void* ptr, void* data, char* mimeType, void* baseUrl);
void QWebEnginePage_SetFeaturePermission(void* ptr, void* securityOrigin, long long feature, long long policy);
void QWebEnginePage_SetHtml(void* ptr, char* html, void* baseUrl);
void QWebEnginePage_SetUrl(void* ptr, void* url);
void QWebEnginePage_SetView(void* ptr, void* view);
void QWebEnginePage_SetZoomFactor(void* ptr, double factor);
void* QWebEnginePage_Settings(void* ptr);
struct QtWebEngine_PackedString QWebEnginePage_Title(void* ptr);
void QWebEnginePage_TriggerAction(void* ptr, long long action, char checked);
void QWebEnginePage_TriggerActionDefault(void* ptr, long long action, char checked);
void* QWebEnginePage_Url(void* ptr);
void* QWebEnginePage_View(void* ptr);
double QWebEnginePage_ZoomFactor(void* ptr);
void QWebEnginePage_DestroyQWebEnginePage(void* ptr);
void* QWebEnginePage_NewQWebEnginePage2(void* profile, void* parent);
void QWebEnginePage_ConnectAudioMutedChanged(void* ptr);
void QWebEnginePage_DisconnectAudioMutedChanged(void* ptr);
void QWebEnginePage_AudioMutedChanged(void* ptr, char muted);
void QWebEnginePage_ConnectAuthenticationRequired(void* ptr);
void QWebEnginePage_DisconnectAuthenticationRequired(void* ptr);
void QWebEnginePage_AuthenticationRequired(void* ptr, void* requestUrl, void* authenticator);
void QWebEnginePage_ConnectContentsSizeChanged(void* ptr);
void QWebEnginePage_DisconnectContentsSizeChanged(void* ptr);
void QWebEnginePage_ContentsSizeChanged(void* ptr, void* size);
void* QWebEnginePage_ContextMenuData(void* ptr);
char QWebEnginePage_Event(void* ptr, void* e);
char QWebEnginePage_EventDefault(void* ptr, void* e);
void QWebEnginePage_ConnectFeaturePermissionRequestCanceled(void* ptr);
void QWebEnginePage_DisconnectFeaturePermissionRequestCanceled(void* ptr);
void QWebEnginePage_FeaturePermissionRequestCanceled(void* ptr, void* securityOrigin, long long feature);
void QWebEnginePage_ConnectFeaturePermissionRequested(void* ptr);
void QWebEnginePage_DisconnectFeaturePermissionRequested(void* ptr);
void QWebEnginePage_FeaturePermissionRequested(void* ptr, void* securityOrigin, long long feature);
void QWebEnginePage_FindText(void* ptr, char* subString, long long options);
void QWebEnginePage_ConnectGeometryChangeRequested(void* ptr);
void QWebEnginePage_DisconnectGeometryChangeRequested(void* ptr);
void QWebEnginePage_GeometryChangeRequested(void* ptr, void* geom);
void QWebEnginePage_ConnectIconChanged(void* ptr);
void QWebEnginePage_DisconnectIconChanged(void* ptr);
void QWebEnginePage_IconChanged(void* ptr, void* icon);
void QWebEnginePage_ConnectIconUrlChanged(void* ptr);
void QWebEnginePage_DisconnectIconUrlChanged(void* ptr);
void QWebEnginePage_IconUrlChanged(void* ptr, void* url);
void QWebEnginePage_ConnectLinkHovered(void* ptr);
void QWebEnginePage_DisconnectLinkHovered(void* ptr);
void QWebEnginePage_LinkHovered(void* ptr, char* url);
void QWebEnginePage_ConnectLoadFinished(void* ptr);
void QWebEnginePage_DisconnectLoadFinished(void* ptr);
void QWebEnginePage_LoadFinished(void* ptr, char ok);
void QWebEnginePage_ConnectLoadProgress(void* ptr);
void QWebEnginePage_DisconnectLoadProgress(void* ptr);
void QWebEnginePage_LoadProgress(void* ptr, int progress);
void QWebEnginePage_ConnectLoadStarted(void* ptr);
void QWebEnginePage_DisconnectLoadStarted(void* ptr);
void QWebEnginePage_LoadStarted(void* ptr);
void QWebEnginePage_PrintToPdf(void* ptr, char* filePath, void* pageLayout);
void* QWebEnginePage_Profile(void* ptr);
void QWebEnginePage_ConnectProxyAuthenticationRequired(void* ptr);
void QWebEnginePage_DisconnectProxyAuthenticationRequired(void* ptr);
void QWebEnginePage_ProxyAuthenticationRequired(void* ptr, void* requestUrl, void* authenticator, char* proxyHost);
void QWebEnginePage_ConnectRecentlyAudibleChanged(void* ptr);
void QWebEnginePage_DisconnectRecentlyAudibleChanged(void* ptr);
void QWebEnginePage_RecentlyAudibleChanged(void* ptr, char recentlyAudible);
void QWebEnginePage_ConnectRenderProcessTerminated(void* ptr);
void QWebEnginePage_DisconnectRenderProcessTerminated(void* ptr);
void QWebEnginePage_RenderProcessTerminated(void* ptr, long long terminationStatus, int exitCode);
void QWebEnginePage_ConnectScrollPositionChanged(void* ptr);
void QWebEnginePage_DisconnectScrollPositionChanged(void* ptr);
void QWebEnginePage_ScrollPositionChanged(void* ptr, void* position);
void QWebEnginePage_ConnectSelectionChanged(void* ptr);
void QWebEnginePage_DisconnectSelectionChanged(void* ptr);
void QWebEnginePage_SelectionChanged(void* ptr);
void QWebEnginePage_SetWebChannel2(void* ptr, void* channel);
void QWebEnginePage_SetWebChannel(void* ptr, void* channel, unsigned int worldId);
void QWebEnginePage_ConnectTitleChanged(void* ptr);
void QWebEnginePage_DisconnectTitleChanged(void* ptr);
void QWebEnginePage_TitleChanged(void* ptr, char* title);
void QWebEnginePage_ConnectUrlChanged(void* ptr);
void QWebEnginePage_DisconnectUrlChanged(void* ptr);
void QWebEnginePage_UrlChanged(void* ptr, void* url);
void* QWebEnginePage_WebChannel(void* ptr);
void QWebEnginePage_ConnectWindowCloseRequested(void* ptr);
void QWebEnginePage_DisconnectWindowCloseRequested(void* ptr);
void QWebEnginePage_WindowCloseRequested(void* ptr);
void QWebEnginePage_TimerEvent(void* ptr, void* event);
void QWebEnginePage_TimerEventDefault(void* ptr, void* event);
void QWebEnginePage_ChildEvent(void* ptr, void* event);
void QWebEnginePage_ChildEventDefault(void* ptr, void* event);
void QWebEnginePage_ConnectNotify(void* ptr, void* sign);
void QWebEnginePage_ConnectNotifyDefault(void* ptr, void* sign);
void QWebEnginePage_CustomEvent(void* ptr, void* event);
void QWebEnginePage_CustomEventDefault(void* ptr, void* event);
void QWebEnginePage_DeleteLater(void* ptr);
void QWebEnginePage_DeleteLaterDefault(void* ptr);
void QWebEnginePage_DisconnectNotify(void* ptr, void* sign);
void QWebEnginePage_DisconnectNotifyDefault(void* ptr, void* sign);
char QWebEnginePage_EventFilter(void* ptr, void* watched, void* event);
char QWebEnginePage_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebEnginePage_MetaObject(void* ptr);
void* QWebEnginePage_MetaObjectDefault(void* ptr);
void* QWebEngineProfile_NewQWebEngineProfile(void* parent);
void* QWebEngineProfile_NewQWebEngineProfile2(char* storageName, void* parent);
struct QtWebEngine_PackedString QWebEngineProfile_CachePath(void* ptr);
void QWebEngineProfile_ClearAllVisitedLinks(void* ptr);
void QWebEngineProfile_ClearHttpCache(void* ptr);
void* QWebEngineProfile_CookieStore(void* ptr);
void* QWebEngineProfile_QWebEngineProfile_DefaultProfile();
void QWebEngineProfile_ConnectDownloadRequested(void* ptr);
void QWebEngineProfile_DisconnectDownloadRequested(void* ptr);
void QWebEngineProfile_DownloadRequested(void* ptr, void* download);
struct QtWebEngine_PackedString QWebEngineProfile_HttpAcceptLanguage(void* ptr);
int QWebEngineProfile_HttpCacheMaximumSize(void* ptr);
long long QWebEngineProfile_HttpCacheType(void* ptr);
struct QtWebEngine_PackedString QWebEngineProfile_HttpUserAgent(void* ptr);
void QWebEngineProfile_InstallUrlSchemeHandler(void* ptr, void* scheme, void* handler);
char QWebEngineProfile_IsOffTheRecord(void* ptr);
long long QWebEngineProfile_PersistentCookiesPolicy(void* ptr);
struct QtWebEngine_PackedString QWebEngineProfile_PersistentStoragePath(void* ptr);
void QWebEngineProfile_RemoveAllUrlSchemeHandlers(void* ptr);
void QWebEngineProfile_RemoveUrlScheme(void* ptr, void* scheme);
void QWebEngineProfile_RemoveUrlSchemeHandler(void* ptr, void* handler);
void* QWebEngineProfile_Scripts(void* ptr);
void QWebEngineProfile_SetCachePath(void* ptr, char* path);
void QWebEngineProfile_SetHttpAcceptLanguage(void* ptr, char* httpAcceptLanguage);
void QWebEngineProfile_SetHttpCacheMaximumSize(void* ptr, int maxSize);
void QWebEngineProfile_SetHttpCacheType(void* ptr, long long httpCacheType);
void QWebEngineProfile_SetHttpUserAgent(void* ptr, char* userAgent);
void QWebEngineProfile_SetPersistentCookiesPolicy(void* ptr, long long newPersistentCookiesPolicy);
void QWebEngineProfile_SetPersistentStoragePath(void* ptr, char* path);
void QWebEngineProfile_SetRequestInterceptor(void* ptr, void* interceptor);
void* QWebEngineProfile_Settings(void* ptr);
struct QtWebEngine_PackedString QWebEngineProfile_StorageName(void* ptr);
void* QWebEngineProfile_UrlSchemeHandler(void* ptr, void* scheme);
char QWebEngineProfile_VisitedLinksContainsUrl(void* ptr, void* url);
void QWebEngineProfile_TimerEvent(void* ptr, void* event);
void QWebEngineProfile_TimerEventDefault(void* ptr, void* event);
void QWebEngineProfile_ChildEvent(void* ptr, void* event);
void QWebEngineProfile_ChildEventDefault(void* ptr, void* event);
void QWebEngineProfile_ConnectNotify(void* ptr, void* sign);
void QWebEngineProfile_ConnectNotifyDefault(void* ptr, void* sign);
void QWebEngineProfile_CustomEvent(void* ptr, void* event);
void QWebEngineProfile_CustomEventDefault(void* ptr, void* event);
void QWebEngineProfile_DeleteLater(void* ptr);
void QWebEngineProfile_DeleteLaterDefault(void* ptr);
void QWebEngineProfile_DisconnectNotify(void* ptr, void* sign);
void QWebEngineProfile_DisconnectNotifyDefault(void* ptr, void* sign);
char QWebEngineProfile_Event(void* ptr, void* e);
char QWebEngineProfile_EventDefault(void* ptr, void* e);
char QWebEngineProfile_EventFilter(void* ptr, void* watched, void* event);
char QWebEngineProfile_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebEngineProfile_MetaObject(void* ptr);
void* QWebEngineProfile_MetaObjectDefault(void* ptr);
void* QWebEngineScript_NewQWebEngineScript();
void* QWebEngineScript_NewQWebEngineScript2(void* other);
long long QWebEngineScript_InjectionPoint(void* ptr);
char QWebEngineScript_IsNull(void* ptr);
struct QtWebEngine_PackedString QWebEngineScript_Name(void* ptr);
char QWebEngineScript_RunsOnSubFrames(void* ptr);
void QWebEngineScript_SetInjectionPoint(void* ptr, long long p);
void QWebEngineScript_SetName(void* ptr, char* scriptName);
void QWebEngineScript_SetRunsOnSubFrames(void* ptr, char on);
void QWebEngineScript_SetSourceCode(void* ptr, char* scriptSource);
void QWebEngineScript_SetWorldId(void* ptr, unsigned int id);
struct QtWebEngine_PackedString QWebEngineScript_SourceCode(void* ptr);
void QWebEngineScript_Swap(void* ptr, void* other);
unsigned int QWebEngineScript_WorldId(void* ptr);
void QWebEngineScript_DestroyQWebEngineScript(void* ptr);
void QWebEngineScriptCollection_Clear(void* ptr);
char QWebEngineScriptCollection_Contains(void* ptr, void* value);
int QWebEngineScriptCollection_Count(void* ptr);
void* QWebEngineScriptCollection_FindScript(void* ptr, char* name);
struct QtWebEngine_PackedList QWebEngineScriptCollection_FindScripts(void* ptr, char* name);
void QWebEngineScriptCollection_Insert(void* ptr, void* s);
char QWebEngineScriptCollection_IsEmpty(void* ptr);
char QWebEngineScriptCollection_Remove(void* ptr, void* script);
int QWebEngineScriptCollection_Size(void* ptr);
struct QtWebEngine_PackedList QWebEngineScriptCollection_ToList(void* ptr);
void QWebEngineScriptCollection_DestroyQWebEngineScriptCollection(void* ptr);
void* QWebEngineScriptCollection_findScripts_atList(void* ptr, int i);
void* QWebEngineScriptCollection_toList_atList(void* ptr, int i);
struct QtWebEngine_PackedString QWebEngineSettings_DefaultTextEncoding(void* ptr);
struct QtWebEngine_PackedString QWebEngineSettings_FontFamily(void* ptr, long long which);
int QWebEngineSettings_FontSize(void* ptr, long long ty);
void* QWebEngineSettings_QWebEngineSettings_GlobalSettings();
void QWebEngineSettings_ResetAttribute(void* ptr, long long attribute);
void QWebEngineSettings_ResetFontFamily(void* ptr, long long which);
void QWebEngineSettings_ResetFontSize(void* ptr, long long ty);
void QWebEngineSettings_SetAttribute(void* ptr, long long attribute, char on);
void QWebEngineSettings_SetDefaultTextEncoding(void* ptr, char* encoding);
void QWebEngineSettings_SetFontFamily(void* ptr, long long which, char* family);
void QWebEngineSettings_SetFontSize(void* ptr, long long ty, int size);
char QWebEngineSettings_TestAttribute(void* ptr, long long attribute);
void* QWebEngineSettings_QWebEngineSettings_DefaultSettings();
void QWebEngineUrlRequestInfo_Block(void* ptr, char shouldBlock);
void* QWebEngineUrlRequestInfo_FirstPartyUrl(void* ptr);
long long QWebEngineUrlRequestInfo_NavigationType(void* ptr);
void QWebEngineUrlRequestInfo_Redirect(void* ptr, void* url);
void* QWebEngineUrlRequestInfo_RequestMethod(void* ptr);
void* QWebEngineUrlRequestInfo_RequestUrl(void* ptr);
long long QWebEngineUrlRequestInfo_ResourceType(void* ptr);
void QWebEngineUrlRequestInfo_SetHttpHeader(void* ptr, void* name, void* value);
void QWebEngineUrlRequestInterceptor_TimerEvent(void* ptr, void* event);
void QWebEngineUrlRequestInterceptor_TimerEventDefault(void* ptr, void* event);
void QWebEngineUrlRequestInterceptor_ChildEvent(void* ptr, void* event);
void QWebEngineUrlRequestInterceptor_ChildEventDefault(void* ptr, void* event);
void QWebEngineUrlRequestInterceptor_ConnectNotify(void* ptr, void* sign);
void QWebEngineUrlRequestInterceptor_ConnectNotifyDefault(void* ptr, void* sign);
void QWebEngineUrlRequestInterceptor_CustomEvent(void* ptr, void* event);
void QWebEngineUrlRequestInterceptor_CustomEventDefault(void* ptr, void* event);
void QWebEngineUrlRequestInterceptor_DeleteLater(void* ptr);
void QWebEngineUrlRequestInterceptor_DeleteLaterDefault(void* ptr);
void QWebEngineUrlRequestInterceptor_DisconnectNotify(void* ptr, void* sign);
void QWebEngineUrlRequestInterceptor_DisconnectNotifyDefault(void* ptr, void* sign);
char QWebEngineUrlRequestInterceptor_Event(void* ptr, void* e);
char QWebEngineUrlRequestInterceptor_EventDefault(void* ptr, void* e);
char QWebEngineUrlRequestInterceptor_EventFilter(void* ptr, void* watched, void* event);
char QWebEngineUrlRequestInterceptor_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebEngineUrlRequestInterceptor_MetaObject(void* ptr);
void* QWebEngineUrlRequestInterceptor_MetaObjectDefault(void* ptr);
void QWebEngineUrlRequestJob_Fail(void* ptr, long long r);
void QWebEngineUrlRequestJob_Redirect(void* ptr, void* url);
void QWebEngineUrlRequestJob_Reply(void* ptr, void* contentType, void* device);
void* QWebEngineUrlRequestJob_RequestMethod(void* ptr);
void* QWebEngineUrlRequestJob_RequestUrl(void* ptr);
void QWebEngineUrlRequestJob_TimerEvent(void* ptr, void* event);
void QWebEngineUrlRequestJob_TimerEventDefault(void* ptr, void* event);
void QWebEngineUrlRequestJob_ChildEvent(void* ptr, void* event);
void QWebEngineUrlRequestJob_ChildEventDefault(void* ptr, void* event);
void QWebEngineUrlRequestJob_ConnectNotify(void* ptr, void* sign);
void QWebEngineUrlRequestJob_ConnectNotifyDefault(void* ptr, void* sign);
void QWebEngineUrlRequestJob_CustomEvent(void* ptr, void* event);
void QWebEngineUrlRequestJob_CustomEventDefault(void* ptr, void* event);
void QWebEngineUrlRequestJob_DeleteLater(void* ptr);
void QWebEngineUrlRequestJob_DeleteLaterDefault(void* ptr);
void QWebEngineUrlRequestJob_DisconnectNotify(void* ptr, void* sign);
void QWebEngineUrlRequestJob_DisconnectNotifyDefault(void* ptr, void* sign);
char QWebEngineUrlRequestJob_Event(void* ptr, void* e);
char QWebEngineUrlRequestJob_EventDefault(void* ptr, void* e);
char QWebEngineUrlRequestJob_EventFilter(void* ptr, void* watched, void* event);
char QWebEngineUrlRequestJob_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebEngineUrlRequestJob_MetaObject(void* ptr);
void* QWebEngineUrlRequestJob_MetaObjectDefault(void* ptr);
void* QWebEngineUrlSchemeHandler_NewQWebEngineUrlSchemeHandler(void* parent);
void QWebEngineUrlSchemeHandler_RequestStarted(void* ptr, void* request);
void QWebEngineUrlSchemeHandler_DestroyQWebEngineUrlSchemeHandler(void* ptr);
void QWebEngineUrlSchemeHandler_TimerEvent(void* ptr, void* event);
void QWebEngineUrlSchemeHandler_TimerEventDefault(void* ptr, void* event);
void QWebEngineUrlSchemeHandler_ChildEvent(void* ptr, void* event);
void QWebEngineUrlSchemeHandler_ChildEventDefault(void* ptr, void* event);
void QWebEngineUrlSchemeHandler_ConnectNotify(void* ptr, void* sign);
void QWebEngineUrlSchemeHandler_ConnectNotifyDefault(void* ptr, void* sign);
void QWebEngineUrlSchemeHandler_CustomEvent(void* ptr, void* event);
void QWebEngineUrlSchemeHandler_CustomEventDefault(void* ptr, void* event);
void QWebEngineUrlSchemeHandler_DeleteLater(void* ptr);
void QWebEngineUrlSchemeHandler_DeleteLaterDefault(void* ptr);
void QWebEngineUrlSchemeHandler_DisconnectNotify(void* ptr, void* sign);
void QWebEngineUrlSchemeHandler_DisconnectNotifyDefault(void* ptr, void* sign);
char QWebEngineUrlSchemeHandler_Event(void* ptr, void* e);
char QWebEngineUrlSchemeHandler_EventDefault(void* ptr, void* e);
char QWebEngineUrlSchemeHandler_EventFilter(void* ptr, void* watched, void* event);
char QWebEngineUrlSchemeHandler_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebEngineUrlSchemeHandler_MetaObject(void* ptr);
void* QWebEngineUrlSchemeHandler_MetaObjectDefault(void* ptr);
void* QWebEngineView_NewQWebEngineView(void* parent);
void QWebEngineView_Back(void* ptr);
void* QWebEngineView_CreateWindow(void* ptr, long long ty);
void* QWebEngineView_CreateWindowDefault(void* ptr, long long ty);
void QWebEngineView_Forward(void* ptr);
char QWebEngineView_HasSelection(void* ptr);
void* QWebEngineView_History(void* ptr);
void* QWebEngineView_Icon(void* ptr);
void* QWebEngineView_IconUrl(void* ptr);
void QWebEngineView_Load(void* ptr, void* url);
void* QWebEngineView_Page(void* ptr);
void* QWebEngineView_PageAction(void* ptr, long long action);
void QWebEngineView_Reload(void* ptr);
struct QtWebEngine_PackedString QWebEngineView_SelectedText(void* ptr);
void QWebEngineView_SetContent(void* ptr, void* data, char* mimeType, void* baseUrl);
void QWebEngineView_SetHtml(void* ptr, char* html, void* baseUrl);
void QWebEngineView_SetPage(void* ptr, void* page);
void QWebEngineView_SetUrl(void* ptr, void* url);
void QWebEngineView_SetZoomFactor(void* ptr, double factor);
void* QWebEngineView_Settings(void* ptr);
void QWebEngineView_Stop(void* ptr);
struct QtWebEngine_PackedString QWebEngineView_Title(void* ptr);
void QWebEngineView_TriggerPageAction(void* ptr, long long action, char checked);
void* QWebEngineView_Url(void* ptr);
double QWebEngineView_ZoomFactor(void* ptr);
void QWebEngineView_DestroyQWebEngineView(void* ptr);
void QWebEngineView_DestroyQWebEngineViewDefault(void* ptr);
void QWebEngineView_ContextMenuEvent(void* ptr, void* event);
void QWebEngineView_ContextMenuEventDefault(void* ptr, void* event);
void QWebEngineView_DragEnterEvent(void* ptr, void* e);
void QWebEngineView_DragLeaveEvent(void* ptr, void* e);
void QWebEngineView_DragMoveEvent(void* ptr, void* e);
void QWebEngineView_DropEvent(void* ptr, void* e);
char QWebEngineView_Event(void* ptr, void* ev);
char QWebEngineView_EventDefault(void* ptr, void* ev);
void QWebEngineView_FindText(void* ptr, char* subString, long long options);
void QWebEngineView_HideEvent(void* ptr, void* event);
void QWebEngineView_HideEventDefault(void* ptr, void* event);
void QWebEngineView_ConnectIconChanged(void* ptr);
void QWebEngineView_DisconnectIconChanged(void* ptr);
void QWebEngineView_IconChanged(void* ptr, void* icon);
void QWebEngineView_ConnectIconUrlChanged(void* ptr);
void QWebEngineView_DisconnectIconUrlChanged(void* ptr);
void QWebEngineView_IconUrlChanged(void* ptr, void* url);
void QWebEngineView_ConnectLoadFinished(void* ptr);
void QWebEngineView_DisconnectLoadFinished(void* ptr);
void QWebEngineView_LoadFinished(void* ptr, char ok);
void QWebEngineView_ConnectLoadProgress(void* ptr);
void QWebEngineView_DisconnectLoadProgress(void* ptr);
void QWebEngineView_LoadProgress(void* ptr, int progress);
void QWebEngineView_ConnectLoadStarted(void* ptr);
void QWebEngineView_DisconnectLoadStarted(void* ptr);
void QWebEngineView_LoadStarted(void* ptr);
void QWebEngineView_ConnectRenderProcessTerminated(void* ptr);
void QWebEngineView_DisconnectRenderProcessTerminated(void* ptr);
void QWebEngineView_RenderProcessTerminated(void* ptr, long long terminationStatus, int exitCode);
void QWebEngineView_ConnectSelectionChanged(void* ptr);
void QWebEngineView_DisconnectSelectionChanged(void* ptr);
void QWebEngineView_SelectionChanged(void* ptr);
void QWebEngineView_ShowEvent(void* ptr, void* event);
void QWebEngineView_ShowEventDefault(void* ptr, void* event);
void* QWebEngineView_SizeHint(void* ptr);
void* QWebEngineView_SizeHintDefault(void* ptr);
void QWebEngineView_ConnectTitleChanged(void* ptr);
void QWebEngineView_DisconnectTitleChanged(void* ptr);
void QWebEngineView_TitleChanged(void* ptr, char* title);
void QWebEngineView_ConnectUrlChanged(void* ptr);
void QWebEngineView_DisconnectUrlChanged(void* ptr);
void QWebEngineView_UrlChanged(void* ptr, void* url);
void QWebEngineView_ActionEvent(void* ptr, void* event);
void QWebEngineView_ActionEventDefault(void* ptr, void* event);
void QWebEngineView_EnterEvent(void* ptr, void* event);
void QWebEngineView_EnterEventDefault(void* ptr, void* event);
void QWebEngineView_FocusInEvent(void* ptr, void* event);
void QWebEngineView_FocusInEventDefault(void* ptr, void* event);
void QWebEngineView_FocusOutEvent(void* ptr, void* event);
void QWebEngineView_FocusOutEventDefault(void* ptr, void* event);
void QWebEngineView_LeaveEvent(void* ptr, void* event);
void QWebEngineView_LeaveEventDefault(void* ptr, void* event);
void* QWebEngineView_MinimumSizeHint(void* ptr);
void* QWebEngineView_MinimumSizeHintDefault(void* ptr);
void QWebEngineView_MoveEvent(void* ptr, void* event);
void QWebEngineView_MoveEventDefault(void* ptr, void* event);
void QWebEngineView_PaintEvent(void* ptr, void* event);
void QWebEngineView_PaintEventDefault(void* ptr, void* event);
void QWebEngineView_SetEnabled(void* ptr, char vbo);
void QWebEngineView_SetEnabledDefault(void* ptr, char vbo);
void QWebEngineView_SetStyleSheet(void* ptr, char* styleSheet);
void QWebEngineView_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QWebEngineView_SetVisible(void* ptr, char visible);
void QWebEngineView_SetVisibleDefault(void* ptr, char visible);
void QWebEngineView_SetWindowModified(void* ptr, char vbo);
void QWebEngineView_SetWindowModifiedDefault(void* ptr, char vbo);
void QWebEngineView_SetWindowTitle(void* ptr, char* vqs);
void QWebEngineView_SetWindowTitleDefault(void* ptr, char* vqs);
void QWebEngineView_ChangeEvent(void* ptr, void* event);
void QWebEngineView_ChangeEventDefault(void* ptr, void* event);
char QWebEngineView_Close(void* ptr);
char QWebEngineView_CloseDefault(void* ptr);
void QWebEngineView_CloseEvent(void* ptr, void* event);
void QWebEngineView_CloseEventDefault(void* ptr, void* event);
char QWebEngineView_FocusNextPrevChild(void* ptr, char next);
char QWebEngineView_FocusNextPrevChildDefault(void* ptr, char next);
char QWebEngineView_HasHeightForWidth(void* ptr);
char QWebEngineView_HasHeightForWidthDefault(void* ptr);
int QWebEngineView_HeightForWidth(void* ptr, int w);
int QWebEngineView_HeightForWidthDefault(void* ptr, int w);
void QWebEngineView_Hide(void* ptr);
void QWebEngineView_HideDefault(void* ptr);
void QWebEngineView_InputMethodEvent(void* ptr, void* event);
void QWebEngineView_InputMethodEventDefault(void* ptr, void* event);
void* QWebEngineView_InputMethodQuery(void* ptr, long long query);
void* QWebEngineView_InputMethodQueryDefault(void* ptr, long long query);
void QWebEngineView_KeyPressEvent(void* ptr, void* event);
void QWebEngineView_KeyPressEventDefault(void* ptr, void* event);
void QWebEngineView_KeyReleaseEvent(void* ptr, void* event);
void QWebEngineView_KeyReleaseEventDefault(void* ptr, void* event);
void QWebEngineView_Lower(void* ptr);
void QWebEngineView_LowerDefault(void* ptr);
void QWebEngineView_MouseDoubleClickEvent(void* ptr, void* event);
void QWebEngineView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QWebEngineView_MouseMoveEvent(void* ptr, void* event);
void QWebEngineView_MouseMoveEventDefault(void* ptr, void* event);
void QWebEngineView_MousePressEvent(void* ptr, void* event);
void QWebEngineView_MousePressEventDefault(void* ptr, void* event);
void QWebEngineView_MouseReleaseEvent(void* ptr, void* event);
void QWebEngineView_MouseReleaseEventDefault(void* ptr, void* event);
char QWebEngineView_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QWebEngineView_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QWebEngineView_Raise(void* ptr);
void QWebEngineView_RaiseDefault(void* ptr);
void QWebEngineView_Repaint(void* ptr);
void QWebEngineView_RepaintDefault(void* ptr);
void QWebEngineView_ResizeEvent(void* ptr, void* event);
void QWebEngineView_ResizeEventDefault(void* ptr, void* event);
void QWebEngineView_SetDisabled(void* ptr, char disable);
void QWebEngineView_SetDisabledDefault(void* ptr, char disable);
void QWebEngineView_SetFocus2(void* ptr);
void QWebEngineView_SetFocus2Default(void* ptr);
void QWebEngineView_SetHidden(void* ptr, char hidden);
void QWebEngineView_SetHiddenDefault(void* ptr, char hidden);
void QWebEngineView_Show(void* ptr);
void QWebEngineView_ShowDefault(void* ptr);
void QWebEngineView_ShowFullScreen(void* ptr);
void QWebEngineView_ShowFullScreenDefault(void* ptr);
void QWebEngineView_ShowMaximized(void* ptr);
void QWebEngineView_ShowMaximizedDefault(void* ptr);
void QWebEngineView_ShowMinimized(void* ptr);
void QWebEngineView_ShowMinimizedDefault(void* ptr);
void QWebEngineView_ShowNormal(void* ptr);
void QWebEngineView_ShowNormalDefault(void* ptr);
void QWebEngineView_TabletEvent(void* ptr, void* event);
void QWebEngineView_TabletEventDefault(void* ptr, void* event);
void QWebEngineView_Update(void* ptr);
void QWebEngineView_UpdateDefault(void* ptr);
void QWebEngineView_UpdateMicroFocus(void* ptr);
void QWebEngineView_UpdateMicroFocusDefault(void* ptr);
void QWebEngineView_WheelEvent(void* ptr, void* event);
void QWebEngineView_WheelEventDefault(void* ptr, void* event);
void QWebEngineView_TimerEvent(void* ptr, void* event);
void QWebEngineView_TimerEventDefault(void* ptr, void* event);
void QWebEngineView_ChildEvent(void* ptr, void* event);
void QWebEngineView_ChildEventDefault(void* ptr, void* event);
void QWebEngineView_ConnectNotify(void* ptr, void* sign);
void QWebEngineView_ConnectNotifyDefault(void* ptr, void* sign);
void QWebEngineView_CustomEvent(void* ptr, void* event);
void QWebEngineView_CustomEventDefault(void* ptr, void* event);
void QWebEngineView_DeleteLater(void* ptr);
void QWebEngineView_DeleteLaterDefault(void* ptr);
void QWebEngineView_DisconnectNotify(void* ptr, void* sign);
void QWebEngineView_DisconnectNotifyDefault(void* ptr, void* sign);
char QWebEngineView_EventFilter(void* ptr, void* watched, void* event);
char QWebEngineView_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWebEngineView_MetaObject(void* ptr);
void* QWebEngineView_MetaObjectDefault(void* ptr);

#ifdef __cplusplus
}
#endif

#endif