// +build !minimal

#pragma once

#ifndef GO_QTWIDGETS_H
#define GO_QTWIDGETS_H

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

struct QtWidgets_PackedString { char* data; long long len; };
struct QtWidgets_PackedList { void* data; long long len; };
char QAbstractButton_AutoExclusive(void* ptr);
char QAbstractButton_AutoRepeat(void* ptr);
int QAbstractButton_AutoRepeatDelay(void* ptr);
int QAbstractButton_AutoRepeatInterval(void* ptr);
void* QAbstractButton_Icon(void* ptr);
void* QAbstractButton_IconSize(void* ptr);
char QAbstractButton_IsCheckable(void* ptr);
char QAbstractButton_IsChecked(void* ptr);
char QAbstractButton_IsDown(void* ptr);
void QAbstractButton_SetAutoExclusive(void* ptr, char vbo);
void QAbstractButton_SetAutoRepeat(void* ptr, char vbo);
void QAbstractButton_SetAutoRepeatDelay(void* ptr, int vin);
void QAbstractButton_SetAutoRepeatInterval(void* ptr, int vin);
void QAbstractButton_SetCheckable(void* ptr, char vbo);
void QAbstractButton_SetChecked(void* ptr, char vbo);
void QAbstractButton_SetDown(void* ptr, char vbo);
void QAbstractButton_SetIcon(void* ptr, void* icon);
void QAbstractButton_SetIconSize(void* ptr, void* size);
void QAbstractButton_SetShortcut(void* ptr, void* key);
void QAbstractButton_SetText(void* ptr, char* text);
void* QAbstractButton_Shortcut(void* ptr);
struct QtWidgets_PackedString QAbstractButton_Text(void* ptr);
void QAbstractButton_Toggle(void* ptr);
void* QAbstractButton_NewQAbstractButton(void* parent);
void QAbstractButton_AnimateClick(void* ptr, int msec);
void QAbstractButton_ChangeEvent(void* ptr, void* e);
void QAbstractButton_ChangeEventDefault(void* ptr, void* e);
void QAbstractButton_CheckStateSet(void* ptr);
void QAbstractButton_CheckStateSetDefault(void* ptr);
void QAbstractButton_Click(void* ptr);
void QAbstractButton_ConnectClicked(void* ptr);
void QAbstractButton_DisconnectClicked(void* ptr);
void QAbstractButton_Clicked(void* ptr, char checked);
char QAbstractButton_Event(void* ptr, void* e);
void QAbstractButton_FocusInEvent(void* ptr, void* e);
void QAbstractButton_FocusInEventDefault(void* ptr, void* e);
void QAbstractButton_FocusOutEvent(void* ptr, void* e);
void QAbstractButton_FocusOutEventDefault(void* ptr, void* e);
void* QAbstractButton_Group(void* ptr);
char QAbstractButton_HitButton(void* ptr, void* pos);
char QAbstractButton_HitButtonDefault(void* ptr, void* pos);
void QAbstractButton_KeyPressEvent(void* ptr, void* e);
void QAbstractButton_KeyPressEventDefault(void* ptr, void* e);
void QAbstractButton_KeyReleaseEvent(void* ptr, void* e);
void QAbstractButton_KeyReleaseEventDefault(void* ptr, void* e);
void QAbstractButton_MouseMoveEvent(void* ptr, void* e);
void QAbstractButton_MouseMoveEventDefault(void* ptr, void* e);
void QAbstractButton_MousePressEvent(void* ptr, void* e);
void QAbstractButton_MousePressEventDefault(void* ptr, void* e);
void QAbstractButton_MouseReleaseEvent(void* ptr, void* e);
void QAbstractButton_MouseReleaseEventDefault(void* ptr, void* e);
void QAbstractButton_NextCheckState(void* ptr);
void QAbstractButton_NextCheckStateDefault(void* ptr);
void QAbstractButton_PaintEvent(void* ptr, void* e);
void QAbstractButton_ConnectPressed(void* ptr);
void QAbstractButton_DisconnectPressed(void* ptr);
void QAbstractButton_Pressed(void* ptr);
void QAbstractButton_ConnectReleased(void* ptr);
void QAbstractButton_DisconnectReleased(void* ptr);
void QAbstractButton_Released(void* ptr);
void QAbstractButton_TimerEvent(void* ptr, void* e);
void QAbstractButton_ConnectToggled(void* ptr);
void QAbstractButton_DisconnectToggled(void* ptr);
void QAbstractButton_Toggled(void* ptr, char checked);
void QAbstractButton_DestroyQAbstractButton(void* ptr);
void QAbstractButton_ActionEvent(void* ptr, void* event);
void QAbstractButton_ActionEventDefault(void* ptr, void* event);
void QAbstractButton_DragEnterEvent(void* ptr, void* event);
void QAbstractButton_DragEnterEventDefault(void* ptr, void* event);
void QAbstractButton_DragLeaveEvent(void* ptr, void* event);
void QAbstractButton_DragLeaveEventDefault(void* ptr, void* event);
void QAbstractButton_DragMoveEvent(void* ptr, void* event);
void QAbstractButton_DragMoveEventDefault(void* ptr, void* event);
void QAbstractButton_DropEvent(void* ptr, void* event);
void QAbstractButton_DropEventDefault(void* ptr, void* event);
void QAbstractButton_EnterEvent(void* ptr, void* event);
void QAbstractButton_EnterEventDefault(void* ptr, void* event);
void QAbstractButton_HideEvent(void* ptr, void* event);
void QAbstractButton_HideEventDefault(void* ptr, void* event);
void QAbstractButton_LeaveEvent(void* ptr, void* event);
void QAbstractButton_LeaveEventDefault(void* ptr, void* event);
void* QAbstractButton_MinimumSizeHint(void* ptr);
void* QAbstractButton_MinimumSizeHintDefault(void* ptr);
void QAbstractButton_MoveEvent(void* ptr, void* event);
void QAbstractButton_MoveEventDefault(void* ptr, void* event);
void QAbstractButton_SetEnabled(void* ptr, char vbo);
void QAbstractButton_SetEnabledDefault(void* ptr, char vbo);
void QAbstractButton_SetStyleSheet(void* ptr, char* styleSheet);
void QAbstractButton_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QAbstractButton_SetVisible(void* ptr, char visible);
void QAbstractButton_SetVisibleDefault(void* ptr, char visible);
void QAbstractButton_SetWindowModified(void* ptr, char vbo);
void QAbstractButton_SetWindowModifiedDefault(void* ptr, char vbo);
void QAbstractButton_SetWindowTitle(void* ptr, char* vqs);
void QAbstractButton_SetWindowTitleDefault(void* ptr, char* vqs);
void QAbstractButton_ShowEvent(void* ptr, void* event);
void QAbstractButton_ShowEventDefault(void* ptr, void* event);
void* QAbstractButton_SizeHint(void* ptr);
void* QAbstractButton_SizeHintDefault(void* ptr);
char QAbstractButton_Close(void* ptr);
char QAbstractButton_CloseDefault(void* ptr);
void QAbstractButton_CloseEvent(void* ptr, void* event);
void QAbstractButton_CloseEventDefault(void* ptr, void* event);
void QAbstractButton_ContextMenuEvent(void* ptr, void* event);
void QAbstractButton_ContextMenuEventDefault(void* ptr, void* event);
char QAbstractButton_FocusNextPrevChild(void* ptr, char next);
char QAbstractButton_FocusNextPrevChildDefault(void* ptr, char next);
char QAbstractButton_HasHeightForWidth(void* ptr);
char QAbstractButton_HasHeightForWidthDefault(void* ptr);
int QAbstractButton_HeightForWidth(void* ptr, int w);
int QAbstractButton_HeightForWidthDefault(void* ptr, int w);
void QAbstractButton_Hide(void* ptr);
void QAbstractButton_HideDefault(void* ptr);
void QAbstractButton_InputMethodEvent(void* ptr, void* event);
void QAbstractButton_InputMethodEventDefault(void* ptr, void* event);
void* QAbstractButton_InputMethodQuery(void* ptr, long long query);
void* QAbstractButton_InputMethodQueryDefault(void* ptr, long long query);
void QAbstractButton_Lower(void* ptr);
void QAbstractButton_LowerDefault(void* ptr);
void QAbstractButton_MouseDoubleClickEvent(void* ptr, void* event);
void QAbstractButton_MouseDoubleClickEventDefault(void* ptr, void* event);
char QAbstractButton_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QAbstractButton_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QAbstractButton_Raise(void* ptr);
void QAbstractButton_RaiseDefault(void* ptr);
void QAbstractButton_Repaint(void* ptr);
void QAbstractButton_RepaintDefault(void* ptr);
void QAbstractButton_ResizeEvent(void* ptr, void* event);
void QAbstractButton_ResizeEventDefault(void* ptr, void* event);
void QAbstractButton_SetDisabled(void* ptr, char disable);
void QAbstractButton_SetDisabledDefault(void* ptr, char disable);
void QAbstractButton_SetFocus2(void* ptr);
void QAbstractButton_SetFocus2Default(void* ptr);
void QAbstractButton_SetHidden(void* ptr, char hidden);
void QAbstractButton_SetHiddenDefault(void* ptr, char hidden);
void QAbstractButton_Show(void* ptr);
void QAbstractButton_ShowDefault(void* ptr);
void QAbstractButton_ShowFullScreen(void* ptr);
void QAbstractButton_ShowFullScreenDefault(void* ptr);
void QAbstractButton_ShowMaximized(void* ptr);
void QAbstractButton_ShowMaximizedDefault(void* ptr);
void QAbstractButton_ShowMinimized(void* ptr);
void QAbstractButton_ShowMinimizedDefault(void* ptr);
void QAbstractButton_ShowNormal(void* ptr);
void QAbstractButton_ShowNormalDefault(void* ptr);
void QAbstractButton_TabletEvent(void* ptr, void* event);
void QAbstractButton_TabletEventDefault(void* ptr, void* event);
void QAbstractButton_Update(void* ptr);
void QAbstractButton_UpdateDefault(void* ptr);
void QAbstractButton_UpdateMicroFocus(void* ptr);
void QAbstractButton_UpdateMicroFocusDefault(void* ptr);
void QAbstractButton_WheelEvent(void* ptr, void* event);
void QAbstractButton_WheelEventDefault(void* ptr, void* event);
void QAbstractButton_ChildEvent(void* ptr, void* event);
void QAbstractButton_ChildEventDefault(void* ptr, void* event);
void QAbstractButton_ConnectNotify(void* ptr, void* sign);
void QAbstractButton_ConnectNotifyDefault(void* ptr, void* sign);
void QAbstractButton_CustomEvent(void* ptr, void* event);
void QAbstractButton_CustomEventDefault(void* ptr, void* event);
void QAbstractButton_DeleteLater(void* ptr);
void QAbstractButton_DeleteLaterDefault(void* ptr);
void QAbstractButton_DisconnectNotify(void* ptr, void* sign);
void QAbstractButton_DisconnectNotifyDefault(void* ptr, void* sign);
char QAbstractButton_EventFilter(void* ptr, void* watched, void* event);
char QAbstractButton_EventFilterDefault(void* ptr, void* watched, void* event);
void* QAbstractButton_MetaObject(void* ptr);
void* QAbstractButton_MetaObjectDefault(void* ptr);
void* QAbstractGraphicsShapeItem_NewQAbstractGraphicsShapeItem(void* parent);
void* QAbstractGraphicsShapeItem_Brush(void* ptr);
char QAbstractGraphicsShapeItem_IsObscuredBy(void* ptr, void* item);
char QAbstractGraphicsShapeItem_IsObscuredByDefault(void* ptr, void* item);
void* QAbstractGraphicsShapeItem_OpaqueArea(void* ptr);
void* QAbstractGraphicsShapeItem_OpaqueAreaDefault(void* ptr);
void* QAbstractGraphicsShapeItem_Pen(void* ptr);
void QAbstractGraphicsShapeItem_SetBrush(void* ptr, void* brush);
void QAbstractGraphicsShapeItem_SetPen(void* ptr, void* pen);
void QAbstractGraphicsShapeItem_DestroyQAbstractGraphicsShapeItem(void* ptr);
void QAbstractGraphicsShapeItem_Advance(void* ptr, int phase);
void QAbstractGraphicsShapeItem_AdvanceDefault(void* ptr, int phase);
void* QAbstractGraphicsShapeItem_BoundingRect(void* ptr);
;
char QAbstractGraphicsShapeItem_CollidesWithItem(void* ptr, void* other, long long mode);
char QAbstractGraphicsShapeItem_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QAbstractGraphicsShapeItem_CollidesWithPath(void* ptr, void* path, long long mode);
char QAbstractGraphicsShapeItem_CollidesWithPathDefault(void* ptr, void* path, long long mode);
char QAbstractGraphicsShapeItem_Contains(void* ptr, void* point);
char QAbstractGraphicsShapeItem_ContainsDefault(void* ptr, void* point);
void QAbstractGraphicsShapeItem_ContextMenuEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_ContextMenuEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_DragEnterEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_DragEnterEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_DragLeaveEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_DragLeaveEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_DragMoveEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_DragMoveEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_DropEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_DropEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_FocusInEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_FocusInEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_FocusOutEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_FocusOutEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_HoverEnterEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_HoverEnterEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_HoverLeaveEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_HoverLeaveEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_HoverMoveEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_HoverMoveEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_InputMethodEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_InputMethodEventDefault(void* ptr, void* event);
void* QAbstractGraphicsShapeItem_InputMethodQuery(void* ptr, long long query);
void* QAbstractGraphicsShapeItem_InputMethodQueryDefault(void* ptr, long long query);
void* QAbstractGraphicsShapeItem_ItemChange(void* ptr, long long change, void* value);
void* QAbstractGraphicsShapeItem_ItemChangeDefault(void* ptr, long long change, void* value);
void QAbstractGraphicsShapeItem_KeyPressEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_KeyPressEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_KeyReleaseEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_KeyReleaseEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_MouseDoubleClickEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_MouseDoubleClickEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_MouseMoveEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_MouseMoveEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_MousePressEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_MousePressEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_MouseReleaseEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_MouseReleaseEventDefault(void* ptr, void* event);
void QAbstractGraphicsShapeItem_Paint(void* ptr, void* painter, void* option, void* widget);
;
char QAbstractGraphicsShapeItem_SceneEvent(void* ptr, void* event);
char QAbstractGraphicsShapeItem_SceneEventDefault(void* ptr, void* event);
char QAbstractGraphicsShapeItem_SceneEventFilter(void* ptr, void* watched, void* event);
char QAbstractGraphicsShapeItem_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void* QAbstractGraphicsShapeItem_Shape(void* ptr);
void* QAbstractGraphicsShapeItem_ShapeDefault(void* ptr);
int QAbstractGraphicsShapeItem_Type(void* ptr);
int QAbstractGraphicsShapeItem_TypeDefault(void* ptr);
void QAbstractGraphicsShapeItem_WheelEvent(void* ptr, void* event);
void QAbstractGraphicsShapeItem_WheelEventDefault(void* ptr, void* event);
void* QAbstractItemDelegate_NewQAbstractItemDelegate(void* parent);
void QAbstractItemDelegate_ConnectCloseEditor(void* ptr);
void QAbstractItemDelegate_DisconnectCloseEditor(void* ptr);
void QAbstractItemDelegate_CloseEditor(void* ptr, void* editor, long long hint);
void QAbstractItemDelegate_ConnectCommitData(void* ptr);
void QAbstractItemDelegate_DisconnectCommitData(void* ptr);
void QAbstractItemDelegate_CommitData(void* ptr, void* editor);
void* QAbstractItemDelegate_CreateEditor(void* ptr, void* parent, void* option, void* index);
void* QAbstractItemDelegate_CreateEditorDefault(void* ptr, void* parent, void* option, void* index);
void QAbstractItemDelegate_DestroyEditor(void* ptr, void* editor, void* index);
void QAbstractItemDelegate_DestroyEditorDefault(void* ptr, void* editor, void* index);
char QAbstractItemDelegate_EditorEvent(void* ptr, void* event, void* model, void* option, void* index);
char QAbstractItemDelegate_EditorEventDefault(void* ptr, void* event, void* model, void* option, void* index);
char QAbstractItemDelegate_HelpEvent(void* ptr, void* event, void* view, void* option, void* index);
char QAbstractItemDelegate_HelpEventDefault(void* ptr, void* event, void* view, void* option, void* index);
void QAbstractItemDelegate_Paint(void* ptr, void* painter, void* option, void* index);
void QAbstractItemDelegate_SetEditorData(void* ptr, void* editor, void* index);
void QAbstractItemDelegate_SetEditorDataDefault(void* ptr, void* editor, void* index);
void QAbstractItemDelegate_SetModelData(void* ptr, void* editor, void* model, void* index);
void QAbstractItemDelegate_SetModelDataDefault(void* ptr, void* editor, void* model, void* index);
void* QAbstractItemDelegate_SizeHint(void* ptr, void* option, void* index);
void QAbstractItemDelegate_ConnectSizeHintChanged(void* ptr);
void QAbstractItemDelegate_DisconnectSizeHintChanged(void* ptr);
void QAbstractItemDelegate_SizeHintChanged(void* ptr, void* index);
void QAbstractItemDelegate_UpdateEditorGeometry(void* ptr, void* editor, void* option, void* index);
void QAbstractItemDelegate_UpdateEditorGeometryDefault(void* ptr, void* editor, void* option, void* index);
void QAbstractItemDelegate_DestroyQAbstractItemDelegate(void* ptr);
void QAbstractItemDelegate_DestroyQAbstractItemDelegateDefault(void* ptr);
void QAbstractItemDelegate_TimerEvent(void* ptr, void* event);
void QAbstractItemDelegate_TimerEventDefault(void* ptr, void* event);
void QAbstractItemDelegate_ChildEvent(void* ptr, void* event);
void QAbstractItemDelegate_ChildEventDefault(void* ptr, void* event);
void QAbstractItemDelegate_ConnectNotify(void* ptr, void* sign);
void QAbstractItemDelegate_ConnectNotifyDefault(void* ptr, void* sign);
void QAbstractItemDelegate_CustomEvent(void* ptr, void* event);
void QAbstractItemDelegate_CustomEventDefault(void* ptr, void* event);
void QAbstractItemDelegate_DeleteLater(void* ptr);
void QAbstractItemDelegate_DeleteLaterDefault(void* ptr);
void QAbstractItemDelegate_DisconnectNotify(void* ptr, void* sign);
void QAbstractItemDelegate_DisconnectNotifyDefault(void* ptr, void* sign);
char QAbstractItemDelegate_Event(void* ptr, void* e);
char QAbstractItemDelegate_EventDefault(void* ptr, void* e);
char QAbstractItemDelegate_EventFilter(void* ptr, void* watched, void* event);
char QAbstractItemDelegate_EventFilterDefault(void* ptr, void* watched, void* event);
void* QAbstractItemDelegate_MetaObject(void* ptr);
void* QAbstractItemDelegate_MetaObjectDefault(void* ptr);
char QAbstractItemView_AlternatingRowColors(void* ptr);
int QAbstractItemView_AutoScrollMargin(void* ptr);
long long QAbstractItemView_DefaultDropAction(void* ptr);
long long QAbstractItemView_DragDropMode(void* ptr);
char QAbstractItemView_DragDropOverwriteMode(void* ptr);
char QAbstractItemView_DragEnabled(void* ptr);
void QAbstractItemView_DragLeaveEvent(void* ptr, void* event);
void QAbstractItemView_DragLeaveEventDefault(void* ptr, void* event);
long long QAbstractItemView_EditTriggers(void* ptr);
char QAbstractItemView_HasAutoScroll(void* ptr);
long long QAbstractItemView_HorizontalScrollMode(void* ptr);
void* QAbstractItemView_IconSize(void* ptr);
void QAbstractItemView_ResetHorizontalScrollMode(void* ptr);
void QAbstractItemView_ResetVerticalScrollMode(void* ptr);
long long QAbstractItemView_SelectionBehavior(void* ptr);
long long QAbstractItemView_SelectionMode(void* ptr);
void QAbstractItemView_SetAlternatingRowColors(void* ptr, char enable);
void QAbstractItemView_SetAutoScroll(void* ptr, char enable);
void QAbstractItemView_SetAutoScrollMargin(void* ptr, int margin);
void QAbstractItemView_SetDefaultDropAction(void* ptr, long long dropAction);
void QAbstractItemView_SetDragDropMode(void* ptr, long long behavior);
void QAbstractItemView_SetDragDropOverwriteMode(void* ptr, char overwrite);
void QAbstractItemView_SetDragEnabled(void* ptr, char enable);
void QAbstractItemView_SetDropIndicatorShown(void* ptr, char enable);
void QAbstractItemView_SetEditTriggers(void* ptr, long long triggers);
void QAbstractItemView_SetHorizontalScrollMode(void* ptr, long long mode);
void QAbstractItemView_SetIconSize(void* ptr, void* size);
void QAbstractItemView_SetSelectionBehavior(void* ptr, long long behavior);
void QAbstractItemView_SetSelectionMode(void* ptr, long long mode);
void QAbstractItemView_SetTabKeyNavigation(void* ptr, char enable);
void QAbstractItemView_SetTextElideMode(void* ptr, long long mode);
void QAbstractItemView_SetVerticalScrollMode(void* ptr, long long mode);
char QAbstractItemView_ShowDropIndicator(void* ptr);
char QAbstractItemView_TabKeyNavigation(void* ptr);
long long QAbstractItemView_TextElideMode(void* ptr);
long long QAbstractItemView_VerticalScrollMode(void* ptr);
char QAbstractItemView_ViewportEvent(void* ptr, void* event);
char QAbstractItemView_ViewportEventDefault(void* ptr, void* event);
void* QAbstractItemView_NewQAbstractItemView(void* parent);
void QAbstractItemView_ConnectActivated(void* ptr);
void QAbstractItemView_DisconnectActivated(void* ptr);
void QAbstractItemView_Activated(void* ptr, void* index);
void QAbstractItemView_ClearSelection(void* ptr);
void QAbstractItemView_ConnectClicked(void* ptr);
void QAbstractItemView_DisconnectClicked(void* ptr);
void QAbstractItemView_Clicked(void* ptr, void* index);
void QAbstractItemView_CloseEditor(void* ptr, void* editor, long long hint);
void QAbstractItemView_CloseEditorDefault(void* ptr, void* editor, long long hint);
void QAbstractItemView_ClosePersistentEditor(void* ptr, void* index);
void QAbstractItemView_CommitData(void* ptr, void* editor);
void QAbstractItemView_CommitDataDefault(void* ptr, void* editor);
void QAbstractItemView_CurrentChanged(void* ptr, void* current, void* previous);
void QAbstractItemView_CurrentChangedDefault(void* ptr, void* current, void* previous);
void* QAbstractItemView_CurrentIndex(void* ptr);
void* QAbstractItemView_DirtyRegionOffset(void* ptr);
void QAbstractItemView_ConnectDoubleClicked(void* ptr);
void QAbstractItemView_DisconnectDoubleClicked(void* ptr);
void QAbstractItemView_DoubleClicked(void* ptr, void* index);
void QAbstractItemView_DragEnterEvent(void* ptr, void* event);
void QAbstractItemView_DragEnterEventDefault(void* ptr, void* event);
void QAbstractItemView_DragMoveEvent(void* ptr, void* event);
void QAbstractItemView_DragMoveEventDefault(void* ptr, void* event);
void QAbstractItemView_DropEvent(void* ptr, void* event);
void QAbstractItemView_DropEventDefault(void* ptr, void* event);
long long QAbstractItemView_DropIndicatorPosition(void* ptr);
void QAbstractItemView_Edit(void* ptr, void* index);
char QAbstractItemView_Edit2(void* ptr, void* index, long long trigger, void* event);
char QAbstractItemView_Edit2Default(void* ptr, void* index, long long trigger, void* event);
void QAbstractItemView_EditorDestroyed(void* ptr, void* editor);
void QAbstractItemView_EditorDestroyedDefault(void* ptr, void* editor);
void QAbstractItemView_ConnectEntered(void* ptr);
void QAbstractItemView_DisconnectEntered(void* ptr);
void QAbstractItemView_Entered(void* ptr, void* index);
char QAbstractItemView_Event(void* ptr, void* event);
void QAbstractItemView_ExecuteDelayedItemsLayout(void* ptr);
void QAbstractItemView_FocusInEvent(void* ptr, void* event);
void QAbstractItemView_FocusInEventDefault(void* ptr, void* event);
char QAbstractItemView_FocusNextPrevChild(void* ptr, char next);
char QAbstractItemView_FocusNextPrevChildDefault(void* ptr, char next);
void QAbstractItemView_FocusOutEvent(void* ptr, void* event);
void QAbstractItemView_FocusOutEventDefault(void* ptr, void* event);
int QAbstractItemView_HorizontalOffset(void* ptr);
void QAbstractItemView_ConnectIconSizeChanged(void* ptr);
void QAbstractItemView_DisconnectIconSizeChanged(void* ptr);
void QAbstractItemView_IconSizeChanged(void* ptr, void* size);
void* QAbstractItemView_IndexAt(void* ptr, void* point);
void* QAbstractItemView_IndexWidget(void* ptr, void* index);
void QAbstractItemView_InputMethodEvent(void* ptr, void* event);
void QAbstractItemView_InputMethodEventDefault(void* ptr, void* event);
void* QAbstractItemView_InputMethodQuery(void* ptr, long long query);
void* QAbstractItemView_InputMethodQueryDefault(void* ptr, long long query);
char QAbstractItemView_IsIndexHidden(void* ptr, void* index);
void* QAbstractItemView_ItemDelegate(void* ptr);
void* QAbstractItemView_ItemDelegate2(void* ptr, void* index);
void* QAbstractItemView_ItemDelegateForColumn(void* ptr, int column);
void* QAbstractItemView_ItemDelegateForRow(void* ptr, int row);
void QAbstractItemView_KeyPressEvent(void* ptr, void* event);
void QAbstractItemView_KeyPressEventDefault(void* ptr, void* event);
void QAbstractItemView_KeyboardSearch(void* ptr, char* search);
void QAbstractItemView_KeyboardSearchDefault(void* ptr, char* search);
void* QAbstractItemView_Model(void* ptr);
void QAbstractItemView_MouseDoubleClickEvent(void* ptr, void* event);
void QAbstractItemView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QAbstractItemView_MouseMoveEvent(void* ptr, void* event);
void QAbstractItemView_MouseMoveEventDefault(void* ptr, void* event);
void QAbstractItemView_MousePressEvent(void* ptr, void* event);
void QAbstractItemView_MousePressEventDefault(void* ptr, void* event);
void QAbstractItemView_MouseReleaseEvent(void* ptr, void* event);
void QAbstractItemView_MouseReleaseEventDefault(void* ptr, void* event);
void* QAbstractItemView_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void QAbstractItemView_OpenPersistentEditor(void* ptr, void* index);
void QAbstractItemView_ConnectPressed(void* ptr);
void QAbstractItemView_DisconnectPressed(void* ptr);
void QAbstractItemView_Pressed(void* ptr, void* index);
void QAbstractItemView_Reset(void* ptr);
void QAbstractItemView_ResetDefault(void* ptr);
void QAbstractItemView_ResizeEvent(void* ptr, void* event);
void QAbstractItemView_ResizeEventDefault(void* ptr, void* event);
void* QAbstractItemView_RootIndex(void* ptr);
void QAbstractItemView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QAbstractItemView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QAbstractItemView_RowsInserted(void* ptr, void* parent, int start, int end);
void QAbstractItemView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QAbstractItemView_ScheduleDelayedItemsLayout(void* ptr);
void QAbstractItemView_ScrollDirtyRegion(void* ptr, int dx, int dy);
void QAbstractItemView_ScrollTo(void* ptr, void* index, long long hint);
void QAbstractItemView_ScrollToBottom(void* ptr);
void QAbstractItemView_ScrollToTop(void* ptr);
void QAbstractItemView_SelectAll(void* ptr);
void QAbstractItemView_SelectAllDefault(void* ptr);
void QAbstractItemView_SelectionChanged(void* ptr, void* selected, void* deselected);
void QAbstractItemView_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
long long QAbstractItemView_SelectionCommand(void* ptr, void* index, void* event);
long long QAbstractItemView_SelectionCommandDefault(void* ptr, void* index, void* event);
void* QAbstractItemView_SelectionModel(void* ptr);
void QAbstractItemView_SetCurrentIndex(void* ptr, void* index);
void QAbstractItemView_SetDirtyRegion(void* ptr, void* region);
void QAbstractItemView_SetIndexWidget(void* ptr, void* index, void* widget);
void QAbstractItemView_SetItemDelegate(void* ptr, void* delegate);
void QAbstractItemView_SetItemDelegateForColumn(void* ptr, int column, void* delegate);
void QAbstractItemView_SetItemDelegateForRow(void* ptr, int row, void* delegate);
void QAbstractItemView_SetModel(void* ptr, void* model);
void QAbstractItemView_SetModelDefault(void* ptr, void* model);
void QAbstractItemView_SetRootIndex(void* ptr, void* index);
void QAbstractItemView_SetRootIndexDefault(void* ptr, void* index);
void QAbstractItemView_SetSelection(void* ptr, void* rect, long long flags);
void QAbstractItemView_SetSelectionModel(void* ptr, void* selectionModel);
void QAbstractItemView_SetSelectionModelDefault(void* ptr, void* selectionModel);
void QAbstractItemView_SetState(void* ptr, long long state);
int QAbstractItemView_SizeHintForColumn(void* ptr, int column);
int QAbstractItemView_SizeHintForColumnDefault(void* ptr, int column);
void* QAbstractItemView_SizeHintForIndex(void* ptr, void* index);
int QAbstractItemView_SizeHintForRow(void* ptr, int row);
int QAbstractItemView_SizeHintForRowDefault(void* ptr, int row);
void QAbstractItemView_StartDrag(void* ptr, long long supportedActions);
void QAbstractItemView_StartDragDefault(void* ptr, long long supportedActions);
long long QAbstractItemView_State(void* ptr);
void QAbstractItemView_TimerEvent(void* ptr, void* event);
void QAbstractItemView_Update(void* ptr, void* index);
void QAbstractItemView_UpdateGeometries(void* ptr);
void QAbstractItemView_UpdateGeometriesDefault(void* ptr);
int QAbstractItemView_VerticalOffset(void* ptr);
void* QAbstractItemView_ViewOptions(void* ptr);
void* QAbstractItemView_ViewOptionsDefault(void* ptr);
void QAbstractItemView_ConnectViewportEntered(void* ptr);
void QAbstractItemView_DisconnectViewportEntered(void* ptr);
void QAbstractItemView_ViewportEntered(void* ptr);
void* QAbstractItemView_ViewportSizeHint(void* ptr);
void* QAbstractItemView_ViewportSizeHintDefault(void* ptr);
void* QAbstractItemView_VisualRect(void* ptr, void* index);
void* QAbstractItemView_VisualRegionForSelection(void* ptr, void* selection);
void QAbstractItemView_DestroyQAbstractItemView(void* ptr);
void* QAbstractItemView_selectedIndexes_atList(void* ptr, int i);
void QAbstractItemView_PaintEvent(void* ptr, void* event);
void QAbstractItemView_PaintEventDefault(void* ptr, void* event);
void QAbstractItemView_ContextMenuEvent(void* ptr, void* e);
void QAbstractItemView_ContextMenuEventDefault(void* ptr, void* e);
void* QAbstractItemView_MinimumSizeHint(void* ptr);
void* QAbstractItemView_MinimumSizeHintDefault(void* ptr);
void QAbstractItemView_ScrollContentsBy(void* ptr, int dx, int dy);
void QAbstractItemView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QAbstractItemView_SetupViewport(void* ptr, void* viewport);
void QAbstractItemView_SetupViewportDefault(void* ptr, void* viewport);
void* QAbstractItemView_SizeHint(void* ptr);
void* QAbstractItemView_SizeHintDefault(void* ptr);
void QAbstractItemView_WheelEvent(void* ptr, void* e);
void QAbstractItemView_WheelEventDefault(void* ptr, void* e);
void QAbstractItemView_ChangeEvent(void* ptr, void* ev);
void QAbstractItemView_ChangeEventDefault(void* ptr, void* ev);
void QAbstractItemView_ActionEvent(void* ptr, void* event);
void QAbstractItemView_ActionEventDefault(void* ptr, void* event);
void QAbstractItemView_EnterEvent(void* ptr, void* event);
void QAbstractItemView_EnterEventDefault(void* ptr, void* event);
void QAbstractItemView_HideEvent(void* ptr, void* event);
void QAbstractItemView_HideEventDefault(void* ptr, void* event);
void QAbstractItemView_LeaveEvent(void* ptr, void* event);
void QAbstractItemView_LeaveEventDefault(void* ptr, void* event);
void QAbstractItemView_MoveEvent(void* ptr, void* event);
void QAbstractItemView_MoveEventDefault(void* ptr, void* event);
void QAbstractItemView_SetEnabled(void* ptr, char vbo);
void QAbstractItemView_SetEnabledDefault(void* ptr, char vbo);
void QAbstractItemView_SetStyleSheet(void* ptr, char* styleSheet);
void QAbstractItemView_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QAbstractItemView_SetVisible(void* ptr, char visible);
void QAbstractItemView_SetVisibleDefault(void* ptr, char visible);
void QAbstractItemView_SetWindowModified(void* ptr, char vbo);
void QAbstractItemView_SetWindowModifiedDefault(void* ptr, char vbo);
void QAbstractItemView_SetWindowTitle(void* ptr, char* vqs);
void QAbstractItemView_SetWindowTitleDefault(void* ptr, char* vqs);
void QAbstractItemView_ShowEvent(void* ptr, void* event);
void QAbstractItemView_ShowEventDefault(void* ptr, void* event);
char QAbstractItemView_Close(void* ptr);
char QAbstractItemView_CloseDefault(void* ptr);
void QAbstractItemView_CloseEvent(void* ptr, void* event);
void QAbstractItemView_CloseEventDefault(void* ptr, void* event);
char QAbstractItemView_HasHeightForWidth(void* ptr);
char QAbstractItemView_HasHeightForWidthDefault(void* ptr);
int QAbstractItemView_HeightForWidth(void* ptr, int w);
int QAbstractItemView_HeightForWidthDefault(void* ptr, int w);
void QAbstractItemView_Hide(void* ptr);
void QAbstractItemView_HideDefault(void* ptr);
void QAbstractItemView_KeyReleaseEvent(void* ptr, void* event);
void QAbstractItemView_KeyReleaseEventDefault(void* ptr, void* event);
void QAbstractItemView_Lower(void* ptr);
void QAbstractItemView_LowerDefault(void* ptr);
char QAbstractItemView_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QAbstractItemView_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QAbstractItemView_Raise(void* ptr);
void QAbstractItemView_RaiseDefault(void* ptr);
void QAbstractItemView_Repaint(void* ptr);
void QAbstractItemView_RepaintDefault(void* ptr);
void QAbstractItemView_SetDisabled(void* ptr, char disable);
void QAbstractItemView_SetDisabledDefault(void* ptr, char disable);
void QAbstractItemView_SetFocus2(void* ptr);
void QAbstractItemView_SetFocus2Default(void* ptr);
void QAbstractItemView_SetHidden(void* ptr, char hidden);
void QAbstractItemView_SetHiddenDefault(void* ptr, char hidden);
void QAbstractItemView_Show(void* ptr);
void QAbstractItemView_ShowDefault(void* ptr);
void QAbstractItemView_ShowFullScreen(void* ptr);
void QAbstractItemView_ShowFullScreenDefault(void* ptr);
void QAbstractItemView_ShowMaximized(void* ptr);
void QAbstractItemView_ShowMaximizedDefault(void* ptr);
void QAbstractItemView_ShowMinimized(void* ptr);
void QAbstractItemView_ShowMinimizedDefault(void* ptr);
void QAbstractItemView_ShowNormal(void* ptr);
void QAbstractItemView_ShowNormalDefault(void* ptr);
void QAbstractItemView_TabletEvent(void* ptr, void* event);
void QAbstractItemView_TabletEventDefault(void* ptr, void* event);
void QAbstractItemView_UpdateMicroFocus(void* ptr);
void QAbstractItemView_UpdateMicroFocusDefault(void* ptr);
void QAbstractItemView_ChildEvent(void* ptr, void* event);
void QAbstractItemView_ChildEventDefault(void* ptr, void* event);
void QAbstractItemView_ConnectNotify(void* ptr, void* sign);
void QAbstractItemView_ConnectNotifyDefault(void* ptr, void* sign);
void QAbstractItemView_CustomEvent(void* ptr, void* event);
void QAbstractItemView_CustomEventDefault(void* ptr, void* event);
void QAbstractItemView_DeleteLater(void* ptr);
void QAbstractItemView_DeleteLaterDefault(void* ptr);
void QAbstractItemView_DisconnectNotify(void* ptr, void* sign);
void QAbstractItemView_DisconnectNotifyDefault(void* ptr, void* sign);
char QAbstractItemView_EventFilter(void* ptr, void* watched, void* event);
char QAbstractItemView_EventFilterDefault(void* ptr, void* watched, void* event);
void* QAbstractItemView_MetaObject(void* ptr);
void* QAbstractItemView_MetaObjectDefault(void* ptr);
void QAbstractScrollArea_DragEnterEvent(void* ptr, void* event);
void QAbstractScrollArea_DragEnterEventDefault(void* ptr, void* event);
void QAbstractScrollArea_DragLeaveEvent(void* ptr, void* event);
void QAbstractScrollArea_DragLeaveEventDefault(void* ptr, void* event);
void QAbstractScrollArea_DragMoveEvent(void* ptr, void* event);
void QAbstractScrollArea_DragMoveEventDefault(void* ptr, void* event);
void QAbstractScrollArea_DropEvent(void* ptr, void* event);
void QAbstractScrollArea_DropEventDefault(void* ptr, void* event);
char QAbstractScrollArea_Event(void* ptr, void* event);
long long QAbstractScrollArea_HorizontalScrollBarPolicy(void* ptr);
void QAbstractScrollArea_PaintEvent(void* ptr, void* event);
void QAbstractScrollArea_PaintEventDefault(void* ptr, void* event);
void QAbstractScrollArea_ResizeEvent(void* ptr, void* event);
void QAbstractScrollArea_ResizeEventDefault(void* ptr, void* event);
void QAbstractScrollArea_SetHorizontalScrollBarPolicy(void* ptr, long long vqt);
void QAbstractScrollArea_SetSizeAdjustPolicy(void* ptr, long long policy);
void QAbstractScrollArea_SetVerticalScrollBarPolicy(void* ptr, long long vqt);
long long QAbstractScrollArea_SizeAdjustPolicy(void* ptr);
long long QAbstractScrollArea_VerticalScrollBarPolicy(void* ptr);
char QAbstractScrollArea_ViewportEvent(void* ptr, void* event);
char QAbstractScrollArea_ViewportEventDefault(void* ptr, void* event);
void* QAbstractScrollArea_NewQAbstractScrollArea(void* parent);
void QAbstractScrollArea_AddScrollBarWidget(void* ptr, void* widget, long long alignment);
void QAbstractScrollArea_ContextMenuEvent(void* ptr, void* e);
void QAbstractScrollArea_ContextMenuEventDefault(void* ptr, void* e);
void* QAbstractScrollArea_CornerWidget(void* ptr);
void* QAbstractScrollArea_HorizontalScrollBar(void* ptr);
void QAbstractScrollArea_KeyPressEvent(void* ptr, void* e);
void QAbstractScrollArea_KeyPressEventDefault(void* ptr, void* e);
void* QAbstractScrollArea_MaximumViewportSize(void* ptr);
void* QAbstractScrollArea_MinimumSizeHint(void* ptr);
void* QAbstractScrollArea_MinimumSizeHintDefault(void* ptr);
void QAbstractScrollArea_MouseDoubleClickEvent(void* ptr, void* e);
void QAbstractScrollArea_MouseDoubleClickEventDefault(void* ptr, void* e);
void QAbstractScrollArea_MouseMoveEvent(void* ptr, void* e);
void QAbstractScrollArea_MouseMoveEventDefault(void* ptr, void* e);
void QAbstractScrollArea_MousePressEvent(void* ptr, void* e);
void QAbstractScrollArea_MousePressEventDefault(void* ptr, void* e);
void QAbstractScrollArea_MouseReleaseEvent(void* ptr, void* e);
void QAbstractScrollArea_MouseReleaseEventDefault(void* ptr, void* e);
struct QtWidgets_PackedList QAbstractScrollArea_ScrollBarWidgets(void* ptr, long long alignment);
void QAbstractScrollArea_ScrollContentsBy(void* ptr, int dx, int dy);
void QAbstractScrollArea_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QAbstractScrollArea_SetCornerWidget(void* ptr, void* widget);
void QAbstractScrollArea_SetHorizontalScrollBar(void* ptr, void* scrollBar);
void QAbstractScrollArea_SetVerticalScrollBar(void* ptr, void* scrollBar);
void QAbstractScrollArea_SetViewport(void* ptr, void* widget);
void QAbstractScrollArea_SetViewportMargins2(void* ptr, void* margins);
void QAbstractScrollArea_SetViewportMargins(void* ptr, int left, int top, int right, int bottom);
void QAbstractScrollArea_SetupViewport(void* ptr, void* viewport);
void QAbstractScrollArea_SetupViewportDefault(void* ptr, void* viewport);
void* QAbstractScrollArea_SizeHint(void* ptr);
void* QAbstractScrollArea_SizeHintDefault(void* ptr);
void* QAbstractScrollArea_VerticalScrollBar(void* ptr);
void* QAbstractScrollArea_Viewport(void* ptr);
void* QAbstractScrollArea_ViewportMargins(void* ptr);
void* QAbstractScrollArea_ViewportSizeHint(void* ptr);
void* QAbstractScrollArea_ViewportSizeHintDefault(void* ptr);
void QAbstractScrollArea_WheelEvent(void* ptr, void* e);
void QAbstractScrollArea_WheelEventDefault(void* ptr, void* e);
void QAbstractScrollArea_DestroyQAbstractScrollArea(void* ptr);
void* QAbstractScrollArea_scrollBarWidgets_atList(void* ptr, int i);
void QAbstractScrollArea_ChangeEvent(void* ptr, void* ev);
void QAbstractScrollArea_ChangeEventDefault(void* ptr, void* ev);
void QAbstractScrollArea_ActionEvent(void* ptr, void* event);
void QAbstractScrollArea_ActionEventDefault(void* ptr, void* event);
void QAbstractScrollArea_EnterEvent(void* ptr, void* event);
void QAbstractScrollArea_EnterEventDefault(void* ptr, void* event);
void QAbstractScrollArea_FocusInEvent(void* ptr, void* event);
void QAbstractScrollArea_FocusInEventDefault(void* ptr, void* event);
void QAbstractScrollArea_FocusOutEvent(void* ptr, void* event);
void QAbstractScrollArea_FocusOutEventDefault(void* ptr, void* event);
void QAbstractScrollArea_HideEvent(void* ptr, void* event);
void QAbstractScrollArea_HideEventDefault(void* ptr, void* event);
void QAbstractScrollArea_LeaveEvent(void* ptr, void* event);
void QAbstractScrollArea_LeaveEventDefault(void* ptr, void* event);
void QAbstractScrollArea_MoveEvent(void* ptr, void* event);
void QAbstractScrollArea_MoveEventDefault(void* ptr, void* event);
void QAbstractScrollArea_SetEnabled(void* ptr, char vbo);
void QAbstractScrollArea_SetEnabledDefault(void* ptr, char vbo);
void QAbstractScrollArea_SetStyleSheet(void* ptr, char* styleSheet);
void QAbstractScrollArea_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QAbstractScrollArea_SetVisible(void* ptr, char visible);
void QAbstractScrollArea_SetVisibleDefault(void* ptr, char visible);
void QAbstractScrollArea_SetWindowModified(void* ptr, char vbo);
void QAbstractScrollArea_SetWindowModifiedDefault(void* ptr, char vbo);
void QAbstractScrollArea_SetWindowTitle(void* ptr, char* vqs);
void QAbstractScrollArea_SetWindowTitleDefault(void* ptr, char* vqs);
void QAbstractScrollArea_ShowEvent(void* ptr, void* event);
void QAbstractScrollArea_ShowEventDefault(void* ptr, void* event);
char QAbstractScrollArea_Close(void* ptr);
char QAbstractScrollArea_CloseDefault(void* ptr);
void QAbstractScrollArea_CloseEvent(void* ptr, void* event);
void QAbstractScrollArea_CloseEventDefault(void* ptr, void* event);
char QAbstractScrollArea_FocusNextPrevChild(void* ptr, char next);
char QAbstractScrollArea_FocusNextPrevChildDefault(void* ptr, char next);
char QAbstractScrollArea_HasHeightForWidth(void* ptr);
char QAbstractScrollArea_HasHeightForWidthDefault(void* ptr);
int QAbstractScrollArea_HeightForWidth(void* ptr, int w);
int QAbstractScrollArea_HeightForWidthDefault(void* ptr, int w);
void QAbstractScrollArea_Hide(void* ptr);
void QAbstractScrollArea_HideDefault(void* ptr);
void QAbstractScrollArea_InputMethodEvent(void* ptr, void* event);
void QAbstractScrollArea_InputMethodEventDefault(void* ptr, void* event);
void* QAbstractScrollArea_InputMethodQuery(void* ptr, long long query);
void* QAbstractScrollArea_InputMethodQueryDefault(void* ptr, long long query);
void QAbstractScrollArea_KeyReleaseEvent(void* ptr, void* event);
void QAbstractScrollArea_KeyReleaseEventDefault(void* ptr, void* event);
void QAbstractScrollArea_Lower(void* ptr);
void QAbstractScrollArea_LowerDefault(void* ptr);
char QAbstractScrollArea_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QAbstractScrollArea_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QAbstractScrollArea_Raise(void* ptr);
void QAbstractScrollArea_RaiseDefault(void* ptr);
void QAbstractScrollArea_Repaint(void* ptr);
void QAbstractScrollArea_RepaintDefault(void* ptr);
void QAbstractScrollArea_SetDisabled(void* ptr, char disable);
void QAbstractScrollArea_SetDisabledDefault(void* ptr, char disable);
void QAbstractScrollArea_SetFocus2(void* ptr);
void QAbstractScrollArea_SetFocus2Default(void* ptr);
void QAbstractScrollArea_SetHidden(void* ptr, char hidden);
void QAbstractScrollArea_SetHiddenDefault(void* ptr, char hidden);
void QAbstractScrollArea_Show(void* ptr);
void QAbstractScrollArea_ShowDefault(void* ptr);
void QAbstractScrollArea_ShowFullScreen(void* ptr);
void QAbstractScrollArea_ShowFullScreenDefault(void* ptr);
void QAbstractScrollArea_ShowMaximized(void* ptr);
void QAbstractScrollArea_ShowMaximizedDefault(void* ptr);
void QAbstractScrollArea_ShowMinimized(void* ptr);
void QAbstractScrollArea_ShowMinimizedDefault(void* ptr);
void QAbstractScrollArea_ShowNormal(void* ptr);
void QAbstractScrollArea_ShowNormalDefault(void* ptr);
void QAbstractScrollArea_TabletEvent(void* ptr, void* event);
void QAbstractScrollArea_TabletEventDefault(void* ptr, void* event);
void QAbstractScrollArea_Update(void* ptr);
void QAbstractScrollArea_UpdateDefault(void* ptr);
void QAbstractScrollArea_UpdateMicroFocus(void* ptr);
void QAbstractScrollArea_UpdateMicroFocusDefault(void* ptr);
void QAbstractScrollArea_TimerEvent(void* ptr, void* event);
void QAbstractScrollArea_TimerEventDefault(void* ptr, void* event);
void QAbstractScrollArea_ChildEvent(void* ptr, void* event);
void QAbstractScrollArea_ChildEventDefault(void* ptr, void* event);
void QAbstractScrollArea_ConnectNotify(void* ptr, void* sign);
void QAbstractScrollArea_ConnectNotifyDefault(void* ptr, void* sign);
void QAbstractScrollArea_CustomEvent(void* ptr, void* event);
void QAbstractScrollArea_CustomEventDefault(void* ptr, void* event);
void QAbstractScrollArea_DeleteLater(void* ptr);
void QAbstractScrollArea_DeleteLaterDefault(void* ptr);
void QAbstractScrollArea_DisconnectNotify(void* ptr, void* sign);
void QAbstractScrollArea_DisconnectNotifyDefault(void* ptr, void* sign);
char QAbstractScrollArea_EventFilter(void* ptr, void* watched, void* event);
char QAbstractScrollArea_EventFilterDefault(void* ptr, void* watched, void* event);
void* QAbstractScrollArea_MetaObject(void* ptr);
void* QAbstractScrollArea_MetaObjectDefault(void* ptr);
char QAbstractSlider_HasTracking(void* ptr);
char QAbstractSlider_InvertedAppearance(void* ptr);
char QAbstractSlider_InvertedControls(void* ptr);
char QAbstractSlider_IsSliderDown(void* ptr);
int QAbstractSlider_Maximum(void* ptr);
int QAbstractSlider_Minimum(void* ptr);
long long QAbstractSlider_Orientation(void* ptr);
int QAbstractSlider_PageStep(void* ptr);
void QAbstractSlider_SetInvertedAppearance(void* ptr, char vbo);
void QAbstractSlider_SetInvertedControls(void* ptr, char vbo);
void QAbstractSlider_SetMaximum(void* ptr, int vin);
void QAbstractSlider_SetMinimum(void* ptr, int vin);
void QAbstractSlider_SetOrientation(void* ptr, long long vqt);
void QAbstractSlider_SetPageStep(void* ptr, int vin);
void QAbstractSlider_SetSingleStep(void* ptr, int vin);
void QAbstractSlider_SetSliderDown(void* ptr, char vbo);
void QAbstractSlider_SetSliderPosition(void* ptr, int vin);
void QAbstractSlider_SetTracking(void* ptr, char enable);
void QAbstractSlider_SetValue(void* ptr, int vin);
int QAbstractSlider_SingleStep(void* ptr);
int QAbstractSlider_SliderPosition(void* ptr);
int QAbstractSlider_Value(void* ptr);
void* QAbstractSlider_NewQAbstractSlider(void* parent);
void QAbstractSlider_ConnectActionTriggered(void* ptr);
void QAbstractSlider_DisconnectActionTriggered(void* ptr);
void QAbstractSlider_ActionTriggered(void* ptr, int action);
void QAbstractSlider_ChangeEvent(void* ptr, void* ev);
void QAbstractSlider_ChangeEventDefault(void* ptr, void* ev);
char QAbstractSlider_Event(void* ptr, void* e);
void QAbstractSlider_KeyPressEvent(void* ptr, void* ev);
void QAbstractSlider_KeyPressEventDefault(void* ptr, void* ev);
void QAbstractSlider_ConnectRangeChanged(void* ptr);
void QAbstractSlider_DisconnectRangeChanged(void* ptr);
void QAbstractSlider_RangeChanged(void* ptr, int min, int max);
long long QAbstractSlider_RepeatAction(void* ptr);
void QAbstractSlider_SetRange(void* ptr, int min, int max);
void QAbstractSlider_SetRepeatAction(void* ptr, long long action, int thresholdTime, int repeatTime);
void QAbstractSlider_SliderChange(void* ptr, long long change);
void QAbstractSlider_SliderChangeDefault(void* ptr, long long change);
void QAbstractSlider_ConnectSliderMoved(void* ptr);
void QAbstractSlider_DisconnectSliderMoved(void* ptr);
void QAbstractSlider_SliderMoved(void* ptr, int value);
void QAbstractSlider_ConnectSliderPressed(void* ptr);
void QAbstractSlider_DisconnectSliderPressed(void* ptr);
void QAbstractSlider_SliderPressed(void* ptr);
void QAbstractSlider_ConnectSliderReleased(void* ptr);
void QAbstractSlider_DisconnectSliderReleased(void* ptr);
void QAbstractSlider_SliderReleased(void* ptr);
void QAbstractSlider_TimerEvent(void* ptr, void* e);
void QAbstractSlider_TriggerAction(void* ptr, long long action);
void QAbstractSlider_ConnectValueChanged(void* ptr);
void QAbstractSlider_DisconnectValueChanged(void* ptr);
void QAbstractSlider_ValueChanged(void* ptr, int value);
void QAbstractSlider_WheelEvent(void* ptr, void* e);
void QAbstractSlider_WheelEventDefault(void* ptr, void* e);
void QAbstractSlider_DestroyQAbstractSlider(void* ptr);
void QAbstractSlider_ActionEvent(void* ptr, void* event);
void QAbstractSlider_ActionEventDefault(void* ptr, void* event);
void QAbstractSlider_DragEnterEvent(void* ptr, void* event);
void QAbstractSlider_DragEnterEventDefault(void* ptr, void* event);
void QAbstractSlider_DragLeaveEvent(void* ptr, void* event);
void QAbstractSlider_DragLeaveEventDefault(void* ptr, void* event);
void QAbstractSlider_DragMoveEvent(void* ptr, void* event);
void QAbstractSlider_DragMoveEventDefault(void* ptr, void* event);
void QAbstractSlider_DropEvent(void* ptr, void* event);
void QAbstractSlider_DropEventDefault(void* ptr, void* event);
void QAbstractSlider_EnterEvent(void* ptr, void* event);
void QAbstractSlider_EnterEventDefault(void* ptr, void* event);
void QAbstractSlider_FocusInEvent(void* ptr, void* event);
void QAbstractSlider_FocusInEventDefault(void* ptr, void* event);
void QAbstractSlider_FocusOutEvent(void* ptr, void* event);
void QAbstractSlider_FocusOutEventDefault(void* ptr, void* event);
void QAbstractSlider_HideEvent(void* ptr, void* event);
void QAbstractSlider_HideEventDefault(void* ptr, void* event);
void QAbstractSlider_LeaveEvent(void* ptr, void* event);
void QAbstractSlider_LeaveEventDefault(void* ptr, void* event);
void* QAbstractSlider_MinimumSizeHint(void* ptr);
void* QAbstractSlider_MinimumSizeHintDefault(void* ptr);
void QAbstractSlider_MoveEvent(void* ptr, void* event);
void QAbstractSlider_MoveEventDefault(void* ptr, void* event);
void QAbstractSlider_PaintEvent(void* ptr, void* event);
void QAbstractSlider_PaintEventDefault(void* ptr, void* event);
void QAbstractSlider_SetEnabled(void* ptr, char vbo);
void QAbstractSlider_SetEnabledDefault(void* ptr, char vbo);
void QAbstractSlider_SetStyleSheet(void* ptr, char* styleSheet);
void QAbstractSlider_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QAbstractSlider_SetVisible(void* ptr, char visible);
void QAbstractSlider_SetVisibleDefault(void* ptr, char visible);
void QAbstractSlider_SetWindowModified(void* ptr, char vbo);
void QAbstractSlider_SetWindowModifiedDefault(void* ptr, char vbo);
void QAbstractSlider_SetWindowTitle(void* ptr, char* vqs);
void QAbstractSlider_SetWindowTitleDefault(void* ptr, char* vqs);
void QAbstractSlider_ShowEvent(void* ptr, void* event);
void QAbstractSlider_ShowEventDefault(void* ptr, void* event);
void* QAbstractSlider_SizeHint(void* ptr);
void* QAbstractSlider_SizeHintDefault(void* ptr);
char QAbstractSlider_Close(void* ptr);
char QAbstractSlider_CloseDefault(void* ptr);
void QAbstractSlider_CloseEvent(void* ptr, void* event);
void QAbstractSlider_CloseEventDefault(void* ptr, void* event);
void QAbstractSlider_ContextMenuEvent(void* ptr, void* event);
void QAbstractSlider_ContextMenuEventDefault(void* ptr, void* event);
char QAbstractSlider_FocusNextPrevChild(void* ptr, char next);
char QAbstractSlider_FocusNextPrevChildDefault(void* ptr, char next);
char QAbstractSlider_HasHeightForWidth(void* ptr);
char QAbstractSlider_HasHeightForWidthDefault(void* ptr);
int QAbstractSlider_HeightForWidth(void* ptr, int w);
int QAbstractSlider_HeightForWidthDefault(void* ptr, int w);
void QAbstractSlider_Hide(void* ptr);
void QAbstractSlider_HideDefault(void* ptr);
void QAbstractSlider_InputMethodEvent(void* ptr, void* event);
void QAbstractSlider_InputMethodEventDefault(void* ptr, void* event);
void* QAbstractSlider_InputMethodQuery(void* ptr, long long query);
void* QAbstractSlider_InputMethodQueryDefault(void* ptr, long long query);
void QAbstractSlider_KeyReleaseEvent(void* ptr, void* event);
void QAbstractSlider_KeyReleaseEventDefault(void* ptr, void* event);
void QAbstractSlider_Lower(void* ptr);
void QAbstractSlider_LowerDefault(void* ptr);
void QAbstractSlider_MouseDoubleClickEvent(void* ptr, void* event);
void QAbstractSlider_MouseDoubleClickEventDefault(void* ptr, void* event);
void QAbstractSlider_MouseMoveEvent(void* ptr, void* event);
void QAbstractSlider_MouseMoveEventDefault(void* ptr, void* event);
void QAbstractSlider_MousePressEvent(void* ptr, void* event);
void QAbstractSlider_MousePressEventDefault(void* ptr, void* event);
void QAbstractSlider_MouseReleaseEvent(void* ptr, void* event);
void QAbstractSlider_MouseReleaseEventDefault(void* ptr, void* event);
char QAbstractSlider_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QAbstractSlider_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QAbstractSlider_Raise(void* ptr);
void QAbstractSlider_RaiseDefault(void* ptr);
void QAbstractSlider_Repaint(void* ptr);
void QAbstractSlider_RepaintDefault(void* ptr);
void QAbstractSlider_ResizeEvent(void* ptr, void* event);
void QAbstractSlider_ResizeEventDefault(void* ptr, void* event);
void QAbstractSlider_SetDisabled(void* ptr, char disable);
void QAbstractSlider_SetDisabledDefault(void* ptr, char disable);
void QAbstractSlider_SetFocus2(void* ptr);
void QAbstractSlider_SetFocus2Default(void* ptr);
void QAbstractSlider_SetHidden(void* ptr, char hidden);
void QAbstractSlider_SetHiddenDefault(void* ptr, char hidden);
void QAbstractSlider_Show(void* ptr);
void QAbstractSlider_ShowDefault(void* ptr);
void QAbstractSlider_ShowFullScreen(void* ptr);
void QAbstractSlider_ShowFullScreenDefault(void* ptr);
void QAbstractSlider_ShowMaximized(void* ptr);
void QAbstractSlider_ShowMaximizedDefault(void* ptr);
void QAbstractSlider_ShowMinimized(void* ptr);
void QAbstractSlider_ShowMinimizedDefault(void* ptr);
void QAbstractSlider_ShowNormal(void* ptr);
void QAbstractSlider_ShowNormalDefault(void* ptr);
void QAbstractSlider_TabletEvent(void* ptr, void* event);
void QAbstractSlider_TabletEventDefault(void* ptr, void* event);
void QAbstractSlider_Update(void* ptr);
void QAbstractSlider_UpdateDefault(void* ptr);
void QAbstractSlider_UpdateMicroFocus(void* ptr);
void QAbstractSlider_UpdateMicroFocusDefault(void* ptr);
void QAbstractSlider_ChildEvent(void* ptr, void* event);
void QAbstractSlider_ChildEventDefault(void* ptr, void* event);
void QAbstractSlider_ConnectNotify(void* ptr, void* sign);
void QAbstractSlider_ConnectNotifyDefault(void* ptr, void* sign);
void QAbstractSlider_CustomEvent(void* ptr, void* event);
void QAbstractSlider_CustomEventDefault(void* ptr, void* event);
void QAbstractSlider_DeleteLater(void* ptr);
void QAbstractSlider_DeleteLaterDefault(void* ptr);
void QAbstractSlider_DisconnectNotify(void* ptr, void* sign);
void QAbstractSlider_DisconnectNotifyDefault(void* ptr, void* sign);
char QAbstractSlider_EventFilter(void* ptr, void* watched, void* event);
char QAbstractSlider_EventFilterDefault(void* ptr, void* watched, void* event);
void* QAbstractSlider_MetaObject(void* ptr);
void* QAbstractSlider_MetaObjectDefault(void* ptr);
long long QAbstractSpinBox_Alignment(void* ptr);
long long QAbstractSpinBox_ButtonSymbols(void* ptr);
long long QAbstractSpinBox_CorrectionMode(void* ptr);
char QAbstractSpinBox_HasAcceptableInput(void* ptr);
char QAbstractSpinBox_HasFrame(void* ptr);
char QAbstractSpinBox_IsAccelerated(void* ptr);
char QAbstractSpinBox_IsGroupSeparatorShown(void* ptr);
char QAbstractSpinBox_IsReadOnly(void* ptr);
char QAbstractSpinBox_KeyboardTracking(void* ptr);
void QAbstractSpinBox_SetAccelerated(void* ptr, char on);
void QAbstractSpinBox_SetAlignment(void* ptr, long long flag);
void QAbstractSpinBox_SetButtonSymbols(void* ptr, long long bs);
void QAbstractSpinBox_SetCorrectionMode(void* ptr, long long cm);
void QAbstractSpinBox_SetFrame(void* ptr, char vbo);
void QAbstractSpinBox_SetGroupSeparatorShown(void* ptr, char shown);
void QAbstractSpinBox_SetKeyboardTracking(void* ptr, char kt);
void QAbstractSpinBox_SetLineEdit(void* ptr, void* lineEdit);
void QAbstractSpinBox_SetReadOnly(void* ptr, char r);
void QAbstractSpinBox_SetSpecialValueText(void* ptr, char* txt);
void QAbstractSpinBox_SetWrapping(void* ptr, char w);
struct QtWidgets_PackedString QAbstractSpinBox_SpecialValueText(void* ptr);
struct QtWidgets_PackedString QAbstractSpinBox_Text(void* ptr);
char QAbstractSpinBox_Wrapping(void* ptr);
void* QAbstractSpinBox_NewQAbstractSpinBox(void* parent);
void QAbstractSpinBox_ChangeEvent(void* ptr, void* event);
void QAbstractSpinBox_ChangeEventDefault(void* ptr, void* event);
void QAbstractSpinBox_Clear(void* ptr);
void QAbstractSpinBox_ClearDefault(void* ptr);
void QAbstractSpinBox_CloseEvent(void* ptr, void* event);
void QAbstractSpinBox_CloseEventDefault(void* ptr, void* event);
void QAbstractSpinBox_ContextMenuEvent(void* ptr, void* event);
void QAbstractSpinBox_ContextMenuEventDefault(void* ptr, void* event);
void QAbstractSpinBox_ConnectEditingFinished(void* ptr);
void QAbstractSpinBox_DisconnectEditingFinished(void* ptr);
void QAbstractSpinBox_EditingFinished(void* ptr);
char QAbstractSpinBox_Event(void* ptr, void* event);
void QAbstractSpinBox_Fixup(void* ptr, char* input);
void QAbstractSpinBox_FixupDefault(void* ptr, char* input);
void QAbstractSpinBox_FocusInEvent(void* ptr, void* event);
void QAbstractSpinBox_FocusInEventDefault(void* ptr, void* event);
void QAbstractSpinBox_FocusOutEvent(void* ptr, void* event);
void QAbstractSpinBox_FocusOutEventDefault(void* ptr, void* event);
void QAbstractSpinBox_HideEvent(void* ptr, void* event);
void QAbstractSpinBox_HideEventDefault(void* ptr, void* event);
void QAbstractSpinBox_InitStyleOption(void* ptr, void* option);
void* QAbstractSpinBox_InputMethodQuery(void* ptr, long long query);
void* QAbstractSpinBox_InputMethodQueryDefault(void* ptr, long long query);
void QAbstractSpinBox_InterpretText(void* ptr);
void QAbstractSpinBox_KeyPressEvent(void* ptr, void* event);
void QAbstractSpinBox_KeyPressEventDefault(void* ptr, void* event);
void QAbstractSpinBox_KeyReleaseEvent(void* ptr, void* event);
void QAbstractSpinBox_KeyReleaseEventDefault(void* ptr, void* event);
void* QAbstractSpinBox_LineEdit(void* ptr);
void* QAbstractSpinBox_MinimumSizeHint(void* ptr);
void* QAbstractSpinBox_MinimumSizeHintDefault(void* ptr);
void QAbstractSpinBox_MouseMoveEvent(void* ptr, void* event);
void QAbstractSpinBox_MouseMoveEventDefault(void* ptr, void* event);
void QAbstractSpinBox_MousePressEvent(void* ptr, void* event);
void QAbstractSpinBox_MousePressEventDefault(void* ptr, void* event);
void QAbstractSpinBox_MouseReleaseEvent(void* ptr, void* event);
void QAbstractSpinBox_MouseReleaseEventDefault(void* ptr, void* event);
void QAbstractSpinBox_PaintEvent(void* ptr, void* event);
void QAbstractSpinBox_PaintEventDefault(void* ptr, void* event);
void QAbstractSpinBox_ResizeEvent(void* ptr, void* event);
void QAbstractSpinBox_ResizeEventDefault(void* ptr, void* event);
void QAbstractSpinBox_SelectAll(void* ptr);
void QAbstractSpinBox_ShowEvent(void* ptr, void* event);
void QAbstractSpinBox_ShowEventDefault(void* ptr, void* event);
void* QAbstractSpinBox_SizeHint(void* ptr);
void* QAbstractSpinBox_SizeHintDefault(void* ptr);
void QAbstractSpinBox_StepBy(void* ptr, int steps);
void QAbstractSpinBox_StepByDefault(void* ptr, int steps);
void QAbstractSpinBox_StepDown(void* ptr);
long long QAbstractSpinBox_StepEnabled(void* ptr);
long long QAbstractSpinBox_StepEnabledDefault(void* ptr);
void QAbstractSpinBox_StepUp(void* ptr);
void QAbstractSpinBox_TimerEvent(void* ptr, void* event);
long long QAbstractSpinBox_Validate(void* ptr, char* input, int pos);
long long QAbstractSpinBox_ValidateDefault(void* ptr, char* input, int pos);
void QAbstractSpinBox_WheelEvent(void* ptr, void* event);
void QAbstractSpinBox_WheelEventDefault(void* ptr, void* event);
void QAbstractSpinBox_DestroyQAbstractSpinBox(void* ptr);
void QAbstractSpinBox_ActionEvent(void* ptr, void* event);
void QAbstractSpinBox_ActionEventDefault(void* ptr, void* event);
void QAbstractSpinBox_DragEnterEvent(void* ptr, void* event);
void QAbstractSpinBox_DragEnterEventDefault(void* ptr, void* event);
void QAbstractSpinBox_DragLeaveEvent(void* ptr, void* event);
void QAbstractSpinBox_DragLeaveEventDefault(void* ptr, void* event);
void QAbstractSpinBox_DragMoveEvent(void* ptr, void* event);
void QAbstractSpinBox_DragMoveEventDefault(void* ptr, void* event);
void QAbstractSpinBox_DropEvent(void* ptr, void* event);
void QAbstractSpinBox_DropEventDefault(void* ptr, void* event);
void QAbstractSpinBox_EnterEvent(void* ptr, void* event);
void QAbstractSpinBox_EnterEventDefault(void* ptr, void* event);
void QAbstractSpinBox_LeaveEvent(void* ptr, void* event);
void QAbstractSpinBox_LeaveEventDefault(void* ptr, void* event);
void QAbstractSpinBox_MoveEvent(void* ptr, void* event);
void QAbstractSpinBox_MoveEventDefault(void* ptr, void* event);
void QAbstractSpinBox_SetEnabled(void* ptr, char vbo);
void QAbstractSpinBox_SetEnabledDefault(void* ptr, char vbo);
void QAbstractSpinBox_SetStyleSheet(void* ptr, char* styleSheet);
void QAbstractSpinBox_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QAbstractSpinBox_SetVisible(void* ptr, char visible);
void QAbstractSpinBox_SetVisibleDefault(void* ptr, char visible);
void QAbstractSpinBox_SetWindowModified(void* ptr, char vbo);
void QAbstractSpinBox_SetWindowModifiedDefault(void* ptr, char vbo);
void QAbstractSpinBox_SetWindowTitle(void* ptr, char* vqs);
void QAbstractSpinBox_SetWindowTitleDefault(void* ptr, char* vqs);
char QAbstractSpinBox_Close(void* ptr);
char QAbstractSpinBox_CloseDefault(void* ptr);
char QAbstractSpinBox_FocusNextPrevChild(void* ptr, char next);
char QAbstractSpinBox_FocusNextPrevChildDefault(void* ptr, char next);
char QAbstractSpinBox_HasHeightForWidth(void* ptr);
char QAbstractSpinBox_HasHeightForWidthDefault(void* ptr);
int QAbstractSpinBox_HeightForWidth(void* ptr, int w);
int QAbstractSpinBox_HeightForWidthDefault(void* ptr, int w);
void QAbstractSpinBox_Hide(void* ptr);
void QAbstractSpinBox_HideDefault(void* ptr);
void QAbstractSpinBox_InputMethodEvent(void* ptr, void* event);
void QAbstractSpinBox_InputMethodEventDefault(void* ptr, void* event);
void QAbstractSpinBox_Lower(void* ptr);
void QAbstractSpinBox_LowerDefault(void* ptr);
void QAbstractSpinBox_MouseDoubleClickEvent(void* ptr, void* event);
void QAbstractSpinBox_MouseDoubleClickEventDefault(void* ptr, void* event);
char QAbstractSpinBox_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QAbstractSpinBox_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QAbstractSpinBox_Raise(void* ptr);
void QAbstractSpinBox_RaiseDefault(void* ptr);
void QAbstractSpinBox_Repaint(void* ptr);
void QAbstractSpinBox_RepaintDefault(void* ptr);
void QAbstractSpinBox_SetDisabled(void* ptr, char disable);
void QAbstractSpinBox_SetDisabledDefault(void* ptr, char disable);
void QAbstractSpinBox_SetFocus2(void* ptr);
void QAbstractSpinBox_SetFocus2Default(void* ptr);
void QAbstractSpinBox_SetHidden(void* ptr, char hidden);
void QAbstractSpinBox_SetHiddenDefault(void* ptr, char hidden);
void QAbstractSpinBox_Show(void* ptr);
void QAbstractSpinBox_ShowDefault(void* ptr);
void QAbstractSpinBox_ShowFullScreen(void* ptr);
void QAbstractSpinBox_ShowFullScreenDefault(void* ptr);
void QAbstractSpinBox_ShowMaximized(void* ptr);
void QAbstractSpinBox_ShowMaximizedDefault(void* ptr);
void QAbstractSpinBox_ShowMinimized(void* ptr);
void QAbstractSpinBox_ShowMinimizedDefault(void* ptr);
void QAbstractSpinBox_ShowNormal(void* ptr);
void QAbstractSpinBox_ShowNormalDefault(void* ptr);
void QAbstractSpinBox_TabletEvent(void* ptr, void* event);
void QAbstractSpinBox_TabletEventDefault(void* ptr, void* event);
void QAbstractSpinBox_Update(void* ptr);
void QAbstractSpinBox_UpdateDefault(void* ptr);
void QAbstractSpinBox_UpdateMicroFocus(void* ptr);
void QAbstractSpinBox_UpdateMicroFocusDefault(void* ptr);
void QAbstractSpinBox_ChildEvent(void* ptr, void* event);
void QAbstractSpinBox_ChildEventDefault(void* ptr, void* event);
void QAbstractSpinBox_ConnectNotify(void* ptr, void* sign);
void QAbstractSpinBox_ConnectNotifyDefault(void* ptr, void* sign);
void QAbstractSpinBox_CustomEvent(void* ptr, void* event);
void QAbstractSpinBox_CustomEventDefault(void* ptr, void* event);
void QAbstractSpinBox_DeleteLater(void* ptr);
void QAbstractSpinBox_DeleteLaterDefault(void* ptr);
void QAbstractSpinBox_DisconnectNotify(void* ptr, void* sign);
void QAbstractSpinBox_DisconnectNotifyDefault(void* ptr, void* sign);
char QAbstractSpinBox_EventFilter(void* ptr, void* watched, void* event);
char QAbstractSpinBox_EventFilterDefault(void* ptr, void* watched, void* event);
void* QAbstractSpinBox_MetaObject(void* ptr);
void* QAbstractSpinBox_MetaObjectDefault(void* ptr);
struct QtWidgets_PackedString QAccessibleWidget_ActionNames(void* ptr);
void QAccessibleWidget_AddControllingSignal(void* ptr, char* sign);
void* QAccessibleWidget_BackgroundColor(void* ptr);
void* QAccessibleWidget_Child(void* ptr, int index);
int QAccessibleWidget_ChildCount(void* ptr);
void QAccessibleWidget_DoAction(void* ptr, char* actionName);
void* QAccessibleWidget_FocusChild(void* ptr);
void* QAccessibleWidget_ForegroundColor(void* ptr);
int QAccessibleWidget_IndexOfChild(void* ptr, void* child);
void* QAccessibleWidget_Interface_cast(void* ptr, long long t);
char QAccessibleWidget_IsValid(void* ptr);
struct QtWidgets_PackedString QAccessibleWidget_KeyBindingsForAction(void* ptr, char* actionName);
void* QAccessibleWidget_Parent(void* ptr);
void* QAccessibleWidget_ParentObject(void* ptr);
void* QAccessibleWidget_Rect(void* ptr);
long long QAccessibleWidget_Role(void* ptr);
struct QtWidgets_PackedString QAccessibleWidget_Text(void* ptr, long long t);
void* QAccessibleWidget_Widget(void* ptr);
void* QAccessibleWidget_Window(void* ptr);
void QAccessibleWidget_DestroyQAccessibleWidget(void* ptr);
void* QAccessibleWidget_ChildAt(void* ptr, int x, int y);
void* QAccessibleWidget_ChildAtDefault(void* ptr, int x, int y);
void* QAccessibleWidget_Object(void* ptr);
void* QAccessibleWidget_ObjectDefault(void* ptr);
void QAccessibleWidget_SetText(void* ptr, long long t, char* text);
void QAccessibleWidget_SetTextDefault(void* ptr, long long t, char* text);
struct QtWidgets_PackedString QAccessibleWidget_LocalizedActionDescription(void* ptr, char* actionName);
struct QtWidgets_PackedString QAccessibleWidget_LocalizedActionDescriptionDefault(void* ptr, char* actionName);
struct QtWidgets_PackedString QAccessibleWidget_LocalizedActionName(void* ptr, char* actionName);
struct QtWidgets_PackedString QAccessibleWidget_LocalizedActionNameDefault(void* ptr, char* actionName);
char QAction_AutoRepeat(void* ptr);
void* QAction_Font(void* ptr);
void* QAction_Icon(void* ptr);
struct QtWidgets_PackedString QAction_IconText(void* ptr);
char QAction_IsCheckable(void* ptr);
char QAction_IsChecked(void* ptr);
char QAction_IsEnabled(void* ptr);
char QAction_IsIconVisibleInMenu(void* ptr);
char QAction_IsVisible(void* ptr);
long long QAction_MenuRole(void* ptr);
long long QAction_Priority(void* ptr);
void QAction_SetAutoRepeat(void* ptr, char vbo);
void QAction_SetCheckable(void* ptr, char vbo);
void QAction_SetChecked(void* ptr, char vbo);
void QAction_SetData(void* ptr, void* userData);
void QAction_SetEnabled(void* ptr, char vbo);
void QAction_SetFont(void* ptr, void* font);
void QAction_SetIcon(void* ptr, void* icon);
void QAction_SetIconText(void* ptr, char* text);
void QAction_SetIconVisibleInMenu(void* ptr, char visible);
void QAction_SetMenuRole(void* ptr, long long menuRole);
void QAction_SetPriority(void* ptr, long long priority);
void QAction_SetShortcut(void* ptr, void* shortcut);
void QAction_SetShortcutContext(void* ptr, long long context);
void QAction_SetStatusTip(void* ptr, char* statusTip);
void QAction_SetText(void* ptr, char* text);
void QAction_SetToolTip(void* ptr, char* tip);
void QAction_SetVisible(void* ptr, char vbo);
void QAction_SetWhatsThis(void* ptr, char* what);
long long QAction_ShortcutContext(void* ptr);
struct QtWidgets_PackedString QAction_StatusTip(void* ptr);
struct QtWidgets_PackedString QAction_Text(void* ptr);
void QAction_Toggle(void* ptr);
struct QtWidgets_PackedString QAction_ToolTip(void* ptr);
struct QtWidgets_PackedString QAction_WhatsThis(void* ptr);
void* QAction_NewQAction(void* parent);
void* QAction_NewQAction3(void* icon, char* text, void* parent);
void* QAction_NewQAction2(char* text, void* parent);
void* QAction_ActionGroup(void* ptr);
void QAction_Activate(void* ptr, long long event);
struct QtWidgets_PackedList QAction_AssociatedGraphicsWidgets(void* ptr);
struct QtWidgets_PackedList QAction_AssociatedWidgets(void* ptr);
void QAction_ConnectChanged(void* ptr);
void QAction_DisconnectChanged(void* ptr);
void QAction_Changed(void* ptr);
void* QAction_Data(void* ptr);
char QAction_Event(void* ptr, void* e);
void QAction_Hover(void* ptr);
void QAction_ConnectHovered(void* ptr);
void QAction_DisconnectHovered(void* ptr);
void QAction_Hovered(void* ptr);
char QAction_IsSeparator(void* ptr);
void* QAction_Menu(void* ptr);
void* QAction_ParentWidget(void* ptr);
void QAction_SetActionGroup(void* ptr, void* group);
void QAction_SetDisabled(void* ptr, char b);
void QAction_SetMenu(void* ptr, void* menu);
void QAction_SetSeparator(void* ptr, char b);
void QAction_SetShortcuts2(void* ptr, long long key);
void* QAction_Shortcut(void* ptr);
struct QtWidgets_PackedList QAction_Shortcuts(void* ptr);
char QAction_ShowStatusText(void* ptr, void* widget);
void QAction_ConnectToggled(void* ptr);
void QAction_DisconnectToggled(void* ptr);
void QAction_Toggled(void* ptr, char checked);
void QAction_Trigger(void* ptr);
void QAction_ConnectTriggered(void* ptr);
void QAction_DisconnectTriggered(void* ptr);
void QAction_Triggered(void* ptr, char checked);
void QAction_DestroyQAction(void* ptr);
void* QAction_associatedGraphicsWidgets_atList(void* ptr, int i);
void* QAction_associatedWidgets_atList(void* ptr, int i);
void* QAction_shortcuts_atList(void* ptr, int i);
void QAction_TimerEvent(void* ptr, void* event);
void QAction_TimerEventDefault(void* ptr, void* event);
void QAction_ChildEvent(void* ptr, void* event);
void QAction_ChildEventDefault(void* ptr, void* event);
void QAction_ConnectNotify(void* ptr, void* sign);
void QAction_ConnectNotifyDefault(void* ptr, void* sign);
void QAction_CustomEvent(void* ptr, void* event);
void QAction_CustomEventDefault(void* ptr, void* event);
void QAction_DeleteLater(void* ptr);
void QAction_DeleteLaterDefault(void* ptr);
void QAction_DisconnectNotify(void* ptr, void* sign);
void QAction_DisconnectNotifyDefault(void* ptr, void* sign);
char QAction_EventFilter(void* ptr, void* watched, void* event);
char QAction_EventFilterDefault(void* ptr, void* watched, void* event);
void* QAction_MetaObject(void* ptr);
void* QAction_MetaObjectDefault(void* ptr);
void* QActionGroup_AddAction(void* ptr, void* action);
char QActionGroup_IsEnabled(void* ptr);
char QActionGroup_IsExclusive(void* ptr);
char QActionGroup_IsVisible(void* ptr);
void QActionGroup_SetEnabled(void* ptr, char vbo);
void QActionGroup_SetExclusive(void* ptr, char vbo);
void QActionGroup_SetVisible(void* ptr, char vbo);
void* QActionGroup_NewQActionGroup(void* parent);
struct QtWidgets_PackedList QActionGroup_Actions(void* ptr);
void* QActionGroup_AddAction3(void* ptr, void* icon, char* text);
void* QActionGroup_AddAction2(void* ptr, char* text);
void* QActionGroup_CheckedAction(void* ptr);
void QActionGroup_ConnectHovered(void* ptr);
void QActionGroup_DisconnectHovered(void* ptr);
void QActionGroup_Hovered(void* ptr, void* action);
void QActionGroup_RemoveAction(void* ptr, void* action);
void QActionGroup_SetDisabled(void* ptr, char b);
void QActionGroup_ConnectTriggered(void* ptr);
void QActionGroup_DisconnectTriggered(void* ptr);
void QActionGroup_Triggered(void* ptr, void* action);
void QActionGroup_DestroyQActionGroup(void* ptr);
void* QActionGroup_actions_atList(void* ptr, int i);
void QActionGroup_TimerEvent(void* ptr, void* event);
void QActionGroup_TimerEventDefault(void* ptr, void* event);
void QActionGroup_ChildEvent(void* ptr, void* event);
void QActionGroup_ChildEventDefault(void* ptr, void* event);
void QActionGroup_ConnectNotify(void* ptr, void* sign);
void QActionGroup_ConnectNotifyDefault(void* ptr, void* sign);
void QActionGroup_CustomEvent(void* ptr, void* event);
void QActionGroup_CustomEventDefault(void* ptr, void* event);
void QActionGroup_DeleteLater(void* ptr);
void QActionGroup_DeleteLaterDefault(void* ptr);
void QActionGroup_DisconnectNotify(void* ptr, void* sign);
void QActionGroup_DisconnectNotifyDefault(void* ptr, void* sign);
char QActionGroup_Event(void* ptr, void* e);
char QActionGroup_EventDefault(void* ptr, void* e);
char QActionGroup_EventFilter(void* ptr, void* watched, void* event);
char QActionGroup_EventFilterDefault(void* ptr, void* watched, void* event);
void* QActionGroup_MetaObject(void* ptr);
void* QActionGroup_MetaObjectDefault(void* ptr);
void QApplication_QApplication_Alert(void* widget, int msec);
int QApplication_AutoMaximizeThreshold(void* ptr);
char QApplication_AutoSipEnabled(void* ptr);
void QApplication_QApplication_Beep();
int QApplication_QApplication_CursorFlashTime();
int QApplication_QApplication_DoubleClickInterval();
void* QApplication_QApplication_GlobalStrut();
char QApplication_QApplication_IsEffectEnabled(long long effect);
int QApplication_QApplication_KeyboardInputInterval();
void* QApplication_QApplication_Palette(void* widget);
void QApplication_QApplication_SetActiveWindow(void* active);
void QApplication_SetAutoMaximizeThreshold(void* ptr, int threshold);
void QApplication_SetAutoSipEnabled(void* ptr, char enabled);
void QApplication_QApplication_SetCursorFlashTime(int vin);
void QApplication_QApplication_SetDoubleClickInterval(int vin);
void QApplication_QApplication_SetEffectEnabled(long long effect, char enable);
void QApplication_QApplication_SetGlobalStrut(void* vqs);
void QApplication_QApplication_SetKeyboardInputInterval(int vin);
void QApplication_QApplication_SetStartDragDistance(int l);
void QApplication_QApplication_SetStartDragTime(int ms);
void QApplication_SetStyleSheet(void* ptr, char* sheet);
void QApplication_QApplication_SetWheelScrollLines(int vin);
void QApplication_QApplication_SetWindowIcon(void* icon);
int QApplication_QApplication_StartDragDistance();
int QApplication_QApplication_StartDragTime();
struct QtWidgets_PackedString QApplication_StyleSheet(void* ptr);
void* QApplication_QApplication_TopLevelAt(void* point);
int QApplication_QApplication_WheelScrollLines();
void* QApplication_QApplication_WidgetAt(void* point);
void* QApplication_QApplication_WindowIcon();
void* QApplication_NewQApplication(int argc, char* argv);
void QApplication_AboutQt(void* ptr);
void* QApplication_QApplication_ActiveModalWidget();
void* QApplication_QApplication_ActivePopupWidget();
void* QApplication_QApplication_ActiveWindow();
struct QtWidgets_PackedList QApplication_QApplication_AllWidgets();
void QApplication_CloseAllWindows(void* ptr);
int QApplication_QApplication_ColorSpec();
void* QApplication_QApplication_Desktop();
char QApplication_Event(void* ptr, void* e);
int QApplication_QApplication_Exec();
void QApplication_ConnectFocusChanged(void* ptr);
void QApplication_DisconnectFocusChanged(void* ptr);
void QApplication_FocusChanged(void* ptr, void* old, void* now);
void* QApplication_QApplication_FocusWidget();
void* QApplication_QApplication_Font();
void* QApplication_QApplication_Font2(void* widget);
void* QApplication_QApplication_Font3(char* className);
void* QApplication_QApplication_FontMetrics();
long long QApplication_QApplication_NavigationMode();
void* QApplication_QApplication_Palette2(char* className);
void QApplication_QApplication_SetColorSpec(int spec);
void QApplication_QApplication_SetFont(void* font, char* className);
void QApplication_QApplication_SetNavigationMode(long long mode);
void QApplication_QApplication_SetPalette(void* palette, char* className);
void* QApplication_QApplication_SetStyle2(char* style);
void QApplication_QApplication_SetStyle(void* style);
void* QApplication_QApplication_Style();
void* QApplication_QApplication_TopLevelAt2(int x, int y);
struct QtWidgets_PackedList QApplication_QApplication_TopLevelWidgets();
void* QApplication_QApplication_WidgetAt2(int x, int y);
void QApplication_DestroyQApplication(void* ptr);
void QApplication_DestroyQApplicationDefault(void* ptr);
void* QApplication_allWidgets_atList(void* ptr, int i);
void* QApplication_topLevelWidgets_atList(void* ptr, int i);
void QApplication_Quit(void* ptr);
void QApplication_QuitDefault(void* ptr);
void QApplication_TimerEvent(void* ptr, void* event);
void QApplication_TimerEventDefault(void* ptr, void* event);
void QApplication_ChildEvent(void* ptr, void* event);
void QApplication_ChildEventDefault(void* ptr, void* event);
void QApplication_ConnectNotify(void* ptr, void* sign);
void QApplication_ConnectNotifyDefault(void* ptr, void* sign);
void QApplication_CustomEvent(void* ptr, void* event);
void QApplication_CustomEventDefault(void* ptr, void* event);
void QApplication_DeleteLater(void* ptr);
void QApplication_DeleteLaterDefault(void* ptr);
void QApplication_DisconnectNotify(void* ptr, void* sign);
void QApplication_DisconnectNotifyDefault(void* ptr, void* sign);
char QApplication_EventFilter(void* ptr, void* watched, void* event);
char QApplication_EventFilterDefault(void* ptr, void* watched, void* event);
void* QApplication_MetaObject(void* ptr);
void* QApplication_MetaObjectDefault(void* ptr);
long long QBoxLayout_Direction(void* ptr);
void* QBoxLayout_NewQBoxLayout(long long dir, void* parent);
void QBoxLayout_AddItem(void* ptr, void* item);
void QBoxLayout_AddItemDefault(void* ptr, void* item);
void QBoxLayout_AddLayout(void* ptr, void* layout, int stretch);
void QBoxLayout_AddSpacerItem(void* ptr, void* spacerItem);
void QBoxLayout_AddSpacing(void* ptr, int size);
void QBoxLayout_AddStretch(void* ptr, int stretch);
void QBoxLayout_AddStrut(void* ptr, int size);
void QBoxLayout_AddWidget(void* ptr, void* widget, int stretch, long long alignment);
int QBoxLayout_Count(void* ptr);
int QBoxLayout_CountDefault(void* ptr);
long long QBoxLayout_ExpandingDirections(void* ptr);
long long QBoxLayout_ExpandingDirectionsDefault(void* ptr);
char QBoxLayout_HasHeightForWidth(void* ptr);
char QBoxLayout_HasHeightForWidthDefault(void* ptr);
int QBoxLayout_HeightForWidth(void* ptr, int w);
int QBoxLayout_HeightForWidthDefault(void* ptr, int w);
void QBoxLayout_InsertItem(void* ptr, int index, void* item);
void QBoxLayout_InsertLayout(void* ptr, int index, void* layout, int stretch);
void QBoxLayout_InsertSpacerItem(void* ptr, int index, void* spacerItem);
void QBoxLayout_InsertSpacing(void* ptr, int index, int size);
void QBoxLayout_InsertStretch(void* ptr, int index, int stretch);
void QBoxLayout_InsertWidget(void* ptr, int index, void* widget, int stretch, long long alignment);
void QBoxLayout_Invalidate(void* ptr);
void QBoxLayout_InvalidateDefault(void* ptr);
void* QBoxLayout_ItemAt(void* ptr, int index);
void* QBoxLayout_ItemAtDefault(void* ptr, int index);
void* QBoxLayout_MaximumSize(void* ptr);
void* QBoxLayout_MaximumSizeDefault(void* ptr);
int QBoxLayout_MinimumHeightForWidth(void* ptr, int w);
int QBoxLayout_MinimumHeightForWidthDefault(void* ptr, int w);
void* QBoxLayout_MinimumSize(void* ptr);
void* QBoxLayout_MinimumSizeDefault(void* ptr);
void QBoxLayout_SetDirection(void* ptr, long long direction);
void QBoxLayout_SetGeometry(void* ptr, void* r);
void QBoxLayout_SetGeometryDefault(void* ptr, void* r);
void QBoxLayout_SetSpacing(void* ptr, int spacing);
void QBoxLayout_SetStretch(void* ptr, int index, int stretch);
char QBoxLayout_SetStretchFactor2(void* ptr, void* layout, int stretch);
char QBoxLayout_SetStretchFactor(void* ptr, void* widget, int stretch);
void* QBoxLayout_SizeHint(void* ptr);
void* QBoxLayout_SizeHintDefault(void* ptr);
int QBoxLayout_Spacing(void* ptr);
int QBoxLayout_Stretch(void* ptr, int index);
void* QBoxLayout_TakeAt(void* ptr, int index);
void* QBoxLayout_TakeAtDefault(void* ptr, int index);
void QBoxLayout_DestroyQBoxLayout(void* ptr);
long long QBoxLayout_ControlTypes(void* ptr);
long long QBoxLayout_ControlTypesDefault(void* ptr);
void* QBoxLayout_Geometry(void* ptr);
void* QBoxLayout_GeometryDefault(void* ptr);
int QBoxLayout_IndexOf(void* ptr, void* widget);
int QBoxLayout_IndexOfDefault(void* ptr, void* widget);
char QBoxLayout_IsEmpty(void* ptr);
char QBoxLayout_IsEmptyDefault(void* ptr);
void* QBoxLayout_Layout(void* ptr);
void* QBoxLayout_LayoutDefault(void* ptr);
void QBoxLayout_TimerEvent(void* ptr, void* event);
void QBoxLayout_TimerEventDefault(void* ptr, void* event);
void QBoxLayout_ConnectNotify(void* ptr, void* sign);
void QBoxLayout_ConnectNotifyDefault(void* ptr, void* sign);
void QBoxLayout_CustomEvent(void* ptr, void* event);
void QBoxLayout_CustomEventDefault(void* ptr, void* event);
void QBoxLayout_DeleteLater(void* ptr);
void QBoxLayout_DeleteLaterDefault(void* ptr);
void QBoxLayout_DisconnectNotify(void* ptr, void* sign);
void QBoxLayout_DisconnectNotifyDefault(void* ptr, void* sign);
char QBoxLayout_Event(void* ptr, void* e);
char QBoxLayout_EventDefault(void* ptr, void* e);
char QBoxLayout_EventFilter(void* ptr, void* watched, void* event);
char QBoxLayout_EventFilterDefault(void* ptr, void* watched, void* event);
void* QBoxLayout_MetaObject(void* ptr);
void* QBoxLayout_MetaObjectDefault(void* ptr);
void* QBoxLayout_SpacerItem(void* ptr);
void* QBoxLayout_SpacerItemDefault(void* ptr);
void* QBoxLayout_Widget(void* ptr);
void* QBoxLayout_WidgetDefault(void* ptr);
char QButtonGroup_Exclusive(void* ptr);
void QButtonGroup_SetExclusive(void* ptr, char vbo);
void* QButtonGroup_NewQButtonGroup(void* parent);
void QButtonGroup_AddButton(void* ptr, void* button, int id);
void* QButtonGroup_Button(void* ptr, int id);
void QButtonGroup_ConnectButtonClicked(void* ptr);
void QButtonGroup_DisconnectButtonClicked(void* ptr);
void QButtonGroup_ButtonClicked(void* ptr, void* button);
void QButtonGroup_ConnectButtonClicked2(void* ptr);
void QButtonGroup_DisconnectButtonClicked2(void* ptr);
void QButtonGroup_ButtonClicked2(void* ptr, int id);
void QButtonGroup_ConnectButtonPressed(void* ptr);
void QButtonGroup_DisconnectButtonPressed(void* ptr);
void QButtonGroup_ButtonPressed(void* ptr, void* button);
void QButtonGroup_ConnectButtonPressed2(void* ptr);
void QButtonGroup_DisconnectButtonPressed2(void* ptr);
void QButtonGroup_ButtonPressed2(void* ptr, int id);
void QButtonGroup_ConnectButtonReleased(void* ptr);
void QButtonGroup_DisconnectButtonReleased(void* ptr);
void QButtonGroup_ButtonReleased(void* ptr, void* button);
void QButtonGroup_ConnectButtonReleased2(void* ptr);
void QButtonGroup_DisconnectButtonReleased2(void* ptr);
void QButtonGroup_ButtonReleased2(void* ptr, int id);
void QButtonGroup_ConnectButtonToggled(void* ptr);
void QButtonGroup_DisconnectButtonToggled(void* ptr);
void QButtonGroup_ButtonToggled(void* ptr, void* button, char checked);
void QButtonGroup_ConnectButtonToggled2(void* ptr);
void QButtonGroup_DisconnectButtonToggled2(void* ptr);
void QButtonGroup_ButtonToggled2(void* ptr, int id, char checked);
struct QtWidgets_PackedList QButtonGroup_Buttons(void* ptr);
void* QButtonGroup_CheckedButton(void* ptr);
int QButtonGroup_CheckedId(void* ptr);
int QButtonGroup_Id(void* ptr, void* button);
void QButtonGroup_RemoveButton(void* ptr, void* button);
void QButtonGroup_SetId(void* ptr, void* button, int id);
void QButtonGroup_DestroyQButtonGroup(void* ptr);
void* QButtonGroup_buttons_atList(void* ptr, int i);
void QButtonGroup_TimerEvent(void* ptr, void* event);
void QButtonGroup_TimerEventDefault(void* ptr, void* event);
void QButtonGroup_ChildEvent(void* ptr, void* event);
void QButtonGroup_ChildEventDefault(void* ptr, void* event);
void QButtonGroup_ConnectNotify(void* ptr, void* sign);
void QButtonGroup_ConnectNotifyDefault(void* ptr, void* sign);
void QButtonGroup_CustomEvent(void* ptr, void* event);
void QButtonGroup_CustomEventDefault(void* ptr, void* event);
void QButtonGroup_DeleteLater(void* ptr);
void QButtonGroup_DeleteLaterDefault(void* ptr);
void QButtonGroup_DisconnectNotify(void* ptr, void* sign);
void QButtonGroup_DisconnectNotifyDefault(void* ptr, void* sign);
char QButtonGroup_Event(void* ptr, void* e);
char QButtonGroup_EventDefault(void* ptr, void* e);
char QButtonGroup_EventFilter(void* ptr, void* watched, void* event);
char QButtonGroup_EventFilterDefault(void* ptr, void* watched, void* event);
void* QButtonGroup_MetaObject(void* ptr);
void* QButtonGroup_MetaObjectDefault(void* ptr);
int QCalendarWidget_DateEditAcceptDelay(void* ptr);
long long QCalendarWidget_FirstDayOfWeek(void* ptr);
long long QCalendarWidget_HorizontalHeaderFormat(void* ptr);
char QCalendarWidget_IsDateEditEnabled(void* ptr);
char QCalendarWidget_IsGridVisible(void* ptr);
char QCalendarWidget_IsNavigationBarVisible(void* ptr);
void* QCalendarWidget_MaximumDate(void* ptr);
void* QCalendarWidget_MinimumDate(void* ptr);
void* QCalendarWidget_SelectedDate(void* ptr);
long long QCalendarWidget_SelectionMode(void* ptr);
void QCalendarWidget_SetDateEditAcceptDelay(void* ptr, int delay);
void QCalendarWidget_SetDateEditEnabled(void* ptr, char enable);
void QCalendarWidget_SetFirstDayOfWeek(void* ptr, long long dayOfWeek);
void QCalendarWidget_SetGridVisible(void* ptr, char show);
void QCalendarWidget_SetHorizontalHeaderFormat(void* ptr, long long format);
void QCalendarWidget_SetMaximumDate(void* ptr, void* date);
void QCalendarWidget_SetMinimumDate(void* ptr, void* date);
void QCalendarWidget_SetNavigationBarVisible(void* ptr, char visible);
void QCalendarWidget_SetSelectedDate(void* ptr, void* date);
void QCalendarWidget_SetSelectionMode(void* ptr, long long mode);
void QCalendarWidget_SetVerticalHeaderFormat(void* ptr, long long format);
long long QCalendarWidget_VerticalHeaderFormat(void* ptr);
void* QCalendarWidget_NewQCalendarWidget(void* parent);
void QCalendarWidget_ConnectActivated(void* ptr);
void QCalendarWidget_DisconnectActivated(void* ptr);
void QCalendarWidget_Activated(void* ptr, void* date);
void QCalendarWidget_ConnectClicked(void* ptr);
void QCalendarWidget_DisconnectClicked(void* ptr);
void QCalendarWidget_Clicked(void* ptr, void* date);
void QCalendarWidget_ConnectCurrentPageChanged(void* ptr);
void QCalendarWidget_DisconnectCurrentPageChanged(void* ptr);
void QCalendarWidget_CurrentPageChanged(void* ptr, int year, int month);
void* QCalendarWidget_DateTextFormat2(void* ptr, void* date);
char QCalendarWidget_Event(void* ptr, void* event);
char QCalendarWidget_EventFilter(void* ptr, void* watched, void* event);
void* QCalendarWidget_HeaderTextFormat(void* ptr);
void QCalendarWidget_KeyPressEvent(void* ptr, void* event);
void QCalendarWidget_KeyPressEventDefault(void* ptr, void* event);
void* QCalendarWidget_MinimumSizeHint(void* ptr);
void* QCalendarWidget_MinimumSizeHintDefault(void* ptr);
int QCalendarWidget_MonthShown(void* ptr);
void QCalendarWidget_MousePressEvent(void* ptr, void* event);
void QCalendarWidget_MousePressEventDefault(void* ptr, void* event);
void QCalendarWidget_PaintCell(void* ptr, void* painter, void* rect, void* date);
void QCalendarWidget_PaintCellDefault(void* ptr, void* painter, void* rect, void* date);
void QCalendarWidget_ResizeEvent(void* ptr, void* event);
void QCalendarWidget_ResizeEventDefault(void* ptr, void* event);
void QCalendarWidget_ConnectSelectionChanged(void* ptr);
void QCalendarWidget_DisconnectSelectionChanged(void* ptr);
void QCalendarWidget_SelectionChanged(void* ptr);
void QCalendarWidget_SetCurrentPage(void* ptr, int year, int month);
void QCalendarWidget_SetDateRange(void* ptr, void* min, void* max);
void QCalendarWidget_SetDateTextFormat(void* ptr, void* date, void* format);
void QCalendarWidget_SetHeaderTextFormat(void* ptr, void* format);
void QCalendarWidget_SetWeekdayTextFormat(void* ptr, long long dayOfWeek, void* format);
void QCalendarWidget_ShowNextMonth(void* ptr);
void QCalendarWidget_ShowNextYear(void* ptr);
void QCalendarWidget_ShowPreviousMonth(void* ptr);
void QCalendarWidget_ShowPreviousYear(void* ptr);
void QCalendarWidget_ShowSelectedDate(void* ptr);
void QCalendarWidget_ShowToday(void* ptr);
void* QCalendarWidget_SizeHint(void* ptr);
void* QCalendarWidget_SizeHintDefault(void* ptr);
void QCalendarWidget_UpdateCell(void* ptr, void* date);
void QCalendarWidget_UpdateCells(void* ptr);
void* QCalendarWidget_WeekdayTextFormat(void* ptr, long long dayOfWeek);
int QCalendarWidget_YearShown(void* ptr);
void QCalendarWidget_DestroyQCalendarWidget(void* ptr);
void QCalendarWidget_ActionEvent(void* ptr, void* event);
void QCalendarWidget_ActionEventDefault(void* ptr, void* event);
void QCalendarWidget_DragEnterEvent(void* ptr, void* event);
void QCalendarWidget_DragEnterEventDefault(void* ptr, void* event);
void QCalendarWidget_DragLeaveEvent(void* ptr, void* event);
void QCalendarWidget_DragLeaveEventDefault(void* ptr, void* event);
void QCalendarWidget_DragMoveEvent(void* ptr, void* event);
void QCalendarWidget_DragMoveEventDefault(void* ptr, void* event);
void QCalendarWidget_DropEvent(void* ptr, void* event);
void QCalendarWidget_DropEventDefault(void* ptr, void* event);
void QCalendarWidget_EnterEvent(void* ptr, void* event);
void QCalendarWidget_EnterEventDefault(void* ptr, void* event);
void QCalendarWidget_FocusInEvent(void* ptr, void* event);
void QCalendarWidget_FocusInEventDefault(void* ptr, void* event);
void QCalendarWidget_FocusOutEvent(void* ptr, void* event);
void QCalendarWidget_FocusOutEventDefault(void* ptr, void* event);
void QCalendarWidget_HideEvent(void* ptr, void* event);
void QCalendarWidget_HideEventDefault(void* ptr, void* event);
void QCalendarWidget_LeaveEvent(void* ptr, void* event);
void QCalendarWidget_LeaveEventDefault(void* ptr, void* event);
void QCalendarWidget_MoveEvent(void* ptr, void* event);
void QCalendarWidget_MoveEventDefault(void* ptr, void* event);
void QCalendarWidget_PaintEvent(void* ptr, void* event);
void QCalendarWidget_PaintEventDefault(void* ptr, void* event);
void QCalendarWidget_SetEnabled(void* ptr, char vbo);
void QCalendarWidget_SetEnabledDefault(void* ptr, char vbo);
void QCalendarWidget_SetStyleSheet(void* ptr, char* styleSheet);
void QCalendarWidget_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QCalendarWidget_SetVisible(void* ptr, char visible);
void QCalendarWidget_SetVisibleDefault(void* ptr, char visible);
void QCalendarWidget_SetWindowModified(void* ptr, char vbo);
void QCalendarWidget_SetWindowModifiedDefault(void* ptr, char vbo);
void QCalendarWidget_SetWindowTitle(void* ptr, char* vqs);
void QCalendarWidget_SetWindowTitleDefault(void* ptr, char* vqs);
void QCalendarWidget_ShowEvent(void* ptr, void* event);
void QCalendarWidget_ShowEventDefault(void* ptr, void* event);
void QCalendarWidget_ChangeEvent(void* ptr, void* event);
void QCalendarWidget_ChangeEventDefault(void* ptr, void* event);
char QCalendarWidget_Close(void* ptr);
char QCalendarWidget_CloseDefault(void* ptr);
void QCalendarWidget_CloseEvent(void* ptr, void* event);
void QCalendarWidget_CloseEventDefault(void* ptr, void* event);
void QCalendarWidget_ContextMenuEvent(void* ptr, void* event);
void QCalendarWidget_ContextMenuEventDefault(void* ptr, void* event);
char QCalendarWidget_FocusNextPrevChild(void* ptr, char next);
char QCalendarWidget_FocusNextPrevChildDefault(void* ptr, char next);
char QCalendarWidget_HasHeightForWidth(void* ptr);
char QCalendarWidget_HasHeightForWidthDefault(void* ptr);
int QCalendarWidget_HeightForWidth(void* ptr, int w);
int QCalendarWidget_HeightForWidthDefault(void* ptr, int w);
void QCalendarWidget_Hide(void* ptr);
void QCalendarWidget_HideDefault(void* ptr);
void QCalendarWidget_InputMethodEvent(void* ptr, void* event);
void QCalendarWidget_InputMethodEventDefault(void* ptr, void* event);
void* QCalendarWidget_InputMethodQuery(void* ptr, long long query);
void* QCalendarWidget_InputMethodQueryDefault(void* ptr, long long query);
void QCalendarWidget_KeyReleaseEvent(void* ptr, void* event);
void QCalendarWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QCalendarWidget_Lower(void* ptr);
void QCalendarWidget_LowerDefault(void* ptr);
void QCalendarWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QCalendarWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QCalendarWidget_MouseMoveEvent(void* ptr, void* event);
void QCalendarWidget_MouseMoveEventDefault(void* ptr, void* event);
void QCalendarWidget_MouseReleaseEvent(void* ptr, void* event);
void QCalendarWidget_MouseReleaseEventDefault(void* ptr, void* event);
char QCalendarWidget_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QCalendarWidget_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QCalendarWidget_Raise(void* ptr);
void QCalendarWidget_RaiseDefault(void* ptr);
void QCalendarWidget_Repaint(void* ptr);
void QCalendarWidget_RepaintDefault(void* ptr);
void QCalendarWidget_SetDisabled(void* ptr, char disable);
void QCalendarWidget_SetDisabledDefault(void* ptr, char disable);
void QCalendarWidget_SetFocus2(void* ptr);
void QCalendarWidget_SetFocus2Default(void* ptr);
void QCalendarWidget_SetHidden(void* ptr, char hidden);
void QCalendarWidget_SetHiddenDefault(void* ptr, char hidden);
void QCalendarWidget_Show(void* ptr);
void QCalendarWidget_ShowDefault(void* ptr);
void QCalendarWidget_ShowFullScreen(void* ptr);
void QCalendarWidget_ShowFullScreenDefault(void* ptr);
void QCalendarWidget_ShowMaximized(void* ptr);
void QCalendarWidget_ShowMaximizedDefault(void* ptr);
void QCalendarWidget_ShowMinimized(void* ptr);
void QCalendarWidget_ShowMinimizedDefault(void* ptr);
void QCalendarWidget_ShowNormal(void* ptr);
void QCalendarWidget_ShowNormalDefault(void* ptr);
void QCalendarWidget_TabletEvent(void* ptr, void* event);
void QCalendarWidget_TabletEventDefault(void* ptr, void* event);
void QCalendarWidget_Update(void* ptr);
void QCalendarWidget_UpdateDefault(void* ptr);
void QCalendarWidget_UpdateMicroFocus(void* ptr);
void QCalendarWidget_UpdateMicroFocusDefault(void* ptr);
void QCalendarWidget_WheelEvent(void* ptr, void* event);
void QCalendarWidget_WheelEventDefault(void* ptr, void* event);
void QCalendarWidget_TimerEvent(void* ptr, void* event);
void QCalendarWidget_TimerEventDefault(void* ptr, void* event);
void QCalendarWidget_ChildEvent(void* ptr, void* event);
void QCalendarWidget_ChildEventDefault(void* ptr, void* event);
void QCalendarWidget_ConnectNotify(void* ptr, void* sign);
void QCalendarWidget_ConnectNotifyDefault(void* ptr, void* sign);
void QCalendarWidget_CustomEvent(void* ptr, void* event);
void QCalendarWidget_CustomEventDefault(void* ptr, void* event);
void QCalendarWidget_DeleteLater(void* ptr);
void QCalendarWidget_DeleteLaterDefault(void* ptr);
void QCalendarWidget_DisconnectNotify(void* ptr, void* sign);
void QCalendarWidget_DisconnectNotifyDefault(void* ptr, void* sign);
void* QCalendarWidget_MetaObject(void* ptr);
void* QCalendarWidget_MetaObjectDefault(void* ptr);
char QCheckBox_IsTristate(void* ptr);
void QCheckBox_SetTristate(void* ptr, char y);
void* QCheckBox_NewQCheckBox(void* parent);
void* QCheckBox_NewQCheckBox2(char* text, void* parent);
long long QCheckBox_CheckState(void* ptr);
void QCheckBox_CheckStateSet(void* ptr);
void QCheckBox_CheckStateSetDefault(void* ptr);
char QCheckBox_Event(void* ptr, void* e);
char QCheckBox_HitButton(void* ptr, void* pos);
char QCheckBox_HitButtonDefault(void* ptr, void* pos);
void QCheckBox_InitStyleOption(void* ptr, void* option);
void* QCheckBox_MinimumSizeHint(void* ptr);
void* QCheckBox_MinimumSizeHintDefault(void* ptr);
void QCheckBox_MouseMoveEvent(void* ptr, void* e);
void QCheckBox_MouseMoveEventDefault(void* ptr, void* e);
void QCheckBox_NextCheckState(void* ptr);
void QCheckBox_NextCheckStateDefault(void* ptr);
void QCheckBox_PaintEvent(void* ptr, void* vqp);
void QCheckBox_PaintEventDefault(void* ptr, void* vqp);
void QCheckBox_SetCheckState(void* ptr, long long state);
void* QCheckBox_SizeHint(void* ptr);
void* QCheckBox_SizeHintDefault(void* ptr);
void QCheckBox_ConnectStateChanged(void* ptr);
void QCheckBox_DisconnectStateChanged(void* ptr);
void QCheckBox_StateChanged(void* ptr, int state);
void QCheckBox_DestroyQCheckBox(void* ptr);
void QCheckBox_SetChecked(void* ptr, char vbo);
void QCheckBox_SetCheckedDefault(void* ptr, char vbo);
void QCheckBox_SetIconSize(void* ptr, void* size);
void QCheckBox_SetIconSizeDefault(void* ptr, void* size);
void QCheckBox_Toggle(void* ptr);
void QCheckBox_ToggleDefault(void* ptr);
void QCheckBox_AnimateClick(void* ptr, int msec);
void QCheckBox_AnimateClickDefault(void* ptr, int msec);
void QCheckBox_ChangeEvent(void* ptr, void* e);
void QCheckBox_ChangeEventDefault(void* ptr, void* e);
void QCheckBox_Click(void* ptr);
void QCheckBox_ClickDefault(void* ptr);
void QCheckBox_FocusInEvent(void* ptr, void* e);
void QCheckBox_FocusInEventDefault(void* ptr, void* e);
void QCheckBox_FocusOutEvent(void* ptr, void* e);
void QCheckBox_FocusOutEventDefault(void* ptr, void* e);
void QCheckBox_KeyPressEvent(void* ptr, void* e);
void QCheckBox_KeyPressEventDefault(void* ptr, void* e);
void QCheckBox_KeyReleaseEvent(void* ptr, void* e);
void QCheckBox_KeyReleaseEventDefault(void* ptr, void* e);
void QCheckBox_MousePressEvent(void* ptr, void* e);
void QCheckBox_MousePressEventDefault(void* ptr, void* e);
void QCheckBox_MouseReleaseEvent(void* ptr, void* e);
void QCheckBox_MouseReleaseEventDefault(void* ptr, void* e);
void QCheckBox_ActionEvent(void* ptr, void* event);
void QCheckBox_ActionEventDefault(void* ptr, void* event);
void QCheckBox_DragEnterEvent(void* ptr, void* event);
void QCheckBox_DragEnterEventDefault(void* ptr, void* event);
void QCheckBox_DragLeaveEvent(void* ptr, void* event);
void QCheckBox_DragLeaveEventDefault(void* ptr, void* event);
void QCheckBox_DragMoveEvent(void* ptr, void* event);
void QCheckBox_DragMoveEventDefault(void* ptr, void* event);
void QCheckBox_DropEvent(void* ptr, void* event);
void QCheckBox_DropEventDefault(void* ptr, void* event);
void QCheckBox_EnterEvent(void* ptr, void* event);
void QCheckBox_EnterEventDefault(void* ptr, void* event);
void QCheckBox_HideEvent(void* ptr, void* event);
void QCheckBox_HideEventDefault(void* ptr, void* event);
void QCheckBox_LeaveEvent(void* ptr, void* event);
void QCheckBox_LeaveEventDefault(void* ptr, void* event);
void QCheckBox_MoveEvent(void* ptr, void* event);
void QCheckBox_MoveEventDefault(void* ptr, void* event);
void QCheckBox_SetEnabled(void* ptr, char vbo);
void QCheckBox_SetEnabledDefault(void* ptr, char vbo);
void QCheckBox_SetStyleSheet(void* ptr, char* styleSheet);
void QCheckBox_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QCheckBox_SetVisible(void* ptr, char visible);
void QCheckBox_SetVisibleDefault(void* ptr, char visible);
void QCheckBox_SetWindowModified(void* ptr, char vbo);
void QCheckBox_SetWindowModifiedDefault(void* ptr, char vbo);
void QCheckBox_SetWindowTitle(void* ptr, char* vqs);
void QCheckBox_SetWindowTitleDefault(void* ptr, char* vqs);
void QCheckBox_ShowEvent(void* ptr, void* event);
void QCheckBox_ShowEventDefault(void* ptr, void* event);
char QCheckBox_Close(void* ptr);
char QCheckBox_CloseDefault(void* ptr);
void QCheckBox_CloseEvent(void* ptr, void* event);
void QCheckBox_CloseEventDefault(void* ptr, void* event);
void QCheckBox_ContextMenuEvent(void* ptr, void* event);
void QCheckBox_ContextMenuEventDefault(void* ptr, void* event);
char QCheckBox_FocusNextPrevChild(void* ptr, char next);
char QCheckBox_FocusNextPrevChildDefault(void* ptr, char next);
char QCheckBox_HasHeightForWidth(void* ptr);
char QCheckBox_HasHeightForWidthDefault(void* ptr);
int QCheckBox_HeightForWidth(void* ptr, int w);
int QCheckBox_HeightForWidthDefault(void* ptr, int w);
void QCheckBox_Hide(void* ptr);
void QCheckBox_HideDefault(void* ptr);
void QCheckBox_InputMethodEvent(void* ptr, void* event);
void QCheckBox_InputMethodEventDefault(void* ptr, void* event);
void* QCheckBox_InputMethodQuery(void* ptr, long long query);
void* QCheckBox_InputMethodQueryDefault(void* ptr, long long query);
void QCheckBox_Lower(void* ptr);
void QCheckBox_LowerDefault(void* ptr);
void QCheckBox_MouseDoubleClickEvent(void* ptr, void* event);
void QCheckBox_MouseDoubleClickEventDefault(void* ptr, void* event);
char QCheckBox_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QCheckBox_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QCheckBox_Raise(void* ptr);
void QCheckBox_RaiseDefault(void* ptr);
void QCheckBox_Repaint(void* ptr);
void QCheckBox_RepaintDefault(void* ptr);
void QCheckBox_ResizeEvent(void* ptr, void* event);
void QCheckBox_ResizeEventDefault(void* ptr, void* event);
void QCheckBox_SetDisabled(void* ptr, char disable);
void QCheckBox_SetDisabledDefault(void* ptr, char disable);
void QCheckBox_SetFocus2(void* ptr);
void QCheckBox_SetFocus2Default(void* ptr);
void QCheckBox_SetHidden(void* ptr, char hidden);
void QCheckBox_SetHiddenDefault(void* ptr, char hidden);
void QCheckBox_Show(void* ptr);
void QCheckBox_ShowDefault(void* ptr);
void QCheckBox_ShowFullScreen(void* ptr);
void QCheckBox_ShowFullScreenDefault(void* ptr);
void QCheckBox_ShowMaximized(void* ptr);
void QCheckBox_ShowMaximizedDefault(void* ptr);
void QCheckBox_ShowMinimized(void* ptr);
void QCheckBox_ShowMinimizedDefault(void* ptr);
void QCheckBox_ShowNormal(void* ptr);
void QCheckBox_ShowNormalDefault(void* ptr);
void QCheckBox_TabletEvent(void* ptr, void* event);
void QCheckBox_TabletEventDefault(void* ptr, void* event);
void QCheckBox_Update(void* ptr);
void QCheckBox_UpdateDefault(void* ptr);
void QCheckBox_UpdateMicroFocus(void* ptr);
void QCheckBox_UpdateMicroFocusDefault(void* ptr);
void QCheckBox_WheelEvent(void* ptr, void* event);
void QCheckBox_WheelEventDefault(void* ptr, void* event);
void QCheckBox_ChildEvent(void* ptr, void* event);
void QCheckBox_ChildEventDefault(void* ptr, void* event);
void QCheckBox_ConnectNotify(void* ptr, void* sign);
void QCheckBox_ConnectNotifyDefault(void* ptr, void* sign);
void QCheckBox_CustomEvent(void* ptr, void* event);
void QCheckBox_CustomEventDefault(void* ptr, void* event);
void QCheckBox_DeleteLater(void* ptr);
void QCheckBox_DeleteLaterDefault(void* ptr);
void QCheckBox_DisconnectNotify(void* ptr, void* sign);
void QCheckBox_DisconnectNotifyDefault(void* ptr, void* sign);
char QCheckBox_EventFilter(void* ptr, void* watched, void* event);
char QCheckBox_EventFilterDefault(void* ptr, void* watched, void* event);
void* QCheckBox_MetaObject(void* ptr);
void* QCheckBox_MetaObjectDefault(void* ptr);
void* QColorDialog_CurrentColor(void* ptr);
long long QColorDialog_Options(void* ptr);
void QColorDialog_SetCurrentColor(void* ptr, void* color);
void QColorDialog_SetOptions(void* ptr, long long options);
void* QColorDialog_NewQColorDialog(void* parent);
void* QColorDialog_NewQColorDialog2(void* initial, void* parent);
void QColorDialog_ChangeEvent(void* ptr, void* e);
void QColorDialog_ChangeEventDefault(void* ptr, void* e);
void QColorDialog_ConnectColorSelected(void* ptr);
void QColorDialog_DisconnectColorSelected(void* ptr);
void QColorDialog_ColorSelected(void* ptr, void* color);
void QColorDialog_ConnectCurrentColorChanged(void* ptr);
void QColorDialog_DisconnectCurrentColorChanged(void* ptr);
void QColorDialog_CurrentColorChanged(void* ptr, void* color);
void* QColorDialog_QColorDialog_CustomColor(int index);
int QColorDialog_QColorDialog_CustomCount();
void QColorDialog_Done(void* ptr, int result);
void QColorDialog_DoneDefault(void* ptr, int result);
void* QColorDialog_QColorDialog_GetColor(void* initial, void* parent, char* title, long long options);
void QColorDialog_Open(void* ptr, void* receiver, char* member);
void* QColorDialog_SelectedColor(void* ptr);
void QColorDialog_QColorDialog_SetCustomColor(int index, void* color);
void QColorDialog_SetOption(void* ptr, long long option, char on);
void QColorDialog_QColorDialog_SetStandardColor(int index, void* color);
void QColorDialog_SetVisible(void* ptr, char visible);
void QColorDialog_SetVisibleDefault(void* ptr, char visible);
void* QColorDialog_QColorDialog_StandardColor(int index);
char QColorDialog_TestOption(void* ptr, long long option);
void QColorDialog_DestroyQColorDialog(void* ptr);
void QColorDialog_Accept(void* ptr);
void QColorDialog_AcceptDefault(void* ptr);
void QColorDialog_CloseEvent(void* ptr, void* e);
void QColorDialog_CloseEventDefault(void* ptr, void* e);
void QColorDialog_ContextMenuEvent(void* ptr, void* e);
void QColorDialog_ContextMenuEventDefault(void* ptr, void* e);
int QColorDialog_Exec(void* ptr);
int QColorDialog_ExecDefault(void* ptr);
void QColorDialog_KeyPressEvent(void* ptr, void* e);
void QColorDialog_KeyPressEventDefault(void* ptr, void* e);
void* QColorDialog_MinimumSizeHint(void* ptr);
void* QColorDialog_MinimumSizeHintDefault(void* ptr);
void QColorDialog_Reject(void* ptr);
void QColorDialog_RejectDefault(void* ptr);
void QColorDialog_ResizeEvent(void* ptr, void* vqr);
void QColorDialog_ResizeEventDefault(void* ptr, void* vqr);
void QColorDialog_ShowEvent(void* ptr, void* event);
void QColorDialog_ShowEventDefault(void* ptr, void* event);
void* QColorDialog_SizeHint(void* ptr);
void* QColorDialog_SizeHintDefault(void* ptr);
void QColorDialog_ActionEvent(void* ptr, void* event);
void QColorDialog_ActionEventDefault(void* ptr, void* event);
void QColorDialog_DragEnterEvent(void* ptr, void* event);
void QColorDialog_DragEnterEventDefault(void* ptr, void* event);
void QColorDialog_DragLeaveEvent(void* ptr, void* event);
void QColorDialog_DragLeaveEventDefault(void* ptr, void* event);
void QColorDialog_DragMoveEvent(void* ptr, void* event);
void QColorDialog_DragMoveEventDefault(void* ptr, void* event);
void QColorDialog_DropEvent(void* ptr, void* event);
void QColorDialog_DropEventDefault(void* ptr, void* event);
void QColorDialog_EnterEvent(void* ptr, void* event);
void QColorDialog_EnterEventDefault(void* ptr, void* event);
void QColorDialog_FocusInEvent(void* ptr, void* event);
void QColorDialog_FocusInEventDefault(void* ptr, void* event);
void QColorDialog_FocusOutEvent(void* ptr, void* event);
void QColorDialog_FocusOutEventDefault(void* ptr, void* event);
void QColorDialog_HideEvent(void* ptr, void* event);
void QColorDialog_HideEventDefault(void* ptr, void* event);
void QColorDialog_LeaveEvent(void* ptr, void* event);
void QColorDialog_LeaveEventDefault(void* ptr, void* event);
void QColorDialog_MoveEvent(void* ptr, void* event);
void QColorDialog_MoveEventDefault(void* ptr, void* event);
void QColorDialog_PaintEvent(void* ptr, void* event);
void QColorDialog_PaintEventDefault(void* ptr, void* event);
void QColorDialog_SetEnabled(void* ptr, char vbo);
void QColorDialog_SetEnabledDefault(void* ptr, char vbo);
void QColorDialog_SetStyleSheet(void* ptr, char* styleSheet);
void QColorDialog_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QColorDialog_SetWindowModified(void* ptr, char vbo);
void QColorDialog_SetWindowModifiedDefault(void* ptr, char vbo);
void QColorDialog_SetWindowTitle(void* ptr, char* vqs);
void QColorDialog_SetWindowTitleDefault(void* ptr, char* vqs);
char QColorDialog_Close(void* ptr);
char QColorDialog_CloseDefault(void* ptr);
char QColorDialog_FocusNextPrevChild(void* ptr, char next);
char QColorDialog_FocusNextPrevChildDefault(void* ptr, char next);
char QColorDialog_HasHeightForWidth(void* ptr);
char QColorDialog_HasHeightForWidthDefault(void* ptr);
int QColorDialog_HeightForWidth(void* ptr, int w);
int QColorDialog_HeightForWidthDefault(void* ptr, int w);
void QColorDialog_Hide(void* ptr);
void QColorDialog_HideDefault(void* ptr);
void QColorDialog_InputMethodEvent(void* ptr, void* event);
void QColorDialog_InputMethodEventDefault(void* ptr, void* event);
void* QColorDialog_InputMethodQuery(void* ptr, long long query);
void* QColorDialog_InputMethodQueryDefault(void* ptr, long long query);
void QColorDialog_KeyReleaseEvent(void* ptr, void* event);
void QColorDialog_KeyReleaseEventDefault(void* ptr, void* event);
void QColorDialog_Lower(void* ptr);
void QColorDialog_LowerDefault(void* ptr);
void QColorDialog_MouseDoubleClickEvent(void* ptr, void* event);
void QColorDialog_MouseDoubleClickEventDefault(void* ptr, void* event);
void QColorDialog_MouseMoveEvent(void* ptr, void* event);
void QColorDialog_MouseMoveEventDefault(void* ptr, void* event);
void QColorDialog_MousePressEvent(void* ptr, void* event);
void QColorDialog_MousePressEventDefault(void* ptr, void* event);
void QColorDialog_MouseReleaseEvent(void* ptr, void* event);
void QColorDialog_MouseReleaseEventDefault(void* ptr, void* event);
char QColorDialog_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QColorDialog_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QColorDialog_Raise(void* ptr);
void QColorDialog_RaiseDefault(void* ptr);
void QColorDialog_Repaint(void* ptr);
void QColorDialog_RepaintDefault(void* ptr);
void QColorDialog_SetDisabled(void* ptr, char disable);
void QColorDialog_SetDisabledDefault(void* ptr, char disable);
void QColorDialog_SetFocus2(void* ptr);
void QColorDialog_SetFocus2Default(void* ptr);
void QColorDialog_SetHidden(void* ptr, char hidden);
void QColorDialog_SetHiddenDefault(void* ptr, char hidden);
void QColorDialog_Show(void* ptr);
void QColorDialog_ShowDefault(void* ptr);
void QColorDialog_ShowFullScreen(void* ptr);
void QColorDialog_ShowFullScreenDefault(void* ptr);
void QColorDialog_ShowMaximized(void* ptr);
void QColorDialog_ShowMaximizedDefault(void* ptr);
void QColorDialog_ShowMinimized(void* ptr);
void QColorDialog_ShowMinimizedDefault(void* ptr);
void QColorDialog_ShowNormal(void* ptr);
void QColorDialog_ShowNormalDefault(void* ptr);
void QColorDialog_TabletEvent(void* ptr, void* event);
void QColorDialog_TabletEventDefault(void* ptr, void* event);
void QColorDialog_Update(void* ptr);
void QColorDialog_UpdateDefault(void* ptr);
void QColorDialog_UpdateMicroFocus(void* ptr);
void QColorDialog_UpdateMicroFocusDefault(void* ptr);
void QColorDialog_WheelEvent(void* ptr, void* event);
void QColorDialog_WheelEventDefault(void* ptr, void* event);
void QColorDialog_TimerEvent(void* ptr, void* event);
void QColorDialog_TimerEventDefault(void* ptr, void* event);
void QColorDialog_ChildEvent(void* ptr, void* event);
void QColorDialog_ChildEventDefault(void* ptr, void* event);
void QColorDialog_ConnectNotify(void* ptr, void* sign);
void QColorDialog_ConnectNotifyDefault(void* ptr, void* sign);
void QColorDialog_CustomEvent(void* ptr, void* event);
void QColorDialog_CustomEventDefault(void* ptr, void* event);
void QColorDialog_DeleteLater(void* ptr);
void QColorDialog_DeleteLaterDefault(void* ptr);
void QColorDialog_DisconnectNotify(void* ptr, void* sign);
void QColorDialog_DisconnectNotifyDefault(void* ptr, void* sign);
void* QColorDialog_MetaObject(void* ptr);
void* QColorDialog_MetaObjectDefault(void* ptr);
void* QColormap_NewQColormap(void* colormap);
void* QColormap_ColorAt(void* ptr, unsigned int pixel);
int QColormap_Depth(void* ptr);
void* QColormap_QColormap_Instance(int screen);
long long QColormap_Mode(void* ptr);
unsigned int QColormap_Pixel(void* ptr, void* color);
int QColormap_Size(void* ptr);
void QColormap_DestroyQColormap(void* ptr);
char QColumnView_ResizeGripsVisible(void* ptr);
void QColumnView_SetResizeGripsVisible(void* ptr, char visible);
void* QColumnView_NewQColumnView(void* parent);
void* QColumnView_CreateColumn(void* ptr, void* index);
void* QColumnView_CreateColumnDefault(void* ptr, void* index);
void QColumnView_CurrentChanged(void* ptr, void* current, void* previous);
void QColumnView_CurrentChangedDefault(void* ptr, void* current, void* previous);
int QColumnView_HorizontalOffset(void* ptr);
int QColumnView_HorizontalOffsetDefault(void* ptr);
void* QColumnView_IndexAt(void* ptr, void* point);
void* QColumnView_IndexAtDefault(void* ptr, void* point);
void QColumnView_InitializeColumn(void* ptr, void* column);
char QColumnView_IsIndexHidden(void* ptr, void* index);
char QColumnView_IsIndexHiddenDefault(void* ptr, void* index);
void* QColumnView_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QColumnView_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
void* QColumnView_PreviewWidget(void* ptr);
void QColumnView_ResizeEvent(void* ptr, void* event);
void QColumnView_ResizeEventDefault(void* ptr, void* event);
void QColumnView_RowsInserted(void* ptr, void* parent, int start, int end);
void QColumnView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QColumnView_ScrollContentsBy(void* ptr, int dx, int dy);
void QColumnView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QColumnView_ScrollTo(void* ptr, void* index, long long hint);
void QColumnView_ScrollToDefault(void* ptr, void* index, long long hint);
void QColumnView_SelectAll(void* ptr);
void QColumnView_SelectAllDefault(void* ptr);
void QColumnView_SetModel(void* ptr, void* model);
void QColumnView_SetModelDefault(void* ptr, void* model);
void QColumnView_SetPreviewWidget(void* ptr, void* widget);
void QColumnView_SetRootIndex(void* ptr, void* index);
void QColumnView_SetRootIndexDefault(void* ptr, void* index);
void QColumnView_SetSelection(void* ptr, void* rect, long long command);
void QColumnView_SetSelectionDefault(void* ptr, void* rect, long long command);
void QColumnView_SetSelectionModel(void* ptr, void* newSelectionModel);
void QColumnView_SetSelectionModelDefault(void* ptr, void* newSelectionModel);
void* QColumnView_SizeHint(void* ptr);
void* QColumnView_SizeHintDefault(void* ptr);
void QColumnView_ConnectUpdatePreviewWidget(void* ptr);
void QColumnView_DisconnectUpdatePreviewWidget(void* ptr);
void QColumnView_UpdatePreviewWidget(void* ptr, void* index);
int QColumnView_VerticalOffset(void* ptr);
int QColumnView_VerticalOffsetDefault(void* ptr);
void* QColumnView_VisualRect(void* ptr, void* index);
void* QColumnView_VisualRectDefault(void* ptr, void* index);
void* QColumnView_VisualRegionForSelection(void* ptr, void* selection);
void* QColumnView_VisualRegionForSelectionDefault(void* ptr, void* selection);
void QColumnView_DestroyQColumnView(void* ptr);
void QColumnView_DragLeaveEvent(void* ptr, void* event);
void QColumnView_DragLeaveEventDefault(void* ptr, void* event);
char QColumnView_ViewportEvent(void* ptr, void* event);
char QColumnView_ViewportEventDefault(void* ptr, void* event);
void QColumnView_ClearSelection(void* ptr);
void QColumnView_ClearSelectionDefault(void* ptr);
void QColumnView_CloseEditor(void* ptr, void* editor, long long hint);
void QColumnView_CloseEditorDefault(void* ptr, void* editor, long long hint);
void QColumnView_CommitData(void* ptr, void* editor);
void QColumnView_CommitDataDefault(void* ptr, void* editor);
void QColumnView_DragEnterEvent(void* ptr, void* event);
void QColumnView_DragEnterEventDefault(void* ptr, void* event);
void QColumnView_DragMoveEvent(void* ptr, void* event);
void QColumnView_DragMoveEventDefault(void* ptr, void* event);
void QColumnView_DropEvent(void* ptr, void* event);
void QColumnView_DropEventDefault(void* ptr, void* event);
void QColumnView_Edit(void* ptr, void* index);
void QColumnView_EditDefault(void* ptr, void* index);
char QColumnView_Edit2(void* ptr, void* index, long long trigger, void* event);
char QColumnView_Edit2Default(void* ptr, void* index, long long trigger, void* event);
void QColumnView_EditorDestroyed(void* ptr, void* editor);
void QColumnView_EditorDestroyedDefault(void* ptr, void* editor);
void QColumnView_FocusInEvent(void* ptr, void* event);
void QColumnView_FocusInEventDefault(void* ptr, void* event);
char QColumnView_FocusNextPrevChild(void* ptr, char next);
char QColumnView_FocusNextPrevChildDefault(void* ptr, char next);
void QColumnView_FocusOutEvent(void* ptr, void* event);
void QColumnView_FocusOutEventDefault(void* ptr, void* event);
void QColumnView_InputMethodEvent(void* ptr, void* event);
void QColumnView_InputMethodEventDefault(void* ptr, void* event);
void* QColumnView_InputMethodQuery(void* ptr, long long query);
void* QColumnView_InputMethodQueryDefault(void* ptr, long long query);
void QColumnView_KeyPressEvent(void* ptr, void* event);
void QColumnView_KeyPressEventDefault(void* ptr, void* event);
void QColumnView_KeyboardSearch(void* ptr, char* search);
void QColumnView_KeyboardSearchDefault(void* ptr, char* search);
void QColumnView_MouseDoubleClickEvent(void* ptr, void* event);
void QColumnView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QColumnView_MouseMoveEvent(void* ptr, void* event);
void QColumnView_MouseMoveEventDefault(void* ptr, void* event);
void QColumnView_MousePressEvent(void* ptr, void* event);
void QColumnView_MousePressEventDefault(void* ptr, void* event);
void QColumnView_MouseReleaseEvent(void* ptr, void* event);
void QColumnView_MouseReleaseEventDefault(void* ptr, void* event);
void QColumnView_Reset(void* ptr);
void QColumnView_ResetDefault(void* ptr);
void QColumnView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QColumnView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QColumnView_ScrollToBottom(void* ptr);
void QColumnView_ScrollToBottomDefault(void* ptr);
void QColumnView_ScrollToTop(void* ptr);
void QColumnView_ScrollToTopDefault(void* ptr);
void QColumnView_SelectionChanged(void* ptr, void* selected, void* deselected);
void QColumnView_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
long long QColumnView_SelectionCommand(void* ptr, void* index, void* event);
long long QColumnView_SelectionCommandDefault(void* ptr, void* index, void* event);
void QColumnView_SetCurrentIndex(void* ptr, void* index);
void QColumnView_SetCurrentIndexDefault(void* ptr, void* index);
int QColumnView_SizeHintForColumn(void* ptr, int column);
int QColumnView_SizeHintForColumnDefault(void* ptr, int column);
int QColumnView_SizeHintForRow(void* ptr, int row);
int QColumnView_SizeHintForRowDefault(void* ptr, int row);
void QColumnView_StartDrag(void* ptr, long long supportedActions);
void QColumnView_StartDragDefault(void* ptr, long long supportedActions);
void QColumnView_Update(void* ptr, void* index);
void QColumnView_UpdateDefault(void* ptr, void* index);
void QColumnView_UpdateGeometries(void* ptr);
void QColumnView_UpdateGeometriesDefault(void* ptr);
void* QColumnView_ViewOptions(void* ptr);
void* QColumnView_ViewOptionsDefault(void* ptr);
void* QColumnView_ViewportSizeHint(void* ptr);
void* QColumnView_ViewportSizeHintDefault(void* ptr);
void QColumnView_PaintEvent(void* ptr, void* event);
void QColumnView_PaintEventDefault(void* ptr, void* event);
void QColumnView_ContextMenuEvent(void* ptr, void* e);
void QColumnView_ContextMenuEventDefault(void* ptr, void* e);
void* QColumnView_MinimumSizeHint(void* ptr);
void* QColumnView_MinimumSizeHintDefault(void* ptr);
void QColumnView_SetupViewport(void* ptr, void* viewport);
void QColumnView_SetupViewportDefault(void* ptr, void* viewport);
void QColumnView_WheelEvent(void* ptr, void* e);
void QColumnView_WheelEventDefault(void* ptr, void* e);
void QColumnView_ChangeEvent(void* ptr, void* ev);
void QColumnView_ChangeEventDefault(void* ptr, void* ev);
void QColumnView_ActionEvent(void* ptr, void* event);
void QColumnView_ActionEventDefault(void* ptr, void* event);
void QColumnView_EnterEvent(void* ptr, void* event);
void QColumnView_EnterEventDefault(void* ptr, void* event);
void QColumnView_HideEvent(void* ptr, void* event);
void QColumnView_HideEventDefault(void* ptr, void* event);
void QColumnView_LeaveEvent(void* ptr, void* event);
void QColumnView_LeaveEventDefault(void* ptr, void* event);
void QColumnView_MoveEvent(void* ptr, void* event);
void QColumnView_MoveEventDefault(void* ptr, void* event);
void QColumnView_SetEnabled(void* ptr, char vbo);
void QColumnView_SetEnabledDefault(void* ptr, char vbo);
void QColumnView_SetStyleSheet(void* ptr, char* styleSheet);
void QColumnView_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QColumnView_SetVisible(void* ptr, char visible);
void QColumnView_SetVisibleDefault(void* ptr, char visible);
void QColumnView_SetWindowModified(void* ptr, char vbo);
void QColumnView_SetWindowModifiedDefault(void* ptr, char vbo);
void QColumnView_SetWindowTitle(void* ptr, char* vqs);
void QColumnView_SetWindowTitleDefault(void* ptr, char* vqs);
void QColumnView_ShowEvent(void* ptr, void* event);
void QColumnView_ShowEventDefault(void* ptr, void* event);
char QColumnView_Close(void* ptr);
char QColumnView_CloseDefault(void* ptr);
void QColumnView_CloseEvent(void* ptr, void* event);
void QColumnView_CloseEventDefault(void* ptr, void* event);
char QColumnView_HasHeightForWidth(void* ptr);
char QColumnView_HasHeightForWidthDefault(void* ptr);
int QColumnView_HeightForWidth(void* ptr, int w);
int QColumnView_HeightForWidthDefault(void* ptr, int w);
void QColumnView_Hide(void* ptr);
void QColumnView_HideDefault(void* ptr);
void QColumnView_KeyReleaseEvent(void* ptr, void* event);
void QColumnView_KeyReleaseEventDefault(void* ptr, void* event);
void QColumnView_Lower(void* ptr);
void QColumnView_LowerDefault(void* ptr);
char QColumnView_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QColumnView_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QColumnView_Raise(void* ptr);
void QColumnView_RaiseDefault(void* ptr);
void QColumnView_Repaint(void* ptr);
void QColumnView_RepaintDefault(void* ptr);
void QColumnView_SetDisabled(void* ptr, char disable);
void QColumnView_SetDisabledDefault(void* ptr, char disable);
void QColumnView_SetFocus2(void* ptr);
void QColumnView_SetFocus2Default(void* ptr);
void QColumnView_SetHidden(void* ptr, char hidden);
void QColumnView_SetHiddenDefault(void* ptr, char hidden);
void QColumnView_Show(void* ptr);
void QColumnView_ShowDefault(void* ptr);
void QColumnView_ShowFullScreen(void* ptr);
void QColumnView_ShowFullScreenDefault(void* ptr);
void QColumnView_ShowMaximized(void* ptr);
void QColumnView_ShowMaximizedDefault(void* ptr);
void QColumnView_ShowMinimized(void* ptr);
void QColumnView_ShowMinimizedDefault(void* ptr);
void QColumnView_ShowNormal(void* ptr);
void QColumnView_ShowNormalDefault(void* ptr);
void QColumnView_TabletEvent(void* ptr, void* event);
void QColumnView_TabletEventDefault(void* ptr, void* event);
void QColumnView_UpdateMicroFocus(void* ptr);
void QColumnView_UpdateMicroFocusDefault(void* ptr);
void QColumnView_ChildEvent(void* ptr, void* event);
void QColumnView_ChildEventDefault(void* ptr, void* event);
void QColumnView_ConnectNotify(void* ptr, void* sign);
void QColumnView_ConnectNotifyDefault(void* ptr, void* sign);
void QColumnView_CustomEvent(void* ptr, void* event);
void QColumnView_CustomEventDefault(void* ptr, void* event);
void QColumnView_DeleteLater(void* ptr);
void QColumnView_DeleteLaterDefault(void* ptr);
void QColumnView_DisconnectNotify(void* ptr, void* sign);
void QColumnView_DisconnectNotifyDefault(void* ptr, void* sign);
char QColumnView_EventFilter(void* ptr, void* watched, void* event);
char QColumnView_EventFilterDefault(void* ptr, void* watched, void* event);
void* QColumnView_MetaObject(void* ptr);
void* QColumnView_MetaObjectDefault(void* ptr);
int QComboBox_Count(void* ptr);
void* QComboBox_CurrentData(void* ptr, int role);
int QComboBox_CurrentIndex(void* ptr);
struct QtWidgets_PackedString QComboBox_CurrentText(void* ptr);
char QComboBox_DuplicatesEnabled(void* ptr);
char QComboBox_HasFrame(void* ptr);
void* QComboBox_IconSize(void* ptr);
long long QComboBox_InsertPolicy(void* ptr);
char QComboBox_IsEditable(void* ptr);
int QComboBox_MaxCount(void* ptr);
int QComboBox_MaxVisibleItems(void* ptr);
int QComboBox_MinimumContentsLength(void* ptr);
int QComboBox_ModelColumn(void* ptr);
void QComboBox_SetCompleter(void* ptr, void* completer);
void QComboBox_SetCurrentIndex(void* ptr, int index);
void QComboBox_SetCurrentText(void* ptr, char* text);
void QComboBox_SetDuplicatesEnabled(void* ptr, char enable);
void QComboBox_SetEditable(void* ptr, char editable);
void QComboBox_SetFrame(void* ptr, char vbo);
void QComboBox_SetIconSize(void* ptr, void* size);
void QComboBox_SetInsertPolicy(void* ptr, long long policy);
void QComboBox_SetMaxCount(void* ptr, int max);
void QComboBox_SetMaxVisibleItems(void* ptr, int maxItems);
void QComboBox_SetMinimumContentsLength(void* ptr, int characters);
void QComboBox_SetModelColumn(void* ptr, int visibleColumn);
void QComboBox_SetSizeAdjustPolicy(void* ptr, long long policy);
void QComboBox_SetValidator(void* ptr, void* validator);
long long QComboBox_SizeAdjustPolicy(void* ptr);
void* QComboBox_NewQComboBox(void* parent);
void QComboBox_ConnectActivated2(void* ptr);
void QComboBox_DisconnectActivated2(void* ptr);
void QComboBox_Activated2(void* ptr, char* text);
void QComboBox_ConnectActivated(void* ptr);
void QComboBox_DisconnectActivated(void* ptr);
void QComboBox_Activated(void* ptr, int index);
void QComboBox_AddItem2(void* ptr, void* icon, char* text, void* userData);
void QComboBox_AddItem(void* ptr, char* text, void* userData);
void QComboBox_AddItems(void* ptr, char* texts);
void QComboBox_ChangeEvent(void* ptr, void* e);
void QComboBox_ChangeEventDefault(void* ptr, void* e);
void QComboBox_Clear(void* ptr);
void QComboBox_ClearEditText(void* ptr);
void* QComboBox_Completer(void* ptr);
void QComboBox_ContextMenuEvent(void* ptr, void* e);
void QComboBox_ContextMenuEventDefault(void* ptr, void* e);
void QComboBox_ConnectCurrentIndexChanged2(void* ptr);
void QComboBox_DisconnectCurrentIndexChanged2(void* ptr);
void QComboBox_CurrentIndexChanged2(void* ptr, char* text);
void QComboBox_ConnectCurrentIndexChanged(void* ptr);
void QComboBox_DisconnectCurrentIndexChanged(void* ptr);
void QComboBox_CurrentIndexChanged(void* ptr, int index);
void QComboBox_ConnectCurrentTextChanged(void* ptr);
void QComboBox_DisconnectCurrentTextChanged(void* ptr);
void QComboBox_CurrentTextChanged(void* ptr, char* text);
void QComboBox_ConnectEditTextChanged(void* ptr);
void QComboBox_DisconnectEditTextChanged(void* ptr);
void QComboBox_EditTextChanged(void* ptr, char* text);
char QComboBox_Event(void* ptr, void* event);
int QComboBox_FindData(void* ptr, void* data, int role, long long flags);
int QComboBox_FindText(void* ptr, char* text, long long flags);
void QComboBox_FocusInEvent(void* ptr, void* e);
void QComboBox_FocusInEventDefault(void* ptr, void* e);
void QComboBox_FocusOutEvent(void* ptr, void* e);
void QComboBox_FocusOutEventDefault(void* ptr, void* e);
void QComboBox_HideEvent(void* ptr, void* e);
void QComboBox_HideEventDefault(void* ptr, void* e);
void QComboBox_HidePopup(void* ptr);
void QComboBox_HidePopupDefault(void* ptr);
void QComboBox_ConnectHighlighted2(void* ptr);
void QComboBox_DisconnectHighlighted2(void* ptr);
void QComboBox_Highlighted2(void* ptr, char* text);
void QComboBox_ConnectHighlighted(void* ptr);
void QComboBox_DisconnectHighlighted(void* ptr);
void QComboBox_Highlighted(void* ptr, int index);
void QComboBox_InitStyleOption(void* ptr, void* option);
void QComboBox_InputMethodEvent(void* ptr, void* e);
void QComboBox_InputMethodEventDefault(void* ptr, void* e);
void* QComboBox_InputMethodQuery(void* ptr, long long query);
void* QComboBox_InputMethodQueryDefault(void* ptr, long long query);
void QComboBox_InsertItem2(void* ptr, int index, void* icon, char* text, void* userData);
void QComboBox_InsertItem(void* ptr, int index, char* text, void* userData);
void QComboBox_InsertItems(void* ptr, int index, char* list);
void QComboBox_InsertSeparator(void* ptr, int index);
void* QComboBox_ItemData(void* ptr, int index, int role);
void* QComboBox_ItemDelegate(void* ptr);
void* QComboBox_ItemIcon(void* ptr, int index);
struct QtWidgets_PackedString QComboBox_ItemText(void* ptr, int index);
void QComboBox_KeyPressEvent(void* ptr, void* e);
void QComboBox_KeyPressEventDefault(void* ptr, void* e);
void QComboBox_KeyReleaseEvent(void* ptr, void* e);
void QComboBox_KeyReleaseEventDefault(void* ptr, void* e);
void* QComboBox_LineEdit(void* ptr);
void* QComboBox_MinimumSizeHint(void* ptr);
void* QComboBox_MinimumSizeHintDefault(void* ptr);
void* QComboBox_Model(void* ptr);
void QComboBox_MousePressEvent(void* ptr, void* e);
void QComboBox_MousePressEventDefault(void* ptr, void* e);
void QComboBox_MouseReleaseEvent(void* ptr, void* e);
void QComboBox_MouseReleaseEventDefault(void* ptr, void* e);
void QComboBox_PaintEvent(void* ptr, void* e);
void QComboBox_PaintEventDefault(void* ptr, void* e);
void QComboBox_RemoveItem(void* ptr, int index);
void QComboBox_ResizeEvent(void* ptr, void* e);
void QComboBox_ResizeEventDefault(void* ptr, void* e);
void* QComboBox_RootModelIndex(void* ptr);
void QComboBox_SetEditText(void* ptr, char* text);
void QComboBox_SetItemData(void* ptr, int index, void* value, int role);
void QComboBox_SetItemDelegate(void* ptr, void* delegate);
void QComboBox_SetItemIcon(void* ptr, int index, void* icon);
void QComboBox_SetItemText(void* ptr, int index, char* text);
void QComboBox_SetLineEdit(void* ptr, void* edit);
void QComboBox_SetModel(void* ptr, void* model);
void QComboBox_SetRootModelIndex(void* ptr, void* index);
void QComboBox_SetView(void* ptr, void* itemView);
void QComboBox_ShowEvent(void* ptr, void* e);
void QComboBox_ShowEventDefault(void* ptr, void* e);
void QComboBox_ShowPopup(void* ptr);
void QComboBox_ShowPopupDefault(void* ptr);
void* QComboBox_SizeHint(void* ptr);
void* QComboBox_SizeHintDefault(void* ptr);
void* QComboBox_Validator(void* ptr);
void* QComboBox_View(void* ptr);
void QComboBox_WheelEvent(void* ptr, void* e);
void QComboBox_WheelEventDefault(void* ptr, void* e);
void QComboBox_DestroyQComboBox(void* ptr);
void QComboBox_ActionEvent(void* ptr, void* event);
void QComboBox_ActionEventDefault(void* ptr, void* event);
void QComboBox_DragEnterEvent(void* ptr, void* event);
void QComboBox_DragEnterEventDefault(void* ptr, void* event);
void QComboBox_DragLeaveEvent(void* ptr, void* event);
void QComboBox_DragLeaveEventDefault(void* ptr, void* event);
void QComboBox_DragMoveEvent(void* ptr, void* event);
void QComboBox_DragMoveEventDefault(void* ptr, void* event);
void QComboBox_DropEvent(void* ptr, void* event);
void QComboBox_DropEventDefault(void* ptr, void* event);
void QComboBox_EnterEvent(void* ptr, void* event);
void QComboBox_EnterEventDefault(void* ptr, void* event);
void QComboBox_LeaveEvent(void* ptr, void* event);
void QComboBox_LeaveEventDefault(void* ptr, void* event);
void QComboBox_MoveEvent(void* ptr, void* event);
void QComboBox_MoveEventDefault(void* ptr, void* event);
void QComboBox_SetEnabled(void* ptr, char vbo);
void QComboBox_SetEnabledDefault(void* ptr, char vbo);
void QComboBox_SetStyleSheet(void* ptr, char* styleSheet);
void QComboBox_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QComboBox_SetVisible(void* ptr, char visible);
void QComboBox_SetVisibleDefault(void* ptr, char visible);
void QComboBox_SetWindowModified(void* ptr, char vbo);
void QComboBox_SetWindowModifiedDefault(void* ptr, char vbo);
void QComboBox_SetWindowTitle(void* ptr, char* vqs);
void QComboBox_SetWindowTitleDefault(void* ptr, char* vqs);
char QComboBox_Close(void* ptr);
char QComboBox_CloseDefault(void* ptr);
void QComboBox_CloseEvent(void* ptr, void* event);
void QComboBox_CloseEventDefault(void* ptr, void* event);
char QComboBox_FocusNextPrevChild(void* ptr, char next);
char QComboBox_FocusNextPrevChildDefault(void* ptr, char next);
char QComboBox_HasHeightForWidth(void* ptr);
char QComboBox_HasHeightForWidthDefault(void* ptr);
int QComboBox_HeightForWidth(void* ptr, int w);
int QComboBox_HeightForWidthDefault(void* ptr, int w);
void QComboBox_Hide(void* ptr);
void QComboBox_HideDefault(void* ptr);
void QComboBox_Lower(void* ptr);
void QComboBox_LowerDefault(void* ptr);
void QComboBox_MouseDoubleClickEvent(void* ptr, void* event);
void QComboBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QComboBox_MouseMoveEvent(void* ptr, void* event);
void QComboBox_MouseMoveEventDefault(void* ptr, void* event);
char QComboBox_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QComboBox_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QComboBox_Raise(void* ptr);
void QComboBox_RaiseDefault(void* ptr);
void QComboBox_Repaint(void* ptr);
void QComboBox_RepaintDefault(void* ptr);
void QComboBox_SetDisabled(void* ptr, char disable);
void QComboBox_SetDisabledDefault(void* ptr, char disable);
void QComboBox_SetFocus2(void* ptr);
void QComboBox_SetFocus2Default(void* ptr);
void QComboBox_SetHidden(void* ptr, char hidden);
void QComboBox_SetHiddenDefault(void* ptr, char hidden);
void QComboBox_Show(void* ptr);
void QComboBox_ShowDefault(void* ptr);
void QComboBox_ShowFullScreen(void* ptr);
void QComboBox_ShowFullScreenDefault(void* ptr);
void QComboBox_ShowMaximized(void* ptr);
void QComboBox_ShowMaximizedDefault(void* ptr);
void QComboBox_ShowMinimized(void* ptr);
void QComboBox_ShowMinimizedDefault(void* ptr);
void QComboBox_ShowNormal(void* ptr);
void QComboBox_ShowNormalDefault(void* ptr);
void QComboBox_TabletEvent(void* ptr, void* event);
void QComboBox_TabletEventDefault(void* ptr, void* event);
void QComboBox_Update(void* ptr);
void QComboBox_UpdateDefault(void* ptr);
void QComboBox_UpdateMicroFocus(void* ptr);
void QComboBox_UpdateMicroFocusDefault(void* ptr);
void QComboBox_TimerEvent(void* ptr, void* event);
void QComboBox_TimerEventDefault(void* ptr, void* event);
void QComboBox_ChildEvent(void* ptr, void* event);
void QComboBox_ChildEventDefault(void* ptr, void* event);
void QComboBox_ConnectNotify(void* ptr, void* sign);
void QComboBox_ConnectNotifyDefault(void* ptr, void* sign);
void QComboBox_CustomEvent(void* ptr, void* event);
void QComboBox_CustomEventDefault(void* ptr, void* event);
void QComboBox_DeleteLater(void* ptr);
void QComboBox_DeleteLaterDefault(void* ptr);
void QComboBox_DisconnectNotify(void* ptr, void* sign);
void QComboBox_DisconnectNotifyDefault(void* ptr, void* sign);
char QComboBox_EventFilter(void* ptr, void* watched, void* event);
char QComboBox_EventFilterDefault(void* ptr, void* watched, void* event);
void* QComboBox_MetaObject(void* ptr);
void* QComboBox_MetaObjectDefault(void* ptr);
struct QtWidgets_PackedString QCommandLinkButton_Description(void* ptr);
void QCommandLinkButton_SetDescription(void* ptr, char* description);
void* QCommandLinkButton_NewQCommandLinkButton(void* parent);
void* QCommandLinkButton_NewQCommandLinkButton2(char* text, void* parent);
void* QCommandLinkButton_NewQCommandLinkButton3(char* text, char* description, void* parent);
char QCommandLinkButton_Event(void* ptr, void* e);
int QCommandLinkButton_HeightForWidth(void* ptr, int width);
int QCommandLinkButton_HeightForWidthDefault(void* ptr, int width);
void* QCommandLinkButton_MinimumSizeHint(void* ptr);
void* QCommandLinkButton_MinimumSizeHintDefault(void* ptr);
void QCommandLinkButton_PaintEvent(void* ptr, void* vqp);
void QCommandLinkButton_PaintEventDefault(void* ptr, void* vqp);
void* QCommandLinkButton_SizeHint(void* ptr);
void* QCommandLinkButton_SizeHintDefault(void* ptr);
void QCommandLinkButton_DestroyQCommandLinkButton(void* ptr);
void QCommandLinkButton_FocusInEvent(void* ptr, void* e);
void QCommandLinkButton_FocusInEventDefault(void* ptr, void* e);
void QCommandLinkButton_FocusOutEvent(void* ptr, void* e);
void QCommandLinkButton_FocusOutEventDefault(void* ptr, void* e);
char QCommandLinkButton_HitButton(void* ptr, void* pos);
char QCommandLinkButton_HitButtonDefault(void* ptr, void* pos);
void QCommandLinkButton_KeyPressEvent(void* ptr, void* e);
void QCommandLinkButton_KeyPressEventDefault(void* ptr, void* e);
void QCommandLinkButton_ShowMenu(void* ptr);
void QCommandLinkButton_ShowMenuDefault(void* ptr);
void QCommandLinkButton_SetChecked(void* ptr, char vbo);
void QCommandLinkButton_SetCheckedDefault(void* ptr, char vbo);
void QCommandLinkButton_SetIconSize(void* ptr, void* size);
void QCommandLinkButton_SetIconSizeDefault(void* ptr, void* size);
void QCommandLinkButton_Toggle(void* ptr);
void QCommandLinkButton_ToggleDefault(void* ptr);
void QCommandLinkButton_AnimateClick(void* ptr, int msec);
void QCommandLinkButton_AnimateClickDefault(void* ptr, int msec);
void QCommandLinkButton_ChangeEvent(void* ptr, void* e);
void QCommandLinkButton_ChangeEventDefault(void* ptr, void* e);
void QCommandLinkButton_CheckStateSet(void* ptr);
void QCommandLinkButton_CheckStateSetDefault(void* ptr);
void QCommandLinkButton_Click(void* ptr);
void QCommandLinkButton_ClickDefault(void* ptr);
void QCommandLinkButton_KeyReleaseEvent(void* ptr, void* e);
void QCommandLinkButton_KeyReleaseEventDefault(void* ptr, void* e);
void QCommandLinkButton_MouseMoveEvent(void* ptr, void* e);
void QCommandLinkButton_MouseMoveEventDefault(void* ptr, void* e);
void QCommandLinkButton_MousePressEvent(void* ptr, void* e);
void QCommandLinkButton_MousePressEventDefault(void* ptr, void* e);
void QCommandLinkButton_MouseReleaseEvent(void* ptr, void* e);
void QCommandLinkButton_MouseReleaseEventDefault(void* ptr, void* e);
void QCommandLinkButton_NextCheckState(void* ptr);
void QCommandLinkButton_NextCheckStateDefault(void* ptr);
void QCommandLinkButton_ActionEvent(void* ptr, void* event);
void QCommandLinkButton_ActionEventDefault(void* ptr, void* event);
void QCommandLinkButton_DragEnterEvent(void* ptr, void* event);
void QCommandLinkButton_DragEnterEventDefault(void* ptr, void* event);
void QCommandLinkButton_DragLeaveEvent(void* ptr, void* event);
void QCommandLinkButton_DragLeaveEventDefault(void* ptr, void* event);
void QCommandLinkButton_DragMoveEvent(void* ptr, void* event);
void QCommandLinkButton_DragMoveEventDefault(void* ptr, void* event);
void QCommandLinkButton_DropEvent(void* ptr, void* event);
void QCommandLinkButton_DropEventDefault(void* ptr, void* event);
void QCommandLinkButton_EnterEvent(void* ptr, void* event);
void QCommandLinkButton_EnterEventDefault(void* ptr, void* event);
void QCommandLinkButton_HideEvent(void* ptr, void* event);
void QCommandLinkButton_HideEventDefault(void* ptr, void* event);
void QCommandLinkButton_LeaveEvent(void* ptr, void* event);
void QCommandLinkButton_LeaveEventDefault(void* ptr, void* event);
void QCommandLinkButton_MoveEvent(void* ptr, void* event);
void QCommandLinkButton_MoveEventDefault(void* ptr, void* event);
void QCommandLinkButton_SetEnabled(void* ptr, char vbo);
void QCommandLinkButton_SetEnabledDefault(void* ptr, char vbo);
void QCommandLinkButton_SetStyleSheet(void* ptr, char* styleSheet);
void QCommandLinkButton_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QCommandLinkButton_SetVisible(void* ptr, char visible);
void QCommandLinkButton_SetVisibleDefault(void* ptr, char visible);
void QCommandLinkButton_SetWindowModified(void* ptr, char vbo);
void QCommandLinkButton_SetWindowModifiedDefault(void* ptr, char vbo);
void QCommandLinkButton_SetWindowTitle(void* ptr, char* vqs);
void QCommandLinkButton_SetWindowTitleDefault(void* ptr, char* vqs);
void QCommandLinkButton_ShowEvent(void* ptr, void* event);
void QCommandLinkButton_ShowEventDefault(void* ptr, void* event);
char QCommandLinkButton_Close(void* ptr);
char QCommandLinkButton_CloseDefault(void* ptr);
void QCommandLinkButton_CloseEvent(void* ptr, void* event);
void QCommandLinkButton_CloseEventDefault(void* ptr, void* event);
void QCommandLinkButton_ContextMenuEvent(void* ptr, void* event);
void QCommandLinkButton_ContextMenuEventDefault(void* ptr, void* event);
char QCommandLinkButton_FocusNextPrevChild(void* ptr, char next);
char QCommandLinkButton_FocusNextPrevChildDefault(void* ptr, char next);
char QCommandLinkButton_HasHeightForWidth(void* ptr);
char QCommandLinkButton_HasHeightForWidthDefault(void* ptr);
void QCommandLinkButton_Hide(void* ptr);
void QCommandLinkButton_HideDefault(void* ptr);
void QCommandLinkButton_InputMethodEvent(void* ptr, void* event);
void QCommandLinkButton_InputMethodEventDefault(void* ptr, void* event);
void* QCommandLinkButton_InputMethodQuery(void* ptr, long long query);
void* QCommandLinkButton_InputMethodQueryDefault(void* ptr, long long query);
void QCommandLinkButton_Lower(void* ptr);
void QCommandLinkButton_LowerDefault(void* ptr);
void QCommandLinkButton_MouseDoubleClickEvent(void* ptr, void* event);
void QCommandLinkButton_MouseDoubleClickEventDefault(void* ptr, void* event);
char QCommandLinkButton_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QCommandLinkButton_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QCommandLinkButton_Raise(void* ptr);
void QCommandLinkButton_RaiseDefault(void* ptr);
void QCommandLinkButton_Repaint(void* ptr);
void QCommandLinkButton_RepaintDefault(void* ptr);
void QCommandLinkButton_ResizeEvent(void* ptr, void* event);
void QCommandLinkButton_ResizeEventDefault(void* ptr, void* event);
void QCommandLinkButton_SetDisabled(void* ptr, char disable);
void QCommandLinkButton_SetDisabledDefault(void* ptr, char disable);
void QCommandLinkButton_SetFocus2(void* ptr);
void QCommandLinkButton_SetFocus2Default(void* ptr);
void QCommandLinkButton_SetHidden(void* ptr, char hidden);
void QCommandLinkButton_SetHiddenDefault(void* ptr, char hidden);
void QCommandLinkButton_Show(void* ptr);
void QCommandLinkButton_ShowDefault(void* ptr);
void QCommandLinkButton_ShowFullScreen(void* ptr);
void QCommandLinkButton_ShowFullScreenDefault(void* ptr);
void QCommandLinkButton_ShowMaximized(void* ptr);
void QCommandLinkButton_ShowMaximizedDefault(void* ptr);
void QCommandLinkButton_ShowMinimized(void* ptr);
void QCommandLinkButton_ShowMinimizedDefault(void* ptr);
void QCommandLinkButton_ShowNormal(void* ptr);
void QCommandLinkButton_ShowNormalDefault(void* ptr);
void QCommandLinkButton_TabletEvent(void* ptr, void* event);
void QCommandLinkButton_TabletEventDefault(void* ptr, void* event);
void QCommandLinkButton_Update(void* ptr);
void QCommandLinkButton_UpdateDefault(void* ptr);
void QCommandLinkButton_UpdateMicroFocus(void* ptr);
void QCommandLinkButton_UpdateMicroFocusDefault(void* ptr);
void QCommandLinkButton_WheelEvent(void* ptr, void* event);
void QCommandLinkButton_WheelEventDefault(void* ptr, void* event);
void QCommandLinkButton_ChildEvent(void* ptr, void* event);
void QCommandLinkButton_ChildEventDefault(void* ptr, void* event);
void QCommandLinkButton_ConnectNotify(void* ptr, void* sign);
void QCommandLinkButton_ConnectNotifyDefault(void* ptr, void* sign);
void QCommandLinkButton_CustomEvent(void* ptr, void* event);
void QCommandLinkButton_CustomEventDefault(void* ptr, void* event);
void QCommandLinkButton_DeleteLater(void* ptr);
void QCommandLinkButton_DeleteLaterDefault(void* ptr);
void QCommandLinkButton_DisconnectNotify(void* ptr, void* sign);
void QCommandLinkButton_DisconnectNotifyDefault(void* ptr, void* sign);
char QCommandLinkButton_EventFilter(void* ptr, void* watched, void* event);
char QCommandLinkButton_EventFilterDefault(void* ptr, void* watched, void* event);
void* QCommandLinkButton_MetaObject(void* ptr);
void* QCommandLinkButton_MetaObjectDefault(void* ptr);
void* QCommonStyle_NewQCommonStyle();
void QCommonStyle_DrawComplexControl(void* ptr, long long cc, void* opt, void* p, void* widget);
void QCommonStyle_DrawComplexControlDefault(void* ptr, long long cc, void* opt, void* p, void* widget);
void QCommonStyle_DrawControl(void* ptr, long long element, void* opt, void* p, void* widget);
void QCommonStyle_DrawControlDefault(void* ptr, long long element, void* opt, void* p, void* widget);
void QCommonStyle_DrawPrimitive(void* ptr, long long pe, void* opt, void* p, void* widget);
void QCommonStyle_DrawPrimitiveDefault(void* ptr, long long pe, void* opt, void* p, void* widget);
void* QCommonStyle_GeneratedIconPixmap(void* ptr, long long iconMode, void* pixmap, void* opt);
void* QCommonStyle_GeneratedIconPixmapDefault(void* ptr, long long iconMode, void* pixmap, void* opt);
long long QCommonStyle_HitTestComplexControl(void* ptr, long long cc, void* opt, void* pt, void* widget);
long long QCommonStyle_HitTestComplexControlDefault(void* ptr, long long cc, void* opt, void* pt, void* widget);
int QCommonStyle_LayoutSpacing(void* ptr, long long control1, long long control2, long long orientation, void* option, void* widget);
int QCommonStyle_LayoutSpacingDefault(void* ptr, long long control1, long long control2, long long orientation, void* option, void* widget);
int QCommonStyle_PixelMetric(void* ptr, long long m, void* opt, void* widget);
int QCommonStyle_PixelMetricDefault(void* ptr, long long m, void* opt, void* widget);
void QCommonStyle_Polish2(void* ptr, void* app);
void QCommonStyle_Polish2Default(void* ptr, void* app);
void QCommonStyle_Polish(void* ptr, void* pal);
void QCommonStyle_PolishDefault(void* ptr, void* pal);
void QCommonStyle_Polish3(void* ptr, void* widget);
void QCommonStyle_Polish3Default(void* ptr, void* widget);
void* QCommonStyle_SizeFromContents(void* ptr, long long ct, void* opt, void* csz, void* widget);
void* QCommonStyle_SizeFromContentsDefault(void* ptr, long long ct, void* opt, void* csz, void* widget);
void* QCommonStyle_StandardPixmap(void* ptr, long long sp, void* option, void* widget);
void* QCommonStyle_StandardPixmapDefault(void* ptr, long long sp, void* option, void* widget);
int QCommonStyle_StyleHint(void* ptr, long long sh, void* opt, void* widget, void* hret);
int QCommonStyle_StyleHintDefault(void* ptr, long long sh, void* opt, void* widget, void* hret);
void* QCommonStyle_SubControlRect(void* ptr, long long cc, void* opt, long long sc, void* widget);
void* QCommonStyle_SubControlRectDefault(void* ptr, long long cc, void* opt, long long sc, void* widget);
void* QCommonStyle_SubElementRect(void* ptr, long long sr, void* opt, void* widget);
void* QCommonStyle_SubElementRectDefault(void* ptr, long long sr, void* opt, void* widget);
void QCommonStyle_Unpolish2(void* ptr, void* application);
void QCommonStyle_Unpolish2Default(void* ptr, void* application);
void QCommonStyle_Unpolish(void* ptr, void* widget);
void QCommonStyle_UnpolishDefault(void* ptr, void* widget);
void QCommonStyle_DestroyQCommonStyle(void* ptr);
void QCommonStyle_DrawItemPixmap(void* ptr, void* painter, void* rectangle, int alignment, void* pixmap);
void QCommonStyle_DrawItemPixmapDefault(void* ptr, void* painter, void* rectangle, int alignment, void* pixmap);
void QCommonStyle_DrawItemText(void* ptr, void* painter, void* rectangle, int alignment, void* palette, char enabled, char* text, long long textRole);
void QCommonStyle_DrawItemTextDefault(void* ptr, void* painter, void* rectangle, int alignment, void* palette, char enabled, char* text, long long textRole);
void* QCommonStyle_ItemPixmapRect(void* ptr, void* rectangle, int alignment, void* pixmap);
void* QCommonStyle_ItemPixmapRectDefault(void* ptr, void* rectangle, int alignment, void* pixmap);
void* QCommonStyle_ItemTextRect(void* ptr, void* metrics, void* rectangle, int alignment, char enabled, char* text);
void* QCommonStyle_ItemTextRectDefault(void* ptr, void* metrics, void* rectangle, int alignment, char enabled, char* text);
void* QCommonStyle_StandardIcon(void* ptr, long long standardIcon, void* option, void* widget);
void* QCommonStyle_StandardIconDefault(void* ptr, long long standardIcon, void* option, void* widget);
void* QCommonStyle_StandardPalette(void* ptr);
void* QCommonStyle_StandardPaletteDefault(void* ptr);
void QCommonStyle_TimerEvent(void* ptr, void* event);
void QCommonStyle_TimerEventDefault(void* ptr, void* event);
void QCommonStyle_ChildEvent(void* ptr, void* event);
void QCommonStyle_ChildEventDefault(void* ptr, void* event);
void QCommonStyle_ConnectNotify(void* ptr, void* sign);
void QCommonStyle_ConnectNotifyDefault(void* ptr, void* sign);
void QCommonStyle_CustomEvent(void* ptr, void* event);
void QCommonStyle_CustomEventDefault(void* ptr, void* event);
void QCommonStyle_DeleteLater(void* ptr);
void QCommonStyle_DeleteLaterDefault(void* ptr);
void QCommonStyle_DisconnectNotify(void* ptr, void* sign);
void QCommonStyle_DisconnectNotifyDefault(void* ptr, void* sign);
char QCommonStyle_Event(void* ptr, void* e);
char QCommonStyle_EventDefault(void* ptr, void* e);
char QCommonStyle_EventFilter(void* ptr, void* watched, void* event);
char QCommonStyle_EventFilterDefault(void* ptr, void* watched, void* event);
void* QCommonStyle_MetaObject(void* ptr);
void* QCommonStyle_MetaObjectDefault(void* ptr);
long long QCompleter_CaseSensitivity(void* ptr);
int QCompleter_CompletionColumn(void* ptr);
long long QCompleter_CompletionMode(void* ptr);
struct QtWidgets_PackedString QCompleter_CompletionPrefix(void* ptr);
int QCompleter_CompletionRole(void* ptr);
long long QCompleter_FilterMode(void* ptr);
int QCompleter_MaxVisibleItems(void* ptr);
long long QCompleter_ModelSorting(void* ptr);
void QCompleter_SetCaseSensitivity(void* ptr, long long caseSensitivity);
void QCompleter_SetCompletionColumn(void* ptr, int column);
void QCompleter_SetCompletionMode(void* ptr, long long mode);
void QCompleter_SetCompletionPrefix(void* ptr, char* prefix);
void QCompleter_SetCompletionRole(void* ptr, int role);
void QCompleter_SetFilterMode(void* ptr, long long filterMode);
void QCompleter_SetMaxVisibleItems(void* ptr, int maxItems);
void QCompleter_SetModelSorting(void* ptr, long long sorting);
void QCompleter_SetWrapAround(void* ptr, char wrap);
char QCompleter_WrapAround(void* ptr);
void* QCompleter_NewQCompleter2(void* model, void* parent);
void* QCompleter_NewQCompleter(void* parent);
void* QCompleter_NewQCompleter3(char* list, void* parent);
void QCompleter_ConnectActivated2(void* ptr);
void QCompleter_DisconnectActivated2(void* ptr);
void QCompleter_Activated2(void* ptr, void* index);
void QCompleter_ConnectActivated(void* ptr);
void QCompleter_DisconnectActivated(void* ptr);
void QCompleter_Activated(void* ptr, char* text);
void QCompleter_Complete(void* ptr, void* rect);
int QCompleter_CompletionCount(void* ptr);
void* QCompleter_CompletionModel(void* ptr);
struct QtWidgets_PackedString QCompleter_CurrentCompletion(void* ptr);
void* QCompleter_CurrentIndex(void* ptr);
int QCompleter_CurrentRow(void* ptr);
char QCompleter_Event(void* ptr, void* ev);
char QCompleter_EventFilter(void* ptr, void* o, void* e);
void QCompleter_ConnectHighlighted2(void* ptr);
void QCompleter_DisconnectHighlighted2(void* ptr);
void QCompleter_Highlighted2(void* ptr, void* index);
void QCompleter_ConnectHighlighted(void* ptr);
void QCompleter_DisconnectHighlighted(void* ptr);
void QCompleter_Highlighted(void* ptr, char* text);
void* QCompleter_Model(void* ptr);
struct QtWidgets_PackedString QCompleter_PathFromIndex(void* ptr, void* index);
struct QtWidgets_PackedString QCompleter_PathFromIndexDefault(void* ptr, void* index);
void* QCompleter_Popup(void* ptr);
char QCompleter_SetCurrentRow(void* ptr, int row);
void QCompleter_SetModel(void* ptr, void* model);
void QCompleter_SetPopup(void* ptr, void* popup);
void QCompleter_SetWidget(void* ptr, void* widget);
struct QtWidgets_PackedString QCompleter_SplitPath(void* ptr, char* path);
struct QtWidgets_PackedString QCompleter_SplitPathDefault(void* ptr, char* path);
void* QCompleter_Widget(void* ptr);
void QCompleter_DestroyQCompleter(void* ptr);
void QCompleter_TimerEvent(void* ptr, void* event);
void QCompleter_TimerEventDefault(void* ptr, void* event);
void QCompleter_ChildEvent(void* ptr, void* event);
void QCompleter_ChildEventDefault(void* ptr, void* event);
void QCompleter_ConnectNotify(void* ptr, void* sign);
void QCompleter_ConnectNotifyDefault(void* ptr, void* sign);
void QCompleter_CustomEvent(void* ptr, void* event);
void QCompleter_CustomEventDefault(void* ptr, void* event);
void QCompleter_DeleteLater(void* ptr);
void QCompleter_DeleteLaterDefault(void* ptr);
void QCompleter_DisconnectNotify(void* ptr, void* sign);
void QCompleter_DisconnectNotifyDefault(void* ptr, void* sign);
void* QCompleter_MetaObject(void* ptr);
void* QCompleter_MetaObjectDefault(void* ptr);
int QDataWidgetMapper_CurrentIndex(void* ptr);
long long QDataWidgetMapper_Orientation(void* ptr);
void QDataWidgetMapper_SetCurrentIndex(void* ptr, int index);
void QDataWidgetMapper_SetCurrentIndexDefault(void* ptr, int index);
void QDataWidgetMapper_SetOrientation(void* ptr, long long aOrientation);
void QDataWidgetMapper_SetSubmitPolicy(void* ptr, long long policy);
long long QDataWidgetMapper_SubmitPolicy(void* ptr);
void* QDataWidgetMapper_NewQDataWidgetMapper(void* parent);
void QDataWidgetMapper_AddMapping(void* ptr, void* widget, int section);
void QDataWidgetMapper_AddMapping2(void* ptr, void* widget, int section, void* propertyName);
void QDataWidgetMapper_ClearMapping(void* ptr);
void QDataWidgetMapper_ConnectCurrentIndexChanged(void* ptr);
void QDataWidgetMapper_DisconnectCurrentIndexChanged(void* ptr);
void QDataWidgetMapper_CurrentIndexChanged(void* ptr, int index);
void* QDataWidgetMapper_ItemDelegate(void* ptr);
void* QDataWidgetMapper_MappedPropertyName(void* ptr, void* widget);
int QDataWidgetMapper_MappedSection(void* ptr, void* widget);
void* QDataWidgetMapper_MappedWidgetAt(void* ptr, int section);
void* QDataWidgetMapper_Model(void* ptr);
void QDataWidgetMapper_RemoveMapping(void* ptr, void* widget);
void QDataWidgetMapper_Revert(void* ptr);
void* QDataWidgetMapper_RootIndex(void* ptr);
void QDataWidgetMapper_SetCurrentModelIndex(void* ptr, void* index);
void QDataWidgetMapper_SetItemDelegate(void* ptr, void* delegate);
void QDataWidgetMapper_SetModel(void* ptr, void* model);
void QDataWidgetMapper_SetRootIndex(void* ptr, void* index);
char QDataWidgetMapper_Submit(void* ptr);
void QDataWidgetMapper_ToFirst(void* ptr);
void QDataWidgetMapper_ToLast(void* ptr);
void QDataWidgetMapper_ToNext(void* ptr);
void QDataWidgetMapper_ToPrevious(void* ptr);
void QDataWidgetMapper_DestroyQDataWidgetMapper(void* ptr);
void QDataWidgetMapper_TimerEvent(void* ptr, void* event);
void QDataWidgetMapper_TimerEventDefault(void* ptr, void* event);
void QDataWidgetMapper_ChildEvent(void* ptr, void* event);
void QDataWidgetMapper_ChildEventDefault(void* ptr, void* event);
void QDataWidgetMapper_ConnectNotify(void* ptr, void* sign);
void QDataWidgetMapper_ConnectNotifyDefault(void* ptr, void* sign);
void QDataWidgetMapper_CustomEvent(void* ptr, void* event);
void QDataWidgetMapper_CustomEventDefault(void* ptr, void* event);
void QDataWidgetMapper_DeleteLater(void* ptr);
void QDataWidgetMapper_DeleteLaterDefault(void* ptr);
void QDataWidgetMapper_DisconnectNotify(void* ptr, void* sign);
void QDataWidgetMapper_DisconnectNotifyDefault(void* ptr, void* sign);
char QDataWidgetMapper_Event(void* ptr, void* e);
char QDataWidgetMapper_EventDefault(void* ptr, void* e);
char QDataWidgetMapper_EventFilter(void* ptr, void* watched, void* event);
char QDataWidgetMapper_EventFilterDefault(void* ptr, void* watched, void* event);
void* QDataWidgetMapper_MetaObject(void* ptr);
void* QDataWidgetMapper_MetaObjectDefault(void* ptr);
void* QDateEdit_NewQDateEdit(void* parent);
void* QDateEdit_NewQDateEdit2(void* date, void* parent);
void QDateEdit_DestroyQDateEdit(void* ptr);
void QDateEdit_SetDate(void* ptr, void* date);
void QDateEdit_SetDateDefault(void* ptr, void* date);
void QDateEdit_SetDateTime(void* ptr, void* dateTime);
void QDateEdit_SetDateTimeDefault(void* ptr, void* dateTime);
void QDateEdit_SetTime(void* ptr, void* time);
void QDateEdit_SetTimeDefault(void* ptr, void* time);
void QDateEdit_Clear(void* ptr);
void QDateEdit_ClearDefault(void* ptr);
void* QDateEdit_DateTimeFromText(void* ptr, char* text);
void* QDateEdit_DateTimeFromTextDefault(void* ptr, char* text);
void QDateEdit_Fixup(void* ptr, char* input);
void QDateEdit_FixupDefault(void* ptr, char* input);
void QDateEdit_FocusInEvent(void* ptr, void* event);
void QDateEdit_FocusInEventDefault(void* ptr, void* event);
char QDateEdit_FocusNextPrevChild(void* ptr, char next);
char QDateEdit_FocusNextPrevChildDefault(void* ptr, char next);
void QDateEdit_KeyPressEvent(void* ptr, void* event);
void QDateEdit_KeyPressEventDefault(void* ptr, void* event);
void QDateEdit_MousePressEvent(void* ptr, void* event);
void QDateEdit_MousePressEventDefault(void* ptr, void* event);
void QDateEdit_PaintEvent(void* ptr, void* event);
void QDateEdit_PaintEventDefault(void* ptr, void* event);
void* QDateEdit_SizeHint(void* ptr);
void* QDateEdit_SizeHintDefault(void* ptr);
void QDateEdit_StepBy(void* ptr, int steps);
void QDateEdit_StepByDefault(void* ptr, int steps);
long long QDateEdit_StepEnabled(void* ptr);
long long QDateEdit_StepEnabledDefault(void* ptr);
struct QtWidgets_PackedString QDateEdit_TextFromDateTime(void* ptr, void* dateTime);
struct QtWidgets_PackedString QDateEdit_TextFromDateTimeDefault(void* ptr, void* dateTime);
long long QDateEdit_Validate(void* ptr, char* text, int pos);
long long QDateEdit_ValidateDefault(void* ptr, char* text, int pos);
void QDateEdit_WheelEvent(void* ptr, void* event);
void QDateEdit_WheelEventDefault(void* ptr, void* event);
void QDateEdit_ChangeEvent(void* ptr, void* event);
void QDateEdit_ChangeEventDefault(void* ptr, void* event);
void QDateEdit_CloseEvent(void* ptr, void* event);
void QDateEdit_CloseEventDefault(void* ptr, void* event);
void QDateEdit_ContextMenuEvent(void* ptr, void* event);
void QDateEdit_ContextMenuEventDefault(void* ptr, void* event);
void QDateEdit_FocusOutEvent(void* ptr, void* event);
void QDateEdit_FocusOutEventDefault(void* ptr, void* event);
void QDateEdit_HideEvent(void* ptr, void* event);
void QDateEdit_HideEventDefault(void* ptr, void* event);
void* QDateEdit_InputMethodQuery(void* ptr, long long query);
void* QDateEdit_InputMethodQueryDefault(void* ptr, long long query);
void QDateEdit_KeyReleaseEvent(void* ptr, void* event);
void QDateEdit_KeyReleaseEventDefault(void* ptr, void* event);
void* QDateEdit_MinimumSizeHint(void* ptr);
void* QDateEdit_MinimumSizeHintDefault(void* ptr);
void QDateEdit_MouseMoveEvent(void* ptr, void* event);
void QDateEdit_MouseMoveEventDefault(void* ptr, void* event);
void QDateEdit_MouseReleaseEvent(void* ptr, void* event);
void QDateEdit_MouseReleaseEventDefault(void* ptr, void* event);
void QDateEdit_ResizeEvent(void* ptr, void* event);
void QDateEdit_ResizeEventDefault(void* ptr, void* event);
void QDateEdit_SelectAll(void* ptr);
void QDateEdit_SelectAllDefault(void* ptr);
void QDateEdit_ShowEvent(void* ptr, void* event);
void QDateEdit_ShowEventDefault(void* ptr, void* event);
void QDateEdit_StepDown(void* ptr);
void QDateEdit_StepDownDefault(void* ptr);
void QDateEdit_StepUp(void* ptr);
void QDateEdit_StepUpDefault(void* ptr);
void QDateEdit_ActionEvent(void* ptr, void* event);
void QDateEdit_ActionEventDefault(void* ptr, void* event);
void QDateEdit_DragEnterEvent(void* ptr, void* event);
void QDateEdit_DragEnterEventDefault(void* ptr, void* event);
void QDateEdit_DragLeaveEvent(void* ptr, void* event);
void QDateEdit_DragLeaveEventDefault(void* ptr, void* event);
void QDateEdit_DragMoveEvent(void* ptr, void* event);
void QDateEdit_DragMoveEventDefault(void* ptr, void* event);
void QDateEdit_DropEvent(void* ptr, void* event);
void QDateEdit_DropEventDefault(void* ptr, void* event);
void QDateEdit_EnterEvent(void* ptr, void* event);
void QDateEdit_EnterEventDefault(void* ptr, void* event);
void QDateEdit_LeaveEvent(void* ptr, void* event);
void QDateEdit_LeaveEventDefault(void* ptr, void* event);
void QDateEdit_MoveEvent(void* ptr, void* event);
void QDateEdit_MoveEventDefault(void* ptr, void* event);
void QDateEdit_SetEnabled(void* ptr, char vbo);
void QDateEdit_SetEnabledDefault(void* ptr, char vbo);
void QDateEdit_SetStyleSheet(void* ptr, char* styleSheet);
void QDateEdit_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QDateEdit_SetVisible(void* ptr, char visible);
void QDateEdit_SetVisibleDefault(void* ptr, char visible);
void QDateEdit_SetWindowModified(void* ptr, char vbo);
void QDateEdit_SetWindowModifiedDefault(void* ptr, char vbo);
void QDateEdit_SetWindowTitle(void* ptr, char* vqs);
void QDateEdit_SetWindowTitleDefault(void* ptr, char* vqs);
char QDateEdit_Close(void* ptr);
char QDateEdit_CloseDefault(void* ptr);
char QDateEdit_HasHeightForWidth(void* ptr);
char QDateEdit_HasHeightForWidthDefault(void* ptr);
int QDateEdit_HeightForWidth(void* ptr, int w);
int QDateEdit_HeightForWidthDefault(void* ptr, int w);
void QDateEdit_Hide(void* ptr);
void QDateEdit_HideDefault(void* ptr);
void QDateEdit_InputMethodEvent(void* ptr, void* event);
void QDateEdit_InputMethodEventDefault(void* ptr, void* event);
void QDateEdit_Lower(void* ptr);
void QDateEdit_LowerDefault(void* ptr);
void QDateEdit_MouseDoubleClickEvent(void* ptr, void* event);
void QDateEdit_MouseDoubleClickEventDefault(void* ptr, void* event);
char QDateEdit_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QDateEdit_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QDateEdit_Raise(void* ptr);
void QDateEdit_RaiseDefault(void* ptr);
void QDateEdit_Repaint(void* ptr);
void QDateEdit_RepaintDefault(void* ptr);
void QDateEdit_SetDisabled(void* ptr, char disable);
void QDateEdit_SetDisabledDefault(void* ptr, char disable);
void QDateEdit_SetFocus2(void* ptr);
void QDateEdit_SetFocus2Default(void* ptr);
void QDateEdit_SetHidden(void* ptr, char hidden);
void QDateEdit_SetHiddenDefault(void* ptr, char hidden);
void QDateEdit_Show(void* ptr);
void QDateEdit_ShowDefault(void* ptr);
void QDateEdit_ShowFullScreen(void* ptr);
void QDateEdit_ShowFullScreenDefault(void* ptr);
void QDateEdit_ShowMaximized(void* ptr);
void QDateEdit_ShowMaximizedDefault(void* ptr);
void QDateEdit_ShowMinimized(void* ptr);
void QDateEdit_ShowMinimizedDefault(void* ptr);
void QDateEdit_ShowNormal(void* ptr);
void QDateEdit_ShowNormalDefault(void* ptr);
void QDateEdit_TabletEvent(void* ptr, void* event);
void QDateEdit_TabletEventDefault(void* ptr, void* event);
void QDateEdit_Update(void* ptr);
void QDateEdit_UpdateDefault(void* ptr);
void QDateEdit_UpdateMicroFocus(void* ptr);
void QDateEdit_UpdateMicroFocusDefault(void* ptr);
void QDateEdit_ChildEvent(void* ptr, void* event);
void QDateEdit_ChildEventDefault(void* ptr, void* event);
void QDateEdit_ConnectNotify(void* ptr, void* sign);
void QDateEdit_ConnectNotifyDefault(void* ptr, void* sign);
void QDateEdit_CustomEvent(void* ptr, void* event);
void QDateEdit_CustomEventDefault(void* ptr, void* event);
void QDateEdit_DeleteLater(void* ptr);
void QDateEdit_DeleteLaterDefault(void* ptr);
void QDateEdit_DisconnectNotify(void* ptr, void* sign);
void QDateEdit_DisconnectNotifyDefault(void* ptr, void* sign);
char QDateEdit_EventFilter(void* ptr, void* watched, void* event);
char QDateEdit_EventFilterDefault(void* ptr, void* watched, void* event);
void* QDateEdit_MetaObject(void* ptr);
void* QDateEdit_MetaObjectDefault(void* ptr);
void* QDateTimeEdit_NewQDateTimeEdit3(void* date, void* parent);
void* QDateTimeEdit_NewQDateTimeEdit4(void* time, void* parent);
char QDateTimeEdit_CalendarPopup(void* ptr);
void QDateTimeEdit_ClearMaximumDate(void* ptr);
void QDateTimeEdit_ClearMaximumDateTime(void* ptr);
void QDateTimeEdit_ClearMaximumTime(void* ptr);
void QDateTimeEdit_ClearMinimumDate(void* ptr);
void QDateTimeEdit_ClearMinimumDateTime(void* ptr);
void QDateTimeEdit_ClearMinimumTime(void* ptr);
long long QDateTimeEdit_CurrentSection(void* ptr);
int QDateTimeEdit_CurrentSectionIndex(void* ptr);
void* QDateTimeEdit_DateTime(void* ptr);
struct QtWidgets_PackedString QDateTimeEdit_DisplayFormat(void* ptr);
long long QDateTimeEdit_DisplayedSections(void* ptr);
void* QDateTimeEdit_MaximumDate(void* ptr);
void* QDateTimeEdit_MaximumDateTime(void* ptr);
void* QDateTimeEdit_MaximumTime(void* ptr);
void* QDateTimeEdit_MinimumDate(void* ptr);
void* QDateTimeEdit_MinimumDateTime(void* ptr);
void* QDateTimeEdit_MinimumTime(void* ptr);
int QDateTimeEdit_SectionCount(void* ptr);
struct QtWidgets_PackedString QDateTimeEdit_SectionText(void* ptr, long long section);
void QDateTimeEdit_SetCalendarPopup(void* ptr, char enable);
void QDateTimeEdit_SetCurrentSection(void* ptr, long long section);
void QDateTimeEdit_SetCurrentSectionIndex(void* ptr, int index);
void QDateTimeEdit_SetDate(void* ptr, void* date);
void QDateTimeEdit_SetDateTime(void* ptr, void* dateTime);
void QDateTimeEdit_SetDisplayFormat(void* ptr, char* format);
void QDateTimeEdit_SetMaximumDate(void* ptr, void* max);
void QDateTimeEdit_SetMaximumDateTime(void* ptr, void* dt);
void QDateTimeEdit_SetMaximumTime(void* ptr, void* max);
void QDateTimeEdit_SetMinimumDate(void* ptr, void* min);
void QDateTimeEdit_SetMinimumDateTime(void* ptr, void* dt);
void QDateTimeEdit_SetMinimumTime(void* ptr, void* min);
void QDateTimeEdit_SetTime(void* ptr, void* time);
void QDateTimeEdit_SetTimeSpec(void* ptr, long long spec);
long long QDateTimeEdit_TimeSpec(void* ptr);
void* QDateTimeEdit_NewQDateTimeEdit(void* parent);
void* QDateTimeEdit_NewQDateTimeEdit2(void* datetime, void* parent);
void* QDateTimeEdit_CalendarWidget(void* ptr);
void QDateTimeEdit_Clear(void* ptr);
void QDateTimeEdit_ClearDefault(void* ptr);
void* QDateTimeEdit_Date(void* ptr);
void QDateTimeEdit_ConnectDateChanged(void* ptr);
void QDateTimeEdit_DisconnectDateChanged(void* ptr);
void QDateTimeEdit_DateChanged(void* ptr, void* date);
void QDateTimeEdit_ConnectDateTimeChanged(void* ptr);
void QDateTimeEdit_DisconnectDateTimeChanged(void* ptr);
void QDateTimeEdit_DateTimeChanged(void* ptr, void* datetime);
void* QDateTimeEdit_DateTimeFromText(void* ptr, char* text);
void* QDateTimeEdit_DateTimeFromTextDefault(void* ptr, char* text);
char QDateTimeEdit_Event(void* ptr, void* event);
void QDateTimeEdit_Fixup(void* ptr, char* input);
void QDateTimeEdit_FixupDefault(void* ptr, char* input);
void QDateTimeEdit_FocusInEvent(void* ptr, void* event);
void QDateTimeEdit_FocusInEventDefault(void* ptr, void* event);
char QDateTimeEdit_FocusNextPrevChild(void* ptr, char next);
char QDateTimeEdit_FocusNextPrevChildDefault(void* ptr, char next);
void QDateTimeEdit_InitStyleOption(void* ptr, void* option);
void QDateTimeEdit_KeyPressEvent(void* ptr, void* event);
void QDateTimeEdit_KeyPressEventDefault(void* ptr, void* event);
void QDateTimeEdit_MousePressEvent(void* ptr, void* event);
void QDateTimeEdit_MousePressEventDefault(void* ptr, void* event);
void QDateTimeEdit_PaintEvent(void* ptr, void* event);
void QDateTimeEdit_PaintEventDefault(void* ptr, void* event);
long long QDateTimeEdit_SectionAt(void* ptr, int index);
void QDateTimeEdit_SetCalendarWidget(void* ptr, void* calendarWidget);
void QDateTimeEdit_SetDateRange(void* ptr, void* min, void* max);
void QDateTimeEdit_SetDateTimeRange(void* ptr, void* min, void* max);
void QDateTimeEdit_SetSelectedSection(void* ptr, long long section);
void QDateTimeEdit_SetTimeRange(void* ptr, void* min, void* max);
void* QDateTimeEdit_SizeHint(void* ptr);
void* QDateTimeEdit_SizeHintDefault(void* ptr);
void QDateTimeEdit_StepBy(void* ptr, int steps);
void QDateTimeEdit_StepByDefault(void* ptr, int steps);
long long QDateTimeEdit_StepEnabled(void* ptr);
long long QDateTimeEdit_StepEnabledDefault(void* ptr);
struct QtWidgets_PackedString QDateTimeEdit_TextFromDateTime(void* ptr, void* dateTime);
struct QtWidgets_PackedString QDateTimeEdit_TextFromDateTimeDefault(void* ptr, void* dateTime);
void* QDateTimeEdit_Time(void* ptr);
void QDateTimeEdit_ConnectTimeChanged(void* ptr);
void QDateTimeEdit_DisconnectTimeChanged(void* ptr);
void QDateTimeEdit_TimeChanged(void* ptr, void* time);
long long QDateTimeEdit_Validate(void* ptr, char* text, int pos);
long long QDateTimeEdit_ValidateDefault(void* ptr, char* text, int pos);
void QDateTimeEdit_WheelEvent(void* ptr, void* event);
void QDateTimeEdit_WheelEventDefault(void* ptr, void* event);
void QDateTimeEdit_DestroyQDateTimeEdit(void* ptr);
void QDateTimeEdit_ChangeEvent(void* ptr, void* event);
void QDateTimeEdit_ChangeEventDefault(void* ptr, void* event);
void QDateTimeEdit_CloseEvent(void* ptr, void* event);
void QDateTimeEdit_CloseEventDefault(void* ptr, void* event);
void QDateTimeEdit_ContextMenuEvent(void* ptr, void* event);
void QDateTimeEdit_ContextMenuEventDefault(void* ptr, void* event);
void QDateTimeEdit_FocusOutEvent(void* ptr, void* event);
void QDateTimeEdit_FocusOutEventDefault(void* ptr, void* event);
void QDateTimeEdit_HideEvent(void* ptr, void* event);
void QDateTimeEdit_HideEventDefault(void* ptr, void* event);
void* QDateTimeEdit_InputMethodQuery(void* ptr, long long query);
void* QDateTimeEdit_InputMethodQueryDefault(void* ptr, long long query);
void QDateTimeEdit_KeyReleaseEvent(void* ptr, void* event);
void QDateTimeEdit_KeyReleaseEventDefault(void* ptr, void* event);
void* QDateTimeEdit_MinimumSizeHint(void* ptr);
void* QDateTimeEdit_MinimumSizeHintDefault(void* ptr);
void QDateTimeEdit_MouseMoveEvent(void* ptr, void* event);
void QDateTimeEdit_MouseMoveEventDefault(void* ptr, void* event);
void QDateTimeEdit_MouseReleaseEvent(void* ptr, void* event);
void QDateTimeEdit_MouseReleaseEventDefault(void* ptr, void* event);
void QDateTimeEdit_ResizeEvent(void* ptr, void* event);
void QDateTimeEdit_ResizeEventDefault(void* ptr, void* event);
void QDateTimeEdit_SelectAll(void* ptr);
void QDateTimeEdit_SelectAllDefault(void* ptr);
void QDateTimeEdit_ShowEvent(void* ptr, void* event);
void QDateTimeEdit_ShowEventDefault(void* ptr, void* event);
void QDateTimeEdit_StepDown(void* ptr);
void QDateTimeEdit_StepDownDefault(void* ptr);
void QDateTimeEdit_StepUp(void* ptr);
void QDateTimeEdit_StepUpDefault(void* ptr);
void QDateTimeEdit_ActionEvent(void* ptr, void* event);
void QDateTimeEdit_ActionEventDefault(void* ptr, void* event);
void QDateTimeEdit_DragEnterEvent(void* ptr, void* event);
void QDateTimeEdit_DragEnterEventDefault(void* ptr, void* event);
void QDateTimeEdit_DragLeaveEvent(void* ptr, void* event);
void QDateTimeEdit_DragLeaveEventDefault(void* ptr, void* event);
void QDateTimeEdit_DragMoveEvent(void* ptr, void* event);
void QDateTimeEdit_DragMoveEventDefault(void* ptr, void* event);
void QDateTimeEdit_DropEvent(void* ptr, void* event);
void QDateTimeEdit_DropEventDefault(void* ptr, void* event);
void QDateTimeEdit_EnterEvent(void* ptr, void* event);
void QDateTimeEdit_EnterEventDefault(void* ptr, void* event);
void QDateTimeEdit_LeaveEvent(void* ptr, void* event);
void QDateTimeEdit_LeaveEventDefault(void* ptr, void* event);
void QDateTimeEdit_MoveEvent(void* ptr, void* event);
void QDateTimeEdit_MoveEventDefault(void* ptr, void* event);
void QDateTimeEdit_SetEnabled(void* ptr, char vbo);
void QDateTimeEdit_SetEnabledDefault(void* ptr, char vbo);
void QDateTimeEdit_SetStyleSheet(void* ptr, char* styleSheet);
void QDateTimeEdit_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QDateTimeEdit_SetVisible(void* ptr, char visible);
void QDateTimeEdit_SetVisibleDefault(void* ptr, char visible);
void QDateTimeEdit_SetWindowModified(void* ptr, char vbo);
void QDateTimeEdit_SetWindowModifiedDefault(void* ptr, char vbo);
void QDateTimeEdit_SetWindowTitle(void* ptr, char* vqs);
void QDateTimeEdit_SetWindowTitleDefault(void* ptr, char* vqs);
char QDateTimeEdit_Close(void* ptr);
char QDateTimeEdit_CloseDefault(void* ptr);
char QDateTimeEdit_HasHeightForWidth(void* ptr);
char QDateTimeEdit_HasHeightForWidthDefault(void* ptr);
int QDateTimeEdit_HeightForWidth(void* ptr, int w);
int QDateTimeEdit_HeightForWidthDefault(void* ptr, int w);
void QDateTimeEdit_Hide(void* ptr);
void QDateTimeEdit_HideDefault(void* ptr);
void QDateTimeEdit_InputMethodEvent(void* ptr, void* event);
void QDateTimeEdit_InputMethodEventDefault(void* ptr, void* event);
void QDateTimeEdit_Lower(void* ptr);
void QDateTimeEdit_LowerDefault(void* ptr);
void QDateTimeEdit_MouseDoubleClickEvent(void* ptr, void* event);
void QDateTimeEdit_MouseDoubleClickEventDefault(void* ptr, void* event);
char QDateTimeEdit_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QDateTimeEdit_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QDateTimeEdit_Raise(void* ptr);
void QDateTimeEdit_RaiseDefault(void* ptr);
void QDateTimeEdit_Repaint(void* ptr);
void QDateTimeEdit_RepaintDefault(void* ptr);
void QDateTimeEdit_SetDisabled(void* ptr, char disable);
void QDateTimeEdit_SetDisabledDefault(void* ptr, char disable);
void QDateTimeEdit_SetFocus2(void* ptr);
void QDateTimeEdit_SetFocus2Default(void* ptr);
void QDateTimeEdit_SetHidden(void* ptr, char hidden);
void QDateTimeEdit_SetHiddenDefault(void* ptr, char hidden);
void QDateTimeEdit_Show(void* ptr);
void QDateTimeEdit_ShowDefault(void* ptr);
void QDateTimeEdit_ShowFullScreen(void* ptr);
void QDateTimeEdit_ShowFullScreenDefault(void* ptr);
void QDateTimeEdit_ShowMaximized(void* ptr);
void QDateTimeEdit_ShowMaximizedDefault(void* ptr);
void QDateTimeEdit_ShowMinimized(void* ptr);
void QDateTimeEdit_ShowMinimizedDefault(void* ptr);
void QDateTimeEdit_ShowNormal(void* ptr);
void QDateTimeEdit_ShowNormalDefault(void* ptr);
void QDateTimeEdit_TabletEvent(void* ptr, void* event);
void QDateTimeEdit_TabletEventDefault(void* ptr, void* event);
void QDateTimeEdit_Update(void* ptr);
void QDateTimeEdit_UpdateDefault(void* ptr);
void QDateTimeEdit_UpdateMicroFocus(void* ptr);
void QDateTimeEdit_UpdateMicroFocusDefault(void* ptr);
void QDateTimeEdit_ChildEvent(void* ptr, void* event);
void QDateTimeEdit_ChildEventDefault(void* ptr, void* event);
void QDateTimeEdit_ConnectNotify(void* ptr, void* sign);
void QDateTimeEdit_ConnectNotifyDefault(void* ptr, void* sign);
void QDateTimeEdit_CustomEvent(void* ptr, void* event);
void QDateTimeEdit_CustomEventDefault(void* ptr, void* event);
void QDateTimeEdit_DeleteLater(void* ptr);
void QDateTimeEdit_DeleteLaterDefault(void* ptr);
void QDateTimeEdit_DisconnectNotify(void* ptr, void* sign);
void QDateTimeEdit_DisconnectNotifyDefault(void* ptr, void* sign);
char QDateTimeEdit_EventFilter(void* ptr, void* watched, void* event);
char QDateTimeEdit_EventFilterDefault(void* ptr, void* watched, void* event);
void* QDateTimeEdit_MetaObject(void* ptr);
void* QDateTimeEdit_MetaObjectDefault(void* ptr);
void* QDesktopWidget_AvailableGeometry2(void* ptr, void* widget);
void* QDesktopWidget_AvailableGeometry(void* ptr, int screen);
char QDesktopWidget_IsVirtualDesktop(void* ptr);
int QDesktopWidget_PrimaryScreen(void* ptr);
void QDesktopWidget_ResizeEvent(void* ptr, void* event);
void QDesktopWidget_ResizeEventDefault(void* ptr, void* event);
void* QDesktopWidget_Screen(void* ptr, int screen);
void* QDesktopWidget_ScreenGeometry2(void* ptr, void* widget);
void* QDesktopWidget_ScreenGeometry(void* ptr, int screen);
int QDesktopWidget_ScreenNumber2(void* ptr, void* point);
int QDesktopWidget_ScreenNumber(void* ptr, void* widget);
void* QDesktopWidget_AvailableGeometry3(void* ptr, void* p);
void QDesktopWidget_ConnectPrimaryScreenChanged(void* ptr);
void QDesktopWidget_DisconnectPrimaryScreenChanged(void* ptr);
void QDesktopWidget_PrimaryScreenChanged(void* ptr);
void QDesktopWidget_ConnectResized(void* ptr);
void QDesktopWidget_DisconnectResized(void* ptr);
void QDesktopWidget_Resized(void* ptr, int screen);
int QDesktopWidget_ScreenCount(void* ptr);
void QDesktopWidget_ConnectScreenCountChanged(void* ptr);
void QDesktopWidget_DisconnectScreenCountChanged(void* ptr);
void QDesktopWidget_ScreenCountChanged(void* ptr, int newCount);
void* QDesktopWidget_ScreenGeometry3(void* ptr, void* p);
void QDesktopWidget_ConnectWorkAreaResized(void* ptr);
void QDesktopWidget_DisconnectWorkAreaResized(void* ptr);
void QDesktopWidget_WorkAreaResized(void* ptr, int screen);
void QDesktopWidget_ActionEvent(void* ptr, void* event);
void QDesktopWidget_ActionEventDefault(void* ptr, void* event);
void QDesktopWidget_DragEnterEvent(void* ptr, void* event);
void QDesktopWidget_DragEnterEventDefault(void* ptr, void* event);
void QDesktopWidget_DragLeaveEvent(void* ptr, void* event);
void QDesktopWidget_DragLeaveEventDefault(void* ptr, void* event);
void QDesktopWidget_DragMoveEvent(void* ptr, void* event);
void QDesktopWidget_DragMoveEventDefault(void* ptr, void* event);
void QDesktopWidget_DropEvent(void* ptr, void* event);
void QDesktopWidget_DropEventDefault(void* ptr, void* event);
void QDesktopWidget_EnterEvent(void* ptr, void* event);
void QDesktopWidget_EnterEventDefault(void* ptr, void* event);
void QDesktopWidget_FocusInEvent(void* ptr, void* event);
void QDesktopWidget_FocusInEventDefault(void* ptr, void* event);
void QDesktopWidget_FocusOutEvent(void* ptr, void* event);
void QDesktopWidget_FocusOutEventDefault(void* ptr, void* event);
void QDesktopWidget_HideEvent(void* ptr, void* event);
void QDesktopWidget_HideEventDefault(void* ptr, void* event);
void QDesktopWidget_LeaveEvent(void* ptr, void* event);
void QDesktopWidget_LeaveEventDefault(void* ptr, void* event);
void* QDesktopWidget_MinimumSizeHint(void* ptr);
void* QDesktopWidget_MinimumSizeHintDefault(void* ptr);
void QDesktopWidget_MoveEvent(void* ptr, void* event);
void QDesktopWidget_MoveEventDefault(void* ptr, void* event);
void QDesktopWidget_PaintEvent(void* ptr, void* event);
void QDesktopWidget_PaintEventDefault(void* ptr, void* event);
void QDesktopWidget_SetEnabled(void* ptr, char vbo);
void QDesktopWidget_SetEnabledDefault(void* ptr, char vbo);
void QDesktopWidget_SetStyleSheet(void* ptr, char* styleSheet);
void QDesktopWidget_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QDesktopWidget_SetVisible(void* ptr, char visible);
void QDesktopWidget_SetVisibleDefault(void* ptr, char visible);
void QDesktopWidget_SetWindowModified(void* ptr, char vbo);
void QDesktopWidget_SetWindowModifiedDefault(void* ptr, char vbo);
void QDesktopWidget_SetWindowTitle(void* ptr, char* vqs);
void QDesktopWidget_SetWindowTitleDefault(void* ptr, char* vqs);
void QDesktopWidget_ShowEvent(void* ptr, void* event);
void QDesktopWidget_ShowEventDefault(void* ptr, void* event);
void* QDesktopWidget_SizeHint(void* ptr);
void* QDesktopWidget_SizeHintDefault(void* ptr);
void QDesktopWidget_ChangeEvent(void* ptr, void* event);
void QDesktopWidget_ChangeEventDefault(void* ptr, void* event);
char QDesktopWidget_Close(void* ptr);
char QDesktopWidget_CloseDefault(void* ptr);
void QDesktopWidget_CloseEvent(void* ptr, void* event);
void QDesktopWidget_CloseEventDefault(void* ptr, void* event);
void QDesktopWidget_ContextMenuEvent(void* ptr, void* event);
void QDesktopWidget_ContextMenuEventDefault(void* ptr, void* event);
char QDesktopWidget_FocusNextPrevChild(void* ptr, char next);
char QDesktopWidget_FocusNextPrevChildDefault(void* ptr, char next);
char QDesktopWidget_HasHeightForWidth(void* ptr);
char QDesktopWidget_HasHeightForWidthDefault(void* ptr);
int QDesktopWidget_HeightForWidth(void* ptr, int w);
int QDesktopWidget_HeightForWidthDefault(void* ptr, int w);
void QDesktopWidget_Hide(void* ptr);
void QDesktopWidget_HideDefault(void* ptr);
void QDesktopWidget_InputMethodEvent(void* ptr, void* event);
void QDesktopWidget_InputMethodEventDefault(void* ptr, void* event);
void* QDesktopWidget_InputMethodQuery(void* ptr, long long query);
void* QDesktopWidget_InputMethodQueryDefault(void* ptr, long long query);
void QDesktopWidget_KeyPressEvent(void* ptr, void* event);
void QDesktopWidget_KeyPressEventDefault(void* ptr, void* event);
void QDesktopWidget_KeyReleaseEvent(void* ptr, void* event);
void QDesktopWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QDesktopWidget_Lower(void* ptr);
void QDesktopWidget_LowerDefault(void* ptr);
void QDesktopWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QDesktopWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QDesktopWidget_MouseMoveEvent(void* ptr, void* event);
void QDesktopWidget_MouseMoveEventDefault(void* ptr, void* event);
void QDesktopWidget_MousePressEvent(void* ptr, void* event);
void QDesktopWidget_MousePressEventDefault(void* ptr, void* event);
void QDesktopWidget_MouseReleaseEvent(void* ptr, void* event);
void QDesktopWidget_MouseReleaseEventDefault(void* ptr, void* event);
char QDesktopWidget_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QDesktopWidget_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QDesktopWidget_Raise(void* ptr);
void QDesktopWidget_RaiseDefault(void* ptr);
void QDesktopWidget_Repaint(void* ptr);
void QDesktopWidget_RepaintDefault(void* ptr);
void QDesktopWidget_SetDisabled(void* ptr, char disable);
void QDesktopWidget_SetDisabledDefault(void* ptr, char disable);
void QDesktopWidget_SetFocus2(void* ptr);
void QDesktopWidget_SetFocus2Default(void* ptr);
void QDesktopWidget_SetHidden(void* ptr, char hidden);
void QDesktopWidget_SetHiddenDefault(void* ptr, char hidden);
void QDesktopWidget_Show(void* ptr);
void QDesktopWidget_ShowDefault(void* ptr);
void QDesktopWidget_ShowFullScreen(void* ptr);
void QDesktopWidget_ShowFullScreenDefault(void* ptr);
void QDesktopWidget_ShowMaximized(void* ptr);
void QDesktopWidget_ShowMaximizedDefault(void* ptr);
void QDesktopWidget_ShowMinimized(void* ptr);
void QDesktopWidget_ShowMinimizedDefault(void* ptr);
void QDesktopWidget_ShowNormal(void* ptr);
void QDesktopWidget_ShowNormalDefault(void* ptr);
void QDesktopWidget_TabletEvent(void* ptr, void* event);
void QDesktopWidget_TabletEventDefault(void* ptr, void* event);
void QDesktopWidget_Update(void* ptr);
void QDesktopWidget_UpdateDefault(void* ptr);
void QDesktopWidget_UpdateMicroFocus(void* ptr);
void QDesktopWidget_UpdateMicroFocusDefault(void* ptr);
void QDesktopWidget_WheelEvent(void* ptr, void* event);
void QDesktopWidget_WheelEventDefault(void* ptr, void* event);
void QDesktopWidget_TimerEvent(void* ptr, void* event);
void QDesktopWidget_TimerEventDefault(void* ptr, void* event);
void QDesktopWidget_ChildEvent(void* ptr, void* event);
void QDesktopWidget_ChildEventDefault(void* ptr, void* event);
void QDesktopWidget_ConnectNotify(void* ptr, void* sign);
void QDesktopWidget_ConnectNotifyDefault(void* ptr, void* sign);
void QDesktopWidget_CustomEvent(void* ptr, void* event);
void QDesktopWidget_CustomEventDefault(void* ptr, void* event);
void QDesktopWidget_DeleteLater(void* ptr);
void QDesktopWidget_DeleteLaterDefault(void* ptr);
void QDesktopWidget_DisconnectNotify(void* ptr, void* sign);
void QDesktopWidget_DisconnectNotifyDefault(void* ptr, void* sign);
char QDesktopWidget_EventFilter(void* ptr, void* watched, void* event);
char QDesktopWidget_EventFilterDefault(void* ptr, void* watched, void* event);
void* QDesktopWidget_MetaObject(void* ptr);
void* QDesktopWidget_MetaObjectDefault(void* ptr);
int QDial_NotchSize(void* ptr);
double QDial_NotchTarget(void* ptr);
char QDial_NotchesVisible(void* ptr);
void QDial_SetNotchTarget(void* ptr, double target);
void QDial_SetNotchesVisible(void* ptr, char visible);
void QDial_SetWrapping(void* ptr, char on);
char QDial_Wrapping(void* ptr);
void* QDial_NewQDial(void* parent);
char QDial_Event(void* ptr, void* e);
void QDial_InitStyleOption(void* ptr, void* option);
void* QDial_MinimumSizeHint(void* ptr);
void* QDial_MinimumSizeHintDefault(void* ptr);
void QDial_MouseMoveEvent(void* ptr, void* e);
void QDial_MouseMoveEventDefault(void* ptr, void* e);
void QDial_MousePressEvent(void* ptr, void* e);
void QDial_MousePressEventDefault(void* ptr, void* e);
void QDial_MouseReleaseEvent(void* ptr, void* e);
void QDial_MouseReleaseEventDefault(void* ptr, void* e);
void QDial_PaintEvent(void* ptr, void* pe);
void QDial_PaintEventDefault(void* ptr, void* pe);
void QDial_ResizeEvent(void* ptr, void* e);
void QDial_ResizeEventDefault(void* ptr, void* e);
void* QDial_SizeHint(void* ptr);
void* QDial_SizeHintDefault(void* ptr);
void QDial_SliderChange(void* ptr, long long change);
void QDial_SliderChangeDefault(void* ptr, long long change);
void QDial_DestroyQDial(void* ptr);
void QDial_SetOrientation(void* ptr, long long vqt);
void QDial_SetOrientationDefault(void* ptr, long long vqt);
void QDial_SetValue(void* ptr, int vin);
void QDial_SetValueDefault(void* ptr, int vin);
void QDial_ChangeEvent(void* ptr, void* ev);
void QDial_ChangeEventDefault(void* ptr, void* ev);
void QDial_KeyPressEvent(void* ptr, void* ev);
void QDial_KeyPressEventDefault(void* ptr, void* ev);
void QDial_SetRange(void* ptr, int min, int max);
void QDial_SetRangeDefault(void* ptr, int min, int max);
void QDial_WheelEvent(void* ptr, void* e);
void QDial_WheelEventDefault(void* ptr, void* e);
void QDial_ActionEvent(void* ptr, void* event);
void QDial_ActionEventDefault(void* ptr, void* event);
void QDial_DragEnterEvent(void* ptr, void* event);
void QDial_DragEnterEventDefault(void* ptr, void* event);
void QDial_DragLeaveEvent(void* ptr, void* event);
void QDial_DragLeaveEventDefault(void* ptr, void* event);
void QDial_DragMoveEvent(void* ptr, void* event);
void QDial_DragMoveEventDefault(void* ptr, void* event);
void QDial_DropEvent(void* ptr, void* event);
void QDial_DropEventDefault(void* ptr, void* event);
void QDial_EnterEvent(void* ptr, void* event);
void QDial_EnterEventDefault(void* ptr, void* event);
void QDial_FocusInEvent(void* ptr, void* event);
void QDial_FocusInEventDefault(void* ptr, void* event);
void QDial_FocusOutEvent(void* ptr, void* event);
void QDial_FocusOutEventDefault(void* ptr, void* event);
void QDial_HideEvent(void* ptr, void* event);
void QDial_HideEventDefault(void* ptr, void* event);
void QDial_LeaveEvent(void* ptr, void* event);
void QDial_LeaveEventDefault(void* ptr, void* event);
void QDial_MoveEvent(void* ptr, void* event);
void QDial_MoveEventDefault(void* ptr, void* event);
void QDial_SetEnabled(void* ptr, char vbo);
void QDial_SetEnabledDefault(void* ptr, char vbo);
void QDial_SetStyleSheet(void* ptr, char* styleSheet);
void QDial_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QDial_SetVisible(void* ptr, char visible);
void QDial_SetVisibleDefault(void* ptr, char visible);
void QDial_SetWindowModified(void* ptr, char vbo);
void QDial_SetWindowModifiedDefault(void* ptr, char vbo);
void QDial_SetWindowTitle(void* ptr, char* vqs);
void QDial_SetWindowTitleDefault(void* ptr, char* vqs);
void QDial_ShowEvent(void* ptr, void* event);
void QDial_ShowEventDefault(void* ptr, void* event);
char QDial_Close(void* ptr);
char QDial_CloseDefault(void* ptr);
void QDial_CloseEvent(void* ptr, void* event);
void QDial_CloseEventDefault(void* ptr, void* event);
void QDial_ContextMenuEvent(void* ptr, void* event);
void QDial_ContextMenuEventDefault(void* ptr, void* event);
char QDial_FocusNextPrevChild(void* ptr, char next);
char QDial_FocusNextPrevChildDefault(void* ptr, char next);
char QDial_HasHeightForWidth(void* ptr);
char QDial_HasHeightForWidthDefault(void* ptr);
int QDial_HeightForWidth(void* ptr, int w);
int QDial_HeightForWidthDefault(void* ptr, int w);
void QDial_Hide(void* ptr);
void QDial_HideDefault(void* ptr);
void QDial_InputMethodEvent(void* ptr, void* event);
void QDial_InputMethodEventDefault(void* ptr, void* event);
void* QDial_InputMethodQuery(void* ptr, long long query);
void* QDial_InputMethodQueryDefault(void* ptr, long long query);
void QDial_KeyReleaseEvent(void* ptr, void* event);
void QDial_KeyReleaseEventDefault(void* ptr, void* event);
void QDial_Lower(void* ptr);
void QDial_LowerDefault(void* ptr);
void QDial_MouseDoubleClickEvent(void* ptr, void* event);
void QDial_MouseDoubleClickEventDefault(void* ptr, void* event);
char QDial_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QDial_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QDial_Raise(void* ptr);
void QDial_RaiseDefault(void* ptr);
void QDial_Repaint(void* ptr);
void QDial_RepaintDefault(void* ptr);
void QDial_SetDisabled(void* ptr, char disable);
void QDial_SetDisabledDefault(void* ptr, char disable);
void QDial_SetFocus2(void* ptr);
void QDial_SetFocus2Default(void* ptr);
void QDial_SetHidden(void* ptr, char hidden);
void QDial_SetHiddenDefault(void* ptr, char hidden);
void QDial_Show(void* ptr);
void QDial_ShowDefault(void* ptr);
void QDial_ShowFullScreen(void* ptr);
void QDial_ShowFullScreenDefault(void* ptr);
void QDial_ShowMaximized(void* ptr);
void QDial_ShowMaximizedDefault(void* ptr);
void QDial_ShowMinimized(void* ptr);
void QDial_ShowMinimizedDefault(void* ptr);
void QDial_ShowNormal(void* ptr);
void QDial_ShowNormalDefault(void* ptr);
void QDial_TabletEvent(void* ptr, void* event);
void QDial_TabletEventDefault(void* ptr, void* event);
void QDial_Update(void* ptr);
void QDial_UpdateDefault(void* ptr);
void QDial_UpdateMicroFocus(void* ptr);
void QDial_UpdateMicroFocusDefault(void* ptr);
void QDial_ChildEvent(void* ptr, void* event);
void QDial_ChildEventDefault(void* ptr, void* event);
void QDial_ConnectNotify(void* ptr, void* sign);
void QDial_ConnectNotifyDefault(void* ptr, void* sign);
void QDial_CustomEvent(void* ptr, void* event);
void QDial_CustomEventDefault(void* ptr, void* event);
void QDial_DeleteLater(void* ptr);
void QDial_DeleteLaterDefault(void* ptr);
void QDial_DisconnectNotify(void* ptr, void* sign);
void QDial_DisconnectNotifyDefault(void* ptr, void* sign);
char QDial_EventFilter(void* ptr, void* watched, void* event);
char QDial_EventFilterDefault(void* ptr, void* watched, void* event);
void* QDial_MetaObject(void* ptr);
void* QDial_MetaObjectDefault(void* ptr);
char QDialog_IsSizeGripEnabled(void* ptr);
void QDialog_SetModal(void* ptr, char modal);
void QDialog_SetResult(void* ptr, int i);
void QDialog_SetSizeGripEnabled(void* ptr, char vbo);
void* QDialog_NewQDialog(void* parent, long long f);
void QDialog_Accept(void* ptr);
void QDialog_AcceptDefault(void* ptr);
void QDialog_ConnectAccepted(void* ptr);
void QDialog_DisconnectAccepted(void* ptr);
void QDialog_Accepted(void* ptr);
void QDialog_CloseEvent(void* ptr, void* e);
void QDialog_CloseEventDefault(void* ptr, void* e);
void QDialog_ContextMenuEvent(void* ptr, void* e);
void QDialog_ContextMenuEventDefault(void* ptr, void* e);
void QDialog_Done(void* ptr, int r);
void QDialog_DoneDefault(void* ptr, int r);
char QDialog_Event(void* ptr, void* e);
char QDialog_EventFilter(void* ptr, void* o, void* e);
int QDialog_Exec(void* ptr);
int QDialog_ExecDefault(void* ptr);
void QDialog_ConnectFinished(void* ptr);
void QDialog_DisconnectFinished(void* ptr);
void QDialog_Finished(void* ptr, int result);
void QDialog_KeyPressEvent(void* ptr, void* e);
void QDialog_KeyPressEventDefault(void* ptr, void* e);
void* QDialog_MinimumSizeHint(void* ptr);
void* QDialog_MinimumSizeHintDefault(void* ptr);
void QDialog_Open(void* ptr);
void QDialog_OpenDefault(void* ptr);
void QDialog_Reject(void* ptr);
void QDialog_RejectDefault(void* ptr);
void QDialog_ConnectRejected(void* ptr);
void QDialog_DisconnectRejected(void* ptr);
void QDialog_Rejected(void* ptr);
void QDialog_ResizeEvent(void* ptr, void* vqr);
void QDialog_ResizeEventDefault(void* ptr, void* vqr);
int QDialog_Result(void* ptr);
void QDialog_SetVisible(void* ptr, char visible);
void QDialog_SetVisibleDefault(void* ptr, char visible);
void QDialog_ShowEvent(void* ptr, void* event);
void QDialog_ShowEventDefault(void* ptr, void* event);
void* QDialog_SizeHint(void* ptr);
void* QDialog_SizeHintDefault(void* ptr);
void QDialog_DestroyQDialog(void* ptr);
void QDialog_ActionEvent(void* ptr, void* event);
void QDialog_ActionEventDefault(void* ptr, void* event);
void QDialog_DragEnterEvent(void* ptr, void* event);
void QDialog_DragEnterEventDefault(void* ptr, void* event);
void QDialog_DragLeaveEvent(void* ptr, void* event);
void QDialog_DragLeaveEventDefault(void* ptr, void* event);
void QDialog_DragMoveEvent(void* ptr, void* event);
void QDialog_DragMoveEventDefault(void* ptr, void* event);
void QDialog_DropEvent(void* ptr, void* event);
void QDialog_DropEventDefault(void* ptr, void* event);
void QDialog_EnterEvent(void* ptr, void* event);
void QDialog_EnterEventDefault(void* ptr, void* event);
void QDialog_FocusInEvent(void* ptr, void* event);
void QDialog_FocusInEventDefault(void* ptr, void* event);
void QDialog_FocusOutEvent(void* ptr, void* event);
void QDialog_FocusOutEventDefault(void* ptr, void* event);
void QDialog_HideEvent(void* ptr, void* event);
void QDialog_HideEventDefault(void* ptr, void* event);
void QDialog_LeaveEvent(void* ptr, void* event);
void QDialog_LeaveEventDefault(void* ptr, void* event);
void QDialog_MoveEvent(void* ptr, void* event);
void QDialog_MoveEventDefault(void* ptr, void* event);
void QDialog_PaintEvent(void* ptr, void* event);
void QDialog_PaintEventDefault(void* ptr, void* event);
void QDialog_SetEnabled(void* ptr, char vbo);
void QDialog_SetEnabledDefault(void* ptr, char vbo);
void QDialog_SetStyleSheet(void* ptr, char* styleSheet);
void QDialog_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QDialog_SetWindowModified(void* ptr, char vbo);
void QDialog_SetWindowModifiedDefault(void* ptr, char vbo);
void QDialog_SetWindowTitle(void* ptr, char* vqs);
void QDialog_SetWindowTitleDefault(void* ptr, char* vqs);
void QDialog_ChangeEvent(void* ptr, void* event);
void QDialog_ChangeEventDefault(void* ptr, void* event);
char QDialog_Close(void* ptr);
char QDialog_CloseDefault(void* ptr);
char QDialog_FocusNextPrevChild(void* ptr, char next);
char QDialog_FocusNextPrevChildDefault(void* ptr, char next);
char QDialog_HasHeightForWidth(void* ptr);
char QDialog_HasHeightForWidthDefault(void* ptr);
int QDialog_HeightForWidth(void* ptr, int w);
int QDialog_HeightForWidthDefault(void* ptr, int w);
void QDialog_Hide(void* ptr);
void QDialog_HideDefault(void* ptr);
void QDialog_InputMethodEvent(void* ptr, void* event);
void QDialog_InputMethodEventDefault(void* ptr, void* event);
void* QDialog_InputMethodQuery(void* ptr, long long query);
void* QDialog_InputMethodQueryDefault(void* ptr, long long query);
void QDialog_KeyReleaseEvent(void* ptr, void* event);
void QDialog_KeyReleaseEventDefault(void* ptr, void* event);
void QDialog_Lower(void* ptr);
void QDialog_LowerDefault(void* ptr);
void QDialog_MouseDoubleClickEvent(void* ptr, void* event);
void QDialog_MouseDoubleClickEventDefault(void* ptr, void* event);
void QDialog_MouseMoveEvent(void* ptr, void* event);
void QDialog_MouseMoveEventDefault(void* ptr, void* event);
void QDialog_MousePressEvent(void* ptr, void* event);
void QDialog_MousePressEventDefault(void* ptr, void* event);
void QDialog_MouseReleaseEvent(void* ptr, void* event);
void QDialog_MouseReleaseEventDefault(void* ptr, void* event);
char QDialog_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QDialog_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QDialog_Raise(void* ptr);
void QDialog_RaiseDefault(void* ptr);
void QDialog_Repaint(void* ptr);
void QDialog_RepaintDefault(void* ptr);
void QDialog_SetDisabled(void* ptr, char disable);
void QDialog_SetDisabledDefault(void* ptr, char disable);
void QDialog_SetFocus2(void* ptr);
void QDialog_SetFocus2Default(void* ptr);
void QDialog_SetHidden(void* ptr, char hidden);
void QDialog_SetHiddenDefault(void* ptr, char hidden);
void QDialog_Show(void* ptr);
void QDialog_ShowDefault(void* ptr);
void QDialog_ShowFullScreen(void* ptr);
void QDialog_ShowFullScreenDefault(void* ptr);
void QDialog_ShowMaximized(void* ptr);
void QDialog_ShowMaximizedDefault(void* ptr);
void QDialog_ShowMinimized(void* ptr);
void QDialog_ShowMinimizedDefault(void* ptr);
void QDialog_ShowNormal(void* ptr);
void QDialog_ShowNormalDefault(void* ptr);
void QDialog_TabletEvent(void* ptr, void* event);
void QDialog_TabletEventDefault(void* ptr, void* event);
void QDialog_Update(void* ptr);
void QDialog_UpdateDefault(void* ptr);
void QDialog_UpdateMicroFocus(void* ptr);
void QDialog_UpdateMicroFocusDefault(void* ptr);
void QDialog_WheelEvent(void* ptr, void* event);
void QDialog_WheelEventDefault(void* ptr, void* event);
void QDialog_TimerEvent(void* ptr, void* event);
void QDialog_TimerEventDefault(void* ptr, void* event);
void QDialog_ChildEvent(void* ptr, void* event);
void QDialog_ChildEventDefault(void* ptr, void* event);
void QDialog_ConnectNotify(void* ptr, void* sign);
void QDialog_ConnectNotifyDefault(void* ptr, void* sign);
void QDialog_CustomEvent(void* ptr, void* event);
void QDialog_CustomEventDefault(void* ptr, void* event);
void QDialog_DeleteLater(void* ptr);
void QDialog_DeleteLaterDefault(void* ptr);
void QDialog_DisconnectNotify(void* ptr, void* sign);
void QDialog_DisconnectNotifyDefault(void* ptr, void* sign);
void* QDialog_MetaObject(void* ptr);
void* QDialog_MetaObjectDefault(void* ptr);
char QDialogButtonBox_CenterButtons(void* ptr);
long long QDialogButtonBox_Orientation(void* ptr);
void QDialogButtonBox_SetCenterButtons(void* ptr, char center);
void QDialogButtonBox_SetOrientation(void* ptr, long long orientation);
void QDialogButtonBox_SetStandardButtons(void* ptr, long long buttons);
long long QDialogButtonBox_StandardButtons(void* ptr);
void* QDialogButtonBox_NewQDialogButtonBox(void* parent);
void* QDialogButtonBox_NewQDialogButtonBox2(long long orientation, void* parent);
void* QDialogButtonBox_NewQDialogButtonBox3(long long buttons, void* parent);
void* QDialogButtonBox_NewQDialogButtonBox4(long long buttons, long long orientation, void* parent);
void QDialogButtonBox_ConnectAccepted(void* ptr);
void QDialogButtonBox_DisconnectAccepted(void* ptr);
void QDialogButtonBox_Accepted(void* ptr);
void* QDialogButtonBox_AddButton3(void* ptr, long long button);
void* QDialogButtonBox_AddButton2(void* ptr, char* text, long long role);
void QDialogButtonBox_AddButton(void* ptr, void* button, long long role);
void* QDialogButtonBox_Button(void* ptr, long long which);
long long QDialogButtonBox_ButtonRole(void* ptr, void* button);
struct QtWidgets_PackedList QDialogButtonBox_Buttons(void* ptr);
void QDialogButtonBox_ChangeEvent(void* ptr, void* event);
void QDialogButtonBox_ChangeEventDefault(void* ptr, void* event);
void QDialogButtonBox_Clear(void* ptr);
void QDialogButtonBox_ConnectClicked(void* ptr);
void QDialogButtonBox_DisconnectClicked(void* ptr);
void QDialogButtonBox_Clicked(void* ptr, void* button);
char QDialogButtonBox_Event(void* ptr, void* event);
void QDialogButtonBox_ConnectHelpRequested(void* ptr);
void QDialogButtonBox_DisconnectHelpRequested(void* ptr);
void QDialogButtonBox_HelpRequested(void* ptr);
void QDialogButtonBox_ConnectRejected(void* ptr);
void QDialogButtonBox_DisconnectRejected(void* ptr);
void QDialogButtonBox_Rejected(void* ptr);
void QDialogButtonBox_RemoveButton(void* ptr, void* button);
long long QDialogButtonBox_StandardButton(void* ptr, void* button);
void QDialogButtonBox_DestroyQDialogButtonBox(void* ptr);
void* QDialogButtonBox_buttons_atList(void* ptr, int i);
void QDialogButtonBox_ActionEvent(void* ptr, void* event);
void QDialogButtonBox_ActionEventDefault(void* ptr, void* event);
void QDialogButtonBox_DragEnterEvent(void* ptr, void* event);
void QDialogButtonBox_DragEnterEventDefault(void* ptr, void* event);
void QDialogButtonBox_DragLeaveEvent(void* ptr, void* event);
void QDialogButtonBox_DragLeaveEventDefault(void* ptr, void* event);
void QDialogButtonBox_DragMoveEvent(void* ptr, void* event);
void QDialogButtonBox_DragMoveEventDefault(void* ptr, void* event);
void QDialogButtonBox_DropEvent(void* ptr, void* event);
void QDialogButtonBox_DropEventDefault(void* ptr, void* event);
void QDialogButtonBox_EnterEvent(void* ptr, void* event);
void QDialogButtonBox_EnterEventDefault(void* ptr, void* event);
void QDialogButtonBox_FocusInEvent(void* ptr, void* event);
void QDialogButtonBox_FocusInEventDefault(void* ptr, void* event);
void QDialogButtonBox_FocusOutEvent(void* ptr, void* event);
void QDialogButtonBox_FocusOutEventDefault(void* ptr, void* event);
void QDialogButtonBox_HideEvent(void* ptr, void* event);
void QDialogButtonBox_HideEventDefault(void* ptr, void* event);
void QDialogButtonBox_LeaveEvent(void* ptr, void* event);
void QDialogButtonBox_LeaveEventDefault(void* ptr, void* event);
void* QDialogButtonBox_MinimumSizeHint(void* ptr);
void* QDialogButtonBox_MinimumSizeHintDefault(void* ptr);
void QDialogButtonBox_MoveEvent(void* ptr, void* event);
void QDialogButtonBox_MoveEventDefault(void* ptr, void* event);
void QDialogButtonBox_PaintEvent(void* ptr, void* event);
void QDialogButtonBox_PaintEventDefault(void* ptr, void* event);
void QDialogButtonBox_SetEnabled(void* ptr, char vbo);
void QDialogButtonBox_SetEnabledDefault(void* ptr, char vbo);
void QDialogButtonBox_SetStyleSheet(void* ptr, char* styleSheet);
void QDialogButtonBox_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QDialogButtonBox_SetVisible(void* ptr, char visible);
void QDialogButtonBox_SetVisibleDefault(void* ptr, char visible);
void QDialogButtonBox_SetWindowModified(void* ptr, char vbo);
void QDialogButtonBox_SetWindowModifiedDefault(void* ptr, char vbo);
void QDialogButtonBox_SetWindowTitle(void* ptr, char* vqs);
void QDialogButtonBox_SetWindowTitleDefault(void* ptr, char* vqs);
void QDialogButtonBox_ShowEvent(void* ptr, void* event);
void QDialogButtonBox_ShowEventDefault(void* ptr, void* event);
void* QDialogButtonBox_SizeHint(void* ptr);
void* QDialogButtonBox_SizeHintDefault(void* ptr);
char QDialogButtonBox_Close(void* ptr);
char QDialogButtonBox_CloseDefault(void* ptr);
void QDialogButtonBox_CloseEvent(void* ptr, void* event);
void QDialogButtonBox_CloseEventDefault(void* ptr, void* event);
void QDialogButtonBox_ContextMenuEvent(void* ptr, void* event);
void QDialogButtonBox_ContextMenuEventDefault(void* ptr, void* event);
char QDialogButtonBox_FocusNextPrevChild(void* ptr, char next);
char QDialogButtonBox_FocusNextPrevChildDefault(void* ptr, char next);
char QDialogButtonBox_HasHeightForWidth(void* ptr);
char QDialogButtonBox_HasHeightForWidthDefault(void* ptr);
int QDialogButtonBox_HeightForWidth(void* ptr, int w);
int QDialogButtonBox_HeightForWidthDefault(void* ptr, int w);
void QDialogButtonBox_Hide(void* ptr);
void QDialogButtonBox_HideDefault(void* ptr);
void QDialogButtonBox_InputMethodEvent(void* ptr, void* event);
void QDialogButtonBox_InputMethodEventDefault(void* ptr, void* event);
void* QDialogButtonBox_InputMethodQuery(void* ptr, long long query);
void* QDialogButtonBox_InputMethodQueryDefault(void* ptr, long long query);
void QDialogButtonBox_KeyPressEvent(void* ptr, void* event);
void QDialogButtonBox_KeyPressEventDefault(void* ptr, void* event);
void QDialogButtonBox_KeyReleaseEvent(void* ptr, void* event);
void QDialogButtonBox_KeyReleaseEventDefault(void* ptr, void* event);
void QDialogButtonBox_Lower(void* ptr);
void QDialogButtonBox_LowerDefault(void* ptr);
void QDialogButtonBox_MouseDoubleClickEvent(void* ptr, void* event);
void QDialogButtonBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QDialogButtonBox_MouseMoveEvent(void* ptr, void* event);
void QDialogButtonBox_MouseMoveEventDefault(void* ptr, void* event);
void QDialogButtonBox_MousePressEvent(void* ptr, void* event);
void QDialogButtonBox_MousePressEventDefault(void* ptr, void* event);
void QDialogButtonBox_MouseReleaseEvent(void* ptr, void* event);
void QDialogButtonBox_MouseReleaseEventDefault(void* ptr, void* event);
char QDialogButtonBox_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QDialogButtonBox_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QDialogButtonBox_Raise(void* ptr);
void QDialogButtonBox_RaiseDefault(void* ptr);
void QDialogButtonBox_Repaint(void* ptr);
void QDialogButtonBox_RepaintDefault(void* ptr);
void QDialogButtonBox_ResizeEvent(void* ptr, void* event);
void QDialogButtonBox_ResizeEventDefault(void* ptr, void* event);
void QDialogButtonBox_SetDisabled(void* ptr, char disable);
void QDialogButtonBox_SetDisabledDefault(void* ptr, char disable);
void QDialogButtonBox_SetFocus2(void* ptr);
void QDialogButtonBox_SetFocus2Default(void* ptr);
void QDialogButtonBox_SetHidden(void* ptr, char hidden);
void QDialogButtonBox_SetHiddenDefault(void* ptr, char hidden);
void QDialogButtonBox_Show(void* ptr);
void QDialogButtonBox_ShowDefault(void* ptr);
void QDialogButtonBox_ShowFullScreen(void* ptr);
void QDialogButtonBox_ShowFullScreenDefault(void* ptr);
void QDialogButtonBox_ShowMaximized(void* ptr);
void QDialogButtonBox_ShowMaximizedDefault(void* ptr);
void QDialogButtonBox_ShowMinimized(void* ptr);
void QDialogButtonBox_ShowMinimizedDefault(void* ptr);
void QDialogButtonBox_ShowNormal(void* ptr);
void QDialogButtonBox_ShowNormalDefault(void* ptr);
void QDialogButtonBox_TabletEvent(void* ptr, void* event);
void QDialogButtonBox_TabletEventDefault(void* ptr, void* event);
void QDialogButtonBox_Update(void* ptr);
void QDialogButtonBox_UpdateDefault(void* ptr);
void QDialogButtonBox_UpdateMicroFocus(void* ptr);
void QDialogButtonBox_UpdateMicroFocusDefault(void* ptr);
void QDialogButtonBox_WheelEvent(void* ptr, void* event);
void QDialogButtonBox_WheelEventDefault(void* ptr, void* event);
void QDialogButtonBox_TimerEvent(void* ptr, void* event);
void QDialogButtonBox_TimerEventDefault(void* ptr, void* event);
void QDialogButtonBox_ChildEvent(void* ptr, void* event);
void QDialogButtonBox_ChildEventDefault(void* ptr, void* event);
void QDialogButtonBox_ConnectNotify(void* ptr, void* sign);
void QDialogButtonBox_ConnectNotifyDefault(void* ptr, void* sign);
void QDialogButtonBox_CustomEvent(void* ptr, void* event);
void QDialogButtonBox_CustomEventDefault(void* ptr, void* event);
void QDialogButtonBox_DeleteLater(void* ptr);
void QDialogButtonBox_DeleteLaterDefault(void* ptr);
void QDialogButtonBox_DisconnectNotify(void* ptr, void* sign);
void QDialogButtonBox_DisconnectNotifyDefault(void* ptr, void* sign);
char QDialogButtonBox_EventFilter(void* ptr, void* watched, void* event);
char QDialogButtonBox_EventFilterDefault(void* ptr, void* watched, void* event);
void* QDialogButtonBox_MetaObject(void* ptr);
void* QDialogButtonBox_MetaObjectDefault(void* ptr);
long long QDockWidget_AllowedAreas(void* ptr);
long long QDockWidget_Features(void* ptr);
void QDockWidget_SetAllowedAreas(void* ptr, long long areas);
void QDockWidget_SetFeatures(void* ptr, long long features);
void QDockWidget_SetFloating(void* ptr, char floating);
void* QDockWidget_NewQDockWidget2(void* parent, long long flags);
void* QDockWidget_NewQDockWidget(char* title, void* parent, long long flags);
void QDockWidget_ConnectAllowedAreasChanged(void* ptr);
void QDockWidget_DisconnectAllowedAreasChanged(void* ptr);
void QDockWidget_AllowedAreasChanged(void* ptr, long long allowedAreas);
void QDockWidget_ChangeEvent(void* ptr, void* event);
void QDockWidget_ChangeEventDefault(void* ptr, void* event);
void QDockWidget_CloseEvent(void* ptr, void* event);
void QDockWidget_CloseEventDefault(void* ptr, void* event);
void QDockWidget_ConnectDockLocationChanged(void* ptr);
void QDockWidget_DisconnectDockLocationChanged(void* ptr);
void QDockWidget_DockLocationChanged(void* ptr, long long area);
char QDockWidget_Event(void* ptr, void* event);
void QDockWidget_ConnectFeaturesChanged(void* ptr);
void QDockWidget_DisconnectFeaturesChanged(void* ptr);
void QDockWidget_FeaturesChanged(void* ptr, long long features);
void QDockWidget_InitStyleOption(void* ptr, void* option);
char QDockWidget_IsAreaAllowed(void* ptr, long long area);
char QDockWidget_IsFloating(void* ptr);
void QDockWidget_PaintEvent(void* ptr, void* event);
void QDockWidget_PaintEventDefault(void* ptr, void* event);
void QDockWidget_SetTitleBarWidget(void* ptr, void* widget);
void QDockWidget_SetWidget(void* ptr, void* widget);
void* QDockWidget_TitleBarWidget(void* ptr);
void* QDockWidget_ToggleViewAction(void* ptr);
void QDockWidget_ConnectTopLevelChanged(void* ptr);
void QDockWidget_DisconnectTopLevelChanged(void* ptr);
void QDockWidget_TopLevelChanged(void* ptr, char topLevel);
void QDockWidget_ConnectVisibilityChanged(void* ptr);
void QDockWidget_DisconnectVisibilityChanged(void* ptr);
void QDockWidget_VisibilityChanged(void* ptr, char visible);
void* QDockWidget_Widget(void* ptr);
void QDockWidget_DestroyQDockWidget(void* ptr);
void QDockWidget_ActionEvent(void* ptr, void* event);
void QDockWidget_ActionEventDefault(void* ptr, void* event);
void QDockWidget_DragEnterEvent(void* ptr, void* event);
void QDockWidget_DragEnterEventDefault(void* ptr, void* event);
void QDockWidget_DragLeaveEvent(void* ptr, void* event);
void QDockWidget_DragLeaveEventDefault(void* ptr, void* event);
void QDockWidget_DragMoveEvent(void* ptr, void* event);
void QDockWidget_DragMoveEventDefault(void* ptr, void* event);
void QDockWidget_DropEvent(void* ptr, void* event);
void QDockWidget_DropEventDefault(void* ptr, void* event);
void QDockWidget_EnterEvent(void* ptr, void* event);
void QDockWidget_EnterEventDefault(void* ptr, void* event);
void QDockWidget_FocusInEvent(void* ptr, void* event);
void QDockWidget_FocusInEventDefault(void* ptr, void* event);
void QDockWidget_FocusOutEvent(void* ptr, void* event);
void QDockWidget_FocusOutEventDefault(void* ptr, void* event);
void QDockWidget_HideEvent(void* ptr, void* event);
void QDockWidget_HideEventDefault(void* ptr, void* event);
void QDockWidget_LeaveEvent(void* ptr, void* event);
void QDockWidget_LeaveEventDefault(void* ptr, void* event);
void* QDockWidget_MinimumSizeHint(void* ptr);
void* QDockWidget_MinimumSizeHintDefault(void* ptr);
void QDockWidget_MoveEvent(void* ptr, void* event);
void QDockWidget_MoveEventDefault(void* ptr, void* event);
void QDockWidget_SetEnabled(void* ptr, char vbo);
void QDockWidget_SetEnabledDefault(void* ptr, char vbo);
void QDockWidget_SetStyleSheet(void* ptr, char* styleSheet);
void QDockWidget_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QDockWidget_SetVisible(void* ptr, char visible);
void QDockWidget_SetVisibleDefault(void* ptr, char visible);
void QDockWidget_SetWindowModified(void* ptr, char vbo);
void QDockWidget_SetWindowModifiedDefault(void* ptr, char vbo);
void QDockWidget_SetWindowTitle(void* ptr, char* vqs);
void QDockWidget_SetWindowTitleDefault(void* ptr, char* vqs);
void QDockWidget_ShowEvent(void* ptr, void* event);
void QDockWidget_ShowEventDefault(void* ptr, void* event);
void* QDockWidget_SizeHint(void* ptr);
void* QDockWidget_SizeHintDefault(void* ptr);
char QDockWidget_Close(void* ptr);
char QDockWidget_CloseDefault(void* ptr);
void QDockWidget_ContextMenuEvent(void* ptr, void* event);
void QDockWidget_ContextMenuEventDefault(void* ptr, void* event);
char QDockWidget_FocusNextPrevChild(void* ptr, char next);
char QDockWidget_FocusNextPrevChildDefault(void* ptr, char next);
char QDockWidget_HasHeightForWidth(void* ptr);
char QDockWidget_HasHeightForWidthDefault(void* ptr);
int QDockWidget_HeightForWidth(void* ptr, int w);
int QDockWidget_HeightForWidthDefault(void* ptr, int w);
void QDockWidget_Hide(void* ptr);
void QDockWidget_HideDefault(void* ptr);
void QDockWidget_InputMethodEvent(void* ptr, void* event);
void QDockWidget_InputMethodEventDefault(void* ptr, void* event);
void* QDockWidget_InputMethodQuery(void* ptr, long long query);
void* QDockWidget_InputMethodQueryDefault(void* ptr, long long query);
void QDockWidget_KeyPressEvent(void* ptr, void* event);
void QDockWidget_KeyPressEventDefault(void* ptr, void* event);
void QDockWidget_KeyReleaseEvent(void* ptr, void* event);
void QDockWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QDockWidget_Lower(void* ptr);
void QDockWidget_LowerDefault(void* ptr);
void QDockWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QDockWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QDockWidget_MouseMoveEvent(void* ptr, void* event);
void QDockWidget_MouseMoveEventDefault(void* ptr, void* event);
void QDockWidget_MousePressEvent(void* ptr, void* event);
void QDockWidget_MousePressEventDefault(void* ptr, void* event);
void QDockWidget_MouseReleaseEvent(void* ptr, void* event);
void QDockWidget_MouseReleaseEventDefault(void* ptr, void* event);
char QDockWidget_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QDockWidget_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QDockWidget_Raise(void* ptr);
void QDockWidget_RaiseDefault(void* ptr);
void QDockWidget_Repaint(void* ptr);
void QDockWidget_RepaintDefault(void* ptr);
void QDockWidget_ResizeEvent(void* ptr, void* event);
void QDockWidget_ResizeEventDefault(void* ptr, void* event);
void QDockWidget_SetDisabled(void* ptr, char disable);
void QDockWidget_SetDisabledDefault(void* ptr, char disable);
void QDockWidget_SetFocus2(void* ptr);
void QDockWidget_SetFocus2Default(void* ptr);
void QDockWidget_SetHidden(void* ptr, char hidden);
void QDockWidget_SetHiddenDefault(void* ptr, char hidden);
void QDockWidget_Show(void* ptr);
void QDockWidget_ShowDefault(void* ptr);
void QDockWidget_ShowFullScreen(void* ptr);
void QDockWidget_ShowFullScreenDefault(void* ptr);
void QDockWidget_ShowMaximized(void* ptr);
void QDockWidget_ShowMaximizedDefault(void* ptr);
void QDockWidget_ShowMinimized(void* ptr);
void QDockWidget_ShowMinimizedDefault(void* ptr);
void QDockWidget_ShowNormal(void* ptr);
void QDockWidget_ShowNormalDefault(void* ptr);
void QDockWidget_TabletEvent(void* ptr, void* event);
void QDockWidget_TabletEventDefault(void* ptr, void* event);
void QDockWidget_Update(void* ptr);
void QDockWidget_UpdateDefault(void* ptr);
void QDockWidget_UpdateMicroFocus(void* ptr);
void QDockWidget_UpdateMicroFocusDefault(void* ptr);
void QDockWidget_WheelEvent(void* ptr, void* event);
void QDockWidget_WheelEventDefault(void* ptr, void* event);
void QDockWidget_TimerEvent(void* ptr, void* event);
void QDockWidget_TimerEventDefault(void* ptr, void* event);
void QDockWidget_ChildEvent(void* ptr, void* event);
void QDockWidget_ChildEventDefault(void* ptr, void* event);
void QDockWidget_ConnectNotify(void* ptr, void* sign);
void QDockWidget_ConnectNotifyDefault(void* ptr, void* sign);
void QDockWidget_CustomEvent(void* ptr, void* event);
void QDockWidget_CustomEventDefault(void* ptr, void* event);
void QDockWidget_DeleteLater(void* ptr);
void QDockWidget_DeleteLaterDefault(void* ptr);
void QDockWidget_DisconnectNotify(void* ptr, void* sign);
void QDockWidget_DisconnectNotifyDefault(void* ptr, void* sign);
char QDockWidget_EventFilter(void* ptr, void* watched, void* event);
char QDockWidget_EventFilterDefault(void* ptr, void* watched, void* event);
void* QDockWidget_MetaObject(void* ptr);
void* QDockWidget_MetaObjectDefault(void* ptr);
struct QtWidgets_PackedString QDoubleSpinBox_CleanText(void* ptr);
int QDoubleSpinBox_Decimals(void* ptr);
double QDoubleSpinBox_Maximum(void* ptr);
double QDoubleSpinBox_Minimum(void* ptr);
struct QtWidgets_PackedString QDoubleSpinBox_Prefix(void* ptr);
void QDoubleSpinBox_SetDecimals(void* ptr, int prec);
void QDoubleSpinBox_SetMaximum(void* ptr, double max);
void QDoubleSpinBox_SetMinimum(void* ptr, double min);
void QDoubleSpinBox_SetPrefix(void* ptr, char* prefix);
void QDoubleSpinBox_SetSingleStep(void* ptr, double val);
void QDoubleSpinBox_SetSuffix(void* ptr, char* suffix);
void QDoubleSpinBox_SetValue(void* ptr, double val);
double QDoubleSpinBox_SingleStep(void* ptr);
struct QtWidgets_PackedString QDoubleSpinBox_Suffix(void* ptr);
double QDoubleSpinBox_Value(void* ptr);
void* QDoubleSpinBox_NewQDoubleSpinBox(void* parent);
void QDoubleSpinBox_Fixup(void* ptr, char* input);
void QDoubleSpinBox_FixupDefault(void* ptr, char* input);
void QDoubleSpinBox_SetRange(void* ptr, double minimum, double maximum);
struct QtWidgets_PackedString QDoubleSpinBox_TextFromValue(void* ptr, double value);
struct QtWidgets_PackedString QDoubleSpinBox_TextFromValueDefault(void* ptr, double value);
long long QDoubleSpinBox_Validate(void* ptr, char* text, int pos);
long long QDoubleSpinBox_ValidateDefault(void* ptr, char* text, int pos);
void QDoubleSpinBox_ConnectValueChanged2(void* ptr);
void QDoubleSpinBox_DisconnectValueChanged2(void* ptr);
void QDoubleSpinBox_ValueChanged2(void* ptr, char* text);
void QDoubleSpinBox_ConnectValueChanged(void* ptr);
void QDoubleSpinBox_DisconnectValueChanged(void* ptr);
void QDoubleSpinBox_ValueChanged(void* ptr, double d);
double QDoubleSpinBox_ValueFromText(void* ptr, char* text);
double QDoubleSpinBox_ValueFromTextDefault(void* ptr, char* text);
void QDoubleSpinBox_DestroyQDoubleSpinBox(void* ptr);
void QDoubleSpinBox_ChangeEvent(void* ptr, void* event);
void QDoubleSpinBox_ChangeEventDefault(void* ptr, void* event);
void QDoubleSpinBox_Clear(void* ptr);
void QDoubleSpinBox_ClearDefault(void* ptr);
void QDoubleSpinBox_CloseEvent(void* ptr, void* event);
void QDoubleSpinBox_CloseEventDefault(void* ptr, void* event);
void QDoubleSpinBox_ContextMenuEvent(void* ptr, void* event);
void QDoubleSpinBox_ContextMenuEventDefault(void* ptr, void* event);
void QDoubleSpinBox_FocusInEvent(void* ptr, void* event);
void QDoubleSpinBox_FocusInEventDefault(void* ptr, void* event);
void QDoubleSpinBox_FocusOutEvent(void* ptr, void* event);
void QDoubleSpinBox_FocusOutEventDefault(void* ptr, void* event);
void QDoubleSpinBox_HideEvent(void* ptr, void* event);
void QDoubleSpinBox_HideEventDefault(void* ptr, void* event);
void* QDoubleSpinBox_InputMethodQuery(void* ptr, long long query);
void* QDoubleSpinBox_InputMethodQueryDefault(void* ptr, long long query);
void QDoubleSpinBox_KeyPressEvent(void* ptr, void* event);
void QDoubleSpinBox_KeyPressEventDefault(void* ptr, void* event);
void QDoubleSpinBox_KeyReleaseEvent(void* ptr, void* event);
void QDoubleSpinBox_KeyReleaseEventDefault(void* ptr, void* event);
void* QDoubleSpinBox_MinimumSizeHint(void* ptr);
void* QDoubleSpinBox_MinimumSizeHintDefault(void* ptr);
void QDoubleSpinBox_MouseMoveEvent(void* ptr, void* event);
void QDoubleSpinBox_MouseMoveEventDefault(void* ptr, void* event);
void QDoubleSpinBox_MousePressEvent(void* ptr, void* event);
void QDoubleSpinBox_MousePressEventDefault(void* ptr, void* event);
void QDoubleSpinBox_MouseReleaseEvent(void* ptr, void* event);
void QDoubleSpinBox_MouseReleaseEventDefault(void* ptr, void* event);
void QDoubleSpinBox_PaintEvent(void* ptr, void* event);
void QDoubleSpinBox_PaintEventDefault(void* ptr, void* event);
void QDoubleSpinBox_ResizeEvent(void* ptr, void* event);
void QDoubleSpinBox_ResizeEventDefault(void* ptr, void* event);
void QDoubleSpinBox_SelectAll(void* ptr);
void QDoubleSpinBox_SelectAllDefault(void* ptr);
void QDoubleSpinBox_ShowEvent(void* ptr, void* event);
void QDoubleSpinBox_ShowEventDefault(void* ptr, void* event);
void* QDoubleSpinBox_SizeHint(void* ptr);
void* QDoubleSpinBox_SizeHintDefault(void* ptr);
void QDoubleSpinBox_StepBy(void* ptr, int steps);
void QDoubleSpinBox_StepByDefault(void* ptr, int steps);
void QDoubleSpinBox_StepDown(void* ptr);
void QDoubleSpinBox_StepDownDefault(void* ptr);
long long QDoubleSpinBox_StepEnabled(void* ptr);
long long QDoubleSpinBox_StepEnabledDefault(void* ptr);
void QDoubleSpinBox_StepUp(void* ptr);
void QDoubleSpinBox_StepUpDefault(void* ptr);
void QDoubleSpinBox_WheelEvent(void* ptr, void* event);
void QDoubleSpinBox_WheelEventDefault(void* ptr, void* event);
void QDoubleSpinBox_ActionEvent(void* ptr, void* event);
void QDoubleSpinBox_ActionEventDefault(void* ptr, void* event);
void QDoubleSpinBox_DragEnterEvent(void* ptr, void* event);
void QDoubleSpinBox_DragEnterEventDefault(void* ptr, void* event);
void QDoubleSpinBox_DragLeaveEvent(void* ptr, void* event);
void QDoubleSpinBox_DragLeaveEventDefault(void* ptr, void* event);
void QDoubleSpinBox_DragMoveEvent(void* ptr, void* event);
void QDoubleSpinBox_DragMoveEventDefault(void* ptr, void* event);
void QDoubleSpinBox_DropEvent(void* ptr, void* event);
void QDoubleSpinBox_DropEventDefault(void* ptr, void* event);
void QDoubleSpinBox_EnterEvent(void* ptr, void* event);
void QDoubleSpinBox_EnterEventDefault(void* ptr, void* event);
void QDoubleSpinBox_LeaveEvent(void* ptr, void* event);
void QDoubleSpinBox_LeaveEventDefault(void* ptr, void* event);
void QDoubleSpinBox_MoveEvent(void* ptr, void* event);
void QDoubleSpinBox_MoveEventDefault(void* ptr, void* event);
void QDoubleSpinBox_SetEnabled(void* ptr, char vbo);
void QDoubleSpinBox_SetEnabledDefault(void* ptr, char vbo);
void QDoubleSpinBox_SetStyleSheet(void* ptr, char* styleSheet);
void QDoubleSpinBox_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QDoubleSpinBox_SetVisible(void* ptr, char visible);
void QDoubleSpinBox_SetVisibleDefault(void* ptr, char visible);
void QDoubleSpinBox_SetWindowModified(void* ptr, char vbo);
void QDoubleSpinBox_SetWindowModifiedDefault(void* ptr, char vbo);
void QDoubleSpinBox_SetWindowTitle(void* ptr, char* vqs);
void QDoubleSpinBox_SetWindowTitleDefault(void* ptr, char* vqs);
char QDoubleSpinBox_Close(void* ptr);
char QDoubleSpinBox_CloseDefault(void* ptr);
char QDoubleSpinBox_FocusNextPrevChild(void* ptr, char next);
char QDoubleSpinBox_FocusNextPrevChildDefault(void* ptr, char next);
char QDoubleSpinBox_HasHeightForWidth(void* ptr);
char QDoubleSpinBox_HasHeightForWidthDefault(void* ptr);
int QDoubleSpinBox_HeightForWidth(void* ptr, int w);
int QDoubleSpinBox_HeightForWidthDefault(void* ptr, int w);
void QDoubleSpinBox_Hide(void* ptr);
void QDoubleSpinBox_HideDefault(void* ptr);
void QDoubleSpinBox_InputMethodEvent(void* ptr, void* event);
void QDoubleSpinBox_InputMethodEventDefault(void* ptr, void* event);
void QDoubleSpinBox_Lower(void* ptr);
void QDoubleSpinBox_LowerDefault(void* ptr);
void QDoubleSpinBox_MouseDoubleClickEvent(void* ptr, void* event);
void QDoubleSpinBox_MouseDoubleClickEventDefault(void* ptr, void* event);
char QDoubleSpinBox_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QDoubleSpinBox_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QDoubleSpinBox_Raise(void* ptr);
void QDoubleSpinBox_RaiseDefault(void* ptr);
void QDoubleSpinBox_Repaint(void* ptr);
void QDoubleSpinBox_RepaintDefault(void* ptr);
void QDoubleSpinBox_SetDisabled(void* ptr, char disable);
void QDoubleSpinBox_SetDisabledDefault(void* ptr, char disable);
void QDoubleSpinBox_SetFocus2(void* ptr);
void QDoubleSpinBox_SetFocus2Default(void* ptr);
void QDoubleSpinBox_SetHidden(void* ptr, char hidden);
void QDoubleSpinBox_SetHiddenDefault(void* ptr, char hidden);
void QDoubleSpinBox_Show(void* ptr);
void QDoubleSpinBox_ShowDefault(void* ptr);
void QDoubleSpinBox_ShowFullScreen(void* ptr);
void QDoubleSpinBox_ShowFullScreenDefault(void* ptr);
void QDoubleSpinBox_ShowMaximized(void* ptr);
void QDoubleSpinBox_ShowMaximizedDefault(void* ptr);
void QDoubleSpinBox_ShowMinimized(void* ptr);
void QDoubleSpinBox_ShowMinimizedDefault(void* ptr);
void QDoubleSpinBox_ShowNormal(void* ptr);
void QDoubleSpinBox_ShowNormalDefault(void* ptr);
void QDoubleSpinBox_TabletEvent(void* ptr, void* event);
void QDoubleSpinBox_TabletEventDefault(void* ptr, void* event);
void QDoubleSpinBox_Update(void* ptr);
void QDoubleSpinBox_UpdateDefault(void* ptr);
void QDoubleSpinBox_UpdateMicroFocus(void* ptr);
void QDoubleSpinBox_UpdateMicroFocusDefault(void* ptr);
void QDoubleSpinBox_ChildEvent(void* ptr, void* event);
void QDoubleSpinBox_ChildEventDefault(void* ptr, void* event);
void QDoubleSpinBox_ConnectNotify(void* ptr, void* sign);
void QDoubleSpinBox_ConnectNotifyDefault(void* ptr, void* sign);
void QDoubleSpinBox_CustomEvent(void* ptr, void* event);
void QDoubleSpinBox_CustomEventDefault(void* ptr, void* event);
void QDoubleSpinBox_DeleteLater(void* ptr);
void QDoubleSpinBox_DeleteLaterDefault(void* ptr);
void QDoubleSpinBox_DisconnectNotify(void* ptr, void* sign);
void QDoubleSpinBox_DisconnectNotifyDefault(void* ptr, void* sign);
char QDoubleSpinBox_EventFilter(void* ptr, void* watched, void* event);
char QDoubleSpinBox_EventFilterDefault(void* ptr, void* watched, void* event);
void* QDoubleSpinBox_MetaObject(void* ptr);
void* QDoubleSpinBox_MetaObjectDefault(void* ptr);
void* QErrorMessage_NewQErrorMessage(void* parent);
void QErrorMessage_ChangeEvent(void* ptr, void* e);
void QErrorMessage_ChangeEventDefault(void* ptr, void* e);
void QErrorMessage_Done(void* ptr, int a);
void QErrorMessage_DoneDefault(void* ptr, int a);
void* QErrorMessage_QErrorMessage_QtHandler();
void QErrorMessage_ShowMessage(void* ptr, char* message);
void QErrorMessage_ShowMessage2(void* ptr, char* message, char* ty);
void QErrorMessage_DestroyQErrorMessage(void* ptr);
void QErrorMessage_Accept(void* ptr);
void QErrorMessage_AcceptDefault(void* ptr);
void QErrorMessage_CloseEvent(void* ptr, void* e);
void QErrorMessage_CloseEventDefault(void* ptr, void* e);
void QErrorMessage_ContextMenuEvent(void* ptr, void* e);
void QErrorMessage_ContextMenuEventDefault(void* ptr, void* e);
int QErrorMessage_Exec(void* ptr);
int QErrorMessage_ExecDefault(void* ptr);
void QErrorMessage_KeyPressEvent(void* ptr, void* e);
void QErrorMessage_KeyPressEventDefault(void* ptr, void* e);
void* QErrorMessage_MinimumSizeHint(void* ptr);
void* QErrorMessage_MinimumSizeHintDefault(void* ptr);
void QErrorMessage_Open(void* ptr);
void QErrorMessage_OpenDefault(void* ptr);
void QErrorMessage_Reject(void* ptr);
void QErrorMessage_RejectDefault(void* ptr);
void QErrorMessage_ResizeEvent(void* ptr, void* vqr);
void QErrorMessage_ResizeEventDefault(void* ptr, void* vqr);
void QErrorMessage_SetVisible(void* ptr, char visible);
void QErrorMessage_SetVisibleDefault(void* ptr, char visible);
void QErrorMessage_ShowEvent(void* ptr, void* event);
void QErrorMessage_ShowEventDefault(void* ptr, void* event);
void* QErrorMessage_SizeHint(void* ptr);
void* QErrorMessage_SizeHintDefault(void* ptr);
void QErrorMessage_ActionEvent(void* ptr, void* event);
void QErrorMessage_ActionEventDefault(void* ptr, void* event);
void QErrorMessage_DragEnterEvent(void* ptr, void* event);
void QErrorMessage_DragEnterEventDefault(void* ptr, void* event);
void QErrorMessage_DragLeaveEvent(void* ptr, void* event);
void QErrorMessage_DragLeaveEventDefault(void* ptr, void* event);
void QErrorMessage_DragMoveEvent(void* ptr, void* event);
void QErrorMessage_DragMoveEventDefault(void* ptr, void* event);
void QErrorMessage_DropEvent(void* ptr, void* event);
void QErrorMessage_DropEventDefault(void* ptr, void* event);
void QErrorMessage_EnterEvent(void* ptr, void* event);
void QErrorMessage_EnterEventDefault(void* ptr, void* event);
void QErrorMessage_FocusInEvent(void* ptr, void* event);
void QErrorMessage_FocusInEventDefault(void* ptr, void* event);
void QErrorMessage_FocusOutEvent(void* ptr, void* event);
void QErrorMessage_FocusOutEventDefault(void* ptr, void* event);
void QErrorMessage_HideEvent(void* ptr, void* event);
void QErrorMessage_HideEventDefault(void* ptr, void* event);
void QErrorMessage_LeaveEvent(void* ptr, void* event);
void QErrorMessage_LeaveEventDefault(void* ptr, void* event);
void QErrorMessage_MoveEvent(void* ptr, void* event);
void QErrorMessage_MoveEventDefault(void* ptr, void* event);
void QErrorMessage_PaintEvent(void* ptr, void* event);
void QErrorMessage_PaintEventDefault(void* ptr, void* event);
void QErrorMessage_SetEnabled(void* ptr, char vbo);
void QErrorMessage_SetEnabledDefault(void* ptr, char vbo);
void QErrorMessage_SetStyleSheet(void* ptr, char* styleSheet);
void QErrorMessage_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QErrorMessage_SetWindowModified(void* ptr, char vbo);
void QErrorMessage_SetWindowModifiedDefault(void* ptr, char vbo);
void QErrorMessage_SetWindowTitle(void* ptr, char* vqs);
void QErrorMessage_SetWindowTitleDefault(void* ptr, char* vqs);
char QErrorMessage_Close(void* ptr);
char QErrorMessage_CloseDefault(void* ptr);
char QErrorMessage_FocusNextPrevChild(void* ptr, char next);
char QErrorMessage_FocusNextPrevChildDefault(void* ptr, char next);
char QErrorMessage_HasHeightForWidth(void* ptr);
char QErrorMessage_HasHeightForWidthDefault(void* ptr);
int QErrorMessage_HeightForWidth(void* ptr, int w);
int QErrorMessage_HeightForWidthDefault(void* ptr, int w);
void QErrorMessage_Hide(void* ptr);
void QErrorMessage_HideDefault(void* ptr);
void QErrorMessage_InputMethodEvent(void* ptr, void* event);
void QErrorMessage_InputMethodEventDefault(void* ptr, void* event);
void* QErrorMessage_InputMethodQuery(void* ptr, long long query);
void* QErrorMessage_InputMethodQueryDefault(void* ptr, long long query);
void QErrorMessage_KeyReleaseEvent(void* ptr, void* event);
void QErrorMessage_KeyReleaseEventDefault(void* ptr, void* event);
void QErrorMessage_Lower(void* ptr);
void QErrorMessage_LowerDefault(void* ptr);
void QErrorMessage_MouseDoubleClickEvent(void* ptr, void* event);
void QErrorMessage_MouseDoubleClickEventDefault(void* ptr, void* event);
void QErrorMessage_MouseMoveEvent(void* ptr, void* event);
void QErrorMessage_MouseMoveEventDefault(void* ptr, void* event);
void QErrorMessage_MousePressEvent(void* ptr, void* event);
void QErrorMessage_MousePressEventDefault(void* ptr, void* event);
void QErrorMessage_MouseReleaseEvent(void* ptr, void* event);
void QErrorMessage_MouseReleaseEventDefault(void* ptr, void* event);
char QErrorMessage_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QErrorMessage_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QErrorMessage_Raise(void* ptr);
void QErrorMessage_RaiseDefault(void* ptr);
void QErrorMessage_Repaint(void* ptr);
void QErrorMessage_RepaintDefault(void* ptr);
void QErrorMessage_SetDisabled(void* ptr, char disable);
void QErrorMessage_SetDisabledDefault(void* ptr, char disable);
void QErrorMessage_SetFocus2(void* ptr);
void QErrorMessage_SetFocus2Default(void* ptr);
void QErrorMessage_SetHidden(void* ptr, char hidden);
void QErrorMessage_SetHiddenDefault(void* ptr, char hidden);
void QErrorMessage_Show(void* ptr);
void QErrorMessage_ShowDefault(void* ptr);
void QErrorMessage_ShowFullScreen(void* ptr);
void QErrorMessage_ShowFullScreenDefault(void* ptr);
void QErrorMessage_ShowMaximized(void* ptr);
void QErrorMessage_ShowMaximizedDefault(void* ptr);
void QErrorMessage_ShowMinimized(void* ptr);
void QErrorMessage_ShowMinimizedDefault(void* ptr);
void QErrorMessage_ShowNormal(void* ptr);
void QErrorMessage_ShowNormalDefault(void* ptr);
void QErrorMessage_TabletEvent(void* ptr, void* event);
void QErrorMessage_TabletEventDefault(void* ptr, void* event);
void QErrorMessage_Update(void* ptr);
void QErrorMessage_UpdateDefault(void* ptr);
void QErrorMessage_UpdateMicroFocus(void* ptr);
void QErrorMessage_UpdateMicroFocusDefault(void* ptr);
void QErrorMessage_WheelEvent(void* ptr, void* event);
void QErrorMessage_WheelEventDefault(void* ptr, void* event);
void QErrorMessage_TimerEvent(void* ptr, void* event);
void QErrorMessage_TimerEventDefault(void* ptr, void* event);
void QErrorMessage_ChildEvent(void* ptr, void* event);
void QErrorMessage_ChildEventDefault(void* ptr, void* event);
void QErrorMessage_ConnectNotify(void* ptr, void* sign);
void QErrorMessage_ConnectNotifyDefault(void* ptr, void* sign);
void QErrorMessage_CustomEvent(void* ptr, void* event);
void QErrorMessage_CustomEventDefault(void* ptr, void* event);
void QErrorMessage_DeleteLater(void* ptr);
void QErrorMessage_DeleteLaterDefault(void* ptr);
void QErrorMessage_DisconnectNotify(void* ptr, void* sign);
void QErrorMessage_DisconnectNotifyDefault(void* ptr, void* sign);
void* QErrorMessage_MetaObject(void* ptr);
void* QErrorMessage_MetaObjectDefault(void* ptr);
void* QFileDialog_NewQFileDialog(void* parent, long long flags);
long long QFileDialog_AcceptMode(void* ptr);
char QFileDialog_ConfirmOverwrite(void* ptr);
struct QtWidgets_PackedString QFileDialog_DefaultSuffix(void* ptr);
long long QFileDialog_FileMode(void* ptr);
char QFileDialog_IsNameFilterDetailsVisible(void* ptr);
char QFileDialog_IsReadOnly(void* ptr);
long long QFileDialog_Options(void* ptr);
char QFileDialog_ResolveSymlinks(void* ptr);
void QFileDialog_SetAcceptMode(void* ptr, long long mode);
void QFileDialog_SetConfirmOverwrite(void* ptr, char enabled);
void QFileDialog_SetDefaultSuffix(void* ptr, char* suffix);
void QFileDialog_SetFileMode(void* ptr, long long mode);
void QFileDialog_SetNameFilterDetailsVisible(void* ptr, char enabled);
void QFileDialog_SetOptions(void* ptr, long long options);
void QFileDialog_SetReadOnly(void* ptr, char enabled);
void QFileDialog_SetResolveSymlinks(void* ptr, char enabled);
void QFileDialog_SetSupportedSchemes(void* ptr, char* schemes);
void QFileDialog_SetViewMode(void* ptr, long long mode);
struct QtWidgets_PackedString QFileDialog_SupportedSchemes(void* ptr);
long long QFileDialog_ViewMode(void* ptr);
void* QFileDialog_NewQFileDialog2(void* parent, char* caption, char* directory, char* filter);
void QFileDialog_Accept(void* ptr);
void QFileDialog_AcceptDefault(void* ptr);
void QFileDialog_ChangeEvent(void* ptr, void* e);
void QFileDialog_ChangeEventDefault(void* ptr, void* e);
void QFileDialog_ConnectCurrentChanged(void* ptr);
void QFileDialog_DisconnectCurrentChanged(void* ptr);
void QFileDialog_CurrentChanged(void* ptr, char* path);
void QFileDialog_ConnectCurrentUrlChanged(void* ptr);
void QFileDialog_DisconnectCurrentUrlChanged(void* ptr);
void QFileDialog_CurrentUrlChanged(void* ptr, void* url);
void* QFileDialog_Directory(void* ptr);
void QFileDialog_ConnectDirectoryEntered(void* ptr);
void QFileDialog_DisconnectDirectoryEntered(void* ptr);
void QFileDialog_DirectoryEntered(void* ptr, char* directory);
void* QFileDialog_DirectoryUrl(void* ptr);
void QFileDialog_ConnectDirectoryUrlEntered(void* ptr);
void QFileDialog_DisconnectDirectoryUrlEntered(void* ptr);
void QFileDialog_DirectoryUrlEntered(void* ptr, void* directory);
void QFileDialog_Done(void* ptr, int result);
void QFileDialog_DoneDefault(void* ptr, int result);
void QFileDialog_ConnectFileSelected(void* ptr);
void QFileDialog_DisconnectFileSelected(void* ptr);
void QFileDialog_FileSelected(void* ptr, char* file);
void QFileDialog_ConnectFilesSelected(void* ptr);
void QFileDialog_DisconnectFilesSelected(void* ptr);
void QFileDialog_FilesSelected(void* ptr, char* selected);
long long QFileDialog_Filter(void* ptr);
void QFileDialog_ConnectFilterSelected(void* ptr);
void QFileDialog_DisconnectFilterSelected(void* ptr);
void QFileDialog_FilterSelected(void* ptr, char* filter);
struct QtWidgets_PackedString QFileDialog_QFileDialog_GetExistingDirectory(void* parent, char* caption, char* dir, long long options);
void* QFileDialog_QFileDialog_GetExistingDirectoryUrl(void* parent, char* caption, void* dir, long long options, char* supportedSchemes);
struct QtWidgets_PackedString QFileDialog_QFileDialog_GetOpenFileName(void* parent, char* caption, char* dir, char* filter, char* selectedFilter, long long options);
struct QtWidgets_PackedString QFileDialog_QFileDialog_GetOpenFileNames(void* parent, char* caption, char* dir, char* filter, char* selectedFilter, long long options);
void* QFileDialog_QFileDialog_GetOpenFileUrl(void* parent, char* caption, void* dir, char* filter, char* selectedFilter, long long options, char* supportedSchemes);
struct QtWidgets_PackedList QFileDialog_QFileDialog_GetOpenFileUrls(void* parent, char* caption, void* dir, char* filter, char* selectedFilter, long long options, char* supportedSchemes);
struct QtWidgets_PackedString QFileDialog_QFileDialog_GetSaveFileName(void* parent, char* caption, char* dir, char* filter, char* selectedFilter, long long options);
void* QFileDialog_QFileDialog_GetSaveFileUrl(void* parent, char* caption, void* dir, char* filter, char* selectedFilter, long long options, char* supportedSchemes);
struct QtWidgets_PackedString QFileDialog_History(void* ptr);
void* QFileDialog_IconProvider(void* ptr);
void* QFileDialog_ItemDelegate(void* ptr);
struct QtWidgets_PackedString QFileDialog_LabelText(void* ptr, long long label);
struct QtWidgets_PackedString QFileDialog_MimeTypeFilters(void* ptr);
struct QtWidgets_PackedString QFileDialog_NameFilters(void* ptr);
void QFileDialog_Open(void* ptr, void* receiver, char* member);
void* QFileDialog_ProxyModel(void* ptr);
char QFileDialog_RestoreState(void* ptr, void* state);
void* QFileDialog_SaveState(void* ptr);
void QFileDialog_SelectFile(void* ptr, char* filename);
void QFileDialog_SelectMimeTypeFilter(void* ptr, char* filter);
void QFileDialog_SelectNameFilter(void* ptr, char* filter);
void QFileDialog_SelectUrl(void* ptr, void* url);
struct QtWidgets_PackedString QFileDialog_SelectedFiles(void* ptr);
struct QtWidgets_PackedString QFileDialog_SelectedNameFilter(void* ptr);
struct QtWidgets_PackedList QFileDialog_SelectedUrls(void* ptr);
void QFileDialog_SetDirectory2(void* ptr, void* directory);
void QFileDialog_SetDirectory(void* ptr, char* directory);
void QFileDialog_SetDirectoryUrl(void* ptr, void* directory);
void QFileDialog_SetFilter(void* ptr, long long filters);
void QFileDialog_SetHistory(void* ptr, char* paths);
void QFileDialog_SetIconProvider(void* ptr, void* provider);
void QFileDialog_SetItemDelegate(void* ptr, void* delegate);
void QFileDialog_SetLabelText(void* ptr, long long label, char* text);
void QFileDialog_SetMimeTypeFilters(void* ptr, char* filters);
void QFileDialog_SetNameFilter(void* ptr, char* filter);
void QFileDialog_SetNameFilters(void* ptr, char* filters);
void QFileDialog_SetOption(void* ptr, long long option, char on);
void QFileDialog_SetProxyModel(void* ptr, void* proxyModel);
void QFileDialog_SetVisible(void* ptr, char visible);
void QFileDialog_SetVisibleDefault(void* ptr, char visible);
struct QtWidgets_PackedList QFileDialog_SidebarUrls(void* ptr);
char QFileDialog_TestOption(void* ptr, long long option);
void QFileDialog_ConnectUrlSelected(void* ptr);
void QFileDialog_DisconnectUrlSelected(void* ptr);
void QFileDialog_UrlSelected(void* ptr, void* url);
void QFileDialog_DestroyQFileDialog(void* ptr);
void* QFileDialog_getOpenFileUrls_atList(void* ptr, int i);
void* QFileDialog_selectedUrls_atList(void* ptr, int i);
void* QFileDialog_sidebarUrls_atList(void* ptr, int i);
void QFileDialog_CloseEvent(void* ptr, void* e);
void QFileDialog_CloseEventDefault(void* ptr, void* e);
void QFileDialog_ContextMenuEvent(void* ptr, void* e);
void QFileDialog_ContextMenuEventDefault(void* ptr, void* e);
int QFileDialog_Exec(void* ptr);
int QFileDialog_ExecDefault(void* ptr);
void QFileDialog_KeyPressEvent(void* ptr, void* e);
void QFileDialog_KeyPressEventDefault(void* ptr, void* e);
void* QFileDialog_MinimumSizeHint(void* ptr);
void* QFileDialog_MinimumSizeHintDefault(void* ptr);
void QFileDialog_Reject(void* ptr);
void QFileDialog_RejectDefault(void* ptr);
void QFileDialog_ResizeEvent(void* ptr, void* vqr);
void QFileDialog_ResizeEventDefault(void* ptr, void* vqr);
void QFileDialog_ShowEvent(void* ptr, void* event);
void QFileDialog_ShowEventDefault(void* ptr, void* event);
void* QFileDialog_SizeHint(void* ptr);
void* QFileDialog_SizeHintDefault(void* ptr);
void QFileDialog_ActionEvent(void* ptr, void* event);
void QFileDialog_ActionEventDefault(void* ptr, void* event);
void QFileDialog_DragEnterEvent(void* ptr, void* event);
void QFileDialog_DragEnterEventDefault(void* ptr, void* event);
void QFileDialog_DragLeaveEvent(void* ptr, void* event);
void QFileDialog_DragLeaveEventDefault(void* ptr, void* event);
void QFileDialog_DragMoveEvent(void* ptr, void* event);
void QFileDialog_DragMoveEventDefault(void* ptr, void* event);
void QFileDialog_DropEvent(void* ptr, void* event);
void QFileDialog_DropEventDefault(void* ptr, void* event);
void QFileDialog_EnterEvent(void* ptr, void* event);
void QFileDialog_EnterEventDefault(void* ptr, void* event);
void QFileDialog_FocusInEvent(void* ptr, void* event);
void QFileDialog_FocusInEventDefault(void* ptr, void* event);
void QFileDialog_FocusOutEvent(void* ptr, void* event);
void QFileDialog_FocusOutEventDefault(void* ptr, void* event);
void QFileDialog_HideEvent(void* ptr, void* event);
void QFileDialog_HideEventDefault(void* ptr, void* event);
void QFileDialog_LeaveEvent(void* ptr, void* event);
void QFileDialog_LeaveEventDefault(void* ptr, void* event);
void QFileDialog_MoveEvent(void* ptr, void* event);
void QFileDialog_MoveEventDefault(void* ptr, void* event);
void QFileDialog_PaintEvent(void* ptr, void* event);
void QFileDialog_PaintEventDefault(void* ptr, void* event);
void QFileDialog_SetEnabled(void* ptr, char vbo);
void QFileDialog_SetEnabledDefault(void* ptr, char vbo);
void QFileDialog_SetStyleSheet(void* ptr, char* styleSheet);
void QFileDialog_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QFileDialog_SetWindowModified(void* ptr, char vbo);
void QFileDialog_SetWindowModifiedDefault(void* ptr, char vbo);
void QFileDialog_SetWindowTitle(void* ptr, char* vqs);
void QFileDialog_SetWindowTitleDefault(void* ptr, char* vqs);
char QFileDialog_Close(void* ptr);
char QFileDialog_CloseDefault(void* ptr);
char QFileDialog_FocusNextPrevChild(void* ptr, char next);
char QFileDialog_FocusNextPrevChildDefault(void* ptr, char next);
char QFileDialog_HasHeightForWidth(void* ptr);
char QFileDialog_HasHeightForWidthDefault(void* ptr);
int QFileDialog_HeightForWidth(void* ptr, int w);
int QFileDialog_HeightForWidthDefault(void* ptr, int w);
void QFileDialog_Hide(void* ptr);
void QFileDialog_HideDefault(void* ptr);
void QFileDialog_InputMethodEvent(void* ptr, void* event);
void QFileDialog_InputMethodEventDefault(void* ptr, void* event);
void* QFileDialog_InputMethodQuery(void* ptr, long long query);
void* QFileDialog_InputMethodQueryDefault(void* ptr, long long query);
void QFileDialog_KeyReleaseEvent(void* ptr, void* event);
void QFileDialog_KeyReleaseEventDefault(void* ptr, void* event);
void QFileDialog_Lower(void* ptr);
void QFileDialog_LowerDefault(void* ptr);
void QFileDialog_MouseDoubleClickEvent(void* ptr, void* event);
void QFileDialog_MouseDoubleClickEventDefault(void* ptr, void* event);
void QFileDialog_MouseMoveEvent(void* ptr, void* event);
void QFileDialog_MouseMoveEventDefault(void* ptr, void* event);
void QFileDialog_MousePressEvent(void* ptr, void* event);
void QFileDialog_MousePressEventDefault(void* ptr, void* event);
void QFileDialog_MouseReleaseEvent(void* ptr, void* event);
void QFileDialog_MouseReleaseEventDefault(void* ptr, void* event);
char QFileDialog_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QFileDialog_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QFileDialog_Raise(void* ptr);
void QFileDialog_RaiseDefault(void* ptr);
void QFileDialog_Repaint(void* ptr);
void QFileDialog_RepaintDefault(void* ptr);
void QFileDialog_SetDisabled(void* ptr, char disable);
void QFileDialog_SetDisabledDefault(void* ptr, char disable);
void QFileDialog_SetFocus2(void* ptr);
void QFileDialog_SetFocus2Default(void* ptr);
void QFileDialog_SetHidden(void* ptr, char hidden);
void QFileDialog_SetHiddenDefault(void* ptr, char hidden);
void QFileDialog_Show(void* ptr);
void QFileDialog_ShowDefault(void* ptr);
void QFileDialog_ShowFullScreen(void* ptr);
void QFileDialog_ShowFullScreenDefault(void* ptr);
void QFileDialog_ShowMaximized(void* ptr);
void QFileDialog_ShowMaximizedDefault(void* ptr);
void QFileDialog_ShowMinimized(void* ptr);
void QFileDialog_ShowMinimizedDefault(void* ptr);
void QFileDialog_ShowNormal(void* ptr);
void QFileDialog_ShowNormalDefault(void* ptr);
void QFileDialog_TabletEvent(void* ptr, void* event);
void QFileDialog_TabletEventDefault(void* ptr, void* event);
void QFileDialog_Update(void* ptr);
void QFileDialog_UpdateDefault(void* ptr);
void QFileDialog_UpdateMicroFocus(void* ptr);
void QFileDialog_UpdateMicroFocusDefault(void* ptr);
void QFileDialog_WheelEvent(void* ptr, void* event);
void QFileDialog_WheelEventDefault(void* ptr, void* event);
void QFileDialog_TimerEvent(void* ptr, void* event);
void QFileDialog_TimerEventDefault(void* ptr, void* event);
void QFileDialog_ChildEvent(void* ptr, void* event);
void QFileDialog_ChildEventDefault(void* ptr, void* event);
void QFileDialog_ConnectNotify(void* ptr, void* sign);
void QFileDialog_ConnectNotifyDefault(void* ptr, void* sign);
void QFileDialog_CustomEvent(void* ptr, void* event);
void QFileDialog_CustomEventDefault(void* ptr, void* event);
void QFileDialog_DeleteLater(void* ptr);
void QFileDialog_DeleteLaterDefault(void* ptr);
void QFileDialog_DisconnectNotify(void* ptr, void* sign);
void QFileDialog_DisconnectNotifyDefault(void* ptr, void* sign);
void* QFileDialog_MetaObject(void* ptr);
void* QFileDialog_MetaObjectDefault(void* ptr);
void* QFileIconProvider_NewQFileIconProvider();
void* QFileIconProvider_Icon(void* ptr, long long ty);
void* QFileIconProvider_IconDefault(void* ptr, long long ty);
void* QFileIconProvider_Icon2(void* ptr, void* info);
void* QFileIconProvider_Icon2Default(void* ptr, void* info);
long long QFileIconProvider_Options(void* ptr);
void QFileIconProvider_SetOptions(void* ptr, long long options);
struct QtWidgets_PackedString QFileIconProvider_Type(void* ptr, void* info);
struct QtWidgets_PackedString QFileIconProvider_TypeDefault(void* ptr, void* info);
void QFileIconProvider_DestroyQFileIconProvider(void* ptr);
void QFileIconProvider_DestroyQFileIconProviderDefault(void* ptr);
int QFileSystemModel_FilePathRole_Type();
int QFileSystemModel_FileNameRole_Type();
int QFileSystemModel_FilePermissions_Type();
void* QFileSystemModel_FileInfo(void* ptr, void* index);
char QFileSystemModel_IsReadOnly(void* ptr);
char QFileSystemModel_NameFilterDisables(void* ptr);
char QFileSystemModel_Remove(void* ptr, void* index);
char QFileSystemModel_ResolveSymlinks(void* ptr);
char QFileSystemModel_Rmdir(void* ptr, void* index);
void QFileSystemModel_SetNameFilterDisables(void* ptr, char enable);
void QFileSystemModel_SetReadOnly(void* ptr, char enable);
void QFileSystemModel_SetResolveSymlinks(void* ptr, char enable);
void* QFileSystemModel_NewQFileSystemModel(void* parent);
char QFileSystemModel_CanFetchMore(void* ptr, void* parent);
int QFileSystemModel_ColumnCount(void* ptr, void* parent);
void* QFileSystemModel_Data(void* ptr, void* index, int role);
void QFileSystemModel_ConnectDirectoryLoaded(void* ptr);
void QFileSystemModel_DisconnectDirectoryLoaded(void* ptr);
void QFileSystemModel_DirectoryLoaded(void* ptr, char* path);
char QFileSystemModel_DropMimeData(void* ptr, void* data, long long action, int row, int column, void* parent);
char QFileSystemModel_Event(void* ptr, void* event);
void QFileSystemModel_FetchMore(void* ptr, void* parent);
void* QFileSystemModel_FileIcon(void* ptr, void* index);
struct QtWidgets_PackedString QFileSystemModel_FileName(void* ptr, void* index);
struct QtWidgets_PackedString QFileSystemModel_FilePath(void* ptr, void* index);
void QFileSystemModel_ConnectFileRenamed(void* ptr);
void QFileSystemModel_DisconnectFileRenamed(void* ptr);
void QFileSystemModel_FileRenamed(void* ptr, char* path, char* oldName, char* newName);
long long QFileSystemModel_Filter(void* ptr);
long long QFileSystemModel_Flags(void* ptr, void* index);
char QFileSystemModel_HasChildren(void* ptr, void* parent);
void* QFileSystemModel_HeaderData(void* ptr, int section, long long orientation, int role);
void* QFileSystemModel_IconProvider(void* ptr);
void* QFileSystemModel_Index2(void* ptr, char* path, int column);
void* QFileSystemModel_Index(void* ptr, int row, int column, void* parent);
char QFileSystemModel_IsDir(void* ptr, void* index);
void* QFileSystemModel_LastModified(void* ptr, void* index);
struct QtWidgets_PackedString QFileSystemModel_MimeTypes(void* ptr);
void* QFileSystemModel_Mkdir(void* ptr, void* parent, char* name);
void* QFileSystemModel_MyComputer(void* ptr, int role);
struct QtWidgets_PackedString QFileSystemModel_NameFilters(void* ptr);
void* QFileSystemModel_Parent(void* ptr, void* index);
void* QFileSystemModel_RootDirectory(void* ptr);
struct QtWidgets_PackedString QFileSystemModel_RootPath(void* ptr);
void QFileSystemModel_ConnectRootPathChanged(void* ptr);
void QFileSystemModel_DisconnectRootPathChanged(void* ptr);
void QFileSystemModel_RootPathChanged(void* ptr, char* newPath);
int QFileSystemModel_RowCount(void* ptr, void* parent);
char QFileSystemModel_SetData(void* ptr, void* idx, void* value, int role);
void QFileSystemModel_SetFilter(void* ptr, long long filters);
void QFileSystemModel_SetIconProvider(void* ptr, void* provider);
void QFileSystemModel_SetNameFilters(void* ptr, char* filters);
void* QFileSystemModel_SetRootPath(void* ptr, char* newPath);
void* QFileSystemModel_Sibling(void* ptr, int row, int column, void* idx);
long long QFileSystemModel_Size(void* ptr, void* index);
void QFileSystemModel_Sort(void* ptr, int column, long long order);
long long QFileSystemModel_SupportedDropActions(void* ptr);
void QFileSystemModel_TimerEvent(void* ptr, void* event);
struct QtWidgets_PackedString QFileSystemModel_Type(void* ptr, void* index);
void QFileSystemModel_DestroyQFileSystemModel(void* ptr);
void* QFileSystemModel_Buddy(void* ptr, void* index);
void* QFileSystemModel_BuddyDefault(void* ptr, void* index);
char QFileSystemModel_CanDropMimeData(void* ptr, void* data, long long action, int row, int column, void* parent);
char QFileSystemModel_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char QFileSystemModel_InsertColumns(void* ptr, int column, int count, void* parent);
char QFileSystemModel_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char QFileSystemModel_InsertRows(void* ptr, int row, int count, void* parent);
char QFileSystemModel_InsertRowsDefault(void* ptr, int row, int count, void* parent);
char QFileSystemModel_MoveColumns(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char QFileSystemModel_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char QFileSystemModel_MoveRows(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
char QFileSystemModel_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
char QFileSystemModel_RemoveColumns(void* ptr, int column, int count, void* parent);
char QFileSystemModel_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char QFileSystemModel_RemoveRows(void* ptr, int row, int count, void* parent);
char QFileSystemModel_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
void QFileSystemModel_ResetInternalData(void* ptr);
void QFileSystemModel_ResetInternalDataDefault(void* ptr);
void QFileSystemModel_Revert(void* ptr);
void QFileSystemModel_RevertDefault(void* ptr);
char QFileSystemModel_SetHeaderData(void* ptr, int section, long long orientation, void* value, int role);
char QFileSystemModel_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
void* QFileSystemModel_Span(void* ptr, void* index);
void* QFileSystemModel_SpanDefault(void* ptr, void* index);
char QFileSystemModel_Submit(void* ptr);
char QFileSystemModel_SubmitDefault(void* ptr);
long long QFileSystemModel_SupportedDragActions(void* ptr);
long long QFileSystemModel_SupportedDragActionsDefault(void* ptr);
void QFileSystemModel_ChildEvent(void* ptr, void* event);
void QFileSystemModel_ChildEventDefault(void* ptr, void* event);
void QFileSystemModel_ConnectNotify(void* ptr, void* sign);
void QFileSystemModel_ConnectNotifyDefault(void* ptr, void* sign);
void QFileSystemModel_CustomEvent(void* ptr, void* event);
void QFileSystemModel_CustomEventDefault(void* ptr, void* event);
void QFileSystemModel_DeleteLater(void* ptr);
void QFileSystemModel_DeleteLaterDefault(void* ptr);
void QFileSystemModel_DisconnectNotify(void* ptr, void* sign);
void QFileSystemModel_DisconnectNotifyDefault(void* ptr, void* sign);
char QFileSystemModel_EventFilter(void* ptr, void* watched, void* event);
char QFileSystemModel_EventFilterDefault(void* ptr, void* watched, void* event);
void* QFileSystemModel_MetaObject(void* ptr);
void* QFileSystemModel_MetaObjectDefault(void* ptr);
void* QFocusFrame_NewQFocusFrame(void* parent);
char QFocusFrame_Event(void* ptr, void* e);
char QFocusFrame_EventFilter(void* ptr, void* o, void* e);
void QFocusFrame_InitStyleOption(void* ptr, void* option);
void QFocusFrame_PaintEvent(void* ptr, void* vqp);
void QFocusFrame_PaintEventDefault(void* ptr, void* vqp);
void QFocusFrame_SetWidget(void* ptr, void* widget);
void* QFocusFrame_Widget(void* ptr);
void QFocusFrame_DestroyQFocusFrame(void* ptr);
void QFocusFrame_ActionEvent(void* ptr, void* event);
void QFocusFrame_ActionEventDefault(void* ptr, void* event);
void QFocusFrame_DragEnterEvent(void* ptr, void* event);
void QFocusFrame_DragEnterEventDefault(void* ptr, void* event);
void QFocusFrame_DragLeaveEvent(void* ptr, void* event);
void QFocusFrame_DragLeaveEventDefault(void* ptr, void* event);
void QFocusFrame_DragMoveEvent(void* ptr, void* event);
void QFocusFrame_DragMoveEventDefault(void* ptr, void* event);
void QFocusFrame_DropEvent(void* ptr, void* event);
void QFocusFrame_DropEventDefault(void* ptr, void* event);
void QFocusFrame_EnterEvent(void* ptr, void* event);
void QFocusFrame_EnterEventDefault(void* ptr, void* event);
void QFocusFrame_FocusInEvent(void* ptr, void* event);
void QFocusFrame_FocusInEventDefault(void* ptr, void* event);
void QFocusFrame_FocusOutEvent(void* ptr, void* event);
void QFocusFrame_FocusOutEventDefault(void* ptr, void* event);
void QFocusFrame_HideEvent(void* ptr, void* event);
void QFocusFrame_HideEventDefault(void* ptr, void* event);
void QFocusFrame_LeaveEvent(void* ptr, void* event);
void QFocusFrame_LeaveEventDefault(void* ptr, void* event);
void* QFocusFrame_MinimumSizeHint(void* ptr);
void* QFocusFrame_MinimumSizeHintDefault(void* ptr);
void QFocusFrame_MoveEvent(void* ptr, void* event);
void QFocusFrame_MoveEventDefault(void* ptr, void* event);
void QFocusFrame_SetEnabled(void* ptr, char vbo);
void QFocusFrame_SetEnabledDefault(void* ptr, char vbo);
void QFocusFrame_SetStyleSheet(void* ptr, char* styleSheet);
void QFocusFrame_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QFocusFrame_SetVisible(void* ptr, char visible);
void QFocusFrame_SetVisibleDefault(void* ptr, char visible);
void QFocusFrame_SetWindowModified(void* ptr, char vbo);
void QFocusFrame_SetWindowModifiedDefault(void* ptr, char vbo);
void QFocusFrame_SetWindowTitle(void* ptr, char* vqs);
void QFocusFrame_SetWindowTitleDefault(void* ptr, char* vqs);
void QFocusFrame_ShowEvent(void* ptr, void* event);
void QFocusFrame_ShowEventDefault(void* ptr, void* event);
void* QFocusFrame_SizeHint(void* ptr);
void* QFocusFrame_SizeHintDefault(void* ptr);
void QFocusFrame_ChangeEvent(void* ptr, void* event);
void QFocusFrame_ChangeEventDefault(void* ptr, void* event);
char QFocusFrame_Close(void* ptr);
char QFocusFrame_CloseDefault(void* ptr);
void QFocusFrame_CloseEvent(void* ptr, void* event);
void QFocusFrame_CloseEventDefault(void* ptr, void* event);
void QFocusFrame_ContextMenuEvent(void* ptr, void* event);
void QFocusFrame_ContextMenuEventDefault(void* ptr, void* event);
char QFocusFrame_FocusNextPrevChild(void* ptr, char next);
char QFocusFrame_FocusNextPrevChildDefault(void* ptr, char next);
char QFocusFrame_HasHeightForWidth(void* ptr);
char QFocusFrame_HasHeightForWidthDefault(void* ptr);
int QFocusFrame_HeightForWidth(void* ptr, int w);
int QFocusFrame_HeightForWidthDefault(void* ptr, int w);
void QFocusFrame_Hide(void* ptr);
void QFocusFrame_HideDefault(void* ptr);
void QFocusFrame_InputMethodEvent(void* ptr, void* event);
void QFocusFrame_InputMethodEventDefault(void* ptr, void* event);
void* QFocusFrame_InputMethodQuery(void* ptr, long long query);
void* QFocusFrame_InputMethodQueryDefault(void* ptr, long long query);
void QFocusFrame_KeyPressEvent(void* ptr, void* event);
void QFocusFrame_KeyPressEventDefault(void* ptr, void* event);
void QFocusFrame_KeyReleaseEvent(void* ptr, void* event);
void QFocusFrame_KeyReleaseEventDefault(void* ptr, void* event);
void QFocusFrame_Lower(void* ptr);
void QFocusFrame_LowerDefault(void* ptr);
void QFocusFrame_MouseDoubleClickEvent(void* ptr, void* event);
void QFocusFrame_MouseDoubleClickEventDefault(void* ptr, void* event);
void QFocusFrame_MouseMoveEvent(void* ptr, void* event);
void QFocusFrame_MouseMoveEventDefault(void* ptr, void* event);
void QFocusFrame_MousePressEvent(void* ptr, void* event);
void QFocusFrame_MousePressEventDefault(void* ptr, void* event);
void QFocusFrame_MouseReleaseEvent(void* ptr, void* event);
void QFocusFrame_MouseReleaseEventDefault(void* ptr, void* event);
char QFocusFrame_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QFocusFrame_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QFocusFrame_Raise(void* ptr);
void QFocusFrame_RaiseDefault(void* ptr);
void QFocusFrame_Repaint(void* ptr);
void QFocusFrame_RepaintDefault(void* ptr);
void QFocusFrame_ResizeEvent(void* ptr, void* event);
void QFocusFrame_ResizeEventDefault(void* ptr, void* event);
void QFocusFrame_SetDisabled(void* ptr, char disable);
void QFocusFrame_SetDisabledDefault(void* ptr, char disable);
void QFocusFrame_SetFocus2(void* ptr);
void QFocusFrame_SetFocus2Default(void* ptr);
void QFocusFrame_SetHidden(void* ptr, char hidden);
void QFocusFrame_SetHiddenDefault(void* ptr, char hidden);
void QFocusFrame_Show(void* ptr);
void QFocusFrame_ShowDefault(void* ptr);
void QFocusFrame_ShowFullScreen(void* ptr);
void QFocusFrame_ShowFullScreenDefault(void* ptr);
void QFocusFrame_ShowMaximized(void* ptr);
void QFocusFrame_ShowMaximizedDefault(void* ptr);
void QFocusFrame_ShowMinimized(void* ptr);
void QFocusFrame_ShowMinimizedDefault(void* ptr);
void QFocusFrame_ShowNormal(void* ptr);
void QFocusFrame_ShowNormalDefault(void* ptr);
void QFocusFrame_TabletEvent(void* ptr, void* event);
void QFocusFrame_TabletEventDefault(void* ptr, void* event);
void QFocusFrame_Update(void* ptr);
void QFocusFrame_UpdateDefault(void* ptr);
void QFocusFrame_UpdateMicroFocus(void* ptr);
void QFocusFrame_UpdateMicroFocusDefault(void* ptr);
void QFocusFrame_WheelEvent(void* ptr, void* event);
void QFocusFrame_WheelEventDefault(void* ptr, void* event);
void QFocusFrame_TimerEvent(void* ptr, void* event);
void QFocusFrame_TimerEventDefault(void* ptr, void* event);
void QFocusFrame_ChildEvent(void* ptr, void* event);
void QFocusFrame_ChildEventDefault(void* ptr, void* event);
void QFocusFrame_ConnectNotify(void* ptr, void* sign);
void QFocusFrame_ConnectNotifyDefault(void* ptr, void* sign);
void QFocusFrame_CustomEvent(void* ptr, void* event);
void QFocusFrame_CustomEventDefault(void* ptr, void* event);
void QFocusFrame_DeleteLater(void* ptr);
void QFocusFrame_DeleteLaterDefault(void* ptr);
void QFocusFrame_DisconnectNotify(void* ptr, void* sign);
void QFocusFrame_DisconnectNotifyDefault(void* ptr, void* sign);
void* QFocusFrame_MetaObject(void* ptr);
void* QFocusFrame_MetaObjectDefault(void* ptr);
void* QFontComboBox_CurrentFont(void* ptr);
long long QFontComboBox_FontFilters(void* ptr);
void QFontComboBox_SetCurrentFont(void* ptr, void* f);
void QFontComboBox_SetFontFilters(void* ptr, long long filters);
void QFontComboBox_SetWritingSystem(void* ptr, long long vqf);
long long QFontComboBox_WritingSystem(void* ptr);
void* QFontComboBox_NewQFontComboBox(void* parent);
void QFontComboBox_ConnectCurrentFontChanged(void* ptr);
void QFontComboBox_DisconnectCurrentFontChanged(void* ptr);
void QFontComboBox_CurrentFontChanged(void* ptr, void* font);
char QFontComboBox_Event(void* ptr, void* e);
void* QFontComboBox_SizeHint(void* ptr);
void* QFontComboBox_SizeHintDefault(void* ptr);
void QFontComboBox_DestroyQFontComboBox(void* ptr);
void QFontComboBox_SetCurrentIndex(void* ptr, int index);
void QFontComboBox_SetCurrentIndexDefault(void* ptr, int index);
void QFontComboBox_SetCurrentText(void* ptr, char* text);
void QFontComboBox_SetCurrentTextDefault(void* ptr, char* text);
void QFontComboBox_ChangeEvent(void* ptr, void* e);
void QFontComboBox_ChangeEventDefault(void* ptr, void* e);
void QFontComboBox_Clear(void* ptr);
void QFontComboBox_ClearDefault(void* ptr);
void QFontComboBox_ClearEditText(void* ptr);
void QFontComboBox_ClearEditTextDefault(void* ptr);
void QFontComboBox_ContextMenuEvent(void* ptr, void* e);
void QFontComboBox_ContextMenuEventDefault(void* ptr, void* e);
void QFontComboBox_FocusInEvent(void* ptr, void* e);
void QFontComboBox_FocusInEventDefault(void* ptr, void* e);
void QFontComboBox_FocusOutEvent(void* ptr, void* e);
void QFontComboBox_FocusOutEventDefault(void* ptr, void* e);
void QFontComboBox_HideEvent(void* ptr, void* e);
void QFontComboBox_HideEventDefault(void* ptr, void* e);
void QFontComboBox_HidePopup(void* ptr);
void QFontComboBox_HidePopupDefault(void* ptr);
void QFontComboBox_InputMethodEvent(void* ptr, void* e);
void QFontComboBox_InputMethodEventDefault(void* ptr, void* e);
void* QFontComboBox_InputMethodQuery(void* ptr, long long query);
void* QFontComboBox_InputMethodQueryDefault(void* ptr, long long query);
void QFontComboBox_KeyPressEvent(void* ptr, void* e);
void QFontComboBox_KeyPressEventDefault(void* ptr, void* e);
void QFontComboBox_KeyReleaseEvent(void* ptr, void* e);
void QFontComboBox_KeyReleaseEventDefault(void* ptr, void* e);
void* QFontComboBox_MinimumSizeHint(void* ptr);
void* QFontComboBox_MinimumSizeHintDefault(void* ptr);
void QFontComboBox_MousePressEvent(void* ptr, void* e);
void QFontComboBox_MousePressEventDefault(void* ptr, void* e);
void QFontComboBox_MouseReleaseEvent(void* ptr, void* e);
void QFontComboBox_MouseReleaseEventDefault(void* ptr, void* e);
void QFontComboBox_PaintEvent(void* ptr, void* e);
void QFontComboBox_PaintEventDefault(void* ptr, void* e);
void QFontComboBox_ResizeEvent(void* ptr, void* e);
void QFontComboBox_ResizeEventDefault(void* ptr, void* e);
void QFontComboBox_SetEditText(void* ptr, char* text);
void QFontComboBox_SetEditTextDefault(void* ptr, char* text);
void QFontComboBox_ShowEvent(void* ptr, void* e);
void QFontComboBox_ShowEventDefault(void* ptr, void* e);
void QFontComboBox_ShowPopup(void* ptr);
void QFontComboBox_ShowPopupDefault(void* ptr);
void QFontComboBox_WheelEvent(void* ptr, void* e);
void QFontComboBox_WheelEventDefault(void* ptr, void* e);
void QFontComboBox_ActionEvent(void* ptr, void* event);
void QFontComboBox_ActionEventDefault(void* ptr, void* event);
void QFontComboBox_DragEnterEvent(void* ptr, void* event);
void QFontComboBox_DragEnterEventDefault(void* ptr, void* event);
void QFontComboBox_DragLeaveEvent(void* ptr, void* event);
void QFontComboBox_DragLeaveEventDefault(void* ptr, void* event);
void QFontComboBox_DragMoveEvent(void* ptr, void* event);
void QFontComboBox_DragMoveEventDefault(void* ptr, void* event);
void QFontComboBox_DropEvent(void* ptr, void* event);
void QFontComboBox_DropEventDefault(void* ptr, void* event);
void QFontComboBox_EnterEvent(void* ptr, void* event);
void QFontComboBox_EnterEventDefault(void* ptr, void* event);
void QFontComboBox_LeaveEvent(void* ptr, void* event);
void QFontComboBox_LeaveEventDefault(void* ptr, void* event);
void QFontComboBox_MoveEvent(void* ptr, void* event);
void QFontComboBox_MoveEventDefault(void* ptr, void* event);
void QFontComboBox_SetEnabled(void* ptr, char vbo);
void QFontComboBox_SetEnabledDefault(void* ptr, char vbo);
void QFontComboBox_SetStyleSheet(void* ptr, char* styleSheet);
void QFontComboBox_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QFontComboBox_SetVisible(void* ptr, char visible);
void QFontComboBox_SetVisibleDefault(void* ptr, char visible);
void QFontComboBox_SetWindowModified(void* ptr, char vbo);
void QFontComboBox_SetWindowModifiedDefault(void* ptr, char vbo);
void QFontComboBox_SetWindowTitle(void* ptr, char* vqs);
void QFontComboBox_SetWindowTitleDefault(void* ptr, char* vqs);
char QFontComboBox_Close(void* ptr);
char QFontComboBox_CloseDefault(void* ptr);
void QFontComboBox_CloseEvent(void* ptr, void* event);
void QFontComboBox_CloseEventDefault(void* ptr, void* event);
char QFontComboBox_FocusNextPrevChild(void* ptr, char next);
char QFontComboBox_FocusNextPrevChildDefault(void* ptr, char next);
char QFontComboBox_HasHeightForWidth(void* ptr);
char QFontComboBox_HasHeightForWidthDefault(void* ptr);
int QFontComboBox_HeightForWidth(void* ptr, int w);
int QFontComboBox_HeightForWidthDefault(void* ptr, int w);
void QFontComboBox_Hide(void* ptr);
void QFontComboBox_HideDefault(void* ptr);
void QFontComboBox_Lower(void* ptr);
void QFontComboBox_LowerDefault(void* ptr);
void QFontComboBox_MouseDoubleClickEvent(void* ptr, void* event);
void QFontComboBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QFontComboBox_MouseMoveEvent(void* ptr, void* event);
void QFontComboBox_MouseMoveEventDefault(void* ptr, void* event);
char QFontComboBox_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QFontComboBox_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QFontComboBox_Raise(void* ptr);
void QFontComboBox_RaiseDefault(void* ptr);
void QFontComboBox_Repaint(void* ptr);
void QFontComboBox_RepaintDefault(void* ptr);
void QFontComboBox_SetDisabled(void* ptr, char disable);
void QFontComboBox_SetDisabledDefault(void* ptr, char disable);
void QFontComboBox_SetFocus2(void* ptr);
void QFontComboBox_SetFocus2Default(void* ptr);
void QFontComboBox_SetHidden(void* ptr, char hidden);
void QFontComboBox_SetHiddenDefault(void* ptr, char hidden);
void QFontComboBox_Show(void* ptr);
void QFontComboBox_ShowDefault(void* ptr);
void QFontComboBox_ShowFullScreen(void* ptr);
void QFontComboBox_ShowFullScreenDefault(void* ptr);
void QFontComboBox_ShowMaximized(void* ptr);
void QFontComboBox_ShowMaximizedDefault(void* ptr);
void QFontComboBox_ShowMinimized(void* ptr);
void QFontComboBox_ShowMinimizedDefault(void* ptr);
void QFontComboBox_ShowNormal(void* ptr);
void QFontComboBox_ShowNormalDefault(void* ptr);
void QFontComboBox_TabletEvent(void* ptr, void* event);
void QFontComboBox_TabletEventDefault(void* ptr, void* event);
void QFontComboBox_Update(void* ptr);
void QFontComboBox_UpdateDefault(void* ptr);
void QFontComboBox_UpdateMicroFocus(void* ptr);
void QFontComboBox_UpdateMicroFocusDefault(void* ptr);
void QFontComboBox_TimerEvent(void* ptr, void* event);
void QFontComboBox_TimerEventDefault(void* ptr, void* event);
void QFontComboBox_ChildEvent(void* ptr, void* event);
void QFontComboBox_ChildEventDefault(void* ptr, void* event);
void QFontComboBox_ConnectNotify(void* ptr, void* sign);
void QFontComboBox_ConnectNotifyDefault(void* ptr, void* sign);
void QFontComboBox_CustomEvent(void* ptr, void* event);
void QFontComboBox_CustomEventDefault(void* ptr, void* event);
void QFontComboBox_DeleteLater(void* ptr);
void QFontComboBox_DeleteLaterDefault(void* ptr);
void QFontComboBox_DisconnectNotify(void* ptr, void* sign);
void QFontComboBox_DisconnectNotifyDefault(void* ptr, void* sign);
char QFontComboBox_EventFilter(void* ptr, void* watched, void* event);
char QFontComboBox_EventFilterDefault(void* ptr, void* watched, void* event);
void* QFontComboBox_MetaObject(void* ptr);
void* QFontComboBox_MetaObjectDefault(void* ptr);
long long QFontDialog_Options(void* ptr);
void QFontDialog_SetOptions(void* ptr, long long options);
void* QFontDialog_NewQFontDialog(void* parent);
void* QFontDialog_NewQFontDialog2(void* initial, void* parent);
void QFontDialog_ChangeEvent(void* ptr, void* e);
void QFontDialog_ChangeEventDefault(void* ptr, void* e);
void* QFontDialog_CurrentFont(void* ptr);
void QFontDialog_ConnectCurrentFontChanged(void* ptr);
void QFontDialog_DisconnectCurrentFontChanged(void* ptr);
void QFontDialog_CurrentFontChanged(void* ptr, void* font);
void QFontDialog_Done(void* ptr, int result);
void QFontDialog_DoneDefault(void* ptr, int result);
void QFontDialog_ConnectFontSelected(void* ptr);
void QFontDialog_DisconnectFontSelected(void* ptr);
void QFontDialog_FontSelected(void* ptr, void* font);
void* QFontDialog_QFontDialog_GetFont2(char ok, void* parent);
void* QFontDialog_QFontDialog_GetFont(char ok, void* initial, void* parent, char* title, long long options);
void QFontDialog_Open(void* ptr, void* receiver, char* member);
void* QFontDialog_SelectedFont(void* ptr);
void QFontDialog_SetCurrentFont(void* ptr, void* font);
void QFontDialog_SetOption(void* ptr, long long option, char on);
void QFontDialog_SetVisible(void* ptr, char visible);
void QFontDialog_SetVisibleDefault(void* ptr, char visible);
char QFontDialog_TestOption(void* ptr, long long option);
void QFontDialog_Accept(void* ptr);
void QFontDialog_AcceptDefault(void* ptr);
void QFontDialog_CloseEvent(void* ptr, void* e);
void QFontDialog_CloseEventDefault(void* ptr, void* e);
void QFontDialog_ContextMenuEvent(void* ptr, void* e);
void QFontDialog_ContextMenuEventDefault(void* ptr, void* e);
int QFontDialog_Exec(void* ptr);
int QFontDialog_ExecDefault(void* ptr);
void QFontDialog_KeyPressEvent(void* ptr, void* e);
void QFontDialog_KeyPressEventDefault(void* ptr, void* e);
void* QFontDialog_MinimumSizeHint(void* ptr);
void* QFontDialog_MinimumSizeHintDefault(void* ptr);
void QFontDialog_Reject(void* ptr);
void QFontDialog_RejectDefault(void* ptr);
void QFontDialog_ResizeEvent(void* ptr, void* vqr);
void QFontDialog_ResizeEventDefault(void* ptr, void* vqr);
void QFontDialog_ShowEvent(void* ptr, void* event);
void QFontDialog_ShowEventDefault(void* ptr, void* event);
void* QFontDialog_SizeHint(void* ptr);
void* QFontDialog_SizeHintDefault(void* ptr);
void QFontDialog_ActionEvent(void* ptr, void* event);
void QFontDialog_ActionEventDefault(void* ptr, void* event);
void QFontDialog_DragEnterEvent(void* ptr, void* event);
void QFontDialog_DragEnterEventDefault(void* ptr, void* event);
void QFontDialog_DragLeaveEvent(void* ptr, void* event);
void QFontDialog_DragLeaveEventDefault(void* ptr, void* event);
void QFontDialog_DragMoveEvent(void* ptr, void* event);
void QFontDialog_DragMoveEventDefault(void* ptr, void* event);
void QFontDialog_DropEvent(void* ptr, void* event);
void QFontDialog_DropEventDefault(void* ptr, void* event);
void QFontDialog_EnterEvent(void* ptr, void* event);
void QFontDialog_EnterEventDefault(void* ptr, void* event);
void QFontDialog_FocusInEvent(void* ptr, void* event);
void QFontDialog_FocusInEventDefault(void* ptr, void* event);
void QFontDialog_FocusOutEvent(void* ptr, void* event);
void QFontDialog_FocusOutEventDefault(void* ptr, void* event);
void QFontDialog_HideEvent(void* ptr, void* event);
void QFontDialog_HideEventDefault(void* ptr, void* event);
void QFontDialog_LeaveEvent(void* ptr, void* event);
void QFontDialog_LeaveEventDefault(void* ptr, void* event);
void QFontDialog_MoveEvent(void* ptr, void* event);
void QFontDialog_MoveEventDefault(void* ptr, void* event);
void QFontDialog_PaintEvent(void* ptr, void* event);
void QFontDialog_PaintEventDefault(void* ptr, void* event);
void QFontDialog_SetEnabled(void* ptr, char vbo);
void QFontDialog_SetEnabledDefault(void* ptr, char vbo);
void QFontDialog_SetStyleSheet(void* ptr, char* styleSheet);
void QFontDialog_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QFontDialog_SetWindowModified(void* ptr, char vbo);
void QFontDialog_SetWindowModifiedDefault(void* ptr, char vbo);
void QFontDialog_SetWindowTitle(void* ptr, char* vqs);
void QFontDialog_SetWindowTitleDefault(void* ptr, char* vqs);
char QFontDialog_Close(void* ptr);
char QFontDialog_CloseDefault(void* ptr);
char QFontDialog_FocusNextPrevChild(void* ptr, char next);
char QFontDialog_FocusNextPrevChildDefault(void* ptr, char next);
char QFontDialog_HasHeightForWidth(void* ptr);
char QFontDialog_HasHeightForWidthDefault(void* ptr);
int QFontDialog_HeightForWidth(void* ptr, int w);
int QFontDialog_HeightForWidthDefault(void* ptr, int w);
void QFontDialog_Hide(void* ptr);
void QFontDialog_HideDefault(void* ptr);
void QFontDialog_InputMethodEvent(void* ptr, void* event);
void QFontDialog_InputMethodEventDefault(void* ptr, void* event);
void* QFontDialog_InputMethodQuery(void* ptr, long long query);
void* QFontDialog_InputMethodQueryDefault(void* ptr, long long query);
void QFontDialog_KeyReleaseEvent(void* ptr, void* event);
void QFontDialog_KeyReleaseEventDefault(void* ptr, void* event);
void QFontDialog_Lower(void* ptr);
void QFontDialog_LowerDefault(void* ptr);
void QFontDialog_MouseDoubleClickEvent(void* ptr, void* event);
void QFontDialog_MouseDoubleClickEventDefault(void* ptr, void* event);
void QFontDialog_MouseMoveEvent(void* ptr, void* event);
void QFontDialog_MouseMoveEventDefault(void* ptr, void* event);
void QFontDialog_MousePressEvent(void* ptr, void* event);
void QFontDialog_MousePressEventDefault(void* ptr, void* event);
void QFontDialog_MouseReleaseEvent(void* ptr, void* event);
void QFontDialog_MouseReleaseEventDefault(void* ptr, void* event);
char QFontDialog_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QFontDialog_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QFontDialog_Raise(void* ptr);
void QFontDialog_RaiseDefault(void* ptr);
void QFontDialog_Repaint(void* ptr);
void QFontDialog_RepaintDefault(void* ptr);
void QFontDialog_SetDisabled(void* ptr, char disable);
void QFontDialog_SetDisabledDefault(void* ptr, char disable);
void QFontDialog_SetFocus2(void* ptr);
void QFontDialog_SetFocus2Default(void* ptr);
void QFontDialog_SetHidden(void* ptr, char hidden);
void QFontDialog_SetHiddenDefault(void* ptr, char hidden);
void QFontDialog_Show(void* ptr);
void QFontDialog_ShowDefault(void* ptr);
void QFontDialog_ShowFullScreen(void* ptr);
void QFontDialog_ShowFullScreenDefault(void* ptr);
void QFontDialog_ShowMaximized(void* ptr);
void QFontDialog_ShowMaximizedDefault(void* ptr);
void QFontDialog_ShowMinimized(void* ptr);
void QFontDialog_ShowMinimizedDefault(void* ptr);
void QFontDialog_ShowNormal(void* ptr);
void QFontDialog_ShowNormalDefault(void* ptr);
void QFontDialog_TabletEvent(void* ptr, void* event);
void QFontDialog_TabletEventDefault(void* ptr, void* event);
void QFontDialog_Update(void* ptr);
void QFontDialog_UpdateDefault(void* ptr);
void QFontDialog_UpdateMicroFocus(void* ptr);
void QFontDialog_UpdateMicroFocusDefault(void* ptr);
void QFontDialog_WheelEvent(void* ptr, void* event);
void QFontDialog_WheelEventDefault(void* ptr, void* event);
void QFontDialog_TimerEvent(void* ptr, void* event);
void QFontDialog_TimerEventDefault(void* ptr, void* event);
void QFontDialog_ChildEvent(void* ptr, void* event);
void QFontDialog_ChildEventDefault(void* ptr, void* event);
void QFontDialog_ConnectNotify(void* ptr, void* sign);
void QFontDialog_ConnectNotifyDefault(void* ptr, void* sign);
void QFontDialog_CustomEvent(void* ptr, void* event);
void QFontDialog_CustomEventDefault(void* ptr, void* event);
void QFontDialog_DeleteLater(void* ptr);
void QFontDialog_DeleteLaterDefault(void* ptr);
void QFontDialog_DisconnectNotify(void* ptr, void* sign);
void QFontDialog_DisconnectNotifyDefault(void* ptr, void* sign);
void* QFontDialog_MetaObject(void* ptr);
void* QFontDialog_MetaObjectDefault(void* ptr);
long long QFormLayout_FieldGrowthPolicy(void* ptr);
long long QFormLayout_FormAlignment(void* ptr);
int QFormLayout_HorizontalSpacing(void* ptr);
long long QFormLayout_LabelAlignment(void* ptr);
long long QFormLayout_RowWrapPolicy(void* ptr);
void QFormLayout_SetFieldGrowthPolicy(void* ptr, long long policy);
void QFormLayout_SetFormAlignment(void* ptr, long long alignment);
void QFormLayout_SetHorizontalSpacing(void* ptr, int spacing);
void QFormLayout_SetLabelAlignment(void* ptr, long long alignment);
void QFormLayout_SetRowWrapPolicy(void* ptr, long long policy);
void QFormLayout_SetVerticalSpacing(void* ptr, int spacing);
int QFormLayout_VerticalSpacing(void* ptr);
void* QFormLayout_NewQFormLayout(void* parent);
void QFormLayout_AddItem(void* ptr, void* item);
void QFormLayout_AddItemDefault(void* ptr, void* item);
void QFormLayout_AddRow6(void* ptr, void* layout);
void QFormLayout_AddRow2(void* ptr, void* label, void* field);
void QFormLayout_AddRow(void* ptr, void* label, void* field);
void QFormLayout_AddRow5(void* ptr, void* widget);
void QFormLayout_AddRow4(void* ptr, char* labelText, void* field);
void QFormLayout_AddRow3(void* ptr, char* labelText, void* field);
int QFormLayout_Count(void* ptr);
int QFormLayout_CountDefault(void* ptr);
long long QFormLayout_ExpandingDirections(void* ptr);
long long QFormLayout_ExpandingDirectionsDefault(void* ptr);
char QFormLayout_HasHeightForWidth(void* ptr);
char QFormLayout_HasHeightForWidthDefault(void* ptr);
int QFormLayout_HeightForWidth(void* ptr, int width);
int QFormLayout_HeightForWidthDefault(void* ptr, int width);
void QFormLayout_InsertRow6(void* ptr, int row, void* layout);
void QFormLayout_InsertRow2(void* ptr, int row, void* label, void* field);
void QFormLayout_InsertRow(void* ptr, int row, void* label, void* field);
void QFormLayout_InsertRow5(void* ptr, int row, void* widget);
void QFormLayout_InsertRow4(void* ptr, int row, char* labelText, void* field);
void QFormLayout_InsertRow3(void* ptr, int row, char* labelText, void* field);
void QFormLayout_Invalidate(void* ptr);
void QFormLayout_InvalidateDefault(void* ptr);
void* QFormLayout_ItemAt2(void* ptr, int index);
void* QFormLayout_ItemAt2Default(void* ptr, int index);
void* QFormLayout_ItemAt(void* ptr, int row, long long role);
void* QFormLayout_LabelForField2(void* ptr, void* field);
void* QFormLayout_LabelForField(void* ptr, void* field);
void* QFormLayout_MinimumSize(void* ptr);
void* QFormLayout_MinimumSizeDefault(void* ptr);
int QFormLayout_RowCount(void* ptr);
void QFormLayout_SetGeometry(void* ptr, void* rect);
void QFormLayout_SetGeometryDefault(void* ptr, void* rect);
void QFormLayout_SetItem(void* ptr, int row, long long role, void* item);
void QFormLayout_SetLayout(void* ptr, int row, long long role, void* layout);
void QFormLayout_SetSpacing(void* ptr, int spacing);
void QFormLayout_SetWidget(void* ptr, int row, long long role, void* widget);
void* QFormLayout_SizeHint(void* ptr);
void* QFormLayout_SizeHintDefault(void* ptr);
int QFormLayout_Spacing(void* ptr);
void* QFormLayout_TakeAt(void* ptr, int index);
void* QFormLayout_TakeAtDefault(void* ptr, int index);
void QFormLayout_DestroyQFormLayout(void* ptr);
long long QFormLayout_ControlTypes(void* ptr);
long long QFormLayout_ControlTypesDefault(void* ptr);
void* QFormLayout_Geometry(void* ptr);
void* QFormLayout_GeometryDefault(void* ptr);
int QFormLayout_IndexOf(void* ptr, void* widget);
int QFormLayout_IndexOfDefault(void* ptr, void* widget);
char QFormLayout_IsEmpty(void* ptr);
char QFormLayout_IsEmptyDefault(void* ptr);
void* QFormLayout_Layout(void* ptr);
void* QFormLayout_LayoutDefault(void* ptr);
void* QFormLayout_MaximumSize(void* ptr);
void* QFormLayout_MaximumSizeDefault(void* ptr);
void QFormLayout_TimerEvent(void* ptr, void* event);
void QFormLayout_TimerEventDefault(void* ptr, void* event);
void QFormLayout_ConnectNotify(void* ptr, void* sign);
void QFormLayout_ConnectNotifyDefault(void* ptr, void* sign);
void QFormLayout_CustomEvent(void* ptr, void* event);
void QFormLayout_CustomEventDefault(void* ptr, void* event);
void QFormLayout_DeleteLater(void* ptr);
void QFormLayout_DeleteLaterDefault(void* ptr);
void QFormLayout_DisconnectNotify(void* ptr, void* sign);
void QFormLayout_DisconnectNotifyDefault(void* ptr, void* sign);
char QFormLayout_Event(void* ptr, void* e);
char QFormLayout_EventDefault(void* ptr, void* e);
char QFormLayout_EventFilter(void* ptr, void* watched, void* event);
char QFormLayout_EventFilterDefault(void* ptr, void* watched, void* event);
void* QFormLayout_MetaObject(void* ptr);
void* QFormLayout_MetaObjectDefault(void* ptr);
int QFormLayout_MinimumHeightForWidth(void* ptr, int w);
int QFormLayout_MinimumHeightForWidthDefault(void* ptr, int w);
void* QFormLayout_SpacerItem(void* ptr);
void* QFormLayout_SpacerItemDefault(void* ptr);
void* QFormLayout_Widget(void* ptr);
void* QFormLayout_WidgetDefault(void* ptr);
void* QFrame_FrameRect(void* ptr);
long long QFrame_FrameShadow(void* ptr);
long long QFrame_FrameShape(void* ptr);
int QFrame_FrameWidth(void* ptr);
int QFrame_LineWidth(void* ptr);
int QFrame_MidLineWidth(void* ptr);
void QFrame_SetFrameRect(void* ptr, void* vqr);
void QFrame_SetFrameShadow(void* ptr, long long vsh);
void QFrame_SetFrameShape(void* ptr, long long vsh);
void QFrame_SetLineWidth(void* ptr, int vin);
void QFrame_SetMidLineWidth(void* ptr, int vin);
void* QFrame_NewQFrame(void* parent, long long f);
void QFrame_ChangeEvent(void* ptr, void* ev);
void QFrame_ChangeEventDefault(void* ptr, void* ev);
char QFrame_Event(void* ptr, void* e);
int QFrame_FrameStyle(void* ptr);
void QFrame_InitStyleOption(void* ptr, void* option);
void QFrame_PaintEvent(void* ptr, void* vqp);
void QFrame_PaintEventDefault(void* ptr, void* vqp);
void QFrame_SetFrameStyle(void* ptr, int style);
void* QFrame_SizeHint(void* ptr);
void* QFrame_SizeHintDefault(void* ptr);
void QFrame_DestroyQFrame(void* ptr);
void QFrame_ActionEvent(void* ptr, void* event);
void QFrame_ActionEventDefault(void* ptr, void* event);
void QFrame_DragEnterEvent(void* ptr, void* event);
void QFrame_DragEnterEventDefault(void* ptr, void* event);
void QFrame_DragLeaveEvent(void* ptr, void* event);
void QFrame_DragLeaveEventDefault(void* ptr, void* event);
void QFrame_DragMoveEvent(void* ptr, void* event);
void QFrame_DragMoveEventDefault(void* ptr, void* event);
void QFrame_DropEvent(void* ptr, void* event);
void QFrame_DropEventDefault(void* ptr, void* event);
void QFrame_EnterEvent(void* ptr, void* event);
void QFrame_EnterEventDefault(void* ptr, void* event);
void QFrame_FocusInEvent(void* ptr, void* event);
void QFrame_FocusInEventDefault(void* ptr, void* event);
void QFrame_FocusOutEvent(void* ptr, void* event);
void QFrame_FocusOutEventDefault(void* ptr, void* event);
void QFrame_HideEvent(void* ptr, void* event);
void QFrame_HideEventDefault(void* ptr, void* event);
void QFrame_LeaveEvent(void* ptr, void* event);
void QFrame_LeaveEventDefault(void* ptr, void* event);
void* QFrame_MinimumSizeHint(void* ptr);
void* QFrame_MinimumSizeHintDefault(void* ptr);
void QFrame_MoveEvent(void* ptr, void* event);
void QFrame_MoveEventDefault(void* ptr, void* event);
void QFrame_SetEnabled(void* ptr, char vbo);
void QFrame_SetEnabledDefault(void* ptr, char vbo);
void QFrame_SetStyleSheet(void* ptr, char* styleSheet);
void QFrame_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QFrame_SetVisible(void* ptr, char visible);
void QFrame_SetVisibleDefault(void* ptr, char visible);
void QFrame_SetWindowModified(void* ptr, char vbo);
void QFrame_SetWindowModifiedDefault(void* ptr, char vbo);
void QFrame_SetWindowTitle(void* ptr, char* vqs);
void QFrame_SetWindowTitleDefault(void* ptr, char* vqs);
void QFrame_ShowEvent(void* ptr, void* event);
void QFrame_ShowEventDefault(void* ptr, void* event);
char QFrame_Close(void* ptr);
char QFrame_CloseDefault(void* ptr);
void QFrame_CloseEvent(void* ptr, void* event);
void QFrame_CloseEventDefault(void* ptr, void* event);
void QFrame_ContextMenuEvent(void* ptr, void* event);
void QFrame_ContextMenuEventDefault(void* ptr, void* event);
char QFrame_FocusNextPrevChild(void* ptr, char next);
char QFrame_FocusNextPrevChildDefault(void* ptr, char next);
char QFrame_HasHeightForWidth(void* ptr);
char QFrame_HasHeightForWidthDefault(void* ptr);
int QFrame_HeightForWidth(void* ptr, int w);
int QFrame_HeightForWidthDefault(void* ptr, int w);
void QFrame_Hide(void* ptr);
void QFrame_HideDefault(void* ptr);
void QFrame_InputMethodEvent(void* ptr, void* event);
void QFrame_InputMethodEventDefault(void* ptr, void* event);
void* QFrame_InputMethodQuery(void* ptr, long long query);
void* QFrame_InputMethodQueryDefault(void* ptr, long long query);
void QFrame_KeyPressEvent(void* ptr, void* event);
void QFrame_KeyPressEventDefault(void* ptr, void* event);
void QFrame_KeyReleaseEvent(void* ptr, void* event);
void QFrame_KeyReleaseEventDefault(void* ptr, void* event);
void QFrame_Lower(void* ptr);
void QFrame_LowerDefault(void* ptr);
void QFrame_MouseDoubleClickEvent(void* ptr, void* event);
void QFrame_MouseDoubleClickEventDefault(void* ptr, void* event);
void QFrame_MouseMoveEvent(void* ptr, void* event);
void QFrame_MouseMoveEventDefault(void* ptr, void* event);
void QFrame_MousePressEvent(void* ptr, void* event);
void QFrame_MousePressEventDefault(void* ptr, void* event);
void QFrame_MouseReleaseEvent(void* ptr, void* event);
void QFrame_MouseReleaseEventDefault(void* ptr, void* event);
char QFrame_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QFrame_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QFrame_Raise(void* ptr);
void QFrame_RaiseDefault(void* ptr);
void QFrame_Repaint(void* ptr);
void QFrame_RepaintDefault(void* ptr);
void QFrame_ResizeEvent(void* ptr, void* event);
void QFrame_ResizeEventDefault(void* ptr, void* event);
void QFrame_SetDisabled(void* ptr, char disable);
void QFrame_SetDisabledDefault(void* ptr, char disable);
void QFrame_SetFocus2(void* ptr);
void QFrame_SetFocus2Default(void* ptr);
void QFrame_SetHidden(void* ptr, char hidden);
void QFrame_SetHiddenDefault(void* ptr, char hidden);
void QFrame_Show(void* ptr);
void QFrame_ShowDefault(void* ptr);
void QFrame_ShowFullScreen(void* ptr);
void QFrame_ShowFullScreenDefault(void* ptr);
void QFrame_ShowMaximized(void* ptr);
void QFrame_ShowMaximizedDefault(void* ptr);
void QFrame_ShowMinimized(void* ptr);
void QFrame_ShowMinimizedDefault(void* ptr);
void QFrame_ShowNormal(void* ptr);
void QFrame_ShowNormalDefault(void* ptr);
void QFrame_TabletEvent(void* ptr, void* event);
void QFrame_TabletEventDefault(void* ptr, void* event);
void QFrame_Update(void* ptr);
void QFrame_UpdateDefault(void* ptr);
void QFrame_UpdateMicroFocus(void* ptr);
void QFrame_UpdateMicroFocusDefault(void* ptr);
void QFrame_WheelEvent(void* ptr, void* event);
void QFrame_WheelEventDefault(void* ptr, void* event);
void QFrame_TimerEvent(void* ptr, void* event);
void QFrame_TimerEventDefault(void* ptr, void* event);
void QFrame_ChildEvent(void* ptr, void* event);
void QFrame_ChildEventDefault(void* ptr, void* event);
void QFrame_ConnectNotify(void* ptr, void* sign);
void QFrame_ConnectNotifyDefault(void* ptr, void* sign);
void QFrame_CustomEvent(void* ptr, void* event);
void QFrame_CustomEventDefault(void* ptr, void* event);
void QFrame_DeleteLater(void* ptr);
void QFrame_DeleteLaterDefault(void* ptr);
void QFrame_DisconnectNotify(void* ptr, void* sign);
void QFrame_DisconnectNotifyDefault(void* ptr, void* sign);
char QFrame_EventFilter(void* ptr, void* watched, void* event);
char QFrame_EventFilterDefault(void* ptr, void* watched, void* event);
void* QFrame_MetaObject(void* ptr);
void* QFrame_MetaObjectDefault(void* ptr);
long long QGesture_GestureCancelPolicy(void* ptr);
long long QGesture_GestureType(void* ptr);
char QGesture_HasHotSpot(void* ptr);
void* QGesture_HotSpot(void* ptr);
void QGesture_SetGestureCancelPolicy(void* ptr, long long policy);
void QGesture_SetHotSpot(void* ptr, void* value);
long long QGesture_State(void* ptr);
void QGesture_UnsetHotSpot(void* ptr);
void* QGesture_NewQGesture(void* parent);
void QGesture_DestroyQGesture(void* ptr);
void QGesture_TimerEvent(void* ptr, void* event);
void QGesture_TimerEventDefault(void* ptr, void* event);
void QGesture_ChildEvent(void* ptr, void* event);
void QGesture_ChildEventDefault(void* ptr, void* event);
void QGesture_ConnectNotify(void* ptr, void* sign);
void QGesture_ConnectNotifyDefault(void* ptr, void* sign);
void QGesture_CustomEvent(void* ptr, void* event);
void QGesture_CustomEventDefault(void* ptr, void* event);
void QGesture_DeleteLater(void* ptr);
void QGesture_DeleteLaterDefault(void* ptr);
void QGesture_DisconnectNotify(void* ptr, void* sign);
void QGesture_DisconnectNotifyDefault(void* ptr, void* sign);
char QGesture_Event(void* ptr, void* e);
char QGesture_EventDefault(void* ptr, void* e);
char QGesture_EventFilter(void* ptr, void* watched, void* event);
char QGesture_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGesture_MetaObject(void* ptr);
void* QGesture_MetaObjectDefault(void* ptr);
void QGestureEvent_Accept(void* ptr, void* gesture);
void QGestureEvent_Accept2(void* ptr, long long gestureType);
struct QtWidgets_PackedList QGestureEvent_ActiveGestures(void* ptr);
struct QtWidgets_PackedList QGestureEvent_CanceledGestures(void* ptr);
void* QGestureEvent_Gesture(void* ptr, long long ty);
struct QtWidgets_PackedList QGestureEvent_Gestures(void* ptr);
void QGestureEvent_Ignore(void* ptr, void* gesture);
void QGestureEvent_Ignore2(void* ptr, long long gestureType);
char QGestureEvent_IsAccepted(void* ptr, void* gesture);
char QGestureEvent_IsAccepted2(void* ptr, long long gestureType);
void* QGestureEvent_MapToGraphicsScene(void* ptr, void* gesturePoint);
void QGestureEvent_SetAccepted(void* ptr, void* gesture, char value);
void QGestureEvent_SetAccepted2(void* ptr, long long gestureType, char value);
void* QGestureEvent_Widget(void* ptr);
void QGestureEvent_DestroyQGestureEvent(void* ptr);
void* QGestureEvent_activeGestures_atList(void* ptr, int i);
void* QGestureEvent_canceledGestures_atList(void* ptr, int i);
void* QGestureEvent_gestures_atList(void* ptr, int i);
void* QGestureRecognizer_NewQGestureRecognizer();
void* QGestureRecognizer_Create(void* ptr, void* target);
void* QGestureRecognizer_CreateDefault(void* ptr, void* target);
long long QGestureRecognizer_Recognize(void* ptr, void* gesture, void* watched, void* event);
long long QGestureRecognizer_QGestureRecognizer_RegisterRecognizer(void* recognizer);
void QGestureRecognizer_Reset(void* ptr, void* gesture);
void QGestureRecognizer_ResetDefault(void* ptr, void* gesture);
void QGestureRecognizer_QGestureRecognizer_UnregisterRecognizer(long long ty);
void QGestureRecognizer_DestroyQGestureRecognizer(void* ptr);
void QGestureRecognizer_DestroyQGestureRecognizerDefault(void* ptr);
void QGraphicsAnchor_SetSizePolicy(void* ptr, long long policy);
void QGraphicsAnchor_SetSpacing(void* ptr, double spacing);
long long QGraphicsAnchor_SizePolicy(void* ptr);
double QGraphicsAnchor_Spacing(void* ptr);
void QGraphicsAnchor_UnsetSpacing(void* ptr);
void QGraphicsAnchor_DestroyQGraphicsAnchor(void* ptr);
void QGraphicsAnchor_TimerEvent(void* ptr, void* event);
void QGraphicsAnchor_TimerEventDefault(void* ptr, void* event);
void QGraphicsAnchor_ChildEvent(void* ptr, void* event);
void QGraphicsAnchor_ChildEventDefault(void* ptr, void* event);
void QGraphicsAnchor_ConnectNotify(void* ptr, void* sign);
void QGraphicsAnchor_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsAnchor_CustomEvent(void* ptr, void* event);
void QGraphicsAnchor_CustomEventDefault(void* ptr, void* event);
void QGraphicsAnchor_DeleteLater(void* ptr);
void QGraphicsAnchor_DeleteLaterDefault(void* ptr);
void QGraphicsAnchor_DisconnectNotify(void* ptr, void* sign);
void QGraphicsAnchor_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsAnchor_Event(void* ptr, void* e);
char QGraphicsAnchor_EventDefault(void* ptr, void* e);
char QGraphicsAnchor_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsAnchor_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsAnchor_MetaObject(void* ptr);
void* QGraphicsAnchor_MetaObjectDefault(void* ptr);
void* QGraphicsAnchorLayout_NewQGraphicsAnchorLayout(void* parent);
void* QGraphicsAnchorLayout_AddAnchor(void* ptr, void* firstItem, long long firstEdge, void* secondItem, long long secondEdge);
void QGraphicsAnchorLayout_AddAnchors(void* ptr, void* firstItem, void* secondItem, long long orientations);
void QGraphicsAnchorLayout_AddCornerAnchors(void* ptr, void* firstItem, long long firstCorner, void* secondItem, long long secondCorner);
void* QGraphicsAnchorLayout_Anchor(void* ptr, void* firstItem, long long firstEdge, void* secondItem, long long secondEdge);
int QGraphicsAnchorLayout_Count(void* ptr);
int QGraphicsAnchorLayout_CountDefault(void* ptr);
double QGraphicsAnchorLayout_HorizontalSpacing(void* ptr);
void QGraphicsAnchorLayout_Invalidate(void* ptr);
void QGraphicsAnchorLayout_InvalidateDefault(void* ptr);
void* QGraphicsAnchorLayout_ItemAt(void* ptr, int index);
void* QGraphicsAnchorLayout_ItemAtDefault(void* ptr, int index);
void QGraphicsAnchorLayout_RemoveAt(void* ptr, int index);
void QGraphicsAnchorLayout_RemoveAtDefault(void* ptr, int index);
void QGraphicsAnchorLayout_SetGeometry(void* ptr, void* geom);
void QGraphicsAnchorLayout_SetGeometryDefault(void* ptr, void* geom);
void QGraphicsAnchorLayout_SetHorizontalSpacing(void* ptr, double spacing);
void QGraphicsAnchorLayout_SetSpacing(void* ptr, double spacing);
void QGraphicsAnchorLayout_SetVerticalSpacing(void* ptr, double spacing);
void* QGraphicsAnchorLayout_SizeHint(void* ptr, long long which, void* constraint);
void* QGraphicsAnchorLayout_SizeHintDefault(void* ptr, long long which, void* constraint);
double QGraphicsAnchorLayout_VerticalSpacing(void* ptr);
void QGraphicsAnchorLayout_DestroyQGraphicsAnchorLayout(void* ptr);
void QGraphicsAnchorLayout_DestroyQGraphicsAnchorLayoutDefault(void* ptr);
void QGraphicsAnchorLayout_GetContentsMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsAnchorLayout_GetContentsMarginsDefault(void* ptr, double left, double top, double right, double bottom);
void QGraphicsAnchorLayout_UpdateGeometry(void* ptr);
void QGraphicsAnchorLayout_UpdateGeometryDefault(void* ptr);
void QGraphicsAnchorLayout_WidgetEvent(void* ptr, void* e);
void QGraphicsAnchorLayout_WidgetEventDefault(void* ptr, void* e);
long long QGraphicsBlurEffect_BlurHints(void* ptr);
double QGraphicsBlurEffect_BlurRadius(void* ptr);
void QGraphicsBlurEffect_SetBlurHints(void* ptr, long long hints);
void QGraphicsBlurEffect_SetBlurRadius(void* ptr, double blurRadius);
void* QGraphicsBlurEffect_NewQGraphicsBlurEffect(void* parent);
void QGraphicsBlurEffect_ConnectBlurHintsChanged(void* ptr);
void QGraphicsBlurEffect_DisconnectBlurHintsChanged(void* ptr);
void QGraphicsBlurEffect_BlurHintsChanged(void* ptr, long long hints);
void QGraphicsBlurEffect_ConnectBlurRadiusChanged(void* ptr);
void QGraphicsBlurEffect_DisconnectBlurRadiusChanged(void* ptr);
void QGraphicsBlurEffect_BlurRadiusChanged(void* ptr, double radius);
void* QGraphicsBlurEffect_BoundingRectFor(void* ptr, void* rect);
void* QGraphicsBlurEffect_BoundingRectForDefault(void* ptr, void* rect);
void QGraphicsBlurEffect_Draw(void* ptr, void* painter);
void QGraphicsBlurEffect_DrawDefault(void* ptr, void* painter);
void QGraphicsBlurEffect_DestroyQGraphicsBlurEffect(void* ptr);
void QGraphicsBlurEffect_SetEnabled(void* ptr, char enable);
void QGraphicsBlurEffect_SetEnabledDefault(void* ptr, char enable);
void QGraphicsBlurEffect_SourceChanged(void* ptr, long long flags);
void QGraphicsBlurEffect_SourceChangedDefault(void* ptr, long long flags);
void QGraphicsBlurEffect_Update(void* ptr);
void QGraphicsBlurEffect_UpdateDefault(void* ptr);
void QGraphicsBlurEffect_TimerEvent(void* ptr, void* event);
void QGraphicsBlurEffect_TimerEventDefault(void* ptr, void* event);
void QGraphicsBlurEffect_ChildEvent(void* ptr, void* event);
void QGraphicsBlurEffect_ChildEventDefault(void* ptr, void* event);
void QGraphicsBlurEffect_ConnectNotify(void* ptr, void* sign);
void QGraphicsBlurEffect_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsBlurEffect_CustomEvent(void* ptr, void* event);
void QGraphicsBlurEffect_CustomEventDefault(void* ptr, void* event);
void QGraphicsBlurEffect_DeleteLater(void* ptr);
void QGraphicsBlurEffect_DeleteLaterDefault(void* ptr);
void QGraphicsBlurEffect_DisconnectNotify(void* ptr, void* sign);
void QGraphicsBlurEffect_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsBlurEffect_Event(void* ptr, void* e);
char QGraphicsBlurEffect_EventDefault(void* ptr, void* e);
char QGraphicsBlurEffect_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsBlurEffect_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsBlurEffect_MetaObject(void* ptr);
void* QGraphicsBlurEffect_MetaObjectDefault(void* ptr);
void* QGraphicsColorizeEffect_Color(void* ptr);
void QGraphicsColorizeEffect_SetColor(void* ptr, void* c);
void QGraphicsColorizeEffect_SetStrength(void* ptr, double strength);
double QGraphicsColorizeEffect_Strength(void* ptr);
void* QGraphicsColorizeEffect_NewQGraphicsColorizeEffect(void* parent);
void QGraphicsColorizeEffect_ConnectColorChanged(void* ptr);
void QGraphicsColorizeEffect_DisconnectColorChanged(void* ptr);
void QGraphicsColorizeEffect_ColorChanged(void* ptr, void* color);
void QGraphicsColorizeEffect_Draw(void* ptr, void* painter);
void QGraphicsColorizeEffect_DrawDefault(void* ptr, void* painter);
void QGraphicsColorizeEffect_ConnectStrengthChanged(void* ptr);
void QGraphicsColorizeEffect_DisconnectStrengthChanged(void* ptr);
void QGraphicsColorizeEffect_StrengthChanged(void* ptr, double strength);
void QGraphicsColorizeEffect_DestroyQGraphicsColorizeEffect(void* ptr);
void QGraphicsColorizeEffect_SetEnabled(void* ptr, char enable);
void QGraphicsColorizeEffect_SetEnabledDefault(void* ptr, char enable);
void* QGraphicsColorizeEffect_BoundingRectFor(void* ptr, void* rect);
void* QGraphicsColorizeEffect_BoundingRectForDefault(void* ptr, void* rect);
void QGraphicsColorizeEffect_SourceChanged(void* ptr, long long flags);
void QGraphicsColorizeEffect_SourceChangedDefault(void* ptr, long long flags);
void QGraphicsColorizeEffect_Update(void* ptr);
void QGraphicsColorizeEffect_UpdateDefault(void* ptr);
void QGraphicsColorizeEffect_TimerEvent(void* ptr, void* event);
void QGraphicsColorizeEffect_TimerEventDefault(void* ptr, void* event);
void QGraphicsColorizeEffect_ChildEvent(void* ptr, void* event);
void QGraphicsColorizeEffect_ChildEventDefault(void* ptr, void* event);
void QGraphicsColorizeEffect_ConnectNotify(void* ptr, void* sign);
void QGraphicsColorizeEffect_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsColorizeEffect_CustomEvent(void* ptr, void* event);
void QGraphicsColorizeEffect_CustomEventDefault(void* ptr, void* event);
void QGraphicsColorizeEffect_DeleteLater(void* ptr);
void QGraphicsColorizeEffect_DeleteLaterDefault(void* ptr);
void QGraphicsColorizeEffect_DisconnectNotify(void* ptr, void* sign);
void QGraphicsColorizeEffect_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsColorizeEffect_Event(void* ptr, void* e);
char QGraphicsColorizeEffect_EventDefault(void* ptr, void* e);
char QGraphicsColorizeEffect_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsColorizeEffect_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsColorizeEffect_MetaObject(void* ptr);
void* QGraphicsColorizeEffect_MetaObjectDefault(void* ptr);
double QGraphicsDropShadowEffect_BlurRadius(void* ptr);
void* QGraphicsDropShadowEffect_Color(void* ptr);
void* QGraphicsDropShadowEffect_Offset(void* ptr);
void QGraphicsDropShadowEffect_SetBlurRadius(void* ptr, double blurRadius);
void QGraphicsDropShadowEffect_SetColor(void* ptr, void* color);
void QGraphicsDropShadowEffect_SetOffset(void* ptr, void* ofs);
void* QGraphicsDropShadowEffect_NewQGraphicsDropShadowEffect(void* parent);
void QGraphicsDropShadowEffect_ConnectBlurRadiusChanged(void* ptr);
void QGraphicsDropShadowEffect_DisconnectBlurRadiusChanged(void* ptr);
void QGraphicsDropShadowEffect_BlurRadiusChanged(void* ptr, double blurRadius);
void* QGraphicsDropShadowEffect_BoundingRectFor(void* ptr, void* rect);
void* QGraphicsDropShadowEffect_BoundingRectForDefault(void* ptr, void* rect);
void QGraphicsDropShadowEffect_ConnectColorChanged(void* ptr);
void QGraphicsDropShadowEffect_DisconnectColorChanged(void* ptr);
void QGraphicsDropShadowEffect_ColorChanged(void* ptr, void* color);
void QGraphicsDropShadowEffect_Draw(void* ptr, void* painter);
void QGraphicsDropShadowEffect_DrawDefault(void* ptr, void* painter);
void QGraphicsDropShadowEffect_ConnectOffsetChanged(void* ptr);
void QGraphicsDropShadowEffect_DisconnectOffsetChanged(void* ptr);
void QGraphicsDropShadowEffect_OffsetChanged(void* ptr, void* offset);
void QGraphicsDropShadowEffect_SetOffset2(void* ptr, double d);
void QGraphicsDropShadowEffect_SetOffset3(void* ptr, double dx, double dy);
void QGraphicsDropShadowEffect_SetXOffset(void* ptr, double dx);
void QGraphicsDropShadowEffect_SetYOffset(void* ptr, double dy);
double QGraphicsDropShadowEffect_XOffset(void* ptr);
double QGraphicsDropShadowEffect_YOffset(void* ptr);
void QGraphicsDropShadowEffect_DestroyQGraphicsDropShadowEffect(void* ptr);
void QGraphicsDropShadowEffect_SetEnabled(void* ptr, char enable);
void QGraphicsDropShadowEffect_SetEnabledDefault(void* ptr, char enable);
void QGraphicsDropShadowEffect_SourceChanged(void* ptr, long long flags);
void QGraphicsDropShadowEffect_SourceChangedDefault(void* ptr, long long flags);
void QGraphicsDropShadowEffect_Update(void* ptr);
void QGraphicsDropShadowEffect_UpdateDefault(void* ptr);
void QGraphicsDropShadowEffect_TimerEvent(void* ptr, void* event);
void QGraphicsDropShadowEffect_TimerEventDefault(void* ptr, void* event);
void QGraphicsDropShadowEffect_ChildEvent(void* ptr, void* event);
void QGraphicsDropShadowEffect_ChildEventDefault(void* ptr, void* event);
void QGraphicsDropShadowEffect_ConnectNotify(void* ptr, void* sign);
void QGraphicsDropShadowEffect_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsDropShadowEffect_CustomEvent(void* ptr, void* event);
void QGraphicsDropShadowEffect_CustomEventDefault(void* ptr, void* event);
void QGraphicsDropShadowEffect_DeleteLater(void* ptr);
void QGraphicsDropShadowEffect_DeleteLaterDefault(void* ptr);
void QGraphicsDropShadowEffect_DisconnectNotify(void* ptr, void* sign);
void QGraphicsDropShadowEffect_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsDropShadowEffect_Event(void* ptr, void* e);
char QGraphicsDropShadowEffect_EventDefault(void* ptr, void* e);
char QGraphicsDropShadowEffect_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsDropShadowEffect_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsDropShadowEffect_MetaObject(void* ptr);
void* QGraphicsDropShadowEffect_MetaObjectDefault(void* ptr);
char QGraphicsEffect_IsEnabled(void* ptr);
void QGraphicsEffect_SetEnabled(void* ptr, char enable);
void* QGraphicsEffect_NewQGraphicsEffect(void* parent);
void* QGraphicsEffect_BoundingRect(void* ptr);
void* QGraphicsEffect_BoundingRectFor(void* ptr, void* rect);
void* QGraphicsEffect_BoundingRectForDefault(void* ptr, void* rect);
void QGraphicsEffect_Draw(void* ptr, void* painter);
void QGraphicsEffect_DrawSource(void* ptr, void* painter);
void QGraphicsEffect_ConnectEnabledChanged(void* ptr);
void QGraphicsEffect_DisconnectEnabledChanged(void* ptr);
void QGraphicsEffect_EnabledChanged(void* ptr, char enabled);
void* QGraphicsEffect_SourceBoundingRect(void* ptr, long long system);
void QGraphicsEffect_SourceChanged(void* ptr, long long flags);
void QGraphicsEffect_SourceChangedDefault(void* ptr, long long flags);
char QGraphicsEffect_SourceIsPixmap(void* ptr);
void* QGraphicsEffect_SourcePixmap(void* ptr, long long system, void* offset, long long mode);
void QGraphicsEffect_Update(void* ptr);
void QGraphicsEffect_UpdateBoundingRect(void* ptr);
void QGraphicsEffect_DestroyQGraphicsEffect(void* ptr);
void QGraphicsEffect_DestroyQGraphicsEffectDefault(void* ptr);
void QGraphicsEffect_TimerEvent(void* ptr, void* event);
void QGraphicsEffect_TimerEventDefault(void* ptr, void* event);
void QGraphicsEffect_ChildEvent(void* ptr, void* event);
void QGraphicsEffect_ChildEventDefault(void* ptr, void* event);
void QGraphicsEffect_ConnectNotify(void* ptr, void* sign);
void QGraphicsEffect_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsEffect_CustomEvent(void* ptr, void* event);
void QGraphicsEffect_CustomEventDefault(void* ptr, void* event);
void QGraphicsEffect_DeleteLater(void* ptr);
void QGraphicsEffect_DeleteLaterDefault(void* ptr);
void QGraphicsEffect_DisconnectNotify(void* ptr, void* sign);
void QGraphicsEffect_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsEffect_Event(void* ptr, void* e);
char QGraphicsEffect_EventDefault(void* ptr, void* e);
char QGraphicsEffect_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsEffect_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsEffect_MetaObject(void* ptr);
void* QGraphicsEffect_MetaObjectDefault(void* ptr);
void* QGraphicsEllipseItem_NewQGraphicsEllipseItem3(double x, double y, double width, double height, void* parent);
void* QGraphicsEllipseItem_NewQGraphicsEllipseItem(void* parent);
void* QGraphicsEllipseItem_NewQGraphicsEllipseItem2(void* rect, void* parent);
void* QGraphicsEllipseItem_BoundingRect(void* ptr);
void* QGraphicsEllipseItem_BoundingRectDefault(void* ptr);
char QGraphicsEllipseItem_Contains(void* ptr, void* point);
char QGraphicsEllipseItem_ContainsDefault(void* ptr, void* point);
char QGraphicsEllipseItem_IsObscuredBy(void* ptr, void* item);
char QGraphicsEllipseItem_IsObscuredByDefault(void* ptr, void* item);
void* QGraphicsEllipseItem_OpaqueArea(void* ptr);
void* QGraphicsEllipseItem_OpaqueAreaDefault(void* ptr);
void QGraphicsEllipseItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsEllipseItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsEllipseItem_Rect(void* ptr);
void QGraphicsEllipseItem_SetRect(void* ptr, void* rect);
void QGraphicsEllipseItem_SetRect2(void* ptr, double x, double y, double width, double height);
void QGraphicsEllipseItem_SetSpanAngle(void* ptr, int angle);
void QGraphicsEllipseItem_SetStartAngle(void* ptr, int angle);
void* QGraphicsEllipseItem_Shape(void* ptr);
void* QGraphicsEllipseItem_ShapeDefault(void* ptr);
int QGraphicsEllipseItem_SpanAngle(void* ptr);
int QGraphicsEllipseItem_StartAngle(void* ptr);
int QGraphicsEllipseItem_Type(void* ptr);
int QGraphicsEllipseItem_TypeDefault(void* ptr);
void QGraphicsEllipseItem_DestroyQGraphicsEllipseItem(void* ptr);
void QGraphicsEllipseItem_Advance(void* ptr, int phase);
void QGraphicsEllipseItem_AdvanceDefault(void* ptr, int phase);
char QGraphicsEllipseItem_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsEllipseItem_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsEllipseItem_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsEllipseItem_CollidesWithPathDefault(void* ptr, void* path, long long mode);
void QGraphicsEllipseItem_ContextMenuEvent(void* ptr, void* event);
void QGraphicsEllipseItem_ContextMenuEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_DragEnterEvent(void* ptr, void* event);
void QGraphicsEllipseItem_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_DragLeaveEvent(void* ptr, void* event);
void QGraphicsEllipseItem_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_DragMoveEvent(void* ptr, void* event);
void QGraphicsEllipseItem_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_DropEvent(void* ptr, void* event);
void QGraphicsEllipseItem_DropEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_FocusInEvent(void* ptr, void* event);
void QGraphicsEllipseItem_FocusInEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_FocusOutEvent(void* ptr, void* event);
void QGraphicsEllipseItem_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_HoverEnterEvent(void* ptr, void* event);
void QGraphicsEllipseItem_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsEllipseItem_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_HoverMoveEvent(void* ptr, void* event);
void QGraphicsEllipseItem_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_InputMethodEvent(void* ptr, void* event);
void QGraphicsEllipseItem_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsEllipseItem_InputMethodQuery(void* ptr, long long query);
void* QGraphicsEllipseItem_InputMethodQueryDefault(void* ptr, long long query);
void* QGraphicsEllipseItem_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsEllipseItem_ItemChangeDefault(void* ptr, long long change, void* value);
void QGraphicsEllipseItem_KeyPressEvent(void* ptr, void* event);
void QGraphicsEllipseItem_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsEllipseItem_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsEllipseItem_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_MouseMoveEvent(void* ptr, void* event);
void QGraphicsEllipseItem_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_MousePressEvent(void* ptr, void* event);
void QGraphicsEllipseItem_MousePressEventDefault(void* ptr, void* event);
void QGraphicsEllipseItem_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsEllipseItem_MouseReleaseEventDefault(void* ptr, void* event);
char QGraphicsEllipseItem_SceneEvent(void* ptr, void* event);
char QGraphicsEllipseItem_SceneEventDefault(void* ptr, void* event);
char QGraphicsEllipseItem_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsEllipseItem_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void QGraphicsEllipseItem_WheelEvent(void* ptr, void* event);
void QGraphicsEllipseItem_WheelEventDefault(void* ptr, void* event);
void* QGraphicsGridLayout_NewQGraphicsGridLayout(void* parent);
void QGraphicsGridLayout_AddItem2(void* ptr, void* item, int row, int column, long long alignment);
void QGraphicsGridLayout_AddItem(void* ptr, void* item, int row, int column, int rowSpan, int columnSpan, long long alignment);
long long QGraphicsGridLayout_Alignment(void* ptr, void* item);
long long QGraphicsGridLayout_ColumnAlignment(void* ptr, int column);
int QGraphicsGridLayout_ColumnCount(void* ptr);
double QGraphicsGridLayout_ColumnMaximumWidth(void* ptr, int column);
double QGraphicsGridLayout_ColumnMinimumWidth(void* ptr, int column);
double QGraphicsGridLayout_ColumnPreferredWidth(void* ptr, int column);
double QGraphicsGridLayout_ColumnSpacing(void* ptr, int column);
int QGraphicsGridLayout_ColumnStretchFactor(void* ptr, int column);
int QGraphicsGridLayout_Count(void* ptr);
int QGraphicsGridLayout_CountDefault(void* ptr);
double QGraphicsGridLayout_HorizontalSpacing(void* ptr);
void QGraphicsGridLayout_Invalidate(void* ptr);
void QGraphicsGridLayout_InvalidateDefault(void* ptr);
void* QGraphicsGridLayout_ItemAt2(void* ptr, int index);
void* QGraphicsGridLayout_ItemAt2Default(void* ptr, int index);
void* QGraphicsGridLayout_ItemAt(void* ptr, int row, int column);
void QGraphicsGridLayout_RemoveAt(void* ptr, int index);
void QGraphicsGridLayout_RemoveAtDefault(void* ptr, int index);
void QGraphicsGridLayout_RemoveItem(void* ptr, void* item);
long long QGraphicsGridLayout_RowAlignment(void* ptr, int row);
int QGraphicsGridLayout_RowCount(void* ptr);
double QGraphicsGridLayout_RowMaximumHeight(void* ptr, int row);
double QGraphicsGridLayout_RowMinimumHeight(void* ptr, int row);
double QGraphicsGridLayout_RowPreferredHeight(void* ptr, int row);
double QGraphicsGridLayout_RowSpacing(void* ptr, int row);
int QGraphicsGridLayout_RowStretchFactor(void* ptr, int row);
void QGraphicsGridLayout_SetAlignment(void* ptr, void* item, long long alignment);
void QGraphicsGridLayout_SetColumnAlignment(void* ptr, int column, long long alignment);
void QGraphicsGridLayout_SetColumnFixedWidth(void* ptr, int column, double width);
void QGraphicsGridLayout_SetColumnMaximumWidth(void* ptr, int column, double width);
void QGraphicsGridLayout_SetColumnMinimumWidth(void* ptr, int column, double width);
void QGraphicsGridLayout_SetColumnPreferredWidth(void* ptr, int column, double width);
void QGraphicsGridLayout_SetColumnSpacing(void* ptr, int column, double spacing);
void QGraphicsGridLayout_SetColumnStretchFactor(void* ptr, int column, int stretch);
void QGraphicsGridLayout_SetGeometry(void* ptr, void* rect);
void QGraphicsGridLayout_SetGeometryDefault(void* ptr, void* rect);
void QGraphicsGridLayout_SetHorizontalSpacing(void* ptr, double spacing);
void QGraphicsGridLayout_SetRowAlignment(void* ptr, int row, long long alignment);
void QGraphicsGridLayout_SetRowFixedHeight(void* ptr, int row, double height);
void QGraphicsGridLayout_SetRowMaximumHeight(void* ptr, int row, double height);
void QGraphicsGridLayout_SetRowMinimumHeight(void* ptr, int row, double height);
void QGraphicsGridLayout_SetRowPreferredHeight(void* ptr, int row, double height);
void QGraphicsGridLayout_SetRowSpacing(void* ptr, int row, double spacing);
void QGraphicsGridLayout_SetRowStretchFactor(void* ptr, int row, int stretch);
void QGraphicsGridLayout_SetSpacing(void* ptr, double spacing);
void QGraphicsGridLayout_SetVerticalSpacing(void* ptr, double spacing);
void* QGraphicsGridLayout_SizeHint(void* ptr, long long which, void* constraint);
void* QGraphicsGridLayout_SizeHintDefault(void* ptr, long long which, void* constraint);
double QGraphicsGridLayout_VerticalSpacing(void* ptr);
void QGraphicsGridLayout_DestroyQGraphicsGridLayout(void* ptr);
void QGraphicsGridLayout_DestroyQGraphicsGridLayoutDefault(void* ptr);
void QGraphicsGridLayout_GetContentsMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsGridLayout_GetContentsMarginsDefault(void* ptr, double left, double top, double right, double bottom);
void QGraphicsGridLayout_UpdateGeometry(void* ptr);
void QGraphicsGridLayout_UpdateGeometryDefault(void* ptr);
void QGraphicsGridLayout_WidgetEvent(void* ptr, void* e);
void QGraphicsGridLayout_WidgetEventDefault(void* ptr, void* e);
void* QGraphicsItem_NewQGraphicsItem(void* parent);
long long QGraphicsItem_AcceptedMouseButtons(void* ptr);
char QGraphicsItem_AcceptDrops(void* ptr);
char QGraphicsItem_AcceptHoverEvents(void* ptr);
char QGraphicsItem_AcceptTouchEvents(void* ptr);
void QGraphicsItem_Advance(void* ptr, int phase);
void QGraphicsItem_AdvanceDefault(void* ptr, int phase);
void* QGraphicsItem_BoundingRect(void* ptr);
void* QGraphicsItem_BoundingRegion(void* ptr, void* itemToDeviceTransform);
double QGraphicsItem_BoundingRegionGranularity(void* ptr);
long long QGraphicsItem_CacheMode(void* ptr);
struct QtWidgets_PackedList QGraphicsItem_ChildItems(void* ptr);
void* QGraphicsItem_ChildrenBoundingRect(void* ptr);
void QGraphicsItem_ClearFocus(void* ptr);
void* QGraphicsItem_ClipPath(void* ptr);
char QGraphicsItem_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsItem_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsItem_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsItem_CollidesWithPathDefault(void* ptr, void* path, long long mode);
struct QtWidgets_PackedList QGraphicsItem_CollidingItems(void* ptr, long long mode);
void* QGraphicsItem_CommonAncestorItem(void* ptr, void* other);
char QGraphicsItem_Contains(void* ptr, void* point);
char QGraphicsItem_ContainsDefault(void* ptr, void* point);
void QGraphicsItem_ContextMenuEvent(void* ptr, void* event);
void QGraphicsItem_ContextMenuEventDefault(void* ptr, void* event);
void* QGraphicsItem_Cursor(void* ptr);
void* QGraphicsItem_Data(void* ptr, int key);
void* QGraphicsItem_DeviceTransform(void* ptr, void* viewportTransform);
void QGraphicsItem_DragEnterEvent(void* ptr, void* event);
void QGraphicsItem_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsItem_DragLeaveEvent(void* ptr, void* event);
void QGraphicsItem_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsItem_DragMoveEvent(void* ptr, void* event);
void QGraphicsItem_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsItem_DropEvent(void* ptr, void* event);
void QGraphicsItem_DropEventDefault(void* ptr, void* event);
double QGraphicsItem_EffectiveOpacity(void* ptr);
void QGraphicsItem_EnsureVisible(void* ptr, void* rect, int xmargin, int ymargin);
void QGraphicsItem_EnsureVisible2(void* ptr, double x, double y, double w, double h, int xmargin, int ymargin);
void QGraphicsItem_FocusInEvent(void* ptr, void* event);
void QGraphicsItem_FocusInEventDefault(void* ptr, void* event);
void* QGraphicsItem_FocusItem(void* ptr);
void QGraphicsItem_FocusOutEvent(void* ptr, void* event);
void QGraphicsItem_FocusOutEventDefault(void* ptr, void* event);
void* QGraphicsItem_FocusProxy(void* ptr);
char QGraphicsItem_FiltersChildEvents(void* ptr);
long long QGraphicsItem_Flags(void* ptr);
void QGraphicsItem_GrabKeyboard(void* ptr);
void QGraphicsItem_GrabMouse(void* ptr);
void* QGraphicsItem_GraphicsEffect(void* ptr);
void* QGraphicsItem_Group(void* ptr);
char QGraphicsItem_HasCursor(void* ptr);
char QGraphicsItem_HasFocus(void* ptr);
void QGraphicsItem_Hide(void* ptr);
void QGraphicsItem_HoverEnterEvent(void* ptr, void* event);
void QGraphicsItem_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsItem_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsItem_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsItem_HoverMoveEvent(void* ptr, void* event);
void QGraphicsItem_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsItem_InputMethodEvent(void* ptr, void* event);
void QGraphicsItem_InputMethodEventDefault(void* ptr, void* event);
long long QGraphicsItem_InputMethodHints(void* ptr);
void* QGraphicsItem_InputMethodQuery(void* ptr, long long query);
void* QGraphicsItem_InputMethodQueryDefault(void* ptr, long long query);
void QGraphicsItem_InstallSceneEventFilter(void* ptr, void* filterItem);
char QGraphicsItem_IsActive(void* ptr);
char QGraphicsItem_IsAncestorOf(void* ptr, void* child);
char QGraphicsItem_IsClipped(void* ptr);
char QGraphicsItem_IsEnabled(void* ptr);
char QGraphicsItem_IsObscured(void* ptr, void* rect);
char QGraphicsItem_IsObscured2(void* ptr, double x, double y, double w, double h);
char QGraphicsItem_IsObscuredBy(void* ptr, void* item);
char QGraphicsItem_IsObscuredByDefault(void* ptr, void* item);
char QGraphicsItem_IsPanel(void* ptr);
char QGraphicsItem_IsSelected(void* ptr);
char QGraphicsItem_IsUnderMouse(void* ptr);
char QGraphicsItem_IsVisible(void* ptr);
char QGraphicsItem_IsVisibleTo(void* ptr, void* parent);
char QGraphicsItem_IsWidget(void* ptr);
char QGraphicsItem_IsWindow(void* ptr);
void* QGraphicsItem_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsItem_ItemChangeDefault(void* ptr, long long change, void* value);
void* QGraphicsItem_ItemTransform(void* ptr, void* other, char ok);
void QGraphicsItem_KeyPressEvent(void* ptr, void* event);
void QGraphicsItem_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsItem_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsItem_KeyReleaseEventDefault(void* ptr, void* event);
void* QGraphicsItem_MapFromItem4(void* ptr, void* item, void* path);
void* QGraphicsItem_MapFromItem(void* ptr, void* item, void* point);
void* QGraphicsItem_MapFromItem5(void* ptr, void* item, double x, double y);
void* QGraphicsItem_MapFromItem3(void* ptr, void* item, void* polygon);
void* QGraphicsItem_MapFromItem2(void* ptr, void* item, void* rect);
void* QGraphicsItem_MapFromItem6(void* ptr, void* item, double x, double y, double w, double h);
void* QGraphicsItem_MapFromParent4(void* ptr, void* path);
void* QGraphicsItem_MapFromParent(void* ptr, void* point);
void* QGraphicsItem_MapFromParent5(void* ptr, double x, double y);
void* QGraphicsItem_MapFromParent3(void* ptr, void* polygon);
void* QGraphicsItem_MapFromParent2(void* ptr, void* rect);
void* QGraphicsItem_MapFromParent6(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapFromScene4(void* ptr, void* path);
void* QGraphicsItem_MapFromScene(void* ptr, void* point);
void* QGraphicsItem_MapFromScene5(void* ptr, double x, double y);
void* QGraphicsItem_MapFromScene3(void* ptr, void* polygon);
void* QGraphicsItem_MapFromScene2(void* ptr, void* rect);
void* QGraphicsItem_MapFromScene6(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapRectFromItem(void* ptr, void* item, void* rect);
void* QGraphicsItem_MapRectFromItem2(void* ptr, void* item, double x, double y, double w, double h);
void* QGraphicsItem_MapRectFromParent(void* ptr, void* rect);
void* QGraphicsItem_MapRectFromParent2(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapRectFromScene(void* ptr, void* rect);
void* QGraphicsItem_MapRectFromScene2(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapRectToItem(void* ptr, void* item, void* rect);
void* QGraphicsItem_MapRectToItem2(void* ptr, void* item, double x, double y, double w, double h);
void* QGraphicsItem_MapRectToParent(void* ptr, void* rect);
void* QGraphicsItem_MapRectToParent2(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapRectToScene(void* ptr, void* rect);
void* QGraphicsItem_MapRectToScene2(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapToItem4(void* ptr, void* item, void* path);
void* QGraphicsItem_MapToItem(void* ptr, void* item, void* point);
void* QGraphicsItem_MapToItem5(void* ptr, void* item, double x, double y);
void* QGraphicsItem_MapToItem3(void* ptr, void* item, void* polygon);
void* QGraphicsItem_MapToItem2(void* ptr, void* item, void* rect);
void* QGraphicsItem_MapToItem6(void* ptr, void* item, double x, double y, double w, double h);
void* QGraphicsItem_MapToParent4(void* ptr, void* path);
void* QGraphicsItem_MapToParent(void* ptr, void* point);
void* QGraphicsItem_MapToParent5(void* ptr, double x, double y);
void* QGraphicsItem_MapToParent3(void* ptr, void* polygon);
void* QGraphicsItem_MapToParent2(void* ptr, void* rect);
void* QGraphicsItem_MapToParent6(void* ptr, double x, double y, double w, double h);
void* QGraphicsItem_MapToScene4(void* ptr, void* path);
void* QGraphicsItem_MapToScene(void* ptr, void* point);
void* QGraphicsItem_MapToScene5(void* ptr, double x, double y);
void* QGraphicsItem_MapToScene3(void* ptr, void* polygon);
void* QGraphicsItem_MapToScene2(void* ptr, void* rect);
void* QGraphicsItem_MapToScene6(void* ptr, double x, double y, double w, double h);
void QGraphicsItem_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsItem_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsItem_MouseMoveEvent(void* ptr, void* event);
void QGraphicsItem_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsItem_MousePressEvent(void* ptr, void* event);
void QGraphicsItem_MousePressEventDefault(void* ptr, void* event);
void QGraphicsItem_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsItem_MouseReleaseEventDefault(void* ptr, void* event);
void QGraphicsItem_MoveBy(void* ptr, double dx, double dy);
double QGraphicsItem_Opacity(void* ptr);
void* QGraphicsItem_OpaqueArea(void* ptr);
void* QGraphicsItem_OpaqueAreaDefault(void* ptr);
void QGraphicsItem_Paint(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsItem_Panel(void* ptr);
long long QGraphicsItem_PanelModality(void* ptr);
void* QGraphicsItem_ParentItem(void* ptr);
void* QGraphicsItem_ParentObject(void* ptr);
void* QGraphicsItem_ParentWidget(void* ptr);
void* QGraphicsItem_Pos(void* ptr);
void QGraphicsItem_PrepareGeometryChange(void* ptr);
void QGraphicsItem_RemoveSceneEventFilter(void* ptr, void* filterItem);
void QGraphicsItem_ResetTransform(void* ptr);
double QGraphicsItem_Rotation(void* ptr);
double QGraphicsItem_Scale(void* ptr);
void* QGraphicsItem_Scene(void* ptr);
void* QGraphicsItem_SceneBoundingRect(void* ptr);
char QGraphicsItem_SceneEvent(void* ptr, void* event);
char QGraphicsItem_SceneEventDefault(void* ptr, void* event);
char QGraphicsItem_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsItem_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsItem_ScenePos(void* ptr);
void* QGraphicsItem_SceneTransform(void* ptr);
void QGraphicsItem_Scroll(void* ptr, double dx, double dy, void* rect);
void QGraphicsItem_SetAcceptDrops(void* ptr, char on);
void QGraphicsItem_SetAcceptHoverEvents(void* ptr, char enabled);
void QGraphicsItem_SetAcceptTouchEvents(void* ptr, char enabled);
void QGraphicsItem_SetAcceptedMouseButtons(void* ptr, long long buttons);
void QGraphicsItem_SetActive(void* ptr, char active);
void QGraphicsItem_SetBoundingRegionGranularity(void* ptr, double granularity);
void QGraphicsItem_SetCacheMode(void* ptr, long long mode, void* logicalCacheSize);
void QGraphicsItem_SetCursor(void* ptr, void* cursor);
void QGraphicsItem_SetData(void* ptr, int key, void* value);
void QGraphicsItem_SetEnabled(void* ptr, char enabled);
void QGraphicsItem_SetFiltersChildEvents(void* ptr, char enabled);
void QGraphicsItem_SetFlag(void* ptr, long long flag, char enabled);
void QGraphicsItem_SetFlags(void* ptr, long long flags);
void QGraphicsItem_SetFocus(void* ptr, long long focusReason);
void QGraphicsItem_SetFocusProxy(void* ptr, void* item);
void QGraphicsItem_SetGraphicsEffect(void* ptr, void* effect);
void QGraphicsItem_SetGroup(void* ptr, void* group);
void QGraphicsItem_SetInputMethodHints(void* ptr, long long hints);
void QGraphicsItem_SetOpacity(void* ptr, double opacity);
void QGraphicsItem_SetPanelModality(void* ptr, long long panelModality);
void QGraphicsItem_SetParentItem(void* ptr, void* newParent);
void QGraphicsItem_SetPos(void* ptr, void* pos);
void QGraphicsItem_SetPos2(void* ptr, double x, double y);
void QGraphicsItem_SetRotation(void* ptr, double angle);
void QGraphicsItem_SetScale(void* ptr, double factor);
void QGraphicsItem_SetSelected(void* ptr, char selected);
void QGraphicsItem_SetToolTip(void* ptr, char* toolTip);
void QGraphicsItem_SetTransform(void* ptr, void* matrix, char combine);
void QGraphicsItem_SetTransformOriginPoint(void* ptr, void* origin);
void QGraphicsItem_SetTransformOriginPoint2(void* ptr, double x, double y);
void QGraphicsItem_SetVisible(void* ptr, char visible);
void QGraphicsItem_SetX(void* ptr, double x);
void QGraphicsItem_SetY(void* ptr, double y);
void QGraphicsItem_SetZValue(void* ptr, double z);
void* QGraphicsItem_Shape(void* ptr);
void* QGraphicsItem_ShapeDefault(void* ptr);
void QGraphicsItem_Show(void* ptr);
void QGraphicsItem_StackBefore(void* ptr, void* sibling);
void* QGraphicsItem_ToGraphicsObject(void* ptr);
void* QGraphicsItem_ToGraphicsObject2(void* ptr);
struct QtWidgets_PackedString QGraphicsItem_ToolTip(void* ptr);
void* QGraphicsItem_TopLevelItem(void* ptr);
void* QGraphicsItem_TopLevelWidget(void* ptr);
void* QGraphicsItem_Transform(void* ptr);
void* QGraphicsItem_TransformOriginPoint(void* ptr);
struct QtWidgets_PackedList QGraphicsItem_Transformations(void* ptr);
int QGraphicsItem_Type(void* ptr);
int QGraphicsItem_TypeDefault(void* ptr);
void QGraphicsItem_UngrabKeyboard(void* ptr);
void QGraphicsItem_UngrabMouse(void* ptr);
void QGraphicsItem_UnsetCursor(void* ptr);
void QGraphicsItem_Update(void* ptr, void* rect);
void QGraphicsItem_Update2(void* ptr, double x, double y, double width, double height);
void QGraphicsItem_UpdateMicroFocus(void* ptr);
void QGraphicsItem_WheelEvent(void* ptr, void* event);
void QGraphicsItem_WheelEventDefault(void* ptr, void* event);
void* QGraphicsItem_Window(void* ptr);
double QGraphicsItem_X(void* ptr);
double QGraphicsItem_Y(void* ptr);
double QGraphicsItem_ZValue(void* ptr);
void QGraphicsItem_DestroyQGraphicsItem(void* ptr);
void QGraphicsItem_DestroyQGraphicsItemDefault(void* ptr);
int QGraphicsItem_QGraphicsItem_UserType();
void* QGraphicsItem_childItems_atList(void* ptr, int i);
void* QGraphicsItem_collidingItems_atList(void* ptr, int i);
void* QGraphicsItem_transformations_atList(void* ptr, int i);
void* QGraphicsItemGroup_NewQGraphicsItemGroup(void* parent);
void QGraphicsItemGroup_AddToGroup(void* ptr, void* item);
void* QGraphicsItemGroup_BoundingRect(void* ptr);
void* QGraphicsItemGroup_BoundingRectDefault(void* ptr);
char QGraphicsItemGroup_IsObscuredBy(void* ptr, void* item);
char QGraphicsItemGroup_IsObscuredByDefault(void* ptr, void* item);
void* QGraphicsItemGroup_OpaqueArea(void* ptr);
void* QGraphicsItemGroup_OpaqueAreaDefault(void* ptr);
void QGraphicsItemGroup_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsItemGroup_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsItemGroup_RemoveFromGroup(void* ptr, void* item);
int QGraphicsItemGroup_Type(void* ptr);
int QGraphicsItemGroup_TypeDefault(void* ptr);
void QGraphicsItemGroup_DestroyQGraphicsItemGroup(void* ptr);
void QGraphicsItemGroup_Advance(void* ptr, int phase);
void QGraphicsItemGroup_AdvanceDefault(void* ptr, int phase);
char QGraphicsItemGroup_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsItemGroup_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsItemGroup_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsItemGroup_CollidesWithPathDefault(void* ptr, void* path, long long mode);
char QGraphicsItemGroup_Contains(void* ptr, void* point);
char QGraphicsItemGroup_ContainsDefault(void* ptr, void* point);
void QGraphicsItemGroup_ContextMenuEvent(void* ptr, void* event);
void QGraphicsItemGroup_ContextMenuEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_DragEnterEvent(void* ptr, void* event);
void QGraphicsItemGroup_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_DragLeaveEvent(void* ptr, void* event);
void QGraphicsItemGroup_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_DragMoveEvent(void* ptr, void* event);
void QGraphicsItemGroup_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_DropEvent(void* ptr, void* event);
void QGraphicsItemGroup_DropEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_FocusInEvent(void* ptr, void* event);
void QGraphicsItemGroup_FocusInEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_FocusOutEvent(void* ptr, void* event);
void QGraphicsItemGroup_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_HoverEnterEvent(void* ptr, void* event);
void QGraphicsItemGroup_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsItemGroup_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_HoverMoveEvent(void* ptr, void* event);
void QGraphicsItemGroup_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_InputMethodEvent(void* ptr, void* event);
void QGraphicsItemGroup_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsItemGroup_InputMethodQuery(void* ptr, long long query);
void* QGraphicsItemGroup_InputMethodQueryDefault(void* ptr, long long query);
void* QGraphicsItemGroup_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsItemGroup_ItemChangeDefault(void* ptr, long long change, void* value);
void QGraphicsItemGroup_KeyPressEvent(void* ptr, void* event);
void QGraphicsItemGroup_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsItemGroup_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsItemGroup_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_MouseMoveEvent(void* ptr, void* event);
void QGraphicsItemGroup_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_MousePressEvent(void* ptr, void* event);
void QGraphicsItemGroup_MousePressEventDefault(void* ptr, void* event);
void QGraphicsItemGroup_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsItemGroup_MouseReleaseEventDefault(void* ptr, void* event);
char QGraphicsItemGroup_SceneEvent(void* ptr, void* event);
char QGraphicsItemGroup_SceneEventDefault(void* ptr, void* event);
char QGraphicsItemGroup_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsItemGroup_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsItemGroup_Shape(void* ptr);
void* QGraphicsItemGroup_ShapeDefault(void* ptr);
void QGraphicsItemGroup_WheelEvent(void* ptr, void* event);
void QGraphicsItemGroup_WheelEventDefault(void* ptr, void* event);
void* QGraphicsLayout_NewQGraphicsLayout(void* parent);
void QGraphicsLayout_Activate(void* ptr);
int QGraphicsLayout_Count(void* ptr);
void QGraphicsLayout_GetContentsMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsLayout_GetContentsMarginsDefault(void* ptr, double left, double top, double right, double bottom);
void QGraphicsLayout_Invalidate(void* ptr);
void QGraphicsLayout_InvalidateDefault(void* ptr);
char QGraphicsLayout_IsActivated(void* ptr);
void* QGraphicsLayout_ItemAt(void* ptr, int i);
void QGraphicsLayout_RemoveAt(void* ptr, int index);
void QGraphicsLayout_SetContentsMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsLayout_AddChildLayoutItem(void* ptr, void* layoutItem);
void QGraphicsLayout_UpdateGeometry(void* ptr);
void QGraphicsLayout_UpdateGeometryDefault(void* ptr);
void QGraphicsLayout_WidgetEvent(void* ptr, void* e);
void QGraphicsLayout_WidgetEventDefault(void* ptr, void* e);
void QGraphicsLayout_DestroyQGraphicsLayout(void* ptr);
void QGraphicsLayout_SetGeometry(void* ptr, void* rect);
void QGraphicsLayout_SetGeometryDefault(void* ptr, void* rect);
void* QGraphicsLayout_SizeHint(void* ptr, long long which, void* constraint);
;
void* QGraphicsLayoutItem_Geometry(void* ptr);
void QGraphicsLayoutItem_SetGeometry(void* ptr, void* rect);
void QGraphicsLayoutItem_SetGeometryDefault(void* ptr, void* rect);
void* QGraphicsLayoutItem_NewQGraphicsLayoutItem(void* parent, char isLayout);
void* QGraphicsLayoutItem_ContentsRect(void* ptr);
void* QGraphicsLayoutItem_EffectiveSizeHint(void* ptr, long long which, void* constraint);
void QGraphicsLayoutItem_GetContentsMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsLayoutItem_GetContentsMarginsDefault(void* ptr, double left, double top, double right, double bottom);
void* QGraphicsLayoutItem_GraphicsItem(void* ptr);
char QGraphicsLayoutItem_IsLayout(void* ptr);
double QGraphicsLayoutItem_MaximumHeight(void* ptr);
void* QGraphicsLayoutItem_MaximumSize(void* ptr);
double QGraphicsLayoutItem_MaximumWidth(void* ptr);
double QGraphicsLayoutItem_MinimumHeight(void* ptr);
void* QGraphicsLayoutItem_MinimumSize(void* ptr);
double QGraphicsLayoutItem_MinimumWidth(void* ptr);
char QGraphicsLayoutItem_OwnedByLayout(void* ptr);
void* QGraphicsLayoutItem_ParentLayoutItem(void* ptr);
double QGraphicsLayoutItem_PreferredHeight(void* ptr);
void* QGraphicsLayoutItem_PreferredSize(void* ptr);
double QGraphicsLayoutItem_PreferredWidth(void* ptr);
void QGraphicsLayoutItem_SetGraphicsItem(void* ptr, void* item);
void QGraphicsLayoutItem_SetMaximumHeight(void* ptr, double height);
void QGraphicsLayoutItem_SetMaximumSize(void* ptr, void* size);
void QGraphicsLayoutItem_SetMaximumSize2(void* ptr, double w, double h);
void QGraphicsLayoutItem_SetMaximumWidth(void* ptr, double width);
void QGraphicsLayoutItem_SetMinimumHeight(void* ptr, double height);
void QGraphicsLayoutItem_SetMinimumSize(void* ptr, void* size);
void QGraphicsLayoutItem_SetMinimumSize2(void* ptr, double w, double h);
void QGraphicsLayoutItem_SetMinimumWidth(void* ptr, double width);
void QGraphicsLayoutItem_SetOwnedByLayout(void* ptr, char ownership);
void QGraphicsLayoutItem_SetParentLayoutItem(void* ptr, void* parent);
void QGraphicsLayoutItem_SetPreferredHeight(void* ptr, double height);
void QGraphicsLayoutItem_SetPreferredSize(void* ptr, void* size);
void QGraphicsLayoutItem_SetPreferredSize2(void* ptr, double w, double h);
void QGraphicsLayoutItem_SetPreferredWidth(void* ptr, double width);
void QGraphicsLayoutItem_SetSizePolicy2(void* ptr, long long hPolicy, long long vPolicy, long long controlType);
void QGraphicsLayoutItem_SetSizePolicy(void* ptr, void* policy);
void* QGraphicsLayoutItem_SizeHint(void* ptr, long long which, void* constraint);
void* QGraphicsLayoutItem_SizePolicy(void* ptr);
void QGraphicsLayoutItem_UpdateGeometry(void* ptr);
void QGraphicsLayoutItem_UpdateGeometryDefault(void* ptr);
void QGraphicsLayoutItem_DestroyQGraphicsLayoutItem(void* ptr);
void QGraphicsLayoutItem_DestroyQGraphicsLayoutItemDefault(void* ptr);
void* QGraphicsLineItem_NewQGraphicsLineItem(void* parent);
void* QGraphicsLineItem_NewQGraphicsLineItem2(void* line, void* parent);
void* QGraphicsLineItem_NewQGraphicsLineItem3(double x1, double y1, double x2, double y2, void* parent);
void* QGraphicsLineItem_BoundingRect(void* ptr);
void* QGraphicsLineItem_BoundingRectDefault(void* ptr);
char QGraphicsLineItem_Contains(void* ptr, void* point);
char QGraphicsLineItem_ContainsDefault(void* ptr, void* point);
char QGraphicsLineItem_IsObscuredBy(void* ptr, void* item);
char QGraphicsLineItem_IsObscuredByDefault(void* ptr, void* item);
void* QGraphicsLineItem_Line(void* ptr);
void* QGraphicsLineItem_OpaqueArea(void* ptr);
void* QGraphicsLineItem_OpaqueAreaDefault(void* ptr);
void QGraphicsLineItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsLineItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsLineItem_Pen(void* ptr);
void QGraphicsLineItem_SetLine(void* ptr, void* line);
void QGraphicsLineItem_SetLine2(void* ptr, double x1, double y1, double x2, double y2);
void QGraphicsLineItem_SetPen(void* ptr, void* pen);
void* QGraphicsLineItem_Shape(void* ptr);
void* QGraphicsLineItem_ShapeDefault(void* ptr);
int QGraphicsLineItem_Type(void* ptr);
int QGraphicsLineItem_TypeDefault(void* ptr);
void QGraphicsLineItem_DestroyQGraphicsLineItem(void* ptr);
void QGraphicsLineItem_Advance(void* ptr, int phase);
void QGraphicsLineItem_AdvanceDefault(void* ptr, int phase);
char QGraphicsLineItem_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsLineItem_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsLineItem_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsLineItem_CollidesWithPathDefault(void* ptr, void* path, long long mode);
void QGraphicsLineItem_ContextMenuEvent(void* ptr, void* event);
void QGraphicsLineItem_ContextMenuEventDefault(void* ptr, void* event);
void QGraphicsLineItem_DragEnterEvent(void* ptr, void* event);
void QGraphicsLineItem_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsLineItem_DragLeaveEvent(void* ptr, void* event);
void QGraphicsLineItem_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsLineItem_DragMoveEvent(void* ptr, void* event);
void QGraphicsLineItem_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsLineItem_DropEvent(void* ptr, void* event);
void QGraphicsLineItem_DropEventDefault(void* ptr, void* event);
void QGraphicsLineItem_FocusInEvent(void* ptr, void* event);
void QGraphicsLineItem_FocusInEventDefault(void* ptr, void* event);
void QGraphicsLineItem_FocusOutEvent(void* ptr, void* event);
void QGraphicsLineItem_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsLineItem_HoverEnterEvent(void* ptr, void* event);
void QGraphicsLineItem_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsLineItem_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsLineItem_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsLineItem_HoverMoveEvent(void* ptr, void* event);
void QGraphicsLineItem_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsLineItem_InputMethodEvent(void* ptr, void* event);
void QGraphicsLineItem_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsLineItem_InputMethodQuery(void* ptr, long long query);
void* QGraphicsLineItem_InputMethodQueryDefault(void* ptr, long long query);
void* QGraphicsLineItem_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsLineItem_ItemChangeDefault(void* ptr, long long change, void* value);
void QGraphicsLineItem_KeyPressEvent(void* ptr, void* event);
void QGraphicsLineItem_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsLineItem_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsLineItem_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsLineItem_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsLineItem_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsLineItem_MouseMoveEvent(void* ptr, void* event);
void QGraphicsLineItem_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsLineItem_MousePressEvent(void* ptr, void* event);
void QGraphicsLineItem_MousePressEventDefault(void* ptr, void* event);
void QGraphicsLineItem_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsLineItem_MouseReleaseEventDefault(void* ptr, void* event);
char QGraphicsLineItem_SceneEvent(void* ptr, void* event);
char QGraphicsLineItem_SceneEventDefault(void* ptr, void* event);
char QGraphicsLineItem_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsLineItem_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void QGraphicsLineItem_WheelEvent(void* ptr, void* event);
void QGraphicsLineItem_WheelEventDefault(void* ptr, void* event);
void* QGraphicsLinearLayout_NewQGraphicsLinearLayout(void* parent);
void* QGraphicsLinearLayout_NewQGraphicsLinearLayout2(long long orientation, void* parent);
void QGraphicsLinearLayout_AddItem(void* ptr, void* item);
void QGraphicsLinearLayout_AddStretch(void* ptr, int stretch);
long long QGraphicsLinearLayout_Alignment(void* ptr, void* item);
int QGraphicsLinearLayout_Count(void* ptr);
int QGraphicsLinearLayout_CountDefault(void* ptr);
void QGraphicsLinearLayout_InsertItem(void* ptr, int index, void* item);
void QGraphicsLinearLayout_InsertStretch(void* ptr, int index, int stretch);
void QGraphicsLinearLayout_Invalidate(void* ptr);
void QGraphicsLinearLayout_InvalidateDefault(void* ptr);
void* QGraphicsLinearLayout_ItemAt(void* ptr, int index);
void* QGraphicsLinearLayout_ItemAtDefault(void* ptr, int index);
double QGraphicsLinearLayout_ItemSpacing(void* ptr, int index);
long long QGraphicsLinearLayout_Orientation(void* ptr);
void QGraphicsLinearLayout_RemoveAt(void* ptr, int index);
void QGraphicsLinearLayout_RemoveAtDefault(void* ptr, int index);
void QGraphicsLinearLayout_RemoveItem(void* ptr, void* item);
void QGraphicsLinearLayout_SetAlignment(void* ptr, void* item, long long alignment);
void QGraphicsLinearLayout_SetGeometry(void* ptr, void* rect);
void QGraphicsLinearLayout_SetGeometryDefault(void* ptr, void* rect);
void QGraphicsLinearLayout_SetItemSpacing(void* ptr, int index, double spacing);
void QGraphicsLinearLayout_SetOrientation(void* ptr, long long orientation);
void QGraphicsLinearLayout_SetSpacing(void* ptr, double spacing);
void QGraphicsLinearLayout_SetStretchFactor(void* ptr, void* item, int stretch);
void* QGraphicsLinearLayout_SizeHint(void* ptr, long long which, void* constraint);
void* QGraphicsLinearLayout_SizeHintDefault(void* ptr, long long which, void* constraint);
double QGraphicsLinearLayout_Spacing(void* ptr);
int QGraphicsLinearLayout_StretchFactor(void* ptr, void* item);
void QGraphicsLinearLayout_DestroyQGraphicsLinearLayout(void* ptr);
void QGraphicsLinearLayout_DestroyQGraphicsLinearLayoutDefault(void* ptr);
void QGraphicsLinearLayout_GetContentsMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsLinearLayout_GetContentsMarginsDefault(void* ptr, double left, double top, double right, double bottom);
void QGraphicsLinearLayout_UpdateGeometry(void* ptr);
void QGraphicsLinearLayout_UpdateGeometryDefault(void* ptr);
void QGraphicsLinearLayout_WidgetEvent(void* ptr, void* e);
void QGraphicsLinearLayout_WidgetEventDefault(void* ptr, void* e);
void* QGraphicsObject_NewQGraphicsObject(void* parent);
void QGraphicsObject_ConnectEnabledChanged(void* ptr);
void QGraphicsObject_DisconnectEnabledChanged(void* ptr);
void QGraphicsObject_EnabledChanged(void* ptr);
char QGraphicsObject_Event(void* ptr, void* ev);
void QGraphicsObject_GrabGesture(void* ptr, long long gesture, long long flags);
void QGraphicsObject_ConnectOpacityChanged(void* ptr);
void QGraphicsObject_DisconnectOpacityChanged(void* ptr);
void QGraphicsObject_OpacityChanged(void* ptr);
void QGraphicsObject_ConnectParentChanged(void* ptr);
void QGraphicsObject_DisconnectParentChanged(void* ptr);
void QGraphicsObject_ParentChanged(void* ptr);
void QGraphicsObject_ConnectRotationChanged(void* ptr);
void QGraphicsObject_DisconnectRotationChanged(void* ptr);
void QGraphicsObject_RotationChanged(void* ptr);
void QGraphicsObject_ConnectScaleChanged(void* ptr);
void QGraphicsObject_DisconnectScaleChanged(void* ptr);
void QGraphicsObject_ScaleChanged(void* ptr);
void QGraphicsObject_UngrabGesture(void* ptr, long long gesture);
void QGraphicsObject_UpdateMicroFocus(void* ptr);
void QGraphicsObject_ConnectVisibleChanged(void* ptr);
void QGraphicsObject_DisconnectVisibleChanged(void* ptr);
void QGraphicsObject_VisibleChanged(void* ptr);
void QGraphicsObject_ConnectXChanged(void* ptr);
void QGraphicsObject_DisconnectXChanged(void* ptr);
void QGraphicsObject_XChanged(void* ptr);
void QGraphicsObject_ConnectYChanged(void* ptr);
void QGraphicsObject_DisconnectYChanged(void* ptr);
void QGraphicsObject_YChanged(void* ptr);
void QGraphicsObject_ConnectZChanged(void* ptr);
void QGraphicsObject_DisconnectZChanged(void* ptr);
void QGraphicsObject_ZChanged(void* ptr);
void QGraphicsObject_DestroyQGraphicsObject(void* ptr);
void* QGraphicsObject_GraphicsEffect(void* ptr);
void QGraphicsObject_SetGraphicsEffect(void* ptr, void* vqg);
char QGraphicsObject_IsEnabled(void* ptr);
void QGraphicsObject_SetEnabled(void* ptr, char vbo);
double QGraphicsObject_Opacity(void* ptr);
void QGraphicsObject_SetOpacity(void* ptr, double vqr);
void* QGraphicsObject_Parent(void* ptr);
void QGraphicsObject_SetParent(void* ptr, void* vqg);
void* QGraphicsObject_Pos(void* ptr);
void QGraphicsObject_SetPos(void* ptr, void* vqp);
void QGraphicsObject_SetPos2(void* ptr, double x, double y);
double QGraphicsObject_Rotation(void* ptr);
void QGraphicsObject_SetRotation(void* ptr, double vqr);
double QGraphicsObject_Scale(void* ptr);
void QGraphicsObject_SetScale(void* ptr, double vqr);
void* QGraphicsObject_TransformOriginPoint(void* ptr);
void QGraphicsObject_SetTransformOriginPoint(void* ptr, void* vqp);
void QGraphicsObject_SetTransformOriginPoint2(void* ptr, double x, double y);
char QGraphicsObject_IsVisible(void* ptr);
void QGraphicsObject_SetVisible(void* ptr, char vbo);
double QGraphicsObject_X(void* ptr);
void QGraphicsObject_SetX(void* ptr, double vqr);
double QGraphicsObject_Y(void* ptr);
void QGraphicsObject_SetY(void* ptr, double vqr);
double QGraphicsObject_ZValue(void* ptr);
void QGraphicsObject_SetZValue(void* ptr, double vqr);
void QGraphicsObject_TimerEvent(void* ptr, void* event);
void QGraphicsObject_TimerEventDefault(void* ptr, void* event);
void QGraphicsObject_ChildEvent(void* ptr, void* event);
void QGraphicsObject_ChildEventDefault(void* ptr, void* event);
void QGraphicsObject_ConnectNotify(void* ptr, void* sign);
void QGraphicsObject_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsObject_CustomEvent(void* ptr, void* event);
void QGraphicsObject_CustomEventDefault(void* ptr, void* event);
void QGraphicsObject_DeleteLater(void* ptr);
void QGraphicsObject_DeleteLaterDefault(void* ptr);
void QGraphicsObject_DisconnectNotify(void* ptr, void* sign);
void QGraphicsObject_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsObject_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsObject_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsObject_MetaObject(void* ptr);
void* QGraphicsObject_MetaObjectDefault(void* ptr);
void QGraphicsObject_Advance(void* ptr, int phase);
void QGraphicsObject_AdvanceDefault(void* ptr, int phase);
void* QGraphicsObject_BoundingRect(void* ptr);
;
char QGraphicsObject_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsObject_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsObject_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsObject_CollidesWithPathDefault(void* ptr, void* path, long long mode);
char QGraphicsObject_Contains(void* ptr, void* point);
char QGraphicsObject_ContainsDefault(void* ptr, void* point);
void QGraphicsObject_ContextMenuEvent(void* ptr, void* event);
void QGraphicsObject_ContextMenuEventDefault(void* ptr, void* event);
void QGraphicsObject_DragEnterEvent(void* ptr, void* event);
void QGraphicsObject_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsObject_DragLeaveEvent(void* ptr, void* event);
void QGraphicsObject_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsObject_DragMoveEvent(void* ptr, void* event);
void QGraphicsObject_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsObject_DropEvent(void* ptr, void* event);
void QGraphicsObject_DropEventDefault(void* ptr, void* event);
void QGraphicsObject_FocusInEvent(void* ptr, void* event);
void QGraphicsObject_FocusInEventDefault(void* ptr, void* event);
void QGraphicsObject_FocusOutEvent(void* ptr, void* event);
void QGraphicsObject_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsObject_HoverEnterEvent(void* ptr, void* event);
void QGraphicsObject_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsObject_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsObject_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsObject_HoverMoveEvent(void* ptr, void* event);
void QGraphicsObject_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsObject_InputMethodEvent(void* ptr, void* event);
void QGraphicsObject_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsObject_InputMethodQuery(void* ptr, long long query);
void* QGraphicsObject_InputMethodQueryDefault(void* ptr, long long query);
char QGraphicsObject_IsObscuredBy(void* ptr, void* item);
char QGraphicsObject_IsObscuredByDefault(void* ptr, void* item);
void* QGraphicsObject_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsObject_ItemChangeDefault(void* ptr, long long change, void* value);
void QGraphicsObject_KeyPressEvent(void* ptr, void* event);
void QGraphicsObject_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsObject_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsObject_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsObject_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsObject_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsObject_MouseMoveEvent(void* ptr, void* event);
void QGraphicsObject_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsObject_MousePressEvent(void* ptr, void* event);
void QGraphicsObject_MousePressEventDefault(void* ptr, void* event);
void QGraphicsObject_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsObject_MouseReleaseEventDefault(void* ptr, void* event);
void* QGraphicsObject_OpaqueArea(void* ptr);
void* QGraphicsObject_OpaqueAreaDefault(void* ptr);
void QGraphicsObject_Paint(void* ptr, void* painter, void* option, void* widget);
;
char QGraphicsObject_SceneEvent(void* ptr, void* event);
char QGraphicsObject_SceneEventDefault(void* ptr, void* event);
char QGraphicsObject_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsObject_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsObject_Shape(void* ptr);
void* QGraphicsObject_ShapeDefault(void* ptr);
int QGraphicsObject_Type(void* ptr);
int QGraphicsObject_TypeDefault(void* ptr);
void QGraphicsObject_WheelEvent(void* ptr, void* event);
void QGraphicsObject_WheelEventDefault(void* ptr, void* event);
double QGraphicsOpacityEffect_Opacity(void* ptr);
void* QGraphicsOpacityEffect_OpacityMask(void* ptr);
void QGraphicsOpacityEffect_SetOpacity(void* ptr, double opacity);
void QGraphicsOpacityEffect_SetOpacityMask(void* ptr, void* mask);
void* QGraphicsOpacityEffect_NewQGraphicsOpacityEffect(void* parent);
void QGraphicsOpacityEffect_Draw(void* ptr, void* painter);
void QGraphicsOpacityEffect_DrawDefault(void* ptr, void* painter);
void QGraphicsOpacityEffect_ConnectOpacityChanged(void* ptr);
void QGraphicsOpacityEffect_DisconnectOpacityChanged(void* ptr);
void QGraphicsOpacityEffect_OpacityChanged(void* ptr, double opacity);
void QGraphicsOpacityEffect_ConnectOpacityMaskChanged(void* ptr);
void QGraphicsOpacityEffect_DisconnectOpacityMaskChanged(void* ptr);
void QGraphicsOpacityEffect_OpacityMaskChanged(void* ptr, void* mask);
void QGraphicsOpacityEffect_DestroyQGraphicsOpacityEffect(void* ptr);
void QGraphicsOpacityEffect_SetEnabled(void* ptr, char enable);
void QGraphicsOpacityEffect_SetEnabledDefault(void* ptr, char enable);
void* QGraphicsOpacityEffect_BoundingRectFor(void* ptr, void* rect);
void* QGraphicsOpacityEffect_BoundingRectForDefault(void* ptr, void* rect);
void QGraphicsOpacityEffect_SourceChanged(void* ptr, long long flags);
void QGraphicsOpacityEffect_SourceChangedDefault(void* ptr, long long flags);
void QGraphicsOpacityEffect_Update(void* ptr);
void QGraphicsOpacityEffect_UpdateDefault(void* ptr);
void QGraphicsOpacityEffect_TimerEvent(void* ptr, void* event);
void QGraphicsOpacityEffect_TimerEventDefault(void* ptr, void* event);
void QGraphicsOpacityEffect_ChildEvent(void* ptr, void* event);
void QGraphicsOpacityEffect_ChildEventDefault(void* ptr, void* event);
void QGraphicsOpacityEffect_ConnectNotify(void* ptr, void* sign);
void QGraphicsOpacityEffect_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsOpacityEffect_CustomEvent(void* ptr, void* event);
void QGraphicsOpacityEffect_CustomEventDefault(void* ptr, void* event);
void QGraphicsOpacityEffect_DeleteLater(void* ptr);
void QGraphicsOpacityEffect_DeleteLaterDefault(void* ptr);
void QGraphicsOpacityEffect_DisconnectNotify(void* ptr, void* sign);
void QGraphicsOpacityEffect_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsOpacityEffect_Event(void* ptr, void* e);
char QGraphicsOpacityEffect_EventDefault(void* ptr, void* e);
char QGraphicsOpacityEffect_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsOpacityEffect_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsOpacityEffect_MetaObject(void* ptr);
void* QGraphicsOpacityEffect_MetaObjectDefault(void* ptr);
void* QGraphicsPathItem_NewQGraphicsPathItem(void* parent);
void* QGraphicsPathItem_NewQGraphicsPathItem2(void* path, void* parent);
void* QGraphicsPathItem_BoundingRect(void* ptr);
void* QGraphicsPathItem_BoundingRectDefault(void* ptr);
char QGraphicsPathItem_Contains(void* ptr, void* point);
char QGraphicsPathItem_ContainsDefault(void* ptr, void* point);
char QGraphicsPathItem_IsObscuredBy(void* ptr, void* item);
char QGraphicsPathItem_IsObscuredByDefault(void* ptr, void* item);
void* QGraphicsPathItem_OpaqueArea(void* ptr);
void* QGraphicsPathItem_OpaqueAreaDefault(void* ptr);
void QGraphicsPathItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsPathItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsPathItem_Path(void* ptr);
void QGraphicsPathItem_SetPath(void* ptr, void* path);
void* QGraphicsPathItem_Shape(void* ptr);
void* QGraphicsPathItem_ShapeDefault(void* ptr);
int QGraphicsPathItem_Type(void* ptr);
int QGraphicsPathItem_TypeDefault(void* ptr);
void QGraphicsPathItem_DestroyQGraphicsPathItem(void* ptr);
void QGraphicsPathItem_Advance(void* ptr, int phase);
void QGraphicsPathItem_AdvanceDefault(void* ptr, int phase);
char QGraphicsPathItem_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsPathItem_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsPathItem_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsPathItem_CollidesWithPathDefault(void* ptr, void* path, long long mode);
void QGraphicsPathItem_ContextMenuEvent(void* ptr, void* event);
void QGraphicsPathItem_ContextMenuEventDefault(void* ptr, void* event);
void QGraphicsPathItem_DragEnterEvent(void* ptr, void* event);
void QGraphicsPathItem_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsPathItem_DragLeaveEvent(void* ptr, void* event);
void QGraphicsPathItem_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsPathItem_DragMoveEvent(void* ptr, void* event);
void QGraphicsPathItem_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsPathItem_DropEvent(void* ptr, void* event);
void QGraphicsPathItem_DropEventDefault(void* ptr, void* event);
void QGraphicsPathItem_FocusInEvent(void* ptr, void* event);
void QGraphicsPathItem_FocusInEventDefault(void* ptr, void* event);
void QGraphicsPathItem_FocusOutEvent(void* ptr, void* event);
void QGraphicsPathItem_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsPathItem_HoverEnterEvent(void* ptr, void* event);
void QGraphicsPathItem_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsPathItem_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsPathItem_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsPathItem_HoverMoveEvent(void* ptr, void* event);
void QGraphicsPathItem_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsPathItem_InputMethodEvent(void* ptr, void* event);
void QGraphicsPathItem_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsPathItem_InputMethodQuery(void* ptr, long long query);
void* QGraphicsPathItem_InputMethodQueryDefault(void* ptr, long long query);
void* QGraphicsPathItem_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsPathItem_ItemChangeDefault(void* ptr, long long change, void* value);
void QGraphicsPathItem_KeyPressEvent(void* ptr, void* event);
void QGraphicsPathItem_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsPathItem_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsPathItem_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsPathItem_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsPathItem_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsPathItem_MouseMoveEvent(void* ptr, void* event);
void QGraphicsPathItem_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsPathItem_MousePressEvent(void* ptr, void* event);
void QGraphicsPathItem_MousePressEventDefault(void* ptr, void* event);
void QGraphicsPathItem_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsPathItem_MouseReleaseEventDefault(void* ptr, void* event);
char QGraphicsPathItem_SceneEvent(void* ptr, void* event);
char QGraphicsPathItem_SceneEventDefault(void* ptr, void* event);
char QGraphicsPathItem_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsPathItem_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void QGraphicsPathItem_WheelEvent(void* ptr, void* event);
void QGraphicsPathItem_WheelEventDefault(void* ptr, void* event);
void* QGraphicsPixmapItem_NewQGraphicsPixmapItem(void* parent);
void* QGraphicsPixmapItem_NewQGraphicsPixmapItem2(void* pixmap, void* parent);
void* QGraphicsPixmapItem_BoundingRect(void* ptr);
void* QGraphicsPixmapItem_BoundingRectDefault(void* ptr);
char QGraphicsPixmapItem_Contains(void* ptr, void* point);
char QGraphicsPixmapItem_ContainsDefault(void* ptr, void* point);
char QGraphicsPixmapItem_IsObscuredBy(void* ptr, void* item);
char QGraphicsPixmapItem_IsObscuredByDefault(void* ptr, void* item);
void* QGraphicsPixmapItem_Offset(void* ptr);
void* QGraphicsPixmapItem_OpaqueArea(void* ptr);
void* QGraphicsPixmapItem_OpaqueAreaDefault(void* ptr);
void QGraphicsPixmapItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsPixmapItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsPixmapItem_Pixmap(void* ptr);
void QGraphicsPixmapItem_SetOffset(void* ptr, void* offset);
void QGraphicsPixmapItem_SetOffset2(void* ptr, double x, double y);
void QGraphicsPixmapItem_SetPixmap(void* ptr, void* pixmap);
void QGraphicsPixmapItem_SetShapeMode(void* ptr, long long mode);
void QGraphicsPixmapItem_SetTransformationMode(void* ptr, long long mode);
void* QGraphicsPixmapItem_Shape(void* ptr);
void* QGraphicsPixmapItem_ShapeDefault(void* ptr);
long long QGraphicsPixmapItem_ShapeMode(void* ptr);
long long QGraphicsPixmapItem_TransformationMode(void* ptr);
int QGraphicsPixmapItem_Type(void* ptr);
int QGraphicsPixmapItem_TypeDefault(void* ptr);
void QGraphicsPixmapItem_DestroyQGraphicsPixmapItem(void* ptr);
void QGraphicsPixmapItem_Advance(void* ptr, int phase);
void QGraphicsPixmapItem_AdvanceDefault(void* ptr, int phase);
char QGraphicsPixmapItem_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsPixmapItem_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsPixmapItem_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsPixmapItem_CollidesWithPathDefault(void* ptr, void* path, long long mode);
void QGraphicsPixmapItem_ContextMenuEvent(void* ptr, void* event);
void QGraphicsPixmapItem_ContextMenuEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_DragEnterEvent(void* ptr, void* event);
void QGraphicsPixmapItem_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_DragLeaveEvent(void* ptr, void* event);
void QGraphicsPixmapItem_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_DragMoveEvent(void* ptr, void* event);
void QGraphicsPixmapItem_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_DropEvent(void* ptr, void* event);
void QGraphicsPixmapItem_DropEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_FocusInEvent(void* ptr, void* event);
void QGraphicsPixmapItem_FocusInEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_FocusOutEvent(void* ptr, void* event);
void QGraphicsPixmapItem_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_HoverEnterEvent(void* ptr, void* event);
void QGraphicsPixmapItem_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsPixmapItem_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_HoverMoveEvent(void* ptr, void* event);
void QGraphicsPixmapItem_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_InputMethodEvent(void* ptr, void* event);
void QGraphicsPixmapItem_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsPixmapItem_InputMethodQuery(void* ptr, long long query);
void* QGraphicsPixmapItem_InputMethodQueryDefault(void* ptr, long long query);
void* QGraphicsPixmapItem_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsPixmapItem_ItemChangeDefault(void* ptr, long long change, void* value);
void QGraphicsPixmapItem_KeyPressEvent(void* ptr, void* event);
void QGraphicsPixmapItem_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsPixmapItem_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsPixmapItem_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_MouseMoveEvent(void* ptr, void* event);
void QGraphicsPixmapItem_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_MousePressEvent(void* ptr, void* event);
void QGraphicsPixmapItem_MousePressEventDefault(void* ptr, void* event);
void QGraphicsPixmapItem_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsPixmapItem_MouseReleaseEventDefault(void* ptr, void* event);
char QGraphicsPixmapItem_SceneEvent(void* ptr, void* event);
char QGraphicsPixmapItem_SceneEventDefault(void* ptr, void* event);
char QGraphicsPixmapItem_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsPixmapItem_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void QGraphicsPixmapItem_WheelEvent(void* ptr, void* event);
void QGraphicsPixmapItem_WheelEventDefault(void* ptr, void* event);
void* QGraphicsPolygonItem_NewQGraphicsPolygonItem(void* parent);
void* QGraphicsPolygonItem_NewQGraphicsPolygonItem2(void* polygon, void* parent);
void* QGraphicsPolygonItem_BoundingRect(void* ptr);
void* QGraphicsPolygonItem_BoundingRectDefault(void* ptr);
char QGraphicsPolygonItem_Contains(void* ptr, void* point);
char QGraphicsPolygonItem_ContainsDefault(void* ptr, void* point);
long long QGraphicsPolygonItem_FillRule(void* ptr);
char QGraphicsPolygonItem_IsObscuredBy(void* ptr, void* item);
char QGraphicsPolygonItem_IsObscuredByDefault(void* ptr, void* item);
void* QGraphicsPolygonItem_OpaqueArea(void* ptr);
void* QGraphicsPolygonItem_OpaqueAreaDefault(void* ptr);
void QGraphicsPolygonItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsPolygonItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsPolygonItem_Polygon(void* ptr);
void QGraphicsPolygonItem_SetFillRule(void* ptr, long long rule);
void QGraphicsPolygonItem_SetPolygon(void* ptr, void* polygon);
void* QGraphicsPolygonItem_Shape(void* ptr);
void* QGraphicsPolygonItem_ShapeDefault(void* ptr);
int QGraphicsPolygonItem_Type(void* ptr);
int QGraphicsPolygonItem_TypeDefault(void* ptr);
void QGraphicsPolygonItem_DestroyQGraphicsPolygonItem(void* ptr);
void QGraphicsPolygonItem_Advance(void* ptr, int phase);
void QGraphicsPolygonItem_AdvanceDefault(void* ptr, int phase);
char QGraphicsPolygonItem_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsPolygonItem_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsPolygonItem_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsPolygonItem_CollidesWithPathDefault(void* ptr, void* path, long long mode);
void QGraphicsPolygonItem_ContextMenuEvent(void* ptr, void* event);
void QGraphicsPolygonItem_ContextMenuEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_DragEnterEvent(void* ptr, void* event);
void QGraphicsPolygonItem_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_DragLeaveEvent(void* ptr, void* event);
void QGraphicsPolygonItem_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_DragMoveEvent(void* ptr, void* event);
void QGraphicsPolygonItem_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_DropEvent(void* ptr, void* event);
void QGraphicsPolygonItem_DropEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_FocusInEvent(void* ptr, void* event);
void QGraphicsPolygonItem_FocusInEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_FocusOutEvent(void* ptr, void* event);
void QGraphicsPolygonItem_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_HoverEnterEvent(void* ptr, void* event);
void QGraphicsPolygonItem_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsPolygonItem_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_HoverMoveEvent(void* ptr, void* event);
void QGraphicsPolygonItem_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_InputMethodEvent(void* ptr, void* event);
void QGraphicsPolygonItem_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsPolygonItem_InputMethodQuery(void* ptr, long long query);
void* QGraphicsPolygonItem_InputMethodQueryDefault(void* ptr, long long query);
void* QGraphicsPolygonItem_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsPolygonItem_ItemChangeDefault(void* ptr, long long change, void* value);
void QGraphicsPolygonItem_KeyPressEvent(void* ptr, void* event);
void QGraphicsPolygonItem_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsPolygonItem_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsPolygonItem_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_MouseMoveEvent(void* ptr, void* event);
void QGraphicsPolygonItem_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_MousePressEvent(void* ptr, void* event);
void QGraphicsPolygonItem_MousePressEventDefault(void* ptr, void* event);
void QGraphicsPolygonItem_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsPolygonItem_MouseReleaseEventDefault(void* ptr, void* event);
char QGraphicsPolygonItem_SceneEvent(void* ptr, void* event);
char QGraphicsPolygonItem_SceneEventDefault(void* ptr, void* event);
char QGraphicsPolygonItem_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsPolygonItem_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void QGraphicsPolygonItem_WheelEvent(void* ptr, void* event);
void QGraphicsPolygonItem_WheelEventDefault(void* ptr, void* event);
void* QGraphicsProxyWidget_NewProxyWidget(void* ptr, void* child);
void* QGraphicsProxyWidget_NewQGraphicsProxyWidget(void* parent, long long wFlags);
void QGraphicsProxyWidget_ContextMenuEvent(void* ptr, void* event);
void QGraphicsProxyWidget_ContextMenuEventDefault(void* ptr, void* event);
void* QGraphicsProxyWidget_CreateProxyForChildWidget(void* ptr, void* child);
void QGraphicsProxyWidget_DragEnterEvent(void* ptr, void* event);
void QGraphicsProxyWidget_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_DragLeaveEvent(void* ptr, void* event);
void QGraphicsProxyWidget_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_DragMoveEvent(void* ptr, void* event);
void QGraphicsProxyWidget_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_DropEvent(void* ptr, void* event);
void QGraphicsProxyWidget_DropEventDefault(void* ptr, void* event);
char QGraphicsProxyWidget_Event(void* ptr, void* event);
char QGraphicsProxyWidget_EventFilter(void* ptr, void* object, void* event);
void QGraphicsProxyWidget_FocusInEvent(void* ptr, void* event);
void QGraphicsProxyWidget_FocusInEventDefault(void* ptr, void* event);
char QGraphicsProxyWidget_FocusNextPrevChild(void* ptr, char next);
char QGraphicsProxyWidget_FocusNextPrevChildDefault(void* ptr, char next);
void QGraphicsProxyWidget_FocusOutEvent(void* ptr, void* event);
void QGraphicsProxyWidget_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_GrabMouseEvent(void* ptr, void* event);
void QGraphicsProxyWidget_GrabMouseEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_HideEvent(void* ptr, void* event);
void QGraphicsProxyWidget_HideEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_HoverEnterEvent(void* ptr, void* event);
void QGraphicsProxyWidget_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsProxyWidget_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_HoverMoveEvent(void* ptr, void* event);
void QGraphicsProxyWidget_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_InputMethodEvent(void* ptr, void* event);
void QGraphicsProxyWidget_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsProxyWidget_InputMethodQuery(void* ptr, long long query);
void* QGraphicsProxyWidget_InputMethodQueryDefault(void* ptr, long long query);
void* QGraphicsProxyWidget_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsProxyWidget_ItemChangeDefault(void* ptr, long long change, void* value);
void QGraphicsProxyWidget_KeyPressEvent(void* ptr, void* event);
void QGraphicsProxyWidget_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsProxyWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsProxyWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_MouseMoveEvent(void* ptr, void* event);
void QGraphicsProxyWidget_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_MousePressEvent(void* ptr, void* event);
void QGraphicsProxyWidget_MousePressEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsProxyWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsProxyWidget_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsProxyWidget_ResizeEvent(void* ptr, void* event);
void QGraphicsProxyWidget_ResizeEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_SetGeometry(void* ptr, void* rect);
void QGraphicsProxyWidget_SetGeometryDefault(void* ptr, void* rect);
void QGraphicsProxyWidget_SetWidget(void* ptr, void* widget);
void QGraphicsProxyWidget_ShowEvent(void* ptr, void* event);
void QGraphicsProxyWidget_ShowEventDefault(void* ptr, void* event);
void* QGraphicsProxyWidget_SizeHint(void* ptr, long long which, void* constraint);
void* QGraphicsProxyWidget_SizeHintDefault(void* ptr, long long which, void* constraint);
void* QGraphicsProxyWidget_SubWidgetRect(void* ptr, void* widget);
int QGraphicsProxyWidget_Type(void* ptr);
int QGraphicsProxyWidget_TypeDefault(void* ptr);
void QGraphicsProxyWidget_UngrabMouseEvent(void* ptr, void* event);
void QGraphicsProxyWidget_UngrabMouseEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_WheelEvent(void* ptr, void* event);
void QGraphicsProxyWidget_WheelEventDefault(void* ptr, void* event);
void* QGraphicsProxyWidget_Widget(void* ptr);
void QGraphicsProxyWidget_DestroyQGraphicsProxyWidget(void* ptr);
void* QGraphicsProxyWidget_BoundingRect(void* ptr);
void* QGraphicsProxyWidget_BoundingRectDefault(void* ptr);
void QGraphicsProxyWidget_ChangeEvent(void* ptr, void* event);
void QGraphicsProxyWidget_ChangeEventDefault(void* ptr, void* event);
char QGraphicsProxyWidget_Close(void* ptr);
char QGraphicsProxyWidget_CloseDefault(void* ptr);
void QGraphicsProxyWidget_CloseEvent(void* ptr, void* event);
void QGraphicsProxyWidget_CloseEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_GetContentsMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsProxyWidget_GetContentsMarginsDefault(void* ptr, double left, double top, double right, double bottom);
void QGraphicsProxyWidget_GrabKeyboardEvent(void* ptr, void* event);
void QGraphicsProxyWidget_GrabKeyboardEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_InitStyleOption(void* ptr, void* option);
void QGraphicsProxyWidget_InitStyleOptionDefault(void* ptr, void* option);
void QGraphicsProxyWidget_MoveEvent(void* ptr, void* event);
void QGraphicsProxyWidget_MoveEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_PaintWindowFrame(void* ptr, void* painter, void* option, void* widget);
void QGraphicsProxyWidget_PaintWindowFrameDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsProxyWidget_PolishEvent(void* ptr);
void QGraphicsProxyWidget_PolishEventDefault(void* ptr);
char QGraphicsProxyWidget_SceneEvent(void* ptr, void* event);
char QGraphicsProxyWidget_SceneEventDefault(void* ptr, void* event);
void* QGraphicsProxyWidget_Shape(void* ptr);
void* QGraphicsProxyWidget_ShapeDefault(void* ptr);
void QGraphicsProxyWidget_UngrabKeyboardEvent(void* ptr, void* event);
void QGraphicsProxyWidget_UngrabKeyboardEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_UpdateGeometry(void* ptr);
void QGraphicsProxyWidget_UpdateGeometryDefault(void* ptr);
char QGraphicsProxyWidget_WindowFrameEvent(void* ptr, void* event);
char QGraphicsProxyWidget_WindowFrameEventDefault(void* ptr, void* event);
long long QGraphicsProxyWidget_WindowFrameSectionAt(void* ptr, void* pos);
long long QGraphicsProxyWidget_WindowFrameSectionAtDefault(void* ptr, void* pos);
void QGraphicsProxyWidget_UpdateMicroFocus(void* ptr);
void QGraphicsProxyWidget_UpdateMicroFocusDefault(void* ptr);
void QGraphicsProxyWidget_TimerEvent(void* ptr, void* event);
void QGraphicsProxyWidget_TimerEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_ChildEvent(void* ptr, void* event);
void QGraphicsProxyWidget_ChildEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_ConnectNotify(void* ptr, void* sign);
void QGraphicsProxyWidget_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsProxyWidget_CustomEvent(void* ptr, void* event);
void QGraphicsProxyWidget_CustomEventDefault(void* ptr, void* event);
void QGraphicsProxyWidget_DeleteLater(void* ptr);
void QGraphicsProxyWidget_DeleteLaterDefault(void* ptr);
void QGraphicsProxyWidget_DisconnectNotify(void* ptr, void* sign);
void QGraphicsProxyWidget_DisconnectNotifyDefault(void* ptr, void* sign);
void* QGraphicsProxyWidget_MetaObject(void* ptr);
void* QGraphicsProxyWidget_MetaObjectDefault(void* ptr);
void QGraphicsProxyWidget_Advance(void* ptr, int phase);
void QGraphicsProxyWidget_AdvanceDefault(void* ptr, int phase);
char QGraphicsProxyWidget_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsProxyWidget_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsProxyWidget_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsProxyWidget_CollidesWithPathDefault(void* ptr, void* path, long long mode);
char QGraphicsProxyWidget_Contains(void* ptr, void* point);
char QGraphicsProxyWidget_ContainsDefault(void* ptr, void* point);
char QGraphicsProxyWidget_IsObscuredBy(void* ptr, void* item);
char QGraphicsProxyWidget_IsObscuredByDefault(void* ptr, void* item);
void* QGraphicsProxyWidget_OpaqueArea(void* ptr);
void* QGraphicsProxyWidget_OpaqueAreaDefault(void* ptr);
char QGraphicsProxyWidget_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsProxyWidget_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsRectItem_NewQGraphicsRectItem3(double x, double y, double width, double height, void* parent);
void QGraphicsRectItem_SetRect(void* ptr, void* rectangle);
void* QGraphicsRectItem_NewQGraphicsRectItem(void* parent);
void* QGraphicsRectItem_NewQGraphicsRectItem2(void* rect, void* parent);
void* QGraphicsRectItem_BoundingRect(void* ptr);
void* QGraphicsRectItem_BoundingRectDefault(void* ptr);
char QGraphicsRectItem_Contains(void* ptr, void* point);
char QGraphicsRectItem_ContainsDefault(void* ptr, void* point);
char QGraphicsRectItem_IsObscuredBy(void* ptr, void* item);
char QGraphicsRectItem_IsObscuredByDefault(void* ptr, void* item);
void* QGraphicsRectItem_OpaqueArea(void* ptr);
void* QGraphicsRectItem_OpaqueAreaDefault(void* ptr);
void QGraphicsRectItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsRectItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void* QGraphicsRectItem_Rect(void* ptr);
void QGraphicsRectItem_SetRect2(void* ptr, double x, double y, double width, double height);
void* QGraphicsRectItem_Shape(void* ptr);
void* QGraphicsRectItem_ShapeDefault(void* ptr);
int QGraphicsRectItem_Type(void* ptr);
int QGraphicsRectItem_TypeDefault(void* ptr);
void QGraphicsRectItem_DestroyQGraphicsRectItem(void* ptr);
void QGraphicsRectItem_Advance(void* ptr, int phase);
void QGraphicsRectItem_AdvanceDefault(void* ptr, int phase);
char QGraphicsRectItem_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsRectItem_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsRectItem_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsRectItem_CollidesWithPathDefault(void* ptr, void* path, long long mode);
void QGraphicsRectItem_ContextMenuEvent(void* ptr, void* event);
void QGraphicsRectItem_ContextMenuEventDefault(void* ptr, void* event);
void QGraphicsRectItem_DragEnterEvent(void* ptr, void* event);
void QGraphicsRectItem_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsRectItem_DragLeaveEvent(void* ptr, void* event);
void QGraphicsRectItem_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsRectItem_DragMoveEvent(void* ptr, void* event);
void QGraphicsRectItem_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsRectItem_DropEvent(void* ptr, void* event);
void QGraphicsRectItem_DropEventDefault(void* ptr, void* event);
void QGraphicsRectItem_FocusInEvent(void* ptr, void* event);
void QGraphicsRectItem_FocusInEventDefault(void* ptr, void* event);
void QGraphicsRectItem_FocusOutEvent(void* ptr, void* event);
void QGraphicsRectItem_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsRectItem_HoverEnterEvent(void* ptr, void* event);
void QGraphicsRectItem_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsRectItem_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsRectItem_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsRectItem_HoverMoveEvent(void* ptr, void* event);
void QGraphicsRectItem_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsRectItem_InputMethodEvent(void* ptr, void* event);
void QGraphicsRectItem_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsRectItem_InputMethodQuery(void* ptr, long long query);
void* QGraphicsRectItem_InputMethodQueryDefault(void* ptr, long long query);
void* QGraphicsRectItem_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsRectItem_ItemChangeDefault(void* ptr, long long change, void* value);
void QGraphicsRectItem_KeyPressEvent(void* ptr, void* event);
void QGraphicsRectItem_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsRectItem_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsRectItem_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsRectItem_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsRectItem_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsRectItem_MouseMoveEvent(void* ptr, void* event);
void QGraphicsRectItem_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsRectItem_MousePressEvent(void* ptr, void* event);
void QGraphicsRectItem_MousePressEventDefault(void* ptr, void* event);
void QGraphicsRectItem_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsRectItem_MouseReleaseEventDefault(void* ptr, void* event);
char QGraphicsRectItem_SceneEvent(void* ptr, void* event);
char QGraphicsRectItem_SceneEventDefault(void* ptr, void* event);
char QGraphicsRectItem_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsRectItem_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void QGraphicsRectItem_WheelEvent(void* ptr, void* event);
void QGraphicsRectItem_WheelEventDefault(void* ptr, void* event);
double QGraphicsRotation_Angle(void* ptr);
void* QGraphicsRotation_Axis(void* ptr);
void* QGraphicsRotation_Origin(void* ptr);
void QGraphicsRotation_SetAngle(void* ptr, double vqr);
void QGraphicsRotation_SetAxis2(void* ptr, long long axis);
void QGraphicsRotation_SetAxis(void* ptr, void* axis);
void QGraphicsRotation_SetOrigin(void* ptr, void* point);
void* QGraphicsRotation_NewQGraphicsRotation(void* parent);
void QGraphicsRotation_ConnectAngleChanged(void* ptr);
void QGraphicsRotation_DisconnectAngleChanged(void* ptr);
void QGraphicsRotation_AngleChanged(void* ptr);
void QGraphicsRotation_ApplyTo(void* ptr, void* matrix);
void QGraphicsRotation_ApplyToDefault(void* ptr, void* matrix);
void QGraphicsRotation_ConnectAxisChanged(void* ptr);
void QGraphicsRotation_DisconnectAxisChanged(void* ptr);
void QGraphicsRotation_AxisChanged(void* ptr);
void QGraphicsRotation_ConnectOriginChanged(void* ptr);
void QGraphicsRotation_DisconnectOriginChanged(void* ptr);
void QGraphicsRotation_OriginChanged(void* ptr);
void QGraphicsRotation_DestroyQGraphicsRotation(void* ptr);
void QGraphicsRotation_Update(void* ptr);
void QGraphicsRotation_UpdateDefault(void* ptr);
void QGraphicsRotation_TimerEvent(void* ptr, void* event);
void QGraphicsRotation_TimerEventDefault(void* ptr, void* event);
void QGraphicsRotation_ChildEvent(void* ptr, void* event);
void QGraphicsRotation_ChildEventDefault(void* ptr, void* event);
void QGraphicsRotation_ConnectNotify(void* ptr, void* sign);
void QGraphicsRotation_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsRotation_CustomEvent(void* ptr, void* event);
void QGraphicsRotation_CustomEventDefault(void* ptr, void* event);
void QGraphicsRotation_DeleteLater(void* ptr);
void QGraphicsRotation_DeleteLaterDefault(void* ptr);
void QGraphicsRotation_DisconnectNotify(void* ptr, void* sign);
void QGraphicsRotation_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsRotation_Event(void* ptr, void* e);
char QGraphicsRotation_EventDefault(void* ptr, void* e);
char QGraphicsRotation_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsRotation_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsRotation_MetaObject(void* ptr);
void* QGraphicsRotation_MetaObjectDefault(void* ptr);
void* QGraphicsScale_Origin(void* ptr);
void QGraphicsScale_SetOrigin(void* ptr, void* point);
void QGraphicsScale_SetXScale(void* ptr, double vqr);
void QGraphicsScale_SetYScale(void* ptr, double vqr);
void QGraphicsScale_SetZScale(void* ptr, double vqr);
double QGraphicsScale_XScale(void* ptr);
double QGraphicsScale_YScale(void* ptr);
double QGraphicsScale_ZScale(void* ptr);
void* QGraphicsScale_NewQGraphicsScale(void* parent);
void QGraphicsScale_ApplyTo(void* ptr, void* matrix);
void QGraphicsScale_ApplyToDefault(void* ptr, void* matrix);
void QGraphicsScale_ConnectOriginChanged(void* ptr);
void QGraphicsScale_DisconnectOriginChanged(void* ptr);
void QGraphicsScale_OriginChanged(void* ptr);
void QGraphicsScale_ConnectScaleChanged(void* ptr);
void QGraphicsScale_DisconnectScaleChanged(void* ptr);
void QGraphicsScale_ScaleChanged(void* ptr);
void QGraphicsScale_ConnectXScaleChanged(void* ptr);
void QGraphicsScale_DisconnectXScaleChanged(void* ptr);
void QGraphicsScale_XScaleChanged(void* ptr);
void QGraphicsScale_ConnectYScaleChanged(void* ptr);
void QGraphicsScale_DisconnectYScaleChanged(void* ptr);
void QGraphicsScale_YScaleChanged(void* ptr);
void QGraphicsScale_ConnectZScaleChanged(void* ptr);
void QGraphicsScale_DisconnectZScaleChanged(void* ptr);
void QGraphicsScale_ZScaleChanged(void* ptr);
void QGraphicsScale_DestroyQGraphicsScale(void* ptr);
void QGraphicsScale_Update(void* ptr);
void QGraphicsScale_UpdateDefault(void* ptr);
void QGraphicsScale_TimerEvent(void* ptr, void* event);
void QGraphicsScale_TimerEventDefault(void* ptr, void* event);
void QGraphicsScale_ChildEvent(void* ptr, void* event);
void QGraphicsScale_ChildEventDefault(void* ptr, void* event);
void QGraphicsScale_ConnectNotify(void* ptr, void* sign);
void QGraphicsScale_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsScale_CustomEvent(void* ptr, void* event);
void QGraphicsScale_CustomEventDefault(void* ptr, void* event);
void QGraphicsScale_DeleteLater(void* ptr);
void QGraphicsScale_DeleteLaterDefault(void* ptr);
void QGraphicsScale_DisconnectNotify(void* ptr, void* sign);
void QGraphicsScale_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsScale_Event(void* ptr, void* e);
char QGraphicsScale_EventDefault(void* ptr, void* e);
char QGraphicsScale_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsScale_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsScale_MetaObject(void* ptr);
void* QGraphicsScale_MetaObjectDefault(void* ptr);
void* QGraphicsScene_BackgroundBrush(void* ptr);
int QGraphicsScene_BspTreeDepth(void* ptr);
void* QGraphicsScene_Font(void* ptr);
void* QGraphicsScene_ForegroundBrush(void* ptr);
char QGraphicsScene_IsSortCacheEnabled(void* ptr);
long long QGraphicsScene_ItemIndexMethod(void* ptr);
struct QtWidgets_PackedList QGraphicsScene_Items5(void* ptr, void* path, long long mode, long long order, void* deviceTransform);
struct QtWidgets_PackedList QGraphicsScene_Items2(void* ptr, void* pos, long long mode, long long order, void* deviceTransform);
struct QtWidgets_PackedList QGraphicsScene_Items4(void* ptr, void* polygon, long long mode, long long order, void* deviceTransform);
struct QtWidgets_PackedList QGraphicsScene_Items3(void* ptr, void* rect, long long mode, long long order, void* deviceTransform);
double QGraphicsScene_MinimumRenderSize(void* ptr);
void* QGraphicsScene_Palette(void* ptr);
void* QGraphicsScene_SceneRect(void* ptr);
void QGraphicsScene_SetBackgroundBrush(void* ptr, void* brush);
void QGraphicsScene_SetBspTreeDepth(void* ptr, int depth);
void QGraphicsScene_SetFont(void* ptr, void* font);
void QGraphicsScene_SetForegroundBrush(void* ptr, void* brush);
void QGraphicsScene_SetItemIndexMethod(void* ptr, long long method);
void QGraphicsScene_SetMinimumRenderSize(void* ptr, double minSize);
void QGraphicsScene_SetPalette(void* ptr, void* palette);
void QGraphicsScene_SetSceneRect(void* ptr, void* rect);
void QGraphicsScene_SetSortCacheEnabled(void* ptr, char enabled);
void QGraphicsScene_SetStickyFocus(void* ptr, char enabled);
char QGraphicsScene_StickyFocus(void* ptr);
void QGraphicsScene_Update(void* ptr, void* rect);
void* QGraphicsScene_NewQGraphicsScene(void* parent);
void* QGraphicsScene_NewQGraphicsScene2(void* sceneRect, void* parent);
void* QGraphicsScene_NewQGraphicsScene3(double x, double y, double width, double height, void* parent);
void* QGraphicsScene_ActivePanel(void* ptr);
void* QGraphicsScene_ActiveWindow(void* ptr);
void* QGraphicsScene_AddEllipse(void* ptr, void* rect, void* pen, void* brush);
void* QGraphicsScene_AddEllipse2(void* ptr, double x, double y, double w, double h, void* pen, void* brush);
void QGraphicsScene_AddItem(void* ptr, void* item);
void* QGraphicsScene_AddLine(void* ptr, void* line, void* pen);
void* QGraphicsScene_AddLine2(void* ptr, double x1, double y1, double x2, double y2, void* pen);
void* QGraphicsScene_AddPath(void* ptr, void* path, void* pen, void* brush);
void* QGraphicsScene_AddPixmap(void* ptr, void* pixmap);
void* QGraphicsScene_AddPolygon(void* ptr, void* polygon, void* pen, void* brush);
void* QGraphicsScene_AddRect(void* ptr, void* rect, void* pen, void* brush);
void* QGraphicsScene_AddRect2(void* ptr, double x, double y, double w, double h, void* pen, void* brush);
void* QGraphicsScene_AddSimpleText(void* ptr, char* text, void* font);
void* QGraphicsScene_AddText(void* ptr, char* text, void* font);
void* QGraphicsScene_AddWidget(void* ptr, void* widget, long long wFlags);
void QGraphicsScene_Advance(void* ptr);
void QGraphicsScene_Clear(void* ptr);
void QGraphicsScene_ClearFocus(void* ptr);
void QGraphicsScene_ClearSelection(void* ptr);
struct QtWidgets_PackedList QGraphicsScene_CollidingItems(void* ptr, void* item, long long mode);
void QGraphicsScene_ContextMenuEvent(void* ptr, void* contextMenuEvent);
void QGraphicsScene_ContextMenuEventDefault(void* ptr, void* contextMenuEvent);
void QGraphicsScene_DestroyItemGroup(void* ptr, void* group);
void QGraphicsScene_DragEnterEvent(void* ptr, void* event);
void QGraphicsScene_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsScene_DragLeaveEvent(void* ptr, void* event);
void QGraphicsScene_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsScene_DragMoveEvent(void* ptr, void* event);
void QGraphicsScene_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsScene_DrawBackground(void* ptr, void* painter, void* rect);
void QGraphicsScene_DrawBackgroundDefault(void* ptr, void* painter, void* rect);
void QGraphicsScene_DrawForeground(void* ptr, void* painter, void* rect);
void QGraphicsScene_DrawForegroundDefault(void* ptr, void* painter, void* rect);
void QGraphicsScene_DropEvent(void* ptr, void* event);
void QGraphicsScene_DropEventDefault(void* ptr, void* event);
char QGraphicsScene_Event(void* ptr, void* event);
char QGraphicsScene_EventFilter(void* ptr, void* watched, void* event);
void QGraphicsScene_FocusInEvent(void* ptr, void* focusEvent);
void QGraphicsScene_FocusInEventDefault(void* ptr, void* focusEvent);
void* QGraphicsScene_FocusItem(void* ptr);
void QGraphicsScene_ConnectFocusItemChanged(void* ptr);
void QGraphicsScene_DisconnectFocusItemChanged(void* ptr);
void QGraphicsScene_FocusItemChanged(void* ptr, void* newFocusItem, void* oldFocusItem, long long reason);
char QGraphicsScene_FocusNextPrevChild(void* ptr, char next);
char QGraphicsScene_FocusNextPrevChildDefault(void* ptr, char next);
void QGraphicsScene_FocusOutEvent(void* ptr, void* focusEvent);
void QGraphicsScene_FocusOutEventDefault(void* ptr, void* focusEvent);
char QGraphicsScene_HasFocus(void* ptr);
double QGraphicsScene_Height(void* ptr);
void QGraphicsScene_HelpEvent(void* ptr, void* helpEvent);
void QGraphicsScene_HelpEventDefault(void* ptr, void* helpEvent);
void QGraphicsScene_InputMethodEvent(void* ptr, void* event);
void QGraphicsScene_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsScene_InputMethodQuery(void* ptr, long long query);
void* QGraphicsScene_InputMethodQueryDefault(void* ptr, long long query);
void QGraphicsScene_Invalidate(void* ptr, void* rect, long long layers);
void QGraphicsScene_Invalidate2(void* ptr, double x, double y, double w, double h, long long layers);
char QGraphicsScene_IsActive(void* ptr);
void* QGraphicsScene_ItemAt(void* ptr, void* position, void* deviceTransform);
void* QGraphicsScene_ItemAt4(void* ptr, double x, double y, void* deviceTransform);
struct QtWidgets_PackedList QGraphicsScene_Items(void* ptr, long long order);
struct QtWidgets_PackedList QGraphicsScene_Items7(void* ptr, double x, double y, double w, double h, long long mode, long long order, void* deviceTransform);
void* QGraphicsScene_ItemsBoundingRect(void* ptr);
void QGraphicsScene_KeyPressEvent(void* ptr, void* keyEvent);
void QGraphicsScene_KeyPressEventDefault(void* ptr, void* keyEvent);
void QGraphicsScene_KeyReleaseEvent(void* ptr, void* keyEvent);
void QGraphicsScene_KeyReleaseEventDefault(void* ptr, void* keyEvent);
void QGraphicsScene_MouseDoubleClickEvent(void* ptr, void* mouseEvent);
void QGraphicsScene_MouseDoubleClickEventDefault(void* ptr, void* mouseEvent);
void* QGraphicsScene_MouseGrabberItem(void* ptr);
void QGraphicsScene_MouseMoveEvent(void* ptr, void* mouseEvent);
void QGraphicsScene_MouseMoveEventDefault(void* ptr, void* mouseEvent);
void QGraphicsScene_MousePressEvent(void* ptr, void* mouseEvent);
void QGraphicsScene_MousePressEventDefault(void* ptr, void* mouseEvent);
void QGraphicsScene_MouseReleaseEvent(void* ptr, void* mouseEvent);
void QGraphicsScene_MouseReleaseEventDefault(void* ptr, void* mouseEvent);
void QGraphicsScene_RemoveItem(void* ptr, void* item);
void QGraphicsScene_Render(void* ptr, void* painter, void* target, void* source, long long aspectRatioMode);
void QGraphicsScene_ConnectSceneRectChanged(void* ptr);
void QGraphicsScene_DisconnectSceneRectChanged(void* ptr);
void QGraphicsScene_SceneRectChanged(void* ptr, void* rect);
struct QtWidgets_PackedList QGraphicsScene_SelectedItems(void* ptr);
void* QGraphicsScene_SelectionArea(void* ptr);
void QGraphicsScene_ConnectSelectionChanged(void* ptr);
void QGraphicsScene_DisconnectSelectionChanged(void* ptr);
void QGraphicsScene_SelectionChanged(void* ptr);
char QGraphicsScene_SendEvent(void* ptr, void* item, void* event);
void QGraphicsScene_SetActivePanel(void* ptr, void* item);
void QGraphicsScene_SetActiveWindow(void* ptr, void* widget);
void QGraphicsScene_SetFocus(void* ptr, long long focusReason);
void QGraphicsScene_SetFocusItem(void* ptr, void* item, long long focusReason);
void QGraphicsScene_SetSceneRect2(void* ptr, double x, double y, double w, double h);
void QGraphicsScene_SetSelectionArea2(void* ptr, void* path, long long mode, void* deviceTransform);
void QGraphicsScene_SetSelectionArea3(void* ptr, void* path, long long selectionOperation, long long mode, void* deviceTransform);
void QGraphicsScene_SetSelectionArea(void* ptr, void* path, void* deviceTransform);
void QGraphicsScene_SetStyle(void* ptr, void* style);
void* QGraphicsScene_Style(void* ptr);
void QGraphicsScene_Update2(void* ptr, double x, double y, double w, double h);
struct QtWidgets_PackedList QGraphicsScene_Views(void* ptr);
void QGraphicsScene_WheelEvent(void* ptr, void* wheelEvent);
void QGraphicsScene_WheelEventDefault(void* ptr, void* wheelEvent);
double QGraphicsScene_Width(void* ptr);
void QGraphicsScene_DestroyQGraphicsScene(void* ptr);
void QGraphicsScene_DestroyQGraphicsSceneDefault(void* ptr);
void* QGraphicsScene_items_atList(void* ptr, int i);
void* QGraphicsScene_collidingItems_atList(void* ptr, int i);
void* QGraphicsScene_selectedItems_atList(void* ptr, int i);
void* QGraphicsScene_views_atList(void* ptr, int i);
void QGraphicsScene_TimerEvent(void* ptr, void* event);
void QGraphicsScene_TimerEventDefault(void* ptr, void* event);
void QGraphicsScene_ChildEvent(void* ptr, void* event);
void QGraphicsScene_ChildEventDefault(void* ptr, void* event);
void QGraphicsScene_ConnectNotify(void* ptr, void* sign);
void QGraphicsScene_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsScene_CustomEvent(void* ptr, void* event);
void QGraphicsScene_CustomEventDefault(void* ptr, void* event);
void QGraphicsScene_DeleteLater(void* ptr);
void QGraphicsScene_DeleteLaterDefault(void* ptr);
void QGraphicsScene_DisconnectNotify(void* ptr, void* sign);
void QGraphicsScene_DisconnectNotifyDefault(void* ptr, void* sign);
void* QGraphicsScene_MetaObject(void* ptr);
void* QGraphicsScene_MetaObjectDefault(void* ptr);
long long QGraphicsSceneContextMenuEvent_Modifiers(void* ptr);
void* QGraphicsSceneContextMenuEvent_Pos(void* ptr);
long long QGraphicsSceneContextMenuEvent_Reason(void* ptr);
void* QGraphicsSceneContextMenuEvent_ScenePos(void* ptr);
void* QGraphicsSceneContextMenuEvent_ScreenPos(void* ptr);
void QGraphicsSceneContextMenuEvent_DestroyQGraphicsSceneContextMenuEvent(void* ptr);
void QGraphicsSceneDragDropEvent_AcceptProposedAction(void* ptr);
long long QGraphicsSceneDragDropEvent_Buttons(void* ptr);
long long QGraphicsSceneDragDropEvent_DropAction(void* ptr);
void* QGraphicsSceneDragDropEvent_MimeData(void* ptr);
long long QGraphicsSceneDragDropEvent_Modifiers(void* ptr);
void* QGraphicsSceneDragDropEvent_Pos(void* ptr);
long long QGraphicsSceneDragDropEvent_PossibleActions(void* ptr);
long long QGraphicsSceneDragDropEvent_ProposedAction(void* ptr);
void* QGraphicsSceneDragDropEvent_ScenePos(void* ptr);
void* QGraphicsSceneDragDropEvent_ScreenPos(void* ptr);
void QGraphicsSceneDragDropEvent_SetDropAction(void* ptr, long long action);
void* QGraphicsSceneDragDropEvent_Source(void* ptr);
void QGraphicsSceneDragDropEvent_DestroyQGraphicsSceneDragDropEvent(void* ptr);
void* QGraphicsSceneEvent_Widget(void* ptr);
void QGraphicsSceneEvent_DestroyQGraphicsSceneEvent(void* ptr);
void* QGraphicsSceneHelpEvent_ScenePos(void* ptr);
void* QGraphicsSceneHelpEvent_ScreenPos(void* ptr);
void QGraphicsSceneHelpEvent_DestroyQGraphicsSceneHelpEvent(void* ptr);
void* QGraphicsSceneHoverEvent_LastPos(void* ptr);
void* QGraphicsSceneHoverEvent_LastScenePos(void* ptr);
void* QGraphicsSceneHoverEvent_LastScreenPos(void* ptr);
long long QGraphicsSceneHoverEvent_Modifiers(void* ptr);
void* QGraphicsSceneHoverEvent_Pos(void* ptr);
void* QGraphicsSceneHoverEvent_ScenePos(void* ptr);
void* QGraphicsSceneHoverEvent_ScreenPos(void* ptr);
void QGraphicsSceneHoverEvent_DestroyQGraphicsSceneHoverEvent(void* ptr);
long long QGraphicsSceneMouseEvent_Button(void* ptr);
void* QGraphicsSceneMouseEvent_ButtonDownPos(void* ptr, long long button);
void* QGraphicsSceneMouseEvent_ButtonDownScenePos(void* ptr, long long button);
void* QGraphicsSceneMouseEvent_ButtonDownScreenPos(void* ptr, long long button);
long long QGraphicsSceneMouseEvent_Buttons(void* ptr);
long long QGraphicsSceneMouseEvent_Flags(void* ptr);
void* QGraphicsSceneMouseEvent_LastPos(void* ptr);
void* QGraphicsSceneMouseEvent_LastScenePos(void* ptr);
void* QGraphicsSceneMouseEvent_LastScreenPos(void* ptr);
long long QGraphicsSceneMouseEvent_Modifiers(void* ptr);
void* QGraphicsSceneMouseEvent_Pos(void* ptr);
void* QGraphicsSceneMouseEvent_ScenePos(void* ptr);
void* QGraphicsSceneMouseEvent_ScreenPos(void* ptr);
long long QGraphicsSceneMouseEvent_Source(void* ptr);
void QGraphicsSceneMouseEvent_DestroyQGraphicsSceneMouseEvent(void* ptr);
void* QGraphicsSceneMoveEvent_NewQGraphicsSceneMoveEvent();
void* QGraphicsSceneMoveEvent_NewPos(void* ptr);
void* QGraphicsSceneMoveEvent_OldPos(void* ptr);
void QGraphicsSceneMoveEvent_DestroyQGraphicsSceneMoveEvent(void* ptr);
void* QGraphicsSceneResizeEvent_NewQGraphicsSceneResizeEvent();
void* QGraphicsSceneResizeEvent_NewSize(void* ptr);
void* QGraphicsSceneResizeEvent_OldSize(void* ptr);
void QGraphicsSceneResizeEvent_DestroyQGraphicsSceneResizeEvent(void* ptr);
long long QGraphicsSceneWheelEvent_Buttons(void* ptr);
int QGraphicsSceneWheelEvent_Delta(void* ptr);
long long QGraphicsSceneWheelEvent_Modifiers(void* ptr);
long long QGraphicsSceneWheelEvent_Orientation(void* ptr);
void* QGraphicsSceneWheelEvent_Pos(void* ptr);
void* QGraphicsSceneWheelEvent_ScenePos(void* ptr);
void* QGraphicsSceneWheelEvent_ScreenPos(void* ptr);
void QGraphicsSceneWheelEvent_DestroyQGraphicsSceneWheelEvent(void* ptr);
void* QGraphicsSimpleTextItem_NewQGraphicsSimpleTextItem(void* parent);
void* QGraphicsSimpleTextItem_NewQGraphicsSimpleTextItem2(char* text, void* parent);
void* QGraphicsSimpleTextItem_BoundingRect(void* ptr);
void* QGraphicsSimpleTextItem_BoundingRectDefault(void* ptr);
char QGraphicsSimpleTextItem_Contains(void* ptr, void* point);
char QGraphicsSimpleTextItem_ContainsDefault(void* ptr, void* point);
void* QGraphicsSimpleTextItem_Font(void* ptr);
char QGraphicsSimpleTextItem_IsObscuredBy(void* ptr, void* item);
char QGraphicsSimpleTextItem_IsObscuredByDefault(void* ptr, void* item);
void* QGraphicsSimpleTextItem_OpaqueArea(void* ptr);
void* QGraphicsSimpleTextItem_OpaqueAreaDefault(void* ptr);
void QGraphicsSimpleTextItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsSimpleTextItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsSimpleTextItem_SetFont(void* ptr, void* font);
void QGraphicsSimpleTextItem_SetText(void* ptr, char* text);
void* QGraphicsSimpleTextItem_Shape(void* ptr);
void* QGraphicsSimpleTextItem_ShapeDefault(void* ptr);
struct QtWidgets_PackedString QGraphicsSimpleTextItem_Text(void* ptr);
int QGraphicsSimpleTextItem_Type(void* ptr);
int QGraphicsSimpleTextItem_TypeDefault(void* ptr);
void QGraphicsSimpleTextItem_DestroyQGraphicsSimpleTextItem(void* ptr);
void QGraphicsSimpleTextItem_Advance(void* ptr, int phase);
void QGraphicsSimpleTextItem_AdvanceDefault(void* ptr, int phase);
char QGraphicsSimpleTextItem_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsSimpleTextItem_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsSimpleTextItem_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsSimpleTextItem_CollidesWithPathDefault(void* ptr, void* path, long long mode);
void QGraphicsSimpleTextItem_ContextMenuEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_ContextMenuEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_DragEnterEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_DragLeaveEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_DragMoveEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_DropEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_DropEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_FocusInEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_FocusInEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_FocusOutEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_HoverEnterEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_HoverMoveEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_InputMethodEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsSimpleTextItem_InputMethodQuery(void* ptr, long long query);
void* QGraphicsSimpleTextItem_InputMethodQueryDefault(void* ptr, long long query);
void* QGraphicsSimpleTextItem_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsSimpleTextItem_ItemChangeDefault(void* ptr, long long change, void* value);
void QGraphicsSimpleTextItem_KeyPressEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_MouseMoveEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_MousePressEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_MousePressEventDefault(void* ptr, void* event);
void QGraphicsSimpleTextItem_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_MouseReleaseEventDefault(void* ptr, void* event);
char QGraphicsSimpleTextItem_SceneEvent(void* ptr, void* event);
char QGraphicsSimpleTextItem_SceneEventDefault(void* ptr, void* event);
char QGraphicsSimpleTextItem_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsSimpleTextItem_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void QGraphicsSimpleTextItem_WheelEvent(void* ptr, void* event);
void QGraphicsSimpleTextItem_WheelEventDefault(void* ptr, void* event);
char QGraphicsTextItem_OpenExternalLinks(void* ptr);
void QGraphicsTextItem_SetOpenExternalLinks(void* ptr, char open);
void QGraphicsTextItem_SetTextCursor(void* ptr, void* cursor);
void* QGraphicsTextItem_TextCursor(void* ptr);
void* QGraphicsTextItem_NewQGraphicsTextItem(void* parent);
void* QGraphicsTextItem_NewQGraphicsTextItem2(char* text, void* parent);
void QGraphicsTextItem_AdjustSize(void* ptr);
void* QGraphicsTextItem_BoundingRect(void* ptr);
void* QGraphicsTextItem_BoundingRectDefault(void* ptr);
char QGraphicsTextItem_Contains(void* ptr, void* point);
char QGraphicsTextItem_ContainsDefault(void* ptr, void* point);
void QGraphicsTextItem_ContextMenuEvent(void* ptr, void* event);
void QGraphicsTextItem_ContextMenuEventDefault(void* ptr, void* event);
void* QGraphicsTextItem_DefaultTextColor(void* ptr);
void* QGraphicsTextItem_Document(void* ptr);
void QGraphicsTextItem_DragEnterEvent(void* ptr, void* event);
void QGraphicsTextItem_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsTextItem_DragLeaveEvent(void* ptr, void* event);
void QGraphicsTextItem_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsTextItem_DragMoveEvent(void* ptr, void* event);
void QGraphicsTextItem_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsTextItem_DropEvent(void* ptr, void* event);
void QGraphicsTextItem_DropEventDefault(void* ptr, void* event);
void QGraphicsTextItem_FocusInEvent(void* ptr, void* event);
void QGraphicsTextItem_FocusInEventDefault(void* ptr, void* event);
void QGraphicsTextItem_FocusOutEvent(void* ptr, void* event);
void QGraphicsTextItem_FocusOutEventDefault(void* ptr, void* event);
void* QGraphicsTextItem_Font(void* ptr);
void QGraphicsTextItem_HoverEnterEvent(void* ptr, void* event);
void QGraphicsTextItem_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsTextItem_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsTextItem_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsTextItem_HoverMoveEvent(void* ptr, void* event);
void QGraphicsTextItem_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsTextItem_InputMethodEvent(void* ptr, void* event);
void QGraphicsTextItem_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsTextItem_InputMethodQuery(void* ptr, long long query);
void* QGraphicsTextItem_InputMethodQueryDefault(void* ptr, long long query);
char QGraphicsTextItem_IsObscuredBy(void* ptr, void* item);
char QGraphicsTextItem_IsObscuredByDefault(void* ptr, void* item);
void QGraphicsTextItem_KeyPressEvent(void* ptr, void* event);
void QGraphicsTextItem_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsTextItem_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsTextItem_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsTextItem_ConnectLinkActivated(void* ptr);
void QGraphicsTextItem_DisconnectLinkActivated(void* ptr);
void QGraphicsTextItem_LinkActivated(void* ptr, char* link);
void QGraphicsTextItem_ConnectLinkHovered(void* ptr);
void QGraphicsTextItem_DisconnectLinkHovered(void* ptr);
void QGraphicsTextItem_LinkHovered(void* ptr, char* link);
void QGraphicsTextItem_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsTextItem_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsTextItem_MouseMoveEvent(void* ptr, void* event);
void QGraphicsTextItem_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsTextItem_MousePressEvent(void* ptr, void* event);
void QGraphicsTextItem_MousePressEventDefault(void* ptr, void* event);
void QGraphicsTextItem_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsTextItem_MouseReleaseEventDefault(void* ptr, void* event);
void* QGraphicsTextItem_OpaqueArea(void* ptr);
void* QGraphicsTextItem_OpaqueAreaDefault(void* ptr);
void QGraphicsTextItem_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsTextItem_PaintDefault(void* ptr, void* painter, void* option, void* widget);
char QGraphicsTextItem_SceneEvent(void* ptr, void* event);
char QGraphicsTextItem_SceneEventDefault(void* ptr, void* event);
void QGraphicsTextItem_SetDefaultTextColor(void* ptr, void* col);
void QGraphicsTextItem_SetDocument(void* ptr, void* document);
void QGraphicsTextItem_SetFont(void* ptr, void* font);
void QGraphicsTextItem_SetHtml(void* ptr, char* text);
void QGraphicsTextItem_SetPlainText(void* ptr, char* text);
void QGraphicsTextItem_SetTabChangesFocus(void* ptr, char b);
void QGraphicsTextItem_SetTextInteractionFlags(void* ptr, long long flags);
void QGraphicsTextItem_SetTextWidth(void* ptr, double width);
void* QGraphicsTextItem_Shape(void* ptr);
void* QGraphicsTextItem_ShapeDefault(void* ptr);
char QGraphicsTextItem_TabChangesFocus(void* ptr);
long long QGraphicsTextItem_TextInteractionFlags(void* ptr);
double QGraphicsTextItem_TextWidth(void* ptr);
struct QtWidgets_PackedString QGraphicsTextItem_ToHtml(void* ptr);
struct QtWidgets_PackedString QGraphicsTextItem_ToPlainText(void* ptr);
int QGraphicsTextItem_Type(void* ptr);
int QGraphicsTextItem_TypeDefault(void* ptr);
void QGraphicsTextItem_DestroyQGraphicsTextItem(void* ptr);
void QGraphicsTextItem_UpdateMicroFocus(void* ptr);
void QGraphicsTextItem_UpdateMicroFocusDefault(void* ptr);
void QGraphicsTextItem_TimerEvent(void* ptr, void* event);
void QGraphicsTextItem_TimerEventDefault(void* ptr, void* event);
void QGraphicsTextItem_ChildEvent(void* ptr, void* event);
void QGraphicsTextItem_ChildEventDefault(void* ptr, void* event);
void QGraphicsTextItem_ConnectNotify(void* ptr, void* sign);
void QGraphicsTextItem_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsTextItem_CustomEvent(void* ptr, void* event);
void QGraphicsTextItem_CustomEventDefault(void* ptr, void* event);
void QGraphicsTextItem_DeleteLater(void* ptr);
void QGraphicsTextItem_DeleteLaterDefault(void* ptr);
void QGraphicsTextItem_DisconnectNotify(void* ptr, void* sign);
void QGraphicsTextItem_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsTextItem_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsTextItem_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsTextItem_MetaObject(void* ptr);
void* QGraphicsTextItem_MetaObjectDefault(void* ptr);
void QGraphicsTextItem_Advance(void* ptr, int phase);
void QGraphicsTextItem_AdvanceDefault(void* ptr, int phase);
char QGraphicsTextItem_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsTextItem_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsTextItem_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsTextItem_CollidesWithPathDefault(void* ptr, void* path, long long mode);
void* QGraphicsTextItem_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsTextItem_ItemChangeDefault(void* ptr, long long change, void* value);
char QGraphicsTextItem_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsTextItem_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void QGraphicsTextItem_WheelEvent(void* ptr, void* event);
void QGraphicsTextItem_WheelEventDefault(void* ptr, void* event);
void* QGraphicsTransform_NewQGraphicsTransform(void* parent);
void QGraphicsTransform_ApplyTo(void* ptr, void* matrix);
void QGraphicsTransform_Update(void* ptr);
void QGraphicsTransform_DestroyQGraphicsTransform(void* ptr);
void QGraphicsTransform_TimerEvent(void* ptr, void* event);
void QGraphicsTransform_TimerEventDefault(void* ptr, void* event);
void QGraphicsTransform_ChildEvent(void* ptr, void* event);
void QGraphicsTransform_ChildEventDefault(void* ptr, void* event);
void QGraphicsTransform_ConnectNotify(void* ptr, void* sign);
void QGraphicsTransform_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsTransform_CustomEvent(void* ptr, void* event);
void QGraphicsTransform_CustomEventDefault(void* ptr, void* event);
void QGraphicsTransform_DeleteLater(void* ptr);
void QGraphicsTransform_DeleteLaterDefault(void* ptr);
void QGraphicsTransform_DisconnectNotify(void* ptr, void* sign);
void QGraphicsTransform_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsTransform_Event(void* ptr, void* e);
char QGraphicsTransform_EventDefault(void* ptr, void* e);
char QGraphicsTransform_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsTransform_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsTransform_MetaObject(void* ptr);
void* QGraphicsTransform_MetaObjectDefault(void* ptr);
long long QGraphicsView_Alignment(void* ptr);
void* QGraphicsView_BackgroundBrush(void* ptr);
long long QGraphicsView_CacheMode(void* ptr);
long long QGraphicsView_DragMode(void* ptr);
void* QGraphicsView_ForegroundBrush(void* ptr);
char QGraphicsView_IsInteractive(void* ptr);
long long QGraphicsView_OptimizationFlags(void* ptr);
long long QGraphicsView_RenderHints(void* ptr);
long long QGraphicsView_ResizeAnchor(void* ptr);
long long QGraphicsView_RubberBandSelectionMode(void* ptr);
void* QGraphicsView_SceneRect(void* ptr);
void QGraphicsView_SetAlignment(void* ptr, long long alignment);
void QGraphicsView_SetBackgroundBrush(void* ptr, void* brush);
void QGraphicsView_SetCacheMode(void* ptr, long long mode);
void QGraphicsView_SetDragMode(void* ptr, long long mode);
void QGraphicsView_SetForegroundBrush(void* ptr, void* brush);
void QGraphicsView_SetInteractive(void* ptr, char allowed);
void QGraphicsView_SetOptimizationFlags(void* ptr, long long flags);
void QGraphicsView_SetRenderHints(void* ptr, long long hints);
void QGraphicsView_SetResizeAnchor(void* ptr, long long anchor);
void QGraphicsView_SetRubberBandSelectionMode(void* ptr, long long mode);
void QGraphicsView_SetSceneRect(void* ptr, void* rect);
void QGraphicsView_SetTransformationAnchor(void* ptr, long long anchor);
void QGraphicsView_SetViewportUpdateMode(void* ptr, long long mode);
long long QGraphicsView_TransformationAnchor(void* ptr);
long long QGraphicsView_ViewportUpdateMode(void* ptr);
void* QGraphicsView_NewQGraphicsView2(void* scene, void* parent);
void* QGraphicsView_NewQGraphicsView(void* parent);
void QGraphicsView_CenterOn3(void* ptr, void* item);
void QGraphicsView_CenterOn(void* ptr, void* pos);
void QGraphicsView_CenterOn2(void* ptr, double x, double y);
void QGraphicsView_ContextMenuEvent(void* ptr, void* event);
void QGraphicsView_ContextMenuEventDefault(void* ptr, void* event);
void QGraphicsView_DragEnterEvent(void* ptr, void* event);
void QGraphicsView_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsView_DragLeaveEvent(void* ptr, void* event);
void QGraphicsView_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsView_DragMoveEvent(void* ptr, void* event);
void QGraphicsView_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsView_DrawBackground(void* ptr, void* painter, void* rect);
void QGraphicsView_DrawBackgroundDefault(void* ptr, void* painter, void* rect);
void QGraphicsView_DrawForeground(void* ptr, void* painter, void* rect);
void QGraphicsView_DrawForegroundDefault(void* ptr, void* painter, void* rect);
void QGraphicsView_DropEvent(void* ptr, void* event);
void QGraphicsView_DropEventDefault(void* ptr, void* event);
void QGraphicsView_EnsureVisible3(void* ptr, void* item, int xmargin, int ymargin);
void QGraphicsView_EnsureVisible(void* ptr, void* rect, int xmargin, int ymargin);
void QGraphicsView_EnsureVisible2(void* ptr, double x, double y, double w, double h, int xmargin, int ymargin);
char QGraphicsView_Event(void* ptr, void* event);
void QGraphicsView_FitInView3(void* ptr, void* item, long long aspectRatioMode);
void QGraphicsView_FitInView(void* ptr, void* rect, long long aspectRatioMode);
void QGraphicsView_FitInView2(void* ptr, double x, double y, double w, double h, long long aspectRatioMode);
void QGraphicsView_FocusInEvent(void* ptr, void* event);
void QGraphicsView_FocusInEventDefault(void* ptr, void* event);
char QGraphicsView_FocusNextPrevChild(void* ptr, char next);
char QGraphicsView_FocusNextPrevChildDefault(void* ptr, char next);
void QGraphicsView_FocusOutEvent(void* ptr, void* event);
void QGraphicsView_FocusOutEventDefault(void* ptr, void* event);
void QGraphicsView_InputMethodEvent(void* ptr, void* event);
void QGraphicsView_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsView_InputMethodQuery(void* ptr, long long query);
void* QGraphicsView_InputMethodQueryDefault(void* ptr, long long query);
void QGraphicsView_InvalidateScene(void* ptr, void* rect, long long layers);
char QGraphicsView_IsTransformed(void* ptr);
void* QGraphicsView_ItemAt(void* ptr, void* pos);
void* QGraphicsView_ItemAt2(void* ptr, int x, int y);
struct QtWidgets_PackedList QGraphicsView_Items(void* ptr);
struct QtWidgets_PackedList QGraphicsView_Items7(void* ptr, void* path, long long mode);
struct QtWidgets_PackedList QGraphicsView_Items2(void* ptr, void* pos);
struct QtWidgets_PackedList QGraphicsView_Items6(void* ptr, void* polygon, long long mode);
struct QtWidgets_PackedList QGraphicsView_Items4(void* ptr, void* rect, long long mode);
struct QtWidgets_PackedList QGraphicsView_Items3(void* ptr, int x, int y);
struct QtWidgets_PackedList QGraphicsView_Items5(void* ptr, int x, int y, int w, int h, long long mode);
void QGraphicsView_KeyPressEvent(void* ptr, void* event);
void QGraphicsView_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsView_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsView_KeyReleaseEventDefault(void* ptr, void* event);
void* QGraphicsView_MapFromScene4(void* ptr, void* path);
void* QGraphicsView_MapFromScene(void* ptr, void* point);
void* QGraphicsView_MapFromScene5(void* ptr, double x, double y);
void* QGraphicsView_MapFromScene3(void* ptr, void* polygon);
void* QGraphicsView_MapFromScene2(void* ptr, void* rect);
void* QGraphicsView_MapFromScene6(void* ptr, double x, double y, double w, double h);
void* QGraphicsView_MapToScene4(void* ptr, void* path);
void* QGraphicsView_MapToScene(void* ptr, void* point);
void* QGraphicsView_MapToScene5(void* ptr, int x, int y);
void* QGraphicsView_MapToScene3(void* ptr, void* polygon);
void* QGraphicsView_MapToScene2(void* ptr, void* rect);
void* QGraphicsView_MapToScene6(void* ptr, int x, int y, int w, int h);
void QGraphicsView_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsView_MouseMoveEvent(void* ptr, void* event);
void QGraphicsView_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsView_MousePressEvent(void* ptr, void* event);
void QGraphicsView_MousePressEventDefault(void* ptr, void* event);
void QGraphicsView_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsView_MouseReleaseEventDefault(void* ptr, void* event);
void QGraphicsView_PaintEvent(void* ptr, void* event);
void QGraphicsView_PaintEventDefault(void* ptr, void* event);
void QGraphicsView_Render(void* ptr, void* painter, void* target, void* source, long long aspectRatioMode);
void QGraphicsView_ResetCachedContent(void* ptr);
void QGraphicsView_ResetMatrix(void* ptr);
void QGraphicsView_ResetTransform(void* ptr);
void QGraphicsView_ResizeEvent(void* ptr, void* event);
void QGraphicsView_ResizeEventDefault(void* ptr, void* event);
void QGraphicsView_Rotate(void* ptr, double angle);
void QGraphicsView_ConnectRubberBandChanged(void* ptr);
void QGraphicsView_DisconnectRubberBandChanged(void* ptr);
void QGraphicsView_RubberBandChanged(void* ptr, void* rubberBandRect, void* fromScenePoint, void* toScenePoint);
void* QGraphicsView_RubberBandRect(void* ptr);
void QGraphicsView_Scale(void* ptr, double sx, double sy);
void* QGraphicsView_Scene(void* ptr);
void QGraphicsView_ScrollContentsBy(void* ptr, int dx, int dy);
void QGraphicsView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QGraphicsView_SetOptimizationFlag(void* ptr, long long flag, char enabled);
void QGraphicsView_SetRenderHint(void* ptr, long long hint, char enabled);
void QGraphicsView_SetScene(void* ptr, void* scene);
void QGraphicsView_SetSceneRect2(void* ptr, double x, double y, double w, double h);
void QGraphicsView_SetTransform(void* ptr, void* matrix, char combine);
void QGraphicsView_SetupViewport(void* ptr, void* widget);
void QGraphicsView_SetupViewportDefault(void* ptr, void* widget);
void QGraphicsView_Shear(void* ptr, double sh, double sv);
void QGraphicsView_ShowEvent(void* ptr, void* event);
void QGraphicsView_ShowEventDefault(void* ptr, void* event);
void* QGraphicsView_SizeHint(void* ptr);
void* QGraphicsView_SizeHintDefault(void* ptr);
void* QGraphicsView_Transform(void* ptr);
void QGraphicsView_Translate(void* ptr, double dx, double dy);
void QGraphicsView_UpdateSceneRect(void* ptr, void* rect);
char QGraphicsView_ViewportEvent(void* ptr, void* event);
char QGraphicsView_ViewportEventDefault(void* ptr, void* event);
void* QGraphicsView_ViewportTransform(void* ptr);
void QGraphicsView_WheelEvent(void* ptr, void* event);
void QGraphicsView_WheelEventDefault(void* ptr, void* event);
void QGraphicsView_DestroyQGraphicsView(void* ptr);
void* QGraphicsView_items_atList(void* ptr, int i);
void* QGraphicsView_MinimumSizeHint(void* ptr);
void* QGraphicsView_MinimumSizeHintDefault(void* ptr);
void* QGraphicsView_ViewportSizeHint(void* ptr);
void* QGraphicsView_ViewportSizeHintDefault(void* ptr);
void QGraphicsView_ChangeEvent(void* ptr, void* ev);
void QGraphicsView_ChangeEventDefault(void* ptr, void* ev);
void QGraphicsView_ActionEvent(void* ptr, void* event);
void QGraphicsView_ActionEventDefault(void* ptr, void* event);
void QGraphicsView_EnterEvent(void* ptr, void* event);
void QGraphicsView_EnterEventDefault(void* ptr, void* event);
void QGraphicsView_HideEvent(void* ptr, void* event);
void QGraphicsView_HideEventDefault(void* ptr, void* event);
void QGraphicsView_LeaveEvent(void* ptr, void* event);
void QGraphicsView_LeaveEventDefault(void* ptr, void* event);
void QGraphicsView_MoveEvent(void* ptr, void* event);
void QGraphicsView_MoveEventDefault(void* ptr, void* event);
void QGraphicsView_SetEnabled(void* ptr, char vbo);
void QGraphicsView_SetEnabledDefault(void* ptr, char vbo);
void QGraphicsView_SetStyleSheet(void* ptr, char* styleSheet);
void QGraphicsView_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QGraphicsView_SetVisible(void* ptr, char visible);
void QGraphicsView_SetVisibleDefault(void* ptr, char visible);
void QGraphicsView_SetWindowModified(void* ptr, char vbo);
void QGraphicsView_SetWindowModifiedDefault(void* ptr, char vbo);
void QGraphicsView_SetWindowTitle(void* ptr, char* vqs);
void QGraphicsView_SetWindowTitleDefault(void* ptr, char* vqs);
char QGraphicsView_Close(void* ptr);
char QGraphicsView_CloseDefault(void* ptr);
void QGraphicsView_CloseEvent(void* ptr, void* event);
void QGraphicsView_CloseEventDefault(void* ptr, void* event);
char QGraphicsView_HasHeightForWidth(void* ptr);
char QGraphicsView_HasHeightForWidthDefault(void* ptr);
int QGraphicsView_HeightForWidth(void* ptr, int w);
int QGraphicsView_HeightForWidthDefault(void* ptr, int w);
void QGraphicsView_Hide(void* ptr);
void QGraphicsView_HideDefault(void* ptr);
void QGraphicsView_Lower(void* ptr);
void QGraphicsView_LowerDefault(void* ptr);
char QGraphicsView_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QGraphicsView_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QGraphicsView_Raise(void* ptr);
void QGraphicsView_RaiseDefault(void* ptr);
void QGraphicsView_Repaint(void* ptr);
void QGraphicsView_RepaintDefault(void* ptr);
void QGraphicsView_SetDisabled(void* ptr, char disable);
void QGraphicsView_SetDisabledDefault(void* ptr, char disable);
void QGraphicsView_SetFocus2(void* ptr);
void QGraphicsView_SetFocus2Default(void* ptr);
void QGraphicsView_SetHidden(void* ptr, char hidden);
void QGraphicsView_SetHiddenDefault(void* ptr, char hidden);
void QGraphicsView_Show(void* ptr);
void QGraphicsView_ShowDefault(void* ptr);
void QGraphicsView_ShowFullScreen(void* ptr);
void QGraphicsView_ShowFullScreenDefault(void* ptr);
void QGraphicsView_ShowMaximized(void* ptr);
void QGraphicsView_ShowMaximizedDefault(void* ptr);
void QGraphicsView_ShowMinimized(void* ptr);
void QGraphicsView_ShowMinimizedDefault(void* ptr);
void QGraphicsView_ShowNormal(void* ptr);
void QGraphicsView_ShowNormalDefault(void* ptr);
void QGraphicsView_TabletEvent(void* ptr, void* event);
void QGraphicsView_TabletEventDefault(void* ptr, void* event);
void QGraphicsView_Update(void* ptr);
void QGraphicsView_UpdateDefault(void* ptr);
void QGraphicsView_UpdateMicroFocus(void* ptr);
void QGraphicsView_UpdateMicroFocusDefault(void* ptr);
void QGraphicsView_TimerEvent(void* ptr, void* event);
void QGraphicsView_TimerEventDefault(void* ptr, void* event);
void QGraphicsView_ChildEvent(void* ptr, void* event);
void QGraphicsView_ChildEventDefault(void* ptr, void* event);
void QGraphicsView_ConnectNotify(void* ptr, void* sign);
void QGraphicsView_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsView_CustomEvent(void* ptr, void* event);
void QGraphicsView_CustomEventDefault(void* ptr, void* event);
void QGraphicsView_DeleteLater(void* ptr);
void QGraphicsView_DeleteLaterDefault(void* ptr);
void QGraphicsView_DisconnectNotify(void* ptr, void* sign);
void QGraphicsView_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsView_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsView_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsView_MetaObject(void* ptr);
void* QGraphicsView_MetaObjectDefault(void* ptr);
char QGraphicsWidget_AutoFillBackground(void* ptr);
long long QGraphicsWidget_FocusPolicy(void* ptr);
void* QGraphicsWidget_Font(void* ptr);
long long QGraphicsWidget_LayoutDirection(void* ptr);
void* QGraphicsWidget_Palette(void* ptr);
void QGraphicsWidget_Resize(void* ptr, void* size);
void QGraphicsWidget_SetAutoFillBackground(void* ptr, char enabled);
void QGraphicsWidget_SetFocusPolicy(void* ptr, long long policy);
void QGraphicsWidget_SetFont(void* ptr, void* font);
void QGraphicsWidget_SetGeometry(void* ptr, void* rect);
void QGraphicsWidget_SetGeometryDefault(void* ptr, void* rect);
void QGraphicsWidget_SetLayout(void* ptr, void* layout);
void QGraphicsWidget_SetLayoutDirection(void* ptr, long long direction);
void QGraphicsWidget_SetPalette(void* ptr, void* palette);
void QGraphicsWidget_SetWindowFlags(void* ptr, long long wFlags);
void QGraphicsWidget_SetWindowTitle(void* ptr, char* title);
void* QGraphicsWidget_Size(void* ptr);
void QGraphicsWidget_UnsetLayoutDirection(void* ptr);
long long QGraphicsWidget_WindowFlags(void* ptr);
struct QtWidgets_PackedString QGraphicsWidget_WindowTitle(void* ptr);
void* QGraphicsWidget_NewQGraphicsWidget(void* parent, long long wFlags);
struct QtWidgets_PackedList QGraphicsWidget_Actions(void* ptr);
void QGraphicsWidget_AddAction(void* ptr, void* action);
void QGraphicsWidget_AdjustSize(void* ptr);
void* QGraphicsWidget_BoundingRect(void* ptr);
void* QGraphicsWidget_BoundingRectDefault(void* ptr);
void QGraphicsWidget_ChangeEvent(void* ptr, void* event);
void QGraphicsWidget_ChangeEventDefault(void* ptr, void* event);
char QGraphicsWidget_Close(void* ptr);
void QGraphicsWidget_CloseEvent(void* ptr, void* event);
void QGraphicsWidget_CloseEventDefault(void* ptr, void* event);
char QGraphicsWidget_Event(void* ptr, void* event);
void QGraphicsWidget_FocusInEvent(void* ptr, void* event);
void QGraphicsWidget_FocusInEventDefault(void* ptr, void* event);
char QGraphicsWidget_FocusNextPrevChild(void* ptr, char next);
char QGraphicsWidget_FocusNextPrevChildDefault(void* ptr, char next);
void QGraphicsWidget_FocusOutEvent(void* ptr, void* event);
void QGraphicsWidget_FocusOutEventDefault(void* ptr, void* event);
void* QGraphicsWidget_FocusWidget(void* ptr);
void QGraphicsWidget_ConnectGeometryChanged(void* ptr);
void QGraphicsWidget_DisconnectGeometryChanged(void* ptr);
void QGraphicsWidget_GeometryChanged(void* ptr);
void QGraphicsWidget_GetContentsMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsWidget_GetContentsMarginsDefault(void* ptr, double left, double top, double right, double bottom);
void QGraphicsWidget_GetWindowFrameMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsWidget_GrabKeyboardEvent(void* ptr, void* event);
void QGraphicsWidget_GrabKeyboardEventDefault(void* ptr, void* event);
void QGraphicsWidget_GrabMouseEvent(void* ptr, void* event);
void QGraphicsWidget_GrabMouseEventDefault(void* ptr, void* event);
int QGraphicsWidget_GrabShortcut(void* ptr, void* sequence, long long context);
void QGraphicsWidget_HideEvent(void* ptr, void* event);
void QGraphicsWidget_HideEventDefault(void* ptr, void* event);
void QGraphicsWidget_HoverLeaveEvent(void* ptr, void* event);
void QGraphicsWidget_HoverLeaveEventDefault(void* ptr, void* event);
void QGraphicsWidget_HoverMoveEvent(void* ptr, void* event);
void QGraphicsWidget_HoverMoveEventDefault(void* ptr, void* event);
void QGraphicsWidget_InitStyleOption(void* ptr, void* option);
void QGraphicsWidget_InitStyleOptionDefault(void* ptr, void* option);
void QGraphicsWidget_InsertAction(void* ptr, void* before, void* action);
char QGraphicsWidget_IsActiveWindow(void* ptr);
void* QGraphicsWidget_ItemChange(void* ptr, long long change, void* value);
void* QGraphicsWidget_ItemChangeDefault(void* ptr, long long change, void* value);
void* QGraphicsWidget_Layout(void* ptr);
void QGraphicsWidget_MoveEvent(void* ptr, void* event);
void QGraphicsWidget_MoveEventDefault(void* ptr, void* event);
void QGraphicsWidget_Paint(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWidget_PaintDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWidget_PaintWindowFrame(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWidget_PaintWindowFrameDefault(void* ptr, void* painter, void* option, void* widget);
void QGraphicsWidget_PolishEvent(void* ptr);
void QGraphicsWidget_PolishEventDefault(void* ptr);
void* QGraphicsWidget_Rect(void* ptr);
void QGraphicsWidget_ReleaseShortcut(void* ptr, int id);
void QGraphicsWidget_RemoveAction(void* ptr, void* action);
void QGraphicsWidget_Resize2(void* ptr, double w, double h);
void QGraphicsWidget_ResizeEvent(void* ptr, void* event);
void QGraphicsWidget_ResizeEventDefault(void* ptr, void* event);
char QGraphicsWidget_SceneEvent(void* ptr, void* event);
char QGraphicsWidget_SceneEventDefault(void* ptr, void* event);
void QGraphicsWidget_SetAttribute(void* ptr, long long attribute, char on);
void QGraphicsWidget_SetContentsMargins(void* ptr, double left, double top, double right, double bottom);
void QGraphicsWidget_SetGeometry2(void* ptr, double x, double y, double w, double h);
void QGraphicsWidget_SetShortcutAutoRepeat(void* ptr, int id, char enabled);
void QGraphicsWidget_SetShortcutEnabled(void* ptr, int id, char enabled);
void QGraphicsWidget_SetStyle(void* ptr, void* style);
void QGraphicsWidget_QGraphicsWidget_SetTabOrder(void* first, void* second);
void QGraphicsWidget_SetWindowFrameMargins(void* ptr, double left, double top, double right, double bottom);
void* QGraphicsWidget_Shape(void* ptr);
void* QGraphicsWidget_ShapeDefault(void* ptr);
void QGraphicsWidget_ShowEvent(void* ptr, void* event);
void QGraphicsWidget_ShowEventDefault(void* ptr, void* event);
void* QGraphicsWidget_SizeHint(void* ptr, long long which, void* constraint);
void* QGraphicsWidget_SizeHintDefault(void* ptr, long long which, void* constraint);
void* QGraphicsWidget_Style(void* ptr);
char QGraphicsWidget_TestAttribute(void* ptr, long long attribute);
int QGraphicsWidget_Type(void* ptr);
int QGraphicsWidget_TypeDefault(void* ptr);
void QGraphicsWidget_UngrabKeyboardEvent(void* ptr, void* event);
void QGraphicsWidget_UngrabKeyboardEventDefault(void* ptr, void* event);
void QGraphicsWidget_UngrabMouseEvent(void* ptr, void* event);
void QGraphicsWidget_UngrabMouseEventDefault(void* ptr, void* event);
void QGraphicsWidget_UnsetWindowFrameMargins(void* ptr);
void QGraphicsWidget_UpdateGeometry(void* ptr);
void QGraphicsWidget_UpdateGeometryDefault(void* ptr);
char QGraphicsWidget_WindowFrameEvent(void* ptr, void* event);
char QGraphicsWidget_WindowFrameEventDefault(void* ptr, void* event);
void* QGraphicsWidget_WindowFrameGeometry(void* ptr);
void* QGraphicsWidget_WindowFrameRect(void* ptr);
long long QGraphicsWidget_WindowFrameSectionAt(void* ptr, void* pos);
long long QGraphicsWidget_WindowFrameSectionAtDefault(void* ptr, void* pos);
long long QGraphicsWidget_WindowType(void* ptr);
void QGraphicsWidget_DestroyQGraphicsWidget(void* ptr);
void* QGraphicsWidget_Geometry(void* ptr);
void* QGraphicsWidget_MaximumSize(void* ptr);
void QGraphicsWidget_SetMaximumSize(void* ptr, void* vqs);
void* QGraphicsWidget_MinimumSize(void* ptr);
void QGraphicsWidget_SetMinimumSize(void* ptr, void* vqs);
void* QGraphicsWidget_PreferredSize(void* ptr);
void QGraphicsWidget_SetPreferredSize(void* ptr, void* vqs);
void* QGraphicsWidget_SizePolicy(void* ptr);
void QGraphicsWidget_SetSizePolicy(void* ptr, void* vqs);
void QGraphicsWidget_SetSizePolicy2(void* ptr, long long hPolicy, long long vPolicy, long long controlType);
void* QGraphicsWidget_actions_atList(void* ptr, int i);
void QGraphicsWidget_UpdateMicroFocus(void* ptr);
void QGraphicsWidget_UpdateMicroFocusDefault(void* ptr);
void QGraphicsWidget_TimerEvent(void* ptr, void* event);
void QGraphicsWidget_TimerEventDefault(void* ptr, void* event);
void QGraphicsWidget_ChildEvent(void* ptr, void* event);
void QGraphicsWidget_ChildEventDefault(void* ptr, void* event);
void QGraphicsWidget_ConnectNotify(void* ptr, void* sign);
void QGraphicsWidget_ConnectNotifyDefault(void* ptr, void* sign);
void QGraphicsWidget_CustomEvent(void* ptr, void* event);
void QGraphicsWidget_CustomEventDefault(void* ptr, void* event);
void QGraphicsWidget_DeleteLater(void* ptr);
void QGraphicsWidget_DeleteLaterDefault(void* ptr);
void QGraphicsWidget_DisconnectNotify(void* ptr, void* sign);
void QGraphicsWidget_DisconnectNotifyDefault(void* ptr, void* sign);
char QGraphicsWidget_EventFilter(void* ptr, void* watched, void* event);
char QGraphicsWidget_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGraphicsWidget_MetaObject(void* ptr);
void* QGraphicsWidget_MetaObjectDefault(void* ptr);
void QGraphicsWidget_Advance(void* ptr, int phase);
void QGraphicsWidget_AdvanceDefault(void* ptr, int phase);
char QGraphicsWidget_CollidesWithItem(void* ptr, void* other, long long mode);
char QGraphicsWidget_CollidesWithItemDefault(void* ptr, void* other, long long mode);
char QGraphicsWidget_CollidesWithPath(void* ptr, void* path, long long mode);
char QGraphicsWidget_CollidesWithPathDefault(void* ptr, void* path, long long mode);
char QGraphicsWidget_Contains(void* ptr, void* point);
char QGraphicsWidget_ContainsDefault(void* ptr, void* point);
void QGraphicsWidget_ContextMenuEvent(void* ptr, void* event);
void QGraphicsWidget_ContextMenuEventDefault(void* ptr, void* event);
void QGraphicsWidget_DragEnterEvent(void* ptr, void* event);
void QGraphicsWidget_DragEnterEventDefault(void* ptr, void* event);
void QGraphicsWidget_DragLeaveEvent(void* ptr, void* event);
void QGraphicsWidget_DragLeaveEventDefault(void* ptr, void* event);
void QGraphicsWidget_DragMoveEvent(void* ptr, void* event);
void QGraphicsWidget_DragMoveEventDefault(void* ptr, void* event);
void QGraphicsWidget_DropEvent(void* ptr, void* event);
void QGraphicsWidget_DropEventDefault(void* ptr, void* event);
void QGraphicsWidget_HoverEnterEvent(void* ptr, void* event);
void QGraphicsWidget_HoverEnterEventDefault(void* ptr, void* event);
void QGraphicsWidget_InputMethodEvent(void* ptr, void* event);
void QGraphicsWidget_InputMethodEventDefault(void* ptr, void* event);
void* QGraphicsWidget_InputMethodQuery(void* ptr, long long query);
void* QGraphicsWidget_InputMethodQueryDefault(void* ptr, long long query);
char QGraphicsWidget_IsObscuredBy(void* ptr, void* item);
char QGraphicsWidget_IsObscuredByDefault(void* ptr, void* item);
void QGraphicsWidget_KeyPressEvent(void* ptr, void* event);
void QGraphicsWidget_KeyPressEventDefault(void* ptr, void* event);
void QGraphicsWidget_KeyReleaseEvent(void* ptr, void* event);
void QGraphicsWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QGraphicsWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QGraphicsWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QGraphicsWidget_MouseMoveEvent(void* ptr, void* event);
void QGraphicsWidget_MouseMoveEventDefault(void* ptr, void* event);
void QGraphicsWidget_MousePressEvent(void* ptr, void* event);
void QGraphicsWidget_MousePressEventDefault(void* ptr, void* event);
void QGraphicsWidget_MouseReleaseEvent(void* ptr, void* event);
void QGraphicsWidget_MouseReleaseEventDefault(void* ptr, void* event);
void* QGraphicsWidget_OpaqueArea(void* ptr);
void* QGraphicsWidget_OpaqueAreaDefault(void* ptr);
char QGraphicsWidget_SceneEventFilter(void* ptr, void* watched, void* event);
char QGraphicsWidget_SceneEventFilterDefault(void* ptr, void* watched, void* event);
void QGraphicsWidget_WheelEvent(void* ptr, void* event);
void QGraphicsWidget_WheelEventDefault(void* ptr, void* event);
int QGridLayout_HorizontalSpacing(void* ptr);
void QGridLayout_SetHorizontalSpacing(void* ptr, int spacing);
void QGridLayout_SetVerticalSpacing(void* ptr, int spacing);
int QGridLayout_VerticalSpacing(void* ptr);
void* QGridLayout_NewQGridLayout2();
void* QGridLayout_NewQGridLayout(void* parent);
void QGridLayout_AddItem(void* ptr, void* item, int row, int column, int rowSpan, int columnSpan, long long alignment);
void QGridLayout_AddItem2(void* ptr, void* item);
void QGridLayout_AddItem2Default(void* ptr, void* item);
void QGridLayout_AddLayout(void* ptr, void* layout, int row, int column, long long alignment);
void QGridLayout_AddLayout2(void* ptr, void* layout, int row, int column, int rowSpan, int columnSpan, long long alignment);
void QGridLayout_AddWidget3(void* ptr, void* widget, int fromRow, int fromColumn, int rowSpan, int columnSpan, long long alignment);
void QGridLayout_AddWidget(void* ptr, void* widget, int row, int column, long long alignment);
void* QGridLayout_CellRect(void* ptr, int row, int column);
int QGridLayout_ColumnCount(void* ptr);
int QGridLayout_ColumnMinimumWidth(void* ptr, int column);
int QGridLayout_ColumnStretch(void* ptr, int column);
int QGridLayout_Count(void* ptr);
int QGridLayout_CountDefault(void* ptr);
long long QGridLayout_ExpandingDirections(void* ptr);
long long QGridLayout_ExpandingDirectionsDefault(void* ptr);
void QGridLayout_GetItemPosition(void* ptr, int index, int row, int column, int rowSpan, int columnSpan);
char QGridLayout_HasHeightForWidth(void* ptr);
char QGridLayout_HasHeightForWidthDefault(void* ptr);
int QGridLayout_HeightForWidth(void* ptr, int w);
int QGridLayout_HeightForWidthDefault(void* ptr, int w);
void QGridLayout_Invalidate(void* ptr);
void QGridLayout_InvalidateDefault(void* ptr);
void* QGridLayout_ItemAt(void* ptr, int index);
void* QGridLayout_ItemAtDefault(void* ptr, int index);
void* QGridLayout_ItemAtPosition(void* ptr, int row, int column);
void* QGridLayout_MaximumSize(void* ptr);
void* QGridLayout_MaximumSizeDefault(void* ptr);
int QGridLayout_MinimumHeightForWidth(void* ptr, int w);
int QGridLayout_MinimumHeightForWidthDefault(void* ptr, int w);
void* QGridLayout_MinimumSize(void* ptr);
void* QGridLayout_MinimumSizeDefault(void* ptr);
long long QGridLayout_OriginCorner(void* ptr);
int QGridLayout_RowCount(void* ptr);
int QGridLayout_RowMinimumHeight(void* ptr, int row);
int QGridLayout_RowStretch(void* ptr, int row);
void QGridLayout_SetColumnMinimumWidth(void* ptr, int column, int minSize);
void QGridLayout_SetColumnStretch(void* ptr, int column, int stretch);
void QGridLayout_SetGeometry(void* ptr, void* rect);
void QGridLayout_SetGeometryDefault(void* ptr, void* rect);
void QGridLayout_SetOriginCorner(void* ptr, long long corner);
void QGridLayout_SetRowMinimumHeight(void* ptr, int row, int minSize);
void QGridLayout_SetRowStretch(void* ptr, int row, int stretch);
void QGridLayout_SetSpacing(void* ptr, int spacing);
void* QGridLayout_SizeHint(void* ptr);
void* QGridLayout_SizeHintDefault(void* ptr);
int QGridLayout_Spacing(void* ptr);
void* QGridLayout_TakeAt(void* ptr, int index);
void* QGridLayout_TakeAtDefault(void* ptr, int index);
void QGridLayout_DestroyQGridLayout(void* ptr);
long long QGridLayout_ControlTypes(void* ptr);
long long QGridLayout_ControlTypesDefault(void* ptr);
void* QGridLayout_Geometry(void* ptr);
void* QGridLayout_GeometryDefault(void* ptr);
int QGridLayout_IndexOf(void* ptr, void* widget);
int QGridLayout_IndexOfDefault(void* ptr, void* widget);
char QGridLayout_IsEmpty(void* ptr);
char QGridLayout_IsEmptyDefault(void* ptr);
void* QGridLayout_Layout(void* ptr);
void* QGridLayout_LayoutDefault(void* ptr);
void QGridLayout_TimerEvent(void* ptr, void* event);
void QGridLayout_TimerEventDefault(void* ptr, void* event);
void QGridLayout_ConnectNotify(void* ptr, void* sign);
void QGridLayout_ConnectNotifyDefault(void* ptr, void* sign);
void QGridLayout_CustomEvent(void* ptr, void* event);
void QGridLayout_CustomEventDefault(void* ptr, void* event);
void QGridLayout_DeleteLater(void* ptr);
void QGridLayout_DeleteLaterDefault(void* ptr);
void QGridLayout_DisconnectNotify(void* ptr, void* sign);
void QGridLayout_DisconnectNotifyDefault(void* ptr, void* sign);
char QGridLayout_Event(void* ptr, void* e);
char QGridLayout_EventDefault(void* ptr, void* e);
char QGridLayout_EventFilter(void* ptr, void* watched, void* event);
char QGridLayout_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGridLayout_MetaObject(void* ptr);
void* QGridLayout_MetaObjectDefault(void* ptr);
void* QGridLayout_SpacerItem(void* ptr);
void* QGridLayout_SpacerItemDefault(void* ptr);
void* QGridLayout_Widget(void* ptr);
void* QGridLayout_WidgetDefault(void* ptr);
long long QGroupBox_Alignment(void* ptr);
char QGroupBox_IsCheckable(void* ptr);
char QGroupBox_IsChecked(void* ptr);
char QGroupBox_IsFlat(void* ptr);
void QGroupBox_SetAlignment(void* ptr, int alignment);
void QGroupBox_SetCheckable(void* ptr, char checkable);
void QGroupBox_SetChecked(void* ptr, char checked);
void QGroupBox_SetFlat(void* ptr, char flat);
void QGroupBox_SetTitle(void* ptr, char* title);
struct QtWidgets_PackedString QGroupBox_Title(void* ptr);
void* QGroupBox_NewQGroupBox(void* parent);
void* QGroupBox_NewQGroupBox2(char* title, void* parent);
void QGroupBox_ChangeEvent(void* ptr, void* ev);
void QGroupBox_ChangeEventDefault(void* ptr, void* ev);
void QGroupBox_ChildEvent(void* ptr, void* c);
void QGroupBox_ConnectClicked(void* ptr);
void QGroupBox_DisconnectClicked(void* ptr);
void QGroupBox_Clicked(void* ptr, char checked);
char QGroupBox_Event(void* ptr, void* e);
void QGroupBox_FocusInEvent(void* ptr, void* fe);
void QGroupBox_FocusInEventDefault(void* ptr, void* fe);
void QGroupBox_InitStyleOption(void* ptr, void* option);
void* QGroupBox_MinimumSizeHint(void* ptr);
void* QGroupBox_MinimumSizeHintDefault(void* ptr);
void QGroupBox_MouseMoveEvent(void* ptr, void* event);
void QGroupBox_MouseMoveEventDefault(void* ptr, void* event);
void QGroupBox_MousePressEvent(void* ptr, void* event);
void QGroupBox_MousePressEventDefault(void* ptr, void* event);
void QGroupBox_MouseReleaseEvent(void* ptr, void* event);
void QGroupBox_MouseReleaseEventDefault(void* ptr, void* event);
void QGroupBox_PaintEvent(void* ptr, void* event);
void QGroupBox_PaintEventDefault(void* ptr, void* event);
void QGroupBox_ResizeEvent(void* ptr, void* e);
void QGroupBox_ResizeEventDefault(void* ptr, void* e);
void QGroupBox_ConnectToggled(void* ptr);
void QGroupBox_DisconnectToggled(void* ptr);
void QGroupBox_Toggled(void* ptr, char on);
void QGroupBox_DestroyQGroupBox(void* ptr);
void QGroupBox_ActionEvent(void* ptr, void* event);
void QGroupBox_ActionEventDefault(void* ptr, void* event);
void QGroupBox_DragEnterEvent(void* ptr, void* event);
void QGroupBox_DragEnterEventDefault(void* ptr, void* event);
void QGroupBox_DragLeaveEvent(void* ptr, void* event);
void QGroupBox_DragLeaveEventDefault(void* ptr, void* event);
void QGroupBox_DragMoveEvent(void* ptr, void* event);
void QGroupBox_DragMoveEventDefault(void* ptr, void* event);
void QGroupBox_DropEvent(void* ptr, void* event);
void QGroupBox_DropEventDefault(void* ptr, void* event);
void QGroupBox_EnterEvent(void* ptr, void* event);
void QGroupBox_EnterEventDefault(void* ptr, void* event);
void QGroupBox_FocusOutEvent(void* ptr, void* event);
void QGroupBox_FocusOutEventDefault(void* ptr, void* event);
void QGroupBox_HideEvent(void* ptr, void* event);
void QGroupBox_HideEventDefault(void* ptr, void* event);
void QGroupBox_LeaveEvent(void* ptr, void* event);
void QGroupBox_LeaveEventDefault(void* ptr, void* event);
void QGroupBox_MoveEvent(void* ptr, void* event);
void QGroupBox_MoveEventDefault(void* ptr, void* event);
void QGroupBox_SetEnabled(void* ptr, char vbo);
void QGroupBox_SetEnabledDefault(void* ptr, char vbo);
void QGroupBox_SetStyleSheet(void* ptr, char* styleSheet);
void QGroupBox_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QGroupBox_SetVisible(void* ptr, char visible);
void QGroupBox_SetVisibleDefault(void* ptr, char visible);
void QGroupBox_SetWindowModified(void* ptr, char vbo);
void QGroupBox_SetWindowModifiedDefault(void* ptr, char vbo);
void QGroupBox_SetWindowTitle(void* ptr, char* vqs);
void QGroupBox_SetWindowTitleDefault(void* ptr, char* vqs);
void QGroupBox_ShowEvent(void* ptr, void* event);
void QGroupBox_ShowEventDefault(void* ptr, void* event);
void* QGroupBox_SizeHint(void* ptr);
void* QGroupBox_SizeHintDefault(void* ptr);
char QGroupBox_Close(void* ptr);
char QGroupBox_CloseDefault(void* ptr);
void QGroupBox_CloseEvent(void* ptr, void* event);
void QGroupBox_CloseEventDefault(void* ptr, void* event);
void QGroupBox_ContextMenuEvent(void* ptr, void* event);
void QGroupBox_ContextMenuEventDefault(void* ptr, void* event);
char QGroupBox_FocusNextPrevChild(void* ptr, char next);
char QGroupBox_FocusNextPrevChildDefault(void* ptr, char next);
char QGroupBox_HasHeightForWidth(void* ptr);
char QGroupBox_HasHeightForWidthDefault(void* ptr);
int QGroupBox_HeightForWidth(void* ptr, int w);
int QGroupBox_HeightForWidthDefault(void* ptr, int w);
void QGroupBox_Hide(void* ptr);
void QGroupBox_HideDefault(void* ptr);
void QGroupBox_InputMethodEvent(void* ptr, void* event);
void QGroupBox_InputMethodEventDefault(void* ptr, void* event);
void* QGroupBox_InputMethodQuery(void* ptr, long long query);
void* QGroupBox_InputMethodQueryDefault(void* ptr, long long query);
void QGroupBox_KeyPressEvent(void* ptr, void* event);
void QGroupBox_KeyPressEventDefault(void* ptr, void* event);
void QGroupBox_KeyReleaseEvent(void* ptr, void* event);
void QGroupBox_KeyReleaseEventDefault(void* ptr, void* event);
void QGroupBox_Lower(void* ptr);
void QGroupBox_LowerDefault(void* ptr);
void QGroupBox_MouseDoubleClickEvent(void* ptr, void* event);
void QGroupBox_MouseDoubleClickEventDefault(void* ptr, void* event);
char QGroupBox_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QGroupBox_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QGroupBox_Raise(void* ptr);
void QGroupBox_RaiseDefault(void* ptr);
void QGroupBox_Repaint(void* ptr);
void QGroupBox_RepaintDefault(void* ptr);
void QGroupBox_SetDisabled(void* ptr, char disable);
void QGroupBox_SetDisabledDefault(void* ptr, char disable);
void QGroupBox_SetFocus2(void* ptr);
void QGroupBox_SetFocus2Default(void* ptr);
void QGroupBox_SetHidden(void* ptr, char hidden);
void QGroupBox_SetHiddenDefault(void* ptr, char hidden);
void QGroupBox_Show(void* ptr);
void QGroupBox_ShowDefault(void* ptr);
void QGroupBox_ShowFullScreen(void* ptr);
void QGroupBox_ShowFullScreenDefault(void* ptr);
void QGroupBox_ShowMaximized(void* ptr);
void QGroupBox_ShowMaximizedDefault(void* ptr);
void QGroupBox_ShowMinimized(void* ptr);
void QGroupBox_ShowMinimizedDefault(void* ptr);
void QGroupBox_ShowNormal(void* ptr);
void QGroupBox_ShowNormalDefault(void* ptr);
void QGroupBox_TabletEvent(void* ptr, void* event);
void QGroupBox_TabletEventDefault(void* ptr, void* event);
void QGroupBox_Update(void* ptr);
void QGroupBox_UpdateDefault(void* ptr);
void QGroupBox_UpdateMicroFocus(void* ptr);
void QGroupBox_UpdateMicroFocusDefault(void* ptr);
void QGroupBox_WheelEvent(void* ptr, void* event);
void QGroupBox_WheelEventDefault(void* ptr, void* event);
void QGroupBox_TimerEvent(void* ptr, void* event);
void QGroupBox_TimerEventDefault(void* ptr, void* event);
void QGroupBox_ConnectNotify(void* ptr, void* sign);
void QGroupBox_ConnectNotifyDefault(void* ptr, void* sign);
void QGroupBox_CustomEvent(void* ptr, void* event);
void QGroupBox_CustomEventDefault(void* ptr, void* event);
void QGroupBox_DeleteLater(void* ptr);
void QGroupBox_DeleteLaterDefault(void* ptr);
void QGroupBox_DisconnectNotify(void* ptr, void* sign);
void QGroupBox_DisconnectNotifyDefault(void* ptr, void* sign);
char QGroupBox_EventFilter(void* ptr, void* watched, void* event);
char QGroupBox_EventFilterDefault(void* ptr, void* watched, void* event);
void* QGroupBox_MetaObject(void* ptr);
void* QGroupBox_MetaObjectDefault(void* ptr);
void* QHBoxLayout_NewQHBoxLayout();
void* QHBoxLayout_NewQHBoxLayout2(void* parent);
void QHBoxLayout_DestroyQHBoxLayout(void* ptr);
void QHBoxLayout_AddItem(void* ptr, void* item);
void QHBoxLayout_AddItemDefault(void* ptr, void* item);
int QHBoxLayout_Count(void* ptr);
int QHBoxLayout_CountDefault(void* ptr);
long long QHBoxLayout_ExpandingDirections(void* ptr);
long long QHBoxLayout_ExpandingDirectionsDefault(void* ptr);
char QHBoxLayout_HasHeightForWidth(void* ptr);
char QHBoxLayout_HasHeightForWidthDefault(void* ptr);
int QHBoxLayout_HeightForWidth(void* ptr, int w);
int QHBoxLayout_HeightForWidthDefault(void* ptr, int w);
void QHBoxLayout_Invalidate(void* ptr);
void QHBoxLayout_InvalidateDefault(void* ptr);
void* QHBoxLayout_ItemAt(void* ptr, int index);
void* QHBoxLayout_ItemAtDefault(void* ptr, int index);
void* QHBoxLayout_MaximumSize(void* ptr);
void* QHBoxLayout_MaximumSizeDefault(void* ptr);
int QHBoxLayout_MinimumHeightForWidth(void* ptr, int w);
int QHBoxLayout_MinimumHeightForWidthDefault(void* ptr, int w);
void* QHBoxLayout_MinimumSize(void* ptr);
void* QHBoxLayout_MinimumSizeDefault(void* ptr);
void QHBoxLayout_SetGeometry(void* ptr, void* r);
void QHBoxLayout_SetGeometryDefault(void* ptr, void* r);
void* QHBoxLayout_SizeHint(void* ptr);
void* QHBoxLayout_SizeHintDefault(void* ptr);
void* QHBoxLayout_TakeAt(void* ptr, int index);
void* QHBoxLayout_TakeAtDefault(void* ptr, int index);
long long QHBoxLayout_ControlTypes(void* ptr);
long long QHBoxLayout_ControlTypesDefault(void* ptr);
void* QHBoxLayout_Geometry(void* ptr);
void* QHBoxLayout_GeometryDefault(void* ptr);
int QHBoxLayout_IndexOf(void* ptr, void* widget);
int QHBoxLayout_IndexOfDefault(void* ptr, void* widget);
char QHBoxLayout_IsEmpty(void* ptr);
char QHBoxLayout_IsEmptyDefault(void* ptr);
void* QHBoxLayout_Layout(void* ptr);
void* QHBoxLayout_LayoutDefault(void* ptr);
void QHBoxLayout_TimerEvent(void* ptr, void* event);
void QHBoxLayout_TimerEventDefault(void* ptr, void* event);
void QHBoxLayout_ConnectNotify(void* ptr, void* sign);
void QHBoxLayout_ConnectNotifyDefault(void* ptr, void* sign);
void QHBoxLayout_CustomEvent(void* ptr, void* event);
void QHBoxLayout_CustomEventDefault(void* ptr, void* event);
void QHBoxLayout_DeleteLater(void* ptr);
void QHBoxLayout_DeleteLaterDefault(void* ptr);
void QHBoxLayout_DisconnectNotify(void* ptr, void* sign);
void QHBoxLayout_DisconnectNotifyDefault(void* ptr, void* sign);
char QHBoxLayout_Event(void* ptr, void* e);
char QHBoxLayout_EventDefault(void* ptr, void* e);
char QHBoxLayout_EventFilter(void* ptr, void* watched, void* event);
char QHBoxLayout_EventFilterDefault(void* ptr, void* watched, void* event);
void* QHBoxLayout_MetaObject(void* ptr);
void* QHBoxLayout_MetaObjectDefault(void* ptr);
void* QHBoxLayout_SpacerItem(void* ptr);
void* QHBoxLayout_SpacerItemDefault(void* ptr);
void* QHBoxLayout_Widget(void* ptr);
void* QHBoxLayout_WidgetDefault(void* ptr);
char QHeaderView_CascadingSectionResizes(void* ptr);
long long QHeaderView_DefaultAlignment(void* ptr);
int QHeaderView_DefaultSectionSize(void* ptr);
char QHeaderView_HighlightSections(void* ptr);
char QHeaderView_IsSortIndicatorShown(void* ptr);
int QHeaderView_MaximumSectionSize(void* ptr);
int QHeaderView_MinimumSectionSize(void* ptr);
void QHeaderView_ResetDefaultSectionSize(void* ptr);
void QHeaderView_ResizeSection(void* ptr, int logicalIndex, int size);
void QHeaderView_SetCascadingSectionResizes(void* ptr, char enable);
void QHeaderView_SetDefaultAlignment(void* ptr, long long alignment);
void QHeaderView_SetDefaultSectionSize(void* ptr, int size);
void QHeaderView_SetHighlightSections(void* ptr, char highlight);
void QHeaderView_SetMaximumSectionSize(void* ptr, int size);
void QHeaderView_SetMinimumSectionSize(void* ptr, int size);
void QHeaderView_SetOffset(void* ptr, int offset);
void QHeaderView_SetSortIndicatorShown(void* ptr, char show);
void QHeaderView_SetStretchLastSection(void* ptr, char stretch);
char QHeaderView_StretchLastSection(void* ptr);
void* QHeaderView_NewQHeaderView(long long orientation, void* parent);
int QHeaderView_Count(void* ptr);
void QHeaderView_CurrentChanged(void* ptr, void* current, void* old);
void QHeaderView_CurrentChangedDefault(void* ptr, void* current, void* old);
char QHeaderView_Event(void* ptr, void* e);
void QHeaderView_ConnectGeometriesChanged(void* ptr);
void QHeaderView_DisconnectGeometriesChanged(void* ptr);
void QHeaderView_GeometriesChanged(void* ptr);
void QHeaderView_HeaderDataChanged(void* ptr, long long orientation, int logicalFirst, int logicalLast);
int QHeaderView_HiddenSectionCount(void* ptr);
void QHeaderView_HideSection(void* ptr, int logicalIndex);
int QHeaderView_HorizontalOffset(void* ptr);
int QHeaderView_HorizontalOffsetDefault(void* ptr);
void QHeaderView_InitStyleOption(void* ptr, void* option);
char QHeaderView_IsSectionHidden(void* ptr, int logicalIndex);
int QHeaderView_Length(void* ptr);
int QHeaderView_LogicalIndex(void* ptr, int visualIndex);
int QHeaderView_LogicalIndexAt3(void* ptr, void* pos);
int QHeaderView_LogicalIndexAt(void* ptr, int position);
int QHeaderView_LogicalIndexAt2(void* ptr, int x, int y);
void QHeaderView_MouseDoubleClickEvent(void* ptr, void* e);
void QHeaderView_MouseDoubleClickEventDefault(void* ptr, void* e);
void QHeaderView_MouseMoveEvent(void* ptr, void* e);
void QHeaderView_MouseMoveEventDefault(void* ptr, void* e);
void QHeaderView_MousePressEvent(void* ptr, void* e);
void QHeaderView_MousePressEventDefault(void* ptr, void* e);
void QHeaderView_MouseReleaseEvent(void* ptr, void* e);
void QHeaderView_MouseReleaseEventDefault(void* ptr, void* e);
void QHeaderView_MoveSection(void* ptr, int from, int to);
int QHeaderView_Offset(void* ptr);
long long QHeaderView_Orientation(void* ptr);
void QHeaderView_PaintEvent(void* ptr, void* e);
void QHeaderView_PaintEventDefault(void* ptr, void* e);
void QHeaderView_PaintSection(void* ptr, void* painter, void* rect, int logicalIndex);
void QHeaderView_PaintSectionDefault(void* ptr, void* painter, void* rect, int logicalIndex);
void QHeaderView_Reset(void* ptr);
void QHeaderView_ResetDefault(void* ptr);
int QHeaderView_ResizeContentsPrecision(void* ptr);
void QHeaderView_ResizeSections(void* ptr, long long mode);
void QHeaderView_ResizeSections2(void* ptr);
char QHeaderView_RestoreState(void* ptr, void* state);
void* QHeaderView_SaveState(void* ptr);
void QHeaderView_ConnectSectionClicked(void* ptr);
void QHeaderView_DisconnectSectionClicked(void* ptr);
void QHeaderView_SectionClicked(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionCountChanged(void* ptr);
void QHeaderView_DisconnectSectionCountChanged(void* ptr);
void QHeaderView_SectionCountChanged(void* ptr, int oldCount, int newCount);
void QHeaderView_ConnectSectionDoubleClicked(void* ptr);
void QHeaderView_DisconnectSectionDoubleClicked(void* ptr);
void QHeaderView_SectionDoubleClicked(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionEntered(void* ptr);
void QHeaderView_DisconnectSectionEntered(void* ptr);
void QHeaderView_SectionEntered(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionHandleDoubleClicked(void* ptr);
void QHeaderView_DisconnectSectionHandleDoubleClicked(void* ptr);
void QHeaderView_SectionHandleDoubleClicked(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionMoved(void* ptr);
void QHeaderView_DisconnectSectionMoved(void* ptr);
void QHeaderView_SectionMoved(void* ptr, int logicalIndex, int oldVisualIndex, int newVisualIndex);
int QHeaderView_SectionPosition(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionPressed(void* ptr);
void QHeaderView_DisconnectSectionPressed(void* ptr);
void QHeaderView_SectionPressed(void* ptr, int logicalIndex);
long long QHeaderView_SectionResizeMode(void* ptr, int logicalIndex);
void QHeaderView_ConnectSectionResized(void* ptr);
void QHeaderView_DisconnectSectionResized(void* ptr);
void QHeaderView_SectionResized(void* ptr, int logicalIndex, int oldSize, int newSize);
int QHeaderView_SectionSize(void* ptr, int logicalIndex);
void* QHeaderView_SectionSizeFromContents(void* ptr, int logicalIndex);
void* QHeaderView_SectionSizeFromContentsDefault(void* ptr, int logicalIndex);
int QHeaderView_SectionSizeHint(void* ptr, int logicalIndex);
int QHeaderView_SectionViewportPosition(void* ptr, int logicalIndex);
void QHeaderView_SectionsAboutToBeRemoved(void* ptr, void* parent, int logicalFirst, int logicalLast);
char QHeaderView_SectionsClickable(void* ptr);
char QHeaderView_SectionsHidden(void* ptr);
void QHeaderView_SectionsInserted(void* ptr, void* parent, int logicalFirst, int logicalLast);
char QHeaderView_SectionsMovable(void* ptr);
char QHeaderView_SectionsMoved(void* ptr);
void QHeaderView_SetModel(void* ptr, void* model);
void QHeaderView_SetModelDefault(void* ptr, void* model);
void QHeaderView_SetOffsetToLastSection(void* ptr);
void QHeaderView_SetOffsetToSectionPosition(void* ptr, int visualSectionNumber);
void QHeaderView_SetResizeContentsPrecision(void* ptr, int precision);
void QHeaderView_SetSectionHidden(void* ptr, int logicalIndex, char hide);
void QHeaderView_SetSectionResizeMode(void* ptr, long long mode);
void QHeaderView_SetSectionResizeMode2(void* ptr, int logicalIndex, long long mode);
void QHeaderView_SetSectionsClickable(void* ptr, char clickable);
void QHeaderView_SetSectionsMovable(void* ptr, char movable);
void QHeaderView_SetSelection(void* ptr, void* rect, long long flags);
void QHeaderView_SetSelectionDefault(void* ptr, void* rect, long long flags);
void QHeaderView_SetSortIndicator(void* ptr, int logicalIndex, long long order);
void QHeaderView_SetVisible(void* ptr, char v);
void QHeaderView_SetVisibleDefault(void* ptr, char v);
void QHeaderView_ShowSection(void* ptr, int logicalIndex);
void* QHeaderView_SizeHint(void* ptr);
void* QHeaderView_SizeHintDefault(void* ptr);
void QHeaderView_ConnectSortIndicatorChanged(void* ptr);
void QHeaderView_DisconnectSortIndicatorChanged(void* ptr);
void QHeaderView_SortIndicatorChanged(void* ptr, int logicalIndex, long long order);
long long QHeaderView_SortIndicatorOrder(void* ptr);
int QHeaderView_SortIndicatorSection(void* ptr);
int QHeaderView_StretchSectionCount(void* ptr);
void QHeaderView_SwapSections(void* ptr, int first, int second);
int QHeaderView_VerticalOffset(void* ptr);
int QHeaderView_VerticalOffsetDefault(void* ptr);
char QHeaderView_ViewportEvent(void* ptr, void* e);
char QHeaderView_ViewportEventDefault(void* ptr, void* e);
int QHeaderView_VisualIndex(void* ptr, int logicalIndex);
int QHeaderView_VisualIndexAt(void* ptr, int position);
void QHeaderView_DestroyQHeaderView(void* ptr);
void QHeaderView_DestroyQHeaderViewDefault(void* ptr);
void QHeaderView_DragLeaveEvent(void* ptr, void* event);
void QHeaderView_DragLeaveEventDefault(void* ptr, void* event);
void QHeaderView_ClearSelection(void* ptr);
void QHeaderView_ClearSelectionDefault(void* ptr);
void QHeaderView_CloseEditor(void* ptr, void* editor, long long hint);
void QHeaderView_CloseEditorDefault(void* ptr, void* editor, long long hint);
void QHeaderView_CommitData(void* ptr, void* editor);
void QHeaderView_CommitDataDefault(void* ptr, void* editor);
void QHeaderView_DragEnterEvent(void* ptr, void* event);
void QHeaderView_DragEnterEventDefault(void* ptr, void* event);
void QHeaderView_DragMoveEvent(void* ptr, void* event);
void QHeaderView_DragMoveEventDefault(void* ptr, void* event);
void QHeaderView_DropEvent(void* ptr, void* event);
void QHeaderView_DropEventDefault(void* ptr, void* event);
void QHeaderView_Edit(void* ptr, void* index);
void QHeaderView_EditDefault(void* ptr, void* index);
char QHeaderView_Edit2(void* ptr, void* index, long long trigger, void* event);
char QHeaderView_Edit2Default(void* ptr, void* index, long long trigger, void* event);
void QHeaderView_EditorDestroyed(void* ptr, void* editor);
void QHeaderView_EditorDestroyedDefault(void* ptr, void* editor);
void QHeaderView_FocusInEvent(void* ptr, void* event);
void QHeaderView_FocusInEventDefault(void* ptr, void* event);
char QHeaderView_FocusNextPrevChild(void* ptr, char next);
char QHeaderView_FocusNextPrevChildDefault(void* ptr, char next);
void QHeaderView_FocusOutEvent(void* ptr, void* event);
void QHeaderView_FocusOutEventDefault(void* ptr, void* event);
void* QHeaderView_IndexAt(void* ptr, void* point);
void* QHeaderView_IndexAtDefault(void* ptr, void* point);
void QHeaderView_InputMethodEvent(void* ptr, void* event);
void QHeaderView_InputMethodEventDefault(void* ptr, void* event);
void* QHeaderView_InputMethodQuery(void* ptr, long long query);
void* QHeaderView_InputMethodQueryDefault(void* ptr, long long query);
char QHeaderView_IsIndexHidden(void* ptr, void* index);
char QHeaderView_IsIndexHiddenDefault(void* ptr, void* index);
void QHeaderView_KeyPressEvent(void* ptr, void* event);
void QHeaderView_KeyPressEventDefault(void* ptr, void* event);
void QHeaderView_KeyboardSearch(void* ptr, char* search);
void QHeaderView_KeyboardSearchDefault(void* ptr, char* search);
void* QHeaderView_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QHeaderView_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
void QHeaderView_ResizeEvent(void* ptr, void* event);
void QHeaderView_ResizeEventDefault(void* ptr, void* event);
void QHeaderView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QHeaderView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QHeaderView_RowsInserted(void* ptr, void* parent, int start, int end);
void QHeaderView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QHeaderView_ScrollTo(void* ptr, void* index, long long hint);
void QHeaderView_ScrollToDefault(void* ptr, void* index, long long hint);
void QHeaderView_ScrollToBottom(void* ptr);
void QHeaderView_ScrollToBottomDefault(void* ptr);
void QHeaderView_ScrollToTop(void* ptr);
void QHeaderView_ScrollToTopDefault(void* ptr);
void QHeaderView_SelectAll(void* ptr);
void QHeaderView_SelectAllDefault(void* ptr);
void QHeaderView_SelectionChanged(void* ptr, void* selected, void* deselected);
void QHeaderView_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
long long QHeaderView_SelectionCommand(void* ptr, void* index, void* event);
long long QHeaderView_SelectionCommandDefault(void* ptr, void* index, void* event);
void QHeaderView_SetCurrentIndex(void* ptr, void* index);
void QHeaderView_SetCurrentIndexDefault(void* ptr, void* index);
void QHeaderView_SetRootIndex(void* ptr, void* index);
void QHeaderView_SetRootIndexDefault(void* ptr, void* index);
void QHeaderView_SetSelectionModel(void* ptr, void* selectionModel);
void QHeaderView_SetSelectionModelDefault(void* ptr, void* selectionModel);
int QHeaderView_SizeHintForColumn(void* ptr, int column);
int QHeaderView_SizeHintForColumnDefault(void* ptr, int column);
int QHeaderView_SizeHintForRow(void* ptr, int row);
int QHeaderView_SizeHintForRowDefault(void* ptr, int row);
void QHeaderView_StartDrag(void* ptr, long long supportedActions);
void QHeaderView_StartDragDefault(void* ptr, long long supportedActions);
void QHeaderView_Update(void* ptr, void* index);
void QHeaderView_UpdateDefault(void* ptr, void* index);
void QHeaderView_UpdateGeometries(void* ptr);
void QHeaderView_UpdateGeometriesDefault(void* ptr);
void* QHeaderView_ViewOptions(void* ptr);
void* QHeaderView_ViewOptionsDefault(void* ptr);
void* QHeaderView_ViewportSizeHint(void* ptr);
void* QHeaderView_ViewportSizeHintDefault(void* ptr);
void* QHeaderView_VisualRect(void* ptr, void* index);
void* QHeaderView_VisualRectDefault(void* ptr, void* index);
void* QHeaderView_VisualRegionForSelection(void* ptr, void* selection);
void* QHeaderView_VisualRegionForSelectionDefault(void* ptr, void* selection);
void QHeaderView_ContextMenuEvent(void* ptr, void* e);
void QHeaderView_ContextMenuEventDefault(void* ptr, void* e);
void* QHeaderView_MinimumSizeHint(void* ptr);
void* QHeaderView_MinimumSizeHintDefault(void* ptr);
void QHeaderView_ScrollContentsBy(void* ptr, int dx, int dy);
void QHeaderView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QHeaderView_SetupViewport(void* ptr, void* viewport);
void QHeaderView_SetupViewportDefault(void* ptr, void* viewport);
void QHeaderView_WheelEvent(void* ptr, void* e);
void QHeaderView_WheelEventDefault(void* ptr, void* e);
void QHeaderView_ChangeEvent(void* ptr, void* ev);
void QHeaderView_ChangeEventDefault(void* ptr, void* ev);
void QHeaderView_ActionEvent(void* ptr, void* event);
void QHeaderView_ActionEventDefault(void* ptr, void* event);
void QHeaderView_EnterEvent(void* ptr, void* event);
void QHeaderView_EnterEventDefault(void* ptr, void* event);
void QHeaderView_HideEvent(void* ptr, void* event);
void QHeaderView_HideEventDefault(void* ptr, void* event);
void QHeaderView_LeaveEvent(void* ptr, void* event);
void QHeaderView_LeaveEventDefault(void* ptr, void* event);
void QHeaderView_MoveEvent(void* ptr, void* event);
void QHeaderView_MoveEventDefault(void* ptr, void* event);
void QHeaderView_SetEnabled(void* ptr, char vbo);
void QHeaderView_SetEnabledDefault(void* ptr, char vbo);
void QHeaderView_SetStyleSheet(void* ptr, char* styleSheet);
void QHeaderView_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QHeaderView_SetWindowModified(void* ptr, char vbo);
void QHeaderView_SetWindowModifiedDefault(void* ptr, char vbo);
void QHeaderView_SetWindowTitle(void* ptr, char* vqs);
void QHeaderView_SetWindowTitleDefault(void* ptr, char* vqs);
void QHeaderView_ShowEvent(void* ptr, void* event);
void QHeaderView_ShowEventDefault(void* ptr, void* event);
char QHeaderView_Close(void* ptr);
char QHeaderView_CloseDefault(void* ptr);
void QHeaderView_CloseEvent(void* ptr, void* event);
void QHeaderView_CloseEventDefault(void* ptr, void* event);
char QHeaderView_HasHeightForWidth(void* ptr);
char QHeaderView_HasHeightForWidthDefault(void* ptr);
int QHeaderView_HeightForWidth(void* ptr, int w);
int QHeaderView_HeightForWidthDefault(void* ptr, int w);
void QHeaderView_Hide(void* ptr);
void QHeaderView_HideDefault(void* ptr);
void QHeaderView_KeyReleaseEvent(void* ptr, void* event);
void QHeaderView_KeyReleaseEventDefault(void* ptr, void* event);
void QHeaderView_Lower(void* ptr);
void QHeaderView_LowerDefault(void* ptr);
char QHeaderView_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QHeaderView_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QHeaderView_Raise(void* ptr);
void QHeaderView_RaiseDefault(void* ptr);
void QHeaderView_Repaint(void* ptr);
void QHeaderView_RepaintDefault(void* ptr);
void QHeaderView_SetDisabled(void* ptr, char disable);
void QHeaderView_SetDisabledDefault(void* ptr, char disable);
void QHeaderView_SetFocus2(void* ptr);
void QHeaderView_SetFocus2Default(void* ptr);
void QHeaderView_SetHidden(void* ptr, char hidden);
void QHeaderView_SetHiddenDefault(void* ptr, char hidden);
void QHeaderView_Show(void* ptr);
void QHeaderView_ShowDefault(void* ptr);
void QHeaderView_ShowFullScreen(void* ptr);
void QHeaderView_ShowFullScreenDefault(void* ptr);
void QHeaderView_ShowMaximized(void* ptr);
void QHeaderView_ShowMaximizedDefault(void* ptr);
void QHeaderView_ShowMinimized(void* ptr);
void QHeaderView_ShowMinimizedDefault(void* ptr);
void QHeaderView_ShowNormal(void* ptr);
void QHeaderView_ShowNormalDefault(void* ptr);
void QHeaderView_TabletEvent(void* ptr, void* event);
void QHeaderView_TabletEventDefault(void* ptr, void* event);
void QHeaderView_UpdateMicroFocus(void* ptr);
void QHeaderView_UpdateMicroFocusDefault(void* ptr);
void QHeaderView_ChildEvent(void* ptr, void* event);
void QHeaderView_ChildEventDefault(void* ptr, void* event);
void QHeaderView_ConnectNotify(void* ptr, void* sign);
void QHeaderView_ConnectNotifyDefault(void* ptr, void* sign);
void QHeaderView_CustomEvent(void* ptr, void* event);
void QHeaderView_CustomEventDefault(void* ptr, void* event);
void QHeaderView_DeleteLater(void* ptr);
void QHeaderView_DeleteLaterDefault(void* ptr);
void QHeaderView_DisconnectNotify(void* ptr, void* sign);
void QHeaderView_DisconnectNotifyDefault(void* ptr, void* sign);
char QHeaderView_EventFilter(void* ptr, void* watched, void* event);
char QHeaderView_EventFilterDefault(void* ptr, void* watched, void* event);
void* QHeaderView_MetaObject(void* ptr);
void* QHeaderView_MetaObjectDefault(void* ptr);
struct QtWidgets_PackedString QInputDialog_CancelButtonText(void* ptr);
struct QtWidgets_PackedString QInputDialog_ComboBoxItems(void* ptr);
int QInputDialog_DoubleDecimals(void* ptr);
double QInputDialog_DoubleMaximum(void* ptr);
double QInputDialog_DoubleMinimum(void* ptr);
double QInputDialog_DoubleValue(void* ptr);
long long QInputDialog_InputMode(void* ptr);
int QInputDialog_IntMaximum(void* ptr);
int QInputDialog_IntMinimum(void* ptr);
int QInputDialog_IntStep(void* ptr);
int QInputDialog_IntValue(void* ptr);
char QInputDialog_IsComboBoxEditable(void* ptr);
struct QtWidgets_PackedString QInputDialog_LabelText(void* ptr);
struct QtWidgets_PackedString QInputDialog_OkButtonText(void* ptr);
long long QInputDialog_Options(void* ptr);
void QInputDialog_SetCancelButtonText(void* ptr, char* text);
void QInputDialog_SetComboBoxEditable(void* ptr, char editable);
void QInputDialog_SetComboBoxItems(void* ptr, char* items);
void QInputDialog_SetDoubleDecimals(void* ptr, int decimals);
void QInputDialog_SetDoubleMaximum(void* ptr, double max);
void QInputDialog_SetDoubleMinimum(void* ptr, double min);
void QInputDialog_SetDoubleValue(void* ptr, double value);
void QInputDialog_SetInputMode(void* ptr, long long mode);
void QInputDialog_SetIntMaximum(void* ptr, int max);
void QInputDialog_SetIntMinimum(void* ptr, int min);
void QInputDialog_SetIntStep(void* ptr, int step);
void QInputDialog_SetIntValue(void* ptr, int value);
void QInputDialog_SetLabelText(void* ptr, char* text);
void QInputDialog_SetOkButtonText(void* ptr, char* text);
void QInputDialog_SetOptions(void* ptr, long long options);
void QInputDialog_SetTextEchoMode(void* ptr, long long mode);
void QInputDialog_SetTextValue(void* ptr, char* text);
long long QInputDialog_TextEchoMode(void* ptr);
struct QtWidgets_PackedString QInputDialog_TextValue(void* ptr);
void* QInputDialog_NewQInputDialog(void* parent, long long flags);
void QInputDialog_Done(void* ptr, int result);
void QInputDialog_DoneDefault(void* ptr, int result);
void QInputDialog_ConnectDoubleValueChanged(void* ptr);
void QInputDialog_DisconnectDoubleValueChanged(void* ptr);
void QInputDialog_DoubleValueChanged(void* ptr, double value);
void QInputDialog_ConnectDoubleValueSelected(void* ptr);
void QInputDialog_DisconnectDoubleValueSelected(void* ptr);
void QInputDialog_DoubleValueSelected(void* ptr, double value);
double QInputDialog_QInputDialog_GetDouble(void* parent, char* title, char* label, double value, double min, double max, int decimals, char ok, long long flags);
int QInputDialog_QInputDialog_GetInt(void* parent, char* title, char* label, int value, int min, int max, int step, char ok, long long flags);
struct QtWidgets_PackedString QInputDialog_QInputDialog_GetItem(void* parent, char* title, char* label, char* items, int current, char editable, char ok, long long flags, long long inputMethodHints);
struct QtWidgets_PackedString QInputDialog_QInputDialog_GetMultiLineText(void* parent, char* title, char* label, char* text, char ok, long long flags, long long inputMethodHints);
struct QtWidgets_PackedString QInputDialog_QInputDialog_GetText(void* parent, char* title, char* label, long long mode, char* text, char ok, long long flags, long long inputMethodHints);
void QInputDialog_ConnectIntValueChanged(void* ptr);
void QInputDialog_DisconnectIntValueChanged(void* ptr);
void QInputDialog_IntValueChanged(void* ptr, int value);
void QInputDialog_ConnectIntValueSelected(void* ptr);
void QInputDialog_DisconnectIntValueSelected(void* ptr);
void QInputDialog_IntValueSelected(void* ptr, int value);
void* QInputDialog_MinimumSizeHint(void* ptr);
void* QInputDialog_MinimumSizeHintDefault(void* ptr);
void QInputDialog_Open(void* ptr, void* receiver, char* member);
void QInputDialog_SetDoubleRange(void* ptr, double min, double max);
void QInputDialog_SetIntRange(void* ptr, int min, int max);
void QInputDialog_SetOption(void* ptr, long long option, char on);
void QInputDialog_SetVisible(void* ptr, char visible);
void QInputDialog_SetVisibleDefault(void* ptr, char visible);
void* QInputDialog_SizeHint(void* ptr);
void* QInputDialog_SizeHintDefault(void* ptr);
char QInputDialog_TestOption(void* ptr, long long option);
void QInputDialog_ConnectTextValueChanged(void* ptr);
void QInputDialog_DisconnectTextValueChanged(void* ptr);
void QInputDialog_TextValueChanged(void* ptr, char* text);
void QInputDialog_ConnectTextValueSelected(void* ptr);
void QInputDialog_DisconnectTextValueSelected(void* ptr);
void QInputDialog_TextValueSelected(void* ptr, char* text);
void QInputDialog_DestroyQInputDialog(void* ptr);
void QInputDialog_Accept(void* ptr);
void QInputDialog_AcceptDefault(void* ptr);
void QInputDialog_CloseEvent(void* ptr, void* e);
void QInputDialog_CloseEventDefault(void* ptr, void* e);
void QInputDialog_ContextMenuEvent(void* ptr, void* e);
void QInputDialog_ContextMenuEventDefault(void* ptr, void* e);
int QInputDialog_Exec(void* ptr);
int QInputDialog_ExecDefault(void* ptr);
void QInputDialog_KeyPressEvent(void* ptr, void* e);
void QInputDialog_KeyPressEventDefault(void* ptr, void* e);
void QInputDialog_Reject(void* ptr);
void QInputDialog_RejectDefault(void* ptr);
void QInputDialog_ResizeEvent(void* ptr, void* vqr);
void QInputDialog_ResizeEventDefault(void* ptr, void* vqr);
void QInputDialog_ShowEvent(void* ptr, void* event);
void QInputDialog_ShowEventDefault(void* ptr, void* event);
void QInputDialog_ActionEvent(void* ptr, void* event);
void QInputDialog_ActionEventDefault(void* ptr, void* event);
void QInputDialog_DragEnterEvent(void* ptr, void* event);
void QInputDialog_DragEnterEventDefault(void* ptr, void* event);
void QInputDialog_DragLeaveEvent(void* ptr, void* event);
void QInputDialog_DragLeaveEventDefault(void* ptr, void* event);
void QInputDialog_DragMoveEvent(void* ptr, void* event);
void QInputDialog_DragMoveEventDefault(void* ptr, void* event);
void QInputDialog_DropEvent(void* ptr, void* event);
void QInputDialog_DropEventDefault(void* ptr, void* event);
void QInputDialog_EnterEvent(void* ptr, void* event);
void QInputDialog_EnterEventDefault(void* ptr, void* event);
void QInputDialog_FocusInEvent(void* ptr, void* event);
void QInputDialog_FocusInEventDefault(void* ptr, void* event);
void QInputDialog_FocusOutEvent(void* ptr, void* event);
void QInputDialog_FocusOutEventDefault(void* ptr, void* event);
void QInputDialog_HideEvent(void* ptr, void* event);
void QInputDialog_HideEventDefault(void* ptr, void* event);
void QInputDialog_LeaveEvent(void* ptr, void* event);
void QInputDialog_LeaveEventDefault(void* ptr, void* event);
void QInputDialog_MoveEvent(void* ptr, void* event);
void QInputDialog_MoveEventDefault(void* ptr, void* event);
void QInputDialog_PaintEvent(void* ptr, void* event);
void QInputDialog_PaintEventDefault(void* ptr, void* event);
void QInputDialog_SetEnabled(void* ptr, char vbo);
void QInputDialog_SetEnabledDefault(void* ptr, char vbo);
void QInputDialog_SetStyleSheet(void* ptr, char* styleSheet);
void QInputDialog_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QInputDialog_SetWindowModified(void* ptr, char vbo);
void QInputDialog_SetWindowModifiedDefault(void* ptr, char vbo);
void QInputDialog_SetWindowTitle(void* ptr, char* vqs);
void QInputDialog_SetWindowTitleDefault(void* ptr, char* vqs);
void QInputDialog_ChangeEvent(void* ptr, void* event);
void QInputDialog_ChangeEventDefault(void* ptr, void* event);
char QInputDialog_Close(void* ptr);
char QInputDialog_CloseDefault(void* ptr);
char QInputDialog_FocusNextPrevChild(void* ptr, char next);
char QInputDialog_FocusNextPrevChildDefault(void* ptr, char next);
char QInputDialog_HasHeightForWidth(void* ptr);
char QInputDialog_HasHeightForWidthDefault(void* ptr);
int QInputDialog_HeightForWidth(void* ptr, int w);
int QInputDialog_HeightForWidthDefault(void* ptr, int w);
void QInputDialog_Hide(void* ptr);
void QInputDialog_HideDefault(void* ptr);
void QInputDialog_InputMethodEvent(void* ptr, void* event);
void QInputDialog_InputMethodEventDefault(void* ptr, void* event);
void* QInputDialog_InputMethodQuery(void* ptr, long long query);
void* QInputDialog_InputMethodQueryDefault(void* ptr, long long query);
void QInputDialog_KeyReleaseEvent(void* ptr, void* event);
void QInputDialog_KeyReleaseEventDefault(void* ptr, void* event);
void QInputDialog_Lower(void* ptr);
void QInputDialog_LowerDefault(void* ptr);
void QInputDialog_MouseDoubleClickEvent(void* ptr, void* event);
void QInputDialog_MouseDoubleClickEventDefault(void* ptr, void* event);
void QInputDialog_MouseMoveEvent(void* ptr, void* event);
void QInputDialog_MouseMoveEventDefault(void* ptr, void* event);
void QInputDialog_MousePressEvent(void* ptr, void* event);
void QInputDialog_MousePressEventDefault(void* ptr, void* event);
void QInputDialog_MouseReleaseEvent(void* ptr, void* event);
void QInputDialog_MouseReleaseEventDefault(void* ptr, void* event);
char QInputDialog_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QInputDialog_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QInputDialog_Raise(void* ptr);
void QInputDialog_RaiseDefault(void* ptr);
void QInputDialog_Repaint(void* ptr);
void QInputDialog_RepaintDefault(void* ptr);
void QInputDialog_SetDisabled(void* ptr, char disable);
void QInputDialog_SetDisabledDefault(void* ptr, char disable);
void QInputDialog_SetFocus2(void* ptr);
void QInputDialog_SetFocus2Default(void* ptr);
void QInputDialog_SetHidden(void* ptr, char hidden);
void QInputDialog_SetHiddenDefault(void* ptr, char hidden);
void QInputDialog_Show(void* ptr);
void QInputDialog_ShowDefault(void* ptr);
void QInputDialog_ShowFullScreen(void* ptr);
void QInputDialog_ShowFullScreenDefault(void* ptr);
void QInputDialog_ShowMaximized(void* ptr);
void QInputDialog_ShowMaximizedDefault(void* ptr);
void QInputDialog_ShowMinimized(void* ptr);
void QInputDialog_ShowMinimizedDefault(void* ptr);
void QInputDialog_ShowNormal(void* ptr);
void QInputDialog_ShowNormalDefault(void* ptr);
void QInputDialog_TabletEvent(void* ptr, void* event);
void QInputDialog_TabletEventDefault(void* ptr, void* event);
void QInputDialog_Update(void* ptr);
void QInputDialog_UpdateDefault(void* ptr);
void QInputDialog_UpdateMicroFocus(void* ptr);
void QInputDialog_UpdateMicroFocusDefault(void* ptr);
void QInputDialog_WheelEvent(void* ptr, void* event);
void QInputDialog_WheelEventDefault(void* ptr, void* event);
void QInputDialog_TimerEvent(void* ptr, void* event);
void QInputDialog_TimerEventDefault(void* ptr, void* event);
void QInputDialog_ChildEvent(void* ptr, void* event);
void QInputDialog_ChildEventDefault(void* ptr, void* event);
void QInputDialog_ConnectNotify(void* ptr, void* sign);
void QInputDialog_ConnectNotifyDefault(void* ptr, void* sign);
void QInputDialog_CustomEvent(void* ptr, void* event);
void QInputDialog_CustomEventDefault(void* ptr, void* event);
void QInputDialog_DeleteLater(void* ptr);
void QInputDialog_DeleteLaterDefault(void* ptr);
void QInputDialog_DisconnectNotify(void* ptr, void* sign);
void QInputDialog_DisconnectNotifyDefault(void* ptr, void* sign);
void* QInputDialog_MetaObject(void* ptr);
void* QInputDialog_MetaObjectDefault(void* ptr);
char QItemDelegate_EventFilter(void* ptr, void* editor, void* event);
char QItemDelegate_HasClipping(void* ptr);
void QItemDelegate_SetClipping(void* ptr, char clip);
void* QItemDelegate_NewQItemDelegate(void* parent);
void* QItemDelegate_CreateEditor(void* ptr, void* parent, void* option, void* index);
void* QItemDelegate_CreateEditorDefault(void* ptr, void* parent, void* option, void* index);
void QItemDelegate_DrawBackground(void* ptr, void* painter, void* option, void* index);
void QItemDelegate_DrawCheck(void* ptr, void* painter, void* option, void* rect, long long state);
void QItemDelegate_DrawCheckDefault(void* ptr, void* painter, void* option, void* rect, long long state);
void QItemDelegate_DrawDecoration(void* ptr, void* painter, void* option, void* rect, void* pixmap);
void QItemDelegate_DrawDecorationDefault(void* ptr, void* painter, void* option, void* rect, void* pixmap);
void QItemDelegate_DrawDisplay(void* ptr, void* painter, void* option, void* rect, char* text);
void QItemDelegate_DrawDisplayDefault(void* ptr, void* painter, void* option, void* rect, char* text);
void QItemDelegate_DrawFocus(void* ptr, void* painter, void* option, void* rect);
void QItemDelegate_DrawFocusDefault(void* ptr, void* painter, void* option, void* rect);
char QItemDelegate_EditorEvent(void* ptr, void* event, void* model, void* option, void* index);
char QItemDelegate_EditorEventDefault(void* ptr, void* event, void* model, void* option, void* index);
void* QItemDelegate_ItemEditorFactory(void* ptr);
void QItemDelegate_Paint(void* ptr, void* painter, void* option, void* index);
void QItemDelegate_PaintDefault(void* ptr, void* painter, void* option, void* index);
void QItemDelegate_SetEditorData(void* ptr, void* editor, void* index);
void QItemDelegate_SetEditorDataDefault(void* ptr, void* editor, void* index);
void QItemDelegate_SetItemEditorFactory(void* ptr, void* factory);
void QItemDelegate_SetModelData(void* ptr, void* editor, void* model, void* index);
void QItemDelegate_SetModelDataDefault(void* ptr, void* editor, void* model, void* index);
void* QItemDelegate_SizeHint(void* ptr, void* option, void* index);
void* QItemDelegate_SizeHintDefault(void* ptr, void* option, void* index);
void QItemDelegate_UpdateEditorGeometry(void* ptr, void* editor, void* option, void* index);
void QItemDelegate_UpdateEditorGeometryDefault(void* ptr, void* editor, void* option, void* index);
void QItemDelegate_DestroyQItemDelegate(void* ptr);
void QItemDelegate_DestroyEditor(void* ptr, void* editor, void* index);
void QItemDelegate_DestroyEditorDefault(void* ptr, void* editor, void* index);
char QItemDelegate_HelpEvent(void* ptr, void* event, void* view, void* option, void* index);
char QItemDelegate_HelpEventDefault(void* ptr, void* event, void* view, void* option, void* index);
void QItemDelegate_TimerEvent(void* ptr, void* event);
void QItemDelegate_TimerEventDefault(void* ptr, void* event);
void QItemDelegate_ChildEvent(void* ptr, void* event);
void QItemDelegate_ChildEventDefault(void* ptr, void* event);
void QItemDelegate_ConnectNotify(void* ptr, void* sign);
void QItemDelegate_ConnectNotifyDefault(void* ptr, void* sign);
void QItemDelegate_CustomEvent(void* ptr, void* event);
void QItemDelegate_CustomEventDefault(void* ptr, void* event);
void QItemDelegate_DeleteLater(void* ptr);
void QItemDelegate_DeleteLaterDefault(void* ptr);
void QItemDelegate_DisconnectNotify(void* ptr, void* sign);
void QItemDelegate_DisconnectNotifyDefault(void* ptr, void* sign);
char QItemDelegate_Event(void* ptr, void* e);
char QItemDelegate_EventDefault(void* ptr, void* e);
void* QItemDelegate_MetaObject(void* ptr);
void* QItemDelegate_MetaObjectDefault(void* ptr);
void QItemEditorCreatorBase_DestroyQItemEditorCreatorBase(void* ptr);
void QItemEditorCreatorBase_DestroyQItemEditorCreatorBaseDefault(void* ptr);
void* QItemEditorCreatorBase_CreateWidget(void* ptr, void* parent);
void* QItemEditorCreatorBase_ValuePropertyName(void* ptr);
void* QItemEditorFactory_NewQItemEditorFactory();
void* QItemEditorFactory_CreateEditor(void* ptr, int userType, void* parent);
void* QItemEditorFactory_CreateEditorDefault(void* ptr, int userType, void* parent);
void* QItemEditorFactory_QItemEditorFactory_DefaultFactory();
void QItemEditorFactory_RegisterEditor(void* ptr, int userType, void* creator);
void QItemEditorFactory_QItemEditorFactory_SetDefaultFactory(void* factory);
void* QItemEditorFactory_ValuePropertyName(void* ptr, int userType);
void* QItemEditorFactory_ValuePropertyNameDefault(void* ptr, int userType);
void QItemEditorFactory_DestroyQItemEditorFactory(void* ptr);
void QItemEditorFactory_DestroyQItemEditorFactoryDefault(void* ptr);
void* QKeyEventTransition_NewQKeyEventTransition2(void* object, long long ty, int key, void* sourceState);
void* QKeyEventTransition_NewQKeyEventTransition(void* sourceState);
char QKeyEventTransition_EventTest(void* ptr, void* event);
int QKeyEventTransition_Key(void* ptr);
long long QKeyEventTransition_ModifierMask(void* ptr);
void QKeyEventTransition_OnTransition(void* ptr, void* event);
void QKeyEventTransition_SetKey(void* ptr, int key);
void QKeyEventTransition_SetModifierMask(void* ptr, long long modifierMask);
void QKeyEventTransition_DestroyQKeyEventTransition(void* ptr);
char QKeyEventTransition_Event(void* ptr, void* e);
char QKeyEventTransition_EventDefault(void* ptr, void* e);
void QKeyEventTransition_TimerEvent(void* ptr, void* event);
void QKeyEventTransition_TimerEventDefault(void* ptr, void* event);
void QKeyEventTransition_ChildEvent(void* ptr, void* event);
void QKeyEventTransition_ChildEventDefault(void* ptr, void* event);
void QKeyEventTransition_ConnectNotify(void* ptr, void* sign);
void QKeyEventTransition_ConnectNotifyDefault(void* ptr, void* sign);
void QKeyEventTransition_CustomEvent(void* ptr, void* event);
void QKeyEventTransition_CustomEventDefault(void* ptr, void* event);
void QKeyEventTransition_DeleteLater(void* ptr);
void QKeyEventTransition_DeleteLaterDefault(void* ptr);
void QKeyEventTransition_DisconnectNotify(void* ptr, void* sign);
void QKeyEventTransition_DisconnectNotifyDefault(void* ptr, void* sign);
char QKeyEventTransition_EventFilter(void* ptr, void* watched, void* event);
char QKeyEventTransition_EventFilterDefault(void* ptr, void* watched, void* event);
void* QKeyEventTransition_MetaObject(void* ptr);
void* QKeyEventTransition_MetaObjectDefault(void* ptr);
void* QKeySequenceEdit_KeySequence(void* ptr);
void QKeySequenceEdit_SetKeySequence(void* ptr, void* keySequence);
void* QKeySequenceEdit_NewQKeySequenceEdit(void* parent);
void* QKeySequenceEdit_NewQKeySequenceEdit2(void* keySequence, void* parent);
void QKeySequenceEdit_Clear(void* ptr);
void QKeySequenceEdit_ConnectEditingFinished(void* ptr);
void QKeySequenceEdit_DisconnectEditingFinished(void* ptr);
void QKeySequenceEdit_EditingFinished(void* ptr);
char QKeySequenceEdit_Event(void* ptr, void* e);
void QKeySequenceEdit_KeyPressEvent(void* ptr, void* e);
void QKeySequenceEdit_KeyPressEventDefault(void* ptr, void* e);
void QKeySequenceEdit_KeyReleaseEvent(void* ptr, void* e);
void QKeySequenceEdit_KeyReleaseEventDefault(void* ptr, void* e);
void QKeySequenceEdit_ConnectKeySequenceChanged(void* ptr);
void QKeySequenceEdit_DisconnectKeySequenceChanged(void* ptr);
void QKeySequenceEdit_KeySequenceChanged(void* ptr, void* keySequence);
void QKeySequenceEdit_TimerEvent(void* ptr, void* e);
void QKeySequenceEdit_DestroyQKeySequenceEdit(void* ptr);
void QKeySequenceEdit_ActionEvent(void* ptr, void* event);
void QKeySequenceEdit_ActionEventDefault(void* ptr, void* event);
void QKeySequenceEdit_DragEnterEvent(void* ptr, void* event);
void QKeySequenceEdit_DragEnterEventDefault(void* ptr, void* event);
void QKeySequenceEdit_DragLeaveEvent(void* ptr, void* event);
void QKeySequenceEdit_DragLeaveEventDefault(void* ptr, void* event);
void QKeySequenceEdit_DragMoveEvent(void* ptr, void* event);
void QKeySequenceEdit_DragMoveEventDefault(void* ptr, void* event);
void QKeySequenceEdit_DropEvent(void* ptr, void* event);
void QKeySequenceEdit_DropEventDefault(void* ptr, void* event);
void QKeySequenceEdit_EnterEvent(void* ptr, void* event);
void QKeySequenceEdit_EnterEventDefault(void* ptr, void* event);
void QKeySequenceEdit_FocusInEvent(void* ptr, void* event);
void QKeySequenceEdit_FocusInEventDefault(void* ptr, void* event);
void QKeySequenceEdit_FocusOutEvent(void* ptr, void* event);
void QKeySequenceEdit_FocusOutEventDefault(void* ptr, void* event);
void QKeySequenceEdit_HideEvent(void* ptr, void* event);
void QKeySequenceEdit_HideEventDefault(void* ptr, void* event);
void QKeySequenceEdit_LeaveEvent(void* ptr, void* event);
void QKeySequenceEdit_LeaveEventDefault(void* ptr, void* event);
void* QKeySequenceEdit_MinimumSizeHint(void* ptr);
void* QKeySequenceEdit_MinimumSizeHintDefault(void* ptr);
void QKeySequenceEdit_MoveEvent(void* ptr, void* event);
void QKeySequenceEdit_MoveEventDefault(void* ptr, void* event);
void QKeySequenceEdit_PaintEvent(void* ptr, void* event);
void QKeySequenceEdit_PaintEventDefault(void* ptr, void* event);
void QKeySequenceEdit_SetEnabled(void* ptr, char vbo);
void QKeySequenceEdit_SetEnabledDefault(void* ptr, char vbo);
void QKeySequenceEdit_SetStyleSheet(void* ptr, char* styleSheet);
void QKeySequenceEdit_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QKeySequenceEdit_SetVisible(void* ptr, char visible);
void QKeySequenceEdit_SetVisibleDefault(void* ptr, char visible);
void QKeySequenceEdit_SetWindowModified(void* ptr, char vbo);
void QKeySequenceEdit_SetWindowModifiedDefault(void* ptr, char vbo);
void QKeySequenceEdit_SetWindowTitle(void* ptr, char* vqs);
void QKeySequenceEdit_SetWindowTitleDefault(void* ptr, char* vqs);
void QKeySequenceEdit_ShowEvent(void* ptr, void* event);
void QKeySequenceEdit_ShowEventDefault(void* ptr, void* event);
void* QKeySequenceEdit_SizeHint(void* ptr);
void* QKeySequenceEdit_SizeHintDefault(void* ptr);
void QKeySequenceEdit_ChangeEvent(void* ptr, void* event);
void QKeySequenceEdit_ChangeEventDefault(void* ptr, void* event);
char QKeySequenceEdit_Close(void* ptr);
char QKeySequenceEdit_CloseDefault(void* ptr);
void QKeySequenceEdit_CloseEvent(void* ptr, void* event);
void QKeySequenceEdit_CloseEventDefault(void* ptr, void* event);
void QKeySequenceEdit_ContextMenuEvent(void* ptr, void* event);
void QKeySequenceEdit_ContextMenuEventDefault(void* ptr, void* event);
char QKeySequenceEdit_FocusNextPrevChild(void* ptr, char next);
char QKeySequenceEdit_FocusNextPrevChildDefault(void* ptr, char next);
char QKeySequenceEdit_HasHeightForWidth(void* ptr);
char QKeySequenceEdit_HasHeightForWidthDefault(void* ptr);
int QKeySequenceEdit_HeightForWidth(void* ptr, int w);
int QKeySequenceEdit_HeightForWidthDefault(void* ptr, int w);
void QKeySequenceEdit_Hide(void* ptr);
void QKeySequenceEdit_HideDefault(void* ptr);
void QKeySequenceEdit_InputMethodEvent(void* ptr, void* event);
void QKeySequenceEdit_InputMethodEventDefault(void* ptr, void* event);
void* QKeySequenceEdit_InputMethodQuery(void* ptr, long long query);
void* QKeySequenceEdit_InputMethodQueryDefault(void* ptr, long long query);
void QKeySequenceEdit_Lower(void* ptr);
void QKeySequenceEdit_LowerDefault(void* ptr);
void QKeySequenceEdit_MouseDoubleClickEvent(void* ptr, void* event);
void QKeySequenceEdit_MouseDoubleClickEventDefault(void* ptr, void* event);
void QKeySequenceEdit_MouseMoveEvent(void* ptr, void* event);
void QKeySequenceEdit_MouseMoveEventDefault(void* ptr, void* event);
void QKeySequenceEdit_MousePressEvent(void* ptr, void* event);
void QKeySequenceEdit_MousePressEventDefault(void* ptr, void* event);
void QKeySequenceEdit_MouseReleaseEvent(void* ptr, void* event);
void QKeySequenceEdit_MouseReleaseEventDefault(void* ptr, void* event);
char QKeySequenceEdit_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QKeySequenceEdit_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QKeySequenceEdit_Raise(void* ptr);
void QKeySequenceEdit_RaiseDefault(void* ptr);
void QKeySequenceEdit_Repaint(void* ptr);
void QKeySequenceEdit_RepaintDefault(void* ptr);
void QKeySequenceEdit_ResizeEvent(void* ptr, void* event);
void QKeySequenceEdit_ResizeEventDefault(void* ptr, void* event);
void QKeySequenceEdit_SetDisabled(void* ptr, char disable);
void QKeySequenceEdit_SetDisabledDefault(void* ptr, char disable);
void QKeySequenceEdit_SetFocus2(void* ptr);
void QKeySequenceEdit_SetFocus2Default(void* ptr);
void QKeySequenceEdit_SetHidden(void* ptr, char hidden);
void QKeySequenceEdit_SetHiddenDefault(void* ptr, char hidden);
void QKeySequenceEdit_Show(void* ptr);
void QKeySequenceEdit_ShowDefault(void* ptr);
void QKeySequenceEdit_ShowFullScreen(void* ptr);
void QKeySequenceEdit_ShowFullScreenDefault(void* ptr);
void QKeySequenceEdit_ShowMaximized(void* ptr);
void QKeySequenceEdit_ShowMaximizedDefault(void* ptr);
void QKeySequenceEdit_ShowMinimized(void* ptr);
void QKeySequenceEdit_ShowMinimizedDefault(void* ptr);
void QKeySequenceEdit_ShowNormal(void* ptr);
void QKeySequenceEdit_ShowNormalDefault(void* ptr);
void QKeySequenceEdit_TabletEvent(void* ptr, void* event);
void QKeySequenceEdit_TabletEventDefault(void* ptr, void* event);
void QKeySequenceEdit_Update(void* ptr);
void QKeySequenceEdit_UpdateDefault(void* ptr);
void QKeySequenceEdit_UpdateMicroFocus(void* ptr);
void QKeySequenceEdit_UpdateMicroFocusDefault(void* ptr);
void QKeySequenceEdit_WheelEvent(void* ptr, void* event);
void QKeySequenceEdit_WheelEventDefault(void* ptr, void* event);
void QKeySequenceEdit_ChildEvent(void* ptr, void* event);
void QKeySequenceEdit_ChildEventDefault(void* ptr, void* event);
void QKeySequenceEdit_ConnectNotify(void* ptr, void* sign);
void QKeySequenceEdit_ConnectNotifyDefault(void* ptr, void* sign);
void QKeySequenceEdit_CustomEvent(void* ptr, void* event);
void QKeySequenceEdit_CustomEventDefault(void* ptr, void* event);
void QKeySequenceEdit_DeleteLater(void* ptr);
void QKeySequenceEdit_DeleteLaterDefault(void* ptr);
void QKeySequenceEdit_DisconnectNotify(void* ptr, void* sign);
void QKeySequenceEdit_DisconnectNotifyDefault(void* ptr, void* sign);
char QKeySequenceEdit_EventFilter(void* ptr, void* watched, void* event);
char QKeySequenceEdit_EventFilterDefault(void* ptr, void* watched, void* event);
void* QKeySequenceEdit_MetaObject(void* ptr);
void* QKeySequenceEdit_MetaObjectDefault(void* ptr);
int QLCDNumber_IntValue(void* ptr);
long long QLCDNumber_Mode(void* ptr);
long long QLCDNumber_SegmentStyle(void* ptr);
void QLCDNumber_SetMode(void* ptr, long long vmo);
void QLCDNumber_SetSegmentStyle(void* ptr, long long vse);
void QLCDNumber_SetSmallDecimalPoint(void* ptr, char vbo);
char QLCDNumber_SmallDecimalPoint(void* ptr);
double QLCDNumber_Value(void* ptr);
void* QLCDNumber_NewQLCDNumber(void* parent);
void* QLCDNumber_NewQLCDNumber2(unsigned int numDigits, void* parent);
char QLCDNumber_CheckOverflow(void* ptr, double num);
char QLCDNumber_CheckOverflow2(void* ptr, int num);
int QLCDNumber_DigitCount(void* ptr);
void QLCDNumber_Display(void* ptr, char* s);
void QLCDNumber_Display3(void* ptr, double num);
void QLCDNumber_Display2(void* ptr, int num);
char QLCDNumber_Event(void* ptr, void* e);
void QLCDNumber_ConnectOverflow(void* ptr);
void QLCDNumber_DisconnectOverflow(void* ptr);
void QLCDNumber_Overflow(void* ptr);
void QLCDNumber_PaintEvent(void* ptr, void* vqp);
void QLCDNumber_PaintEventDefault(void* ptr, void* vqp);
void QLCDNumber_SetBinMode(void* ptr);
void QLCDNumber_SetDecMode(void* ptr);
void QLCDNumber_SetDigitCount(void* ptr, int numDigits);
void QLCDNumber_SetHexMode(void* ptr);
void QLCDNumber_SetOctMode(void* ptr);
void* QLCDNumber_SizeHint(void* ptr);
void* QLCDNumber_SizeHintDefault(void* ptr);
void QLCDNumber_DestroyQLCDNumber(void* ptr);
void QLCDNumber_ChangeEvent(void* ptr, void* ev);
void QLCDNumber_ChangeEventDefault(void* ptr, void* ev);
void QLCDNumber_ActionEvent(void* ptr, void* event);
void QLCDNumber_ActionEventDefault(void* ptr, void* event);
void QLCDNumber_DragEnterEvent(void* ptr, void* event);
void QLCDNumber_DragEnterEventDefault(void* ptr, void* event);
void QLCDNumber_DragLeaveEvent(void* ptr, void* event);
void QLCDNumber_DragLeaveEventDefault(void* ptr, void* event);
void QLCDNumber_DragMoveEvent(void* ptr, void* event);
void QLCDNumber_DragMoveEventDefault(void* ptr, void* event);
void QLCDNumber_DropEvent(void* ptr, void* event);
void QLCDNumber_DropEventDefault(void* ptr, void* event);
void QLCDNumber_EnterEvent(void* ptr, void* event);
void QLCDNumber_EnterEventDefault(void* ptr, void* event);
void QLCDNumber_FocusInEvent(void* ptr, void* event);
void QLCDNumber_FocusInEventDefault(void* ptr, void* event);
void QLCDNumber_FocusOutEvent(void* ptr, void* event);
void QLCDNumber_FocusOutEventDefault(void* ptr, void* event);
void QLCDNumber_HideEvent(void* ptr, void* event);
void QLCDNumber_HideEventDefault(void* ptr, void* event);
void QLCDNumber_LeaveEvent(void* ptr, void* event);
void QLCDNumber_LeaveEventDefault(void* ptr, void* event);
void* QLCDNumber_MinimumSizeHint(void* ptr);
void* QLCDNumber_MinimumSizeHintDefault(void* ptr);
void QLCDNumber_MoveEvent(void* ptr, void* event);
void QLCDNumber_MoveEventDefault(void* ptr, void* event);
void QLCDNumber_SetEnabled(void* ptr, char vbo);
void QLCDNumber_SetEnabledDefault(void* ptr, char vbo);
void QLCDNumber_SetStyleSheet(void* ptr, char* styleSheet);
void QLCDNumber_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QLCDNumber_SetVisible(void* ptr, char visible);
void QLCDNumber_SetVisibleDefault(void* ptr, char visible);
void QLCDNumber_SetWindowModified(void* ptr, char vbo);
void QLCDNumber_SetWindowModifiedDefault(void* ptr, char vbo);
void QLCDNumber_SetWindowTitle(void* ptr, char* vqs);
void QLCDNumber_SetWindowTitleDefault(void* ptr, char* vqs);
void QLCDNumber_ShowEvent(void* ptr, void* event);
void QLCDNumber_ShowEventDefault(void* ptr, void* event);
char QLCDNumber_Close(void* ptr);
char QLCDNumber_CloseDefault(void* ptr);
void QLCDNumber_CloseEvent(void* ptr, void* event);
void QLCDNumber_CloseEventDefault(void* ptr, void* event);
void QLCDNumber_ContextMenuEvent(void* ptr, void* event);
void QLCDNumber_ContextMenuEventDefault(void* ptr, void* event);
char QLCDNumber_FocusNextPrevChild(void* ptr, char next);
char QLCDNumber_FocusNextPrevChildDefault(void* ptr, char next);
char QLCDNumber_HasHeightForWidth(void* ptr);
char QLCDNumber_HasHeightForWidthDefault(void* ptr);
int QLCDNumber_HeightForWidth(void* ptr, int w);
int QLCDNumber_HeightForWidthDefault(void* ptr, int w);
void QLCDNumber_Hide(void* ptr);
void QLCDNumber_HideDefault(void* ptr);
void QLCDNumber_InputMethodEvent(void* ptr, void* event);
void QLCDNumber_InputMethodEventDefault(void* ptr, void* event);
void* QLCDNumber_InputMethodQuery(void* ptr, long long query);
void* QLCDNumber_InputMethodQueryDefault(void* ptr, long long query);
void QLCDNumber_KeyPressEvent(void* ptr, void* event);
void QLCDNumber_KeyPressEventDefault(void* ptr, void* event);
void QLCDNumber_KeyReleaseEvent(void* ptr, void* event);
void QLCDNumber_KeyReleaseEventDefault(void* ptr, void* event);
void QLCDNumber_Lower(void* ptr);
void QLCDNumber_LowerDefault(void* ptr);
void QLCDNumber_MouseDoubleClickEvent(void* ptr, void* event);
void QLCDNumber_MouseDoubleClickEventDefault(void* ptr, void* event);
void QLCDNumber_MouseMoveEvent(void* ptr, void* event);
void QLCDNumber_MouseMoveEventDefault(void* ptr, void* event);
void QLCDNumber_MousePressEvent(void* ptr, void* event);
void QLCDNumber_MousePressEventDefault(void* ptr, void* event);
void QLCDNumber_MouseReleaseEvent(void* ptr, void* event);
void QLCDNumber_MouseReleaseEventDefault(void* ptr, void* event);
char QLCDNumber_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QLCDNumber_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QLCDNumber_Raise(void* ptr);
void QLCDNumber_RaiseDefault(void* ptr);
void QLCDNumber_Repaint(void* ptr);
void QLCDNumber_RepaintDefault(void* ptr);
void QLCDNumber_ResizeEvent(void* ptr, void* event);
void QLCDNumber_ResizeEventDefault(void* ptr, void* event);
void QLCDNumber_SetDisabled(void* ptr, char disable);
void QLCDNumber_SetDisabledDefault(void* ptr, char disable);
void QLCDNumber_SetFocus2(void* ptr);
void QLCDNumber_SetFocus2Default(void* ptr);
void QLCDNumber_SetHidden(void* ptr, char hidden);
void QLCDNumber_SetHiddenDefault(void* ptr, char hidden);
void QLCDNumber_Show(void* ptr);
void QLCDNumber_ShowDefault(void* ptr);
void QLCDNumber_ShowFullScreen(void* ptr);
void QLCDNumber_ShowFullScreenDefault(void* ptr);
void QLCDNumber_ShowMaximized(void* ptr);
void QLCDNumber_ShowMaximizedDefault(void* ptr);
void QLCDNumber_ShowMinimized(void* ptr);
void QLCDNumber_ShowMinimizedDefault(void* ptr);
void QLCDNumber_ShowNormal(void* ptr);
void QLCDNumber_ShowNormalDefault(void* ptr);
void QLCDNumber_TabletEvent(void* ptr, void* event);
void QLCDNumber_TabletEventDefault(void* ptr, void* event);
void QLCDNumber_Update(void* ptr);
void QLCDNumber_UpdateDefault(void* ptr);
void QLCDNumber_UpdateMicroFocus(void* ptr);
void QLCDNumber_UpdateMicroFocusDefault(void* ptr);
void QLCDNumber_WheelEvent(void* ptr, void* event);
void QLCDNumber_WheelEventDefault(void* ptr, void* event);
void QLCDNumber_TimerEvent(void* ptr, void* event);
void QLCDNumber_TimerEventDefault(void* ptr, void* event);
void QLCDNumber_ChildEvent(void* ptr, void* event);
void QLCDNumber_ChildEventDefault(void* ptr, void* event);
void QLCDNumber_ConnectNotify(void* ptr, void* sign);
void QLCDNumber_ConnectNotifyDefault(void* ptr, void* sign);
void QLCDNumber_CustomEvent(void* ptr, void* event);
void QLCDNumber_CustomEventDefault(void* ptr, void* event);
void QLCDNumber_DeleteLater(void* ptr);
void QLCDNumber_DeleteLaterDefault(void* ptr);
void QLCDNumber_DisconnectNotify(void* ptr, void* sign);
void QLCDNumber_DisconnectNotifyDefault(void* ptr, void* sign);
char QLCDNumber_EventFilter(void* ptr, void* watched, void* event);
char QLCDNumber_EventFilterDefault(void* ptr, void* watched, void* event);
void* QLCDNumber_MetaObject(void* ptr);
void* QLCDNumber_MetaObjectDefault(void* ptr);
long long QLabel_Alignment(void* ptr);
char QLabel_HasScaledContents(void* ptr);
char QLabel_HasSelectedText(void* ptr);
int QLabel_Indent(void* ptr);
int QLabel_Margin(void* ptr);
char QLabel_OpenExternalLinks(void* ptr);
void* QLabel_Pixmap(void* ptr);
struct QtWidgets_PackedString QLabel_SelectedText(void* ptr);
void QLabel_SetAlignment(void* ptr, long long vqt);
void QLabel_SetIndent(void* ptr, int vin);
void QLabel_SetMargin(void* ptr, int vin);
void QLabel_SetOpenExternalLinks(void* ptr, char open);
void QLabel_SetPixmap(void* ptr, void* vqp);
void QLabel_SetScaledContents(void* ptr, char vbo);
void QLabel_SetText(void* ptr, char* vqs);
void QLabel_SetTextFormat(void* ptr, long long vqt);
void QLabel_SetTextInteractionFlags(void* ptr, long long flags);
void QLabel_SetWordWrap(void* ptr, char on);
struct QtWidgets_PackedString QLabel_Text(void* ptr);
long long QLabel_TextFormat(void* ptr);
long long QLabel_TextInteractionFlags(void* ptr);
char QLabel_WordWrap(void* ptr);
void* QLabel_NewQLabel(void* parent, long long f);
void* QLabel_NewQLabel2(char* text, void* parent, long long f);
void* QLabel_Buddy(void* ptr);
void QLabel_ChangeEvent(void* ptr, void* ev);
void QLabel_ChangeEventDefault(void* ptr, void* ev);
void QLabel_Clear(void* ptr);
void QLabel_ContextMenuEvent(void* ptr, void* ev);
void QLabel_ContextMenuEventDefault(void* ptr, void* ev);
char QLabel_Event(void* ptr, void* e);
void QLabel_FocusInEvent(void* ptr, void* ev);
void QLabel_FocusInEventDefault(void* ptr, void* ev);
char QLabel_FocusNextPrevChild(void* ptr, char next);
char QLabel_FocusNextPrevChildDefault(void* ptr, char next);
void QLabel_FocusOutEvent(void* ptr, void* ev);
void QLabel_FocusOutEventDefault(void* ptr, void* ev);
int QLabel_HeightForWidth(void* ptr, int w);
int QLabel_HeightForWidthDefault(void* ptr, int w);
void QLabel_KeyPressEvent(void* ptr, void* ev);
void QLabel_KeyPressEventDefault(void* ptr, void* ev);
void QLabel_ConnectLinkActivated(void* ptr);
void QLabel_DisconnectLinkActivated(void* ptr);
void QLabel_LinkActivated(void* ptr, char* link);
void QLabel_ConnectLinkHovered(void* ptr);
void QLabel_DisconnectLinkHovered(void* ptr);
void QLabel_LinkHovered(void* ptr, char* link);
void* QLabel_MinimumSizeHint(void* ptr);
void* QLabel_MinimumSizeHintDefault(void* ptr);
void QLabel_MouseMoveEvent(void* ptr, void* ev);
void QLabel_MouseMoveEventDefault(void* ptr, void* ev);
void QLabel_MousePressEvent(void* ptr, void* ev);
void QLabel_MousePressEventDefault(void* ptr, void* ev);
void QLabel_MouseReleaseEvent(void* ptr, void* ev);
void QLabel_MouseReleaseEventDefault(void* ptr, void* ev);
void* QLabel_Movie(void* ptr);
void QLabel_PaintEvent(void* ptr, void* vqp);
void QLabel_PaintEventDefault(void* ptr, void* vqp);
void* QLabel_Picture(void* ptr);
int QLabel_SelectionStart(void* ptr);
void QLabel_SetBuddy(void* ptr, void* buddy);
void QLabel_SetMovie(void* ptr, void* movie);
void QLabel_SetNum2(void* ptr, double num);
void QLabel_SetNum(void* ptr, int num);
void QLabel_SetPicture(void* ptr, void* picture);
void QLabel_SetSelection(void* ptr, int start, int length);
void* QLabel_SizeHint(void* ptr);
void* QLabel_SizeHintDefault(void* ptr);
void QLabel_DestroyQLabel(void* ptr);
void QLabel_ActionEvent(void* ptr, void* event);
void QLabel_ActionEventDefault(void* ptr, void* event);
void QLabel_DragEnterEvent(void* ptr, void* event);
void QLabel_DragEnterEventDefault(void* ptr, void* event);
void QLabel_DragLeaveEvent(void* ptr, void* event);
void QLabel_DragLeaveEventDefault(void* ptr, void* event);
void QLabel_DragMoveEvent(void* ptr, void* event);
void QLabel_DragMoveEventDefault(void* ptr, void* event);
void QLabel_DropEvent(void* ptr, void* event);
void QLabel_DropEventDefault(void* ptr, void* event);
void QLabel_EnterEvent(void* ptr, void* event);
void QLabel_EnterEventDefault(void* ptr, void* event);
void QLabel_HideEvent(void* ptr, void* event);
void QLabel_HideEventDefault(void* ptr, void* event);
void QLabel_LeaveEvent(void* ptr, void* event);
void QLabel_LeaveEventDefault(void* ptr, void* event);
void QLabel_MoveEvent(void* ptr, void* event);
void QLabel_MoveEventDefault(void* ptr, void* event);
void QLabel_SetEnabled(void* ptr, char vbo);
void QLabel_SetEnabledDefault(void* ptr, char vbo);
void QLabel_SetStyleSheet(void* ptr, char* styleSheet);
void QLabel_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QLabel_SetVisible(void* ptr, char visible);
void QLabel_SetVisibleDefault(void* ptr, char visible);
void QLabel_SetWindowModified(void* ptr, char vbo);
void QLabel_SetWindowModifiedDefault(void* ptr, char vbo);
void QLabel_SetWindowTitle(void* ptr, char* vqs);
void QLabel_SetWindowTitleDefault(void* ptr, char* vqs);
void QLabel_ShowEvent(void* ptr, void* event);
void QLabel_ShowEventDefault(void* ptr, void* event);
char QLabel_Close(void* ptr);
char QLabel_CloseDefault(void* ptr);
void QLabel_CloseEvent(void* ptr, void* event);
void QLabel_CloseEventDefault(void* ptr, void* event);
char QLabel_HasHeightForWidth(void* ptr);
char QLabel_HasHeightForWidthDefault(void* ptr);
void QLabel_Hide(void* ptr);
void QLabel_HideDefault(void* ptr);
void QLabel_InputMethodEvent(void* ptr, void* event);
void QLabel_InputMethodEventDefault(void* ptr, void* event);
void* QLabel_InputMethodQuery(void* ptr, long long query);
void* QLabel_InputMethodQueryDefault(void* ptr, long long query);
void QLabel_KeyReleaseEvent(void* ptr, void* event);
void QLabel_KeyReleaseEventDefault(void* ptr, void* event);
void QLabel_Lower(void* ptr);
void QLabel_LowerDefault(void* ptr);
void QLabel_MouseDoubleClickEvent(void* ptr, void* event);
void QLabel_MouseDoubleClickEventDefault(void* ptr, void* event);
char QLabel_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QLabel_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QLabel_Raise(void* ptr);
void QLabel_RaiseDefault(void* ptr);
void QLabel_Repaint(void* ptr);
void QLabel_RepaintDefault(void* ptr);
void QLabel_ResizeEvent(void* ptr, void* event);
void QLabel_ResizeEventDefault(void* ptr, void* event);
void QLabel_SetDisabled(void* ptr, char disable);
void QLabel_SetDisabledDefault(void* ptr, char disable);
void QLabel_SetFocus2(void* ptr);
void QLabel_SetFocus2Default(void* ptr);
void QLabel_SetHidden(void* ptr, char hidden);
void QLabel_SetHiddenDefault(void* ptr, char hidden);
void QLabel_Show(void* ptr);
void QLabel_ShowDefault(void* ptr);
void QLabel_ShowFullScreen(void* ptr);
void QLabel_ShowFullScreenDefault(void* ptr);
void QLabel_ShowMaximized(void* ptr);
void QLabel_ShowMaximizedDefault(void* ptr);
void QLabel_ShowMinimized(void* ptr);
void QLabel_ShowMinimizedDefault(void* ptr);
void QLabel_ShowNormal(void* ptr);
void QLabel_ShowNormalDefault(void* ptr);
void QLabel_TabletEvent(void* ptr, void* event);
void QLabel_TabletEventDefault(void* ptr, void* event);
void QLabel_Update(void* ptr);
void QLabel_UpdateDefault(void* ptr);
void QLabel_UpdateMicroFocus(void* ptr);
void QLabel_UpdateMicroFocusDefault(void* ptr);
void QLabel_WheelEvent(void* ptr, void* event);
void QLabel_WheelEventDefault(void* ptr, void* event);
void QLabel_TimerEvent(void* ptr, void* event);
void QLabel_TimerEventDefault(void* ptr, void* event);
void QLabel_ChildEvent(void* ptr, void* event);
void QLabel_ChildEventDefault(void* ptr, void* event);
void QLabel_ConnectNotify(void* ptr, void* sign);
void QLabel_ConnectNotifyDefault(void* ptr, void* sign);
void QLabel_CustomEvent(void* ptr, void* event);
void QLabel_CustomEventDefault(void* ptr, void* event);
void QLabel_DeleteLater(void* ptr);
void QLabel_DeleteLaterDefault(void* ptr);
void QLabel_DisconnectNotify(void* ptr, void* sign);
void QLabel_DisconnectNotifyDefault(void* ptr, void* sign);
char QLabel_EventFilter(void* ptr, void* watched, void* event);
char QLabel_EventFilterDefault(void* ptr, void* watched, void* event);
void* QLabel_MetaObject(void* ptr);
void* QLabel_MetaObjectDefault(void* ptr);
void QLayout_SetSizeConstraint(void* ptr, long long vsi);
void QLayout_SetSpacing(void* ptr, int vin);
long long QLayout_SizeConstraint(void* ptr);
int QLayout_Spacing(void* ptr);
void* QLayout_NewQLayout2();
void* QLayout_NewQLayout(void* parent);
char QLayout_Activate(void* ptr);
void QLayout_AddChildLayout(void* ptr, void* l);
void QLayout_AddChildWidget(void* ptr, void* w);
void QLayout_AddItem(void* ptr, void* item);
void QLayout_AddWidget(void* ptr, void* w);
void* QLayout_AlignmentRect(void* ptr, void* r);
void QLayout_ChildEvent(void* ptr, void* e);
void* QLayout_QLayout_ClosestAcceptableSize(void* widget, void* size);
void* QLayout_ContentsMargins(void* ptr);
void* QLayout_ContentsRect(void* ptr);
long long QLayout_ControlTypes(void* ptr);
long long QLayout_ControlTypesDefault(void* ptr);
int QLayout_Count(void* ptr);
long long QLayout_ExpandingDirections(void* ptr);
long long QLayout_ExpandingDirectionsDefault(void* ptr);
void* QLayout_Geometry(void* ptr);
void* QLayout_GeometryDefault(void* ptr);
void QLayout_GetContentsMargins(void* ptr, int left, int top, int right, int bottom);
int QLayout_IndexOf(void* ptr, void* widget);
int QLayout_IndexOfDefault(void* ptr, void* widget);
void QLayout_Invalidate(void* ptr);
void QLayout_InvalidateDefault(void* ptr);
char QLayout_IsEmpty(void* ptr);
char QLayout_IsEmptyDefault(void* ptr);
char QLayout_IsEnabled(void* ptr);
void* QLayout_ItemAt(void* ptr, int index);
void* QLayout_Layout(void* ptr);
void* QLayout_LayoutDefault(void* ptr);
void* QLayout_MaximumSize(void* ptr);
void* QLayout_MaximumSizeDefault(void* ptr);
void* QLayout_MenuBar(void* ptr);
void* QLayout_MinimumSize(void* ptr);
void* QLayout_MinimumSizeDefault(void* ptr);
void* QLayout_ParentWidget(void* ptr);
void QLayout_RemoveItem(void* ptr, void* item);
void QLayout_RemoveWidget(void* ptr, void* widget);
void* QLayout_ReplaceWidget(void* ptr, void* from, void* to, long long options);
char QLayout_SetAlignment2(void* ptr, void* l, long long alignment);
char QLayout_SetAlignment(void* ptr, void* w, long long alignment);
void QLayout_SetContentsMargins2(void* ptr, void* margins);
void QLayout_SetContentsMargins(void* ptr, int left, int top, int right, int bottom);
void QLayout_SetEnabled(void* ptr, char enable);
void QLayout_SetGeometry(void* ptr, void* r);
void QLayout_SetGeometryDefault(void* ptr, void* r);
void QLayout_SetMenuBar(void* ptr, void* widget);
void* QLayout_TakeAt(void* ptr, int index);
void QLayout_Update(void* ptr);
void QLayout_TimerEvent(void* ptr, void* event);
void QLayout_TimerEventDefault(void* ptr, void* event);
void QLayout_ConnectNotify(void* ptr, void* sign);
void QLayout_ConnectNotifyDefault(void* ptr, void* sign);
void QLayout_CustomEvent(void* ptr, void* event);
void QLayout_CustomEventDefault(void* ptr, void* event);
void QLayout_DeleteLater(void* ptr);
void QLayout_DeleteLaterDefault(void* ptr);
void QLayout_DisconnectNotify(void* ptr, void* sign);
void QLayout_DisconnectNotifyDefault(void* ptr, void* sign);
char QLayout_Event(void* ptr, void* e);
char QLayout_EventDefault(void* ptr, void* e);
char QLayout_EventFilter(void* ptr, void* watched, void* event);
char QLayout_EventFilterDefault(void* ptr, void* watched, void* event);
void* QLayout_MetaObject(void* ptr);
void* QLayout_MetaObjectDefault(void* ptr);
char QLayout_HasHeightForWidth(void* ptr);
char QLayout_HasHeightForWidthDefault(void* ptr);
int QLayout_HeightForWidth(void* ptr, int w);
int QLayout_HeightForWidthDefault(void* ptr, int w);
int QLayout_MinimumHeightForWidth(void* ptr, int w);
int QLayout_MinimumHeightForWidthDefault(void* ptr, int w);
void* QLayout_SizeHint(void* ptr);
;
void* QLayout_SpacerItem(void* ptr);
void* QLayout_SpacerItemDefault(void* ptr);
void* QLayout_Widget(void* ptr);
void* QLayout_WidgetDefault(void* ptr);
void* QLayoutItem_NewQLayoutItem(long long alignment);
long long QLayoutItem_Alignment(void* ptr);
long long QLayoutItem_ControlTypes(void* ptr);
long long QLayoutItem_ControlTypesDefault(void* ptr);
long long QLayoutItem_ExpandingDirections(void* ptr);
void* QLayoutItem_Geometry(void* ptr);
char QLayoutItem_HasHeightForWidth(void* ptr);
char QLayoutItem_HasHeightForWidthDefault(void* ptr);
int QLayoutItem_HeightForWidth(void* ptr, int w);
int QLayoutItem_HeightForWidthDefault(void* ptr, int w);
void QLayoutItem_Invalidate(void* ptr);
void QLayoutItem_InvalidateDefault(void* ptr);
char QLayoutItem_IsEmpty(void* ptr);
void* QLayoutItem_Layout(void* ptr);
void* QLayoutItem_LayoutDefault(void* ptr);
void* QLayoutItem_MaximumSize(void* ptr);
int QLayoutItem_MinimumHeightForWidth(void* ptr, int w);
int QLayoutItem_MinimumHeightForWidthDefault(void* ptr, int w);
void* QLayoutItem_MinimumSize(void* ptr);
void QLayoutItem_SetAlignment(void* ptr, long long alignment);
void QLayoutItem_SetGeometry(void* ptr, void* r);
void* QLayoutItem_SizeHint(void* ptr);
void* QLayoutItem_SpacerItem(void* ptr);
void* QLayoutItem_SpacerItemDefault(void* ptr);
void* QLayoutItem_Widget(void* ptr);
void* QLayoutItem_WidgetDefault(void* ptr);
void QLayoutItem_DestroyQLayoutItem(void* ptr);
void QLayoutItem_DestroyQLayoutItemDefault(void* ptr);
long long QLayoutItem_Align(void* ptr);
void QLayoutItem_SetAlign(void* ptr, long long vqt);
long long QLineEdit_Alignment(void* ptr);
long long QLineEdit_CursorMoveStyle(void* ptr);
int QLineEdit_CursorPosition(void* ptr);
struct QtWidgets_PackedString QLineEdit_DisplayText(void* ptr);
char QLineEdit_DragEnabled(void* ptr);
long long QLineEdit_EchoMode(void* ptr);
char QLineEdit_HasAcceptableInput(void* ptr);
char QLineEdit_HasFrame(void* ptr);
char QLineEdit_HasSelectedText(void* ptr);
struct QtWidgets_PackedString QLineEdit_InputMask(void* ptr);
char QLineEdit_IsClearButtonEnabled(void* ptr);
char QLineEdit_IsModified(void* ptr);
char QLineEdit_IsReadOnly(void* ptr);
char QLineEdit_IsRedoAvailable(void* ptr);
char QLineEdit_IsUndoAvailable(void* ptr);
int QLineEdit_MaxLength(void* ptr);
struct QtWidgets_PackedString QLineEdit_PlaceholderText(void* ptr);
struct QtWidgets_PackedString QLineEdit_SelectedText(void* ptr);
void QLineEdit_SetAlignment(void* ptr, long long flag);
void QLineEdit_SetClearButtonEnabled(void* ptr, char enable);
void QLineEdit_SetCursorMoveStyle(void* ptr, long long style);
void QLineEdit_SetCursorPosition(void* ptr, int vin);
void QLineEdit_SetDragEnabled(void* ptr, char b);
void QLineEdit_SetEchoMode(void* ptr, long long vec);
void QLineEdit_SetFrame(void* ptr, char vbo);
void QLineEdit_SetInputMask(void* ptr, char* inputMask);
void QLineEdit_SetMaxLength(void* ptr, int vin);
void QLineEdit_SetModified(void* ptr, char vbo);
void QLineEdit_SetPlaceholderText(void* ptr, char* vqs);
void QLineEdit_SetReadOnly(void* ptr, char vbo);
void QLineEdit_SetText(void* ptr, char* vqs);
struct QtWidgets_PackedString QLineEdit_Text(void* ptr);
void* QLineEdit_NewQLineEdit(void* parent);
void* QLineEdit_NewQLineEdit2(char* contents, void* parent);
void* QLineEdit_AddAction2(void* ptr, void* icon, long long position);
void QLineEdit_AddAction(void* ptr, void* action, long long position);
void QLineEdit_Backspace(void* ptr);
void QLineEdit_ChangeEvent(void* ptr, void* ev);
void QLineEdit_ChangeEventDefault(void* ptr, void* ev);
void QLineEdit_Clear(void* ptr);
void* QLineEdit_Completer(void* ptr);
void QLineEdit_ContextMenuEvent(void* ptr, void* event);
void QLineEdit_ContextMenuEventDefault(void* ptr, void* event);
void QLineEdit_Copy(void* ptr);
void* QLineEdit_CreateStandardContextMenu(void* ptr);
void QLineEdit_CursorBackward(void* ptr, char mark, int steps);
void QLineEdit_CursorForward(void* ptr, char mark, int steps);
int QLineEdit_CursorPositionAt(void* ptr, void* pos);
void QLineEdit_ConnectCursorPositionChanged(void* ptr);
void QLineEdit_DisconnectCursorPositionChanged(void* ptr);
void QLineEdit_CursorPositionChanged(void* ptr, int old, int n);
void* QLineEdit_CursorRect(void* ptr);
void QLineEdit_CursorWordBackward(void* ptr, char mark);
void QLineEdit_CursorWordForward(void* ptr, char mark);
void QLineEdit_Cut(void* ptr);
void QLineEdit_Del(void* ptr);
void QLineEdit_Deselect(void* ptr);
void QLineEdit_DragEnterEvent(void* ptr, void* e);
void QLineEdit_DragEnterEventDefault(void* ptr, void* e);
void QLineEdit_DragLeaveEvent(void* ptr, void* e);
void QLineEdit_DragLeaveEventDefault(void* ptr, void* e);
void QLineEdit_DragMoveEvent(void* ptr, void* e);
void QLineEdit_DragMoveEventDefault(void* ptr, void* e);
void QLineEdit_DropEvent(void* ptr, void* e);
void QLineEdit_DropEventDefault(void* ptr, void* e);
void QLineEdit_ConnectEditingFinished(void* ptr);
void QLineEdit_DisconnectEditingFinished(void* ptr);
void QLineEdit_EditingFinished(void* ptr);
void QLineEdit_End(void* ptr, char mark);
char QLineEdit_Event(void* ptr, void* e);
void QLineEdit_FocusInEvent(void* ptr, void* e);
void QLineEdit_FocusInEventDefault(void* ptr, void* e);
void QLineEdit_FocusOutEvent(void* ptr, void* e);
void QLineEdit_FocusOutEventDefault(void* ptr, void* e);
void QLineEdit_GetTextMargins(void* ptr, int left, int top, int right, int bottom);
void QLineEdit_Home(void* ptr, char mark);
void QLineEdit_InitStyleOption(void* ptr, void* option);
void QLineEdit_InputMethodEvent(void* ptr, void* e);
void QLineEdit_InputMethodEventDefault(void* ptr, void* e);
void* QLineEdit_InputMethodQuery(void* ptr, long long property);
void* QLineEdit_InputMethodQueryDefault(void* ptr, long long property);
void QLineEdit_Insert(void* ptr, char* newText);
void QLineEdit_KeyPressEvent(void* ptr, void* event);
void QLineEdit_KeyPressEventDefault(void* ptr, void* event);
void* QLineEdit_MinimumSizeHint(void* ptr);
void* QLineEdit_MinimumSizeHintDefault(void* ptr);
void QLineEdit_MouseDoubleClickEvent(void* ptr, void* e);
void QLineEdit_MouseDoubleClickEventDefault(void* ptr, void* e);
void QLineEdit_MouseMoveEvent(void* ptr, void* e);
void QLineEdit_MouseMoveEventDefault(void* ptr, void* e);
void QLineEdit_MousePressEvent(void* ptr, void* e);
void QLineEdit_MousePressEventDefault(void* ptr, void* e);
void QLineEdit_MouseReleaseEvent(void* ptr, void* e);
void QLineEdit_MouseReleaseEventDefault(void* ptr, void* e);
void QLineEdit_PaintEvent(void* ptr, void* vqp);
void QLineEdit_PaintEventDefault(void* ptr, void* vqp);
void QLineEdit_Paste(void* ptr);
void QLineEdit_Redo(void* ptr);
void QLineEdit_ConnectReturnPressed(void* ptr);
void QLineEdit_DisconnectReturnPressed(void* ptr);
void QLineEdit_ReturnPressed(void* ptr);
void QLineEdit_SelectAll(void* ptr);
void QLineEdit_ConnectSelectionChanged(void* ptr);
void QLineEdit_DisconnectSelectionChanged(void* ptr);
void QLineEdit_SelectionChanged(void* ptr);
int QLineEdit_SelectionStart(void* ptr);
void QLineEdit_SetCompleter(void* ptr, void* c);
void QLineEdit_SetSelection(void* ptr, int start, int length);
void QLineEdit_SetTextMargins2(void* ptr, void* margins);
void QLineEdit_SetTextMargins(void* ptr, int left, int top, int right, int bottom);
void QLineEdit_SetValidator(void* ptr, void* v);
void* QLineEdit_SizeHint(void* ptr);
void* QLineEdit_SizeHintDefault(void* ptr);
void QLineEdit_ConnectTextChanged(void* ptr);
void QLineEdit_DisconnectTextChanged(void* ptr);
void QLineEdit_TextChanged(void* ptr, char* text);
void QLineEdit_ConnectTextEdited(void* ptr);
void QLineEdit_DisconnectTextEdited(void* ptr);
void QLineEdit_TextEdited(void* ptr, char* text);
void* QLineEdit_TextMargins(void* ptr);
void QLineEdit_Undo(void* ptr);
void* QLineEdit_Validator(void* ptr);
void QLineEdit_DestroyQLineEdit(void* ptr);
void QLineEdit_ActionEvent(void* ptr, void* event);
void QLineEdit_ActionEventDefault(void* ptr, void* event);
void QLineEdit_EnterEvent(void* ptr, void* event);
void QLineEdit_EnterEventDefault(void* ptr, void* event);
void QLineEdit_HideEvent(void* ptr, void* event);
void QLineEdit_HideEventDefault(void* ptr, void* event);
void QLineEdit_LeaveEvent(void* ptr, void* event);
void QLineEdit_LeaveEventDefault(void* ptr, void* event);
void QLineEdit_MoveEvent(void* ptr, void* event);
void QLineEdit_MoveEventDefault(void* ptr, void* event);
void QLineEdit_SetEnabled(void* ptr, char vbo);
void QLineEdit_SetEnabledDefault(void* ptr, char vbo);
void QLineEdit_SetStyleSheet(void* ptr, char* styleSheet);
void QLineEdit_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QLineEdit_SetVisible(void* ptr, char visible);
void QLineEdit_SetVisibleDefault(void* ptr, char visible);
void QLineEdit_SetWindowModified(void* ptr, char vbo);
void QLineEdit_SetWindowModifiedDefault(void* ptr, char vbo);
void QLineEdit_SetWindowTitle(void* ptr, char* vqs);
void QLineEdit_SetWindowTitleDefault(void* ptr, char* vqs);
void QLineEdit_ShowEvent(void* ptr, void* event);
void QLineEdit_ShowEventDefault(void* ptr, void* event);
char QLineEdit_Close(void* ptr);
char QLineEdit_CloseDefault(void* ptr);
void QLineEdit_CloseEvent(void* ptr, void* event);
void QLineEdit_CloseEventDefault(void* ptr, void* event);
char QLineEdit_FocusNextPrevChild(void* ptr, char next);
char QLineEdit_FocusNextPrevChildDefault(void* ptr, char next);
char QLineEdit_HasHeightForWidth(void* ptr);
char QLineEdit_HasHeightForWidthDefault(void* ptr);
int QLineEdit_HeightForWidth(void* ptr, int w);
int QLineEdit_HeightForWidthDefault(void* ptr, int w);
void QLineEdit_Hide(void* ptr);
void QLineEdit_HideDefault(void* ptr);
void QLineEdit_KeyReleaseEvent(void* ptr, void* event);
void QLineEdit_KeyReleaseEventDefault(void* ptr, void* event);
void QLineEdit_Lower(void* ptr);
void QLineEdit_LowerDefault(void* ptr);
char QLineEdit_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QLineEdit_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QLineEdit_Raise(void* ptr);
void QLineEdit_RaiseDefault(void* ptr);
void QLineEdit_Repaint(void* ptr);
void QLineEdit_RepaintDefault(void* ptr);
void QLineEdit_ResizeEvent(void* ptr, void* event);
void QLineEdit_ResizeEventDefault(void* ptr, void* event);
void QLineEdit_SetDisabled(void* ptr, char disable);
void QLineEdit_SetDisabledDefault(void* ptr, char disable);
void QLineEdit_SetFocus2(void* ptr);
void QLineEdit_SetFocus2Default(void* ptr);
void QLineEdit_SetHidden(void* ptr, char hidden);
void QLineEdit_SetHiddenDefault(void* ptr, char hidden);
void QLineEdit_Show(void* ptr);
void QLineEdit_ShowDefault(void* ptr);
void QLineEdit_ShowFullScreen(void* ptr);
void QLineEdit_ShowFullScreenDefault(void* ptr);
void QLineEdit_ShowMaximized(void* ptr);
void QLineEdit_ShowMaximizedDefault(void* ptr);
void QLineEdit_ShowMinimized(void* ptr);
void QLineEdit_ShowMinimizedDefault(void* ptr);
void QLineEdit_ShowNormal(void* ptr);
void QLineEdit_ShowNormalDefault(void* ptr);
void QLineEdit_TabletEvent(void* ptr, void* event);
void QLineEdit_TabletEventDefault(void* ptr, void* event);
void QLineEdit_Update(void* ptr);
void QLineEdit_UpdateDefault(void* ptr);
void QLineEdit_UpdateMicroFocus(void* ptr);
void QLineEdit_UpdateMicroFocusDefault(void* ptr);
void QLineEdit_WheelEvent(void* ptr, void* event);
void QLineEdit_WheelEventDefault(void* ptr, void* event);
void QLineEdit_TimerEvent(void* ptr, void* event);
void QLineEdit_TimerEventDefault(void* ptr, void* event);
void QLineEdit_ChildEvent(void* ptr, void* event);
void QLineEdit_ChildEventDefault(void* ptr, void* event);
void QLineEdit_ConnectNotify(void* ptr, void* sign);
void QLineEdit_ConnectNotifyDefault(void* ptr, void* sign);
void QLineEdit_CustomEvent(void* ptr, void* event);
void QLineEdit_CustomEventDefault(void* ptr, void* event);
void QLineEdit_DeleteLater(void* ptr);
void QLineEdit_DeleteLaterDefault(void* ptr);
void QLineEdit_DisconnectNotify(void* ptr, void* sign);
void QLineEdit_DisconnectNotifyDefault(void* ptr, void* sign);
char QLineEdit_EventFilter(void* ptr, void* watched, void* event);
char QLineEdit_EventFilterDefault(void* ptr, void* watched, void* event);
void* QLineEdit_MetaObject(void* ptr);
void* QLineEdit_MetaObjectDefault(void* ptr);
int QListView_BatchSize(void* ptr);
long long QListView_Flow(void* ptr);
void* QListView_GridSize(void* ptr);
char QListView_IsSelectionRectVisible(void* ptr);
char QListView_IsWrapping(void* ptr);
long long QListView_LayoutMode(void* ptr);
int QListView_ModelColumn(void* ptr);
long long QListView_Movement(void* ptr);
long long QListView_ResizeMode(void* ptr);
void QListView_SetBatchSize(void* ptr, int batchSize);
void QListView_SetFlow(void* ptr, long long flow);
void QListView_SetGridSize(void* ptr, void* size);
void QListView_SetLayoutMode(void* ptr, long long mode);
void QListView_SetModelColumn(void* ptr, int column);
void QListView_SetMovement(void* ptr, long long movement);
void QListView_SetResizeMode(void* ptr, long long mode);
void QListView_SetSelectionRectVisible(void* ptr, char show);
void QListView_SetSpacing(void* ptr, int space);
void QListView_SetUniformItemSizes(void* ptr, char enable);
void QListView_SetViewMode(void* ptr, long long mode);
void QListView_SetWordWrap(void* ptr, char on);
void QListView_SetWrapping(void* ptr, char enable);
int QListView_Spacing(void* ptr);
char QListView_UniformItemSizes(void* ptr);
long long QListView_ViewMode(void* ptr);
char QListView_WordWrap(void* ptr);
void* QListView_NewQListView(void* parent);
void QListView_ClearPropertyFlags(void* ptr);
void QListView_CurrentChanged(void* ptr, void* current, void* previous);
void QListView_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QListView_DragLeaveEvent(void* ptr, void* e);
void QListView_DragLeaveEventDefault(void* ptr, void* e);
void QListView_DragMoveEvent(void* ptr, void* e);
void QListView_DragMoveEventDefault(void* ptr, void* e);
void QListView_DropEvent(void* ptr, void* e);
void QListView_DropEventDefault(void* ptr, void* e);
char QListView_Event(void* ptr, void* e);
int QListView_HorizontalOffset(void* ptr);
int QListView_HorizontalOffsetDefault(void* ptr);
void* QListView_IndexAt(void* ptr, void* p);
void* QListView_IndexAtDefault(void* ptr, void* p);
char QListView_IsIndexHidden(void* ptr, void* index);
char QListView_IsIndexHiddenDefault(void* ptr, void* index);
char QListView_IsRowHidden(void* ptr, int row);
void QListView_MouseMoveEvent(void* ptr, void* e);
void QListView_MouseMoveEventDefault(void* ptr, void* e);
void QListView_MouseReleaseEvent(void* ptr, void* e);
void QListView_MouseReleaseEventDefault(void* ptr, void* e);
void* QListView_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QListView_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
void QListView_PaintEvent(void* ptr, void* e);
void QListView_PaintEventDefault(void* ptr, void* e);
void* QListView_RectForIndex(void* ptr, void* index);
void QListView_ResizeEvent(void* ptr, void* e);
void QListView_ResizeEventDefault(void* ptr, void* e);
void QListView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QListView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QListView_RowsInserted(void* ptr, void* parent, int start, int end);
void QListView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QListView_ScrollTo(void* ptr, void* index, long long hint);
void QListView_ScrollToDefault(void* ptr, void* index, long long hint);
void QListView_SelectionChanged(void* ptr, void* selected, void* deselected);
void QListView_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
void QListView_SetPositionForIndex(void* ptr, void* position, void* index);
void QListView_SetRowHidden(void* ptr, int row, char hide);
void QListView_SetSelection(void* ptr, void* rect, long long command);
void QListView_SetSelectionDefault(void* ptr, void* rect, long long command);
void QListView_StartDrag(void* ptr, long long supportedActions);
void QListView_StartDragDefault(void* ptr, long long supportedActions);
void QListView_TimerEvent(void* ptr, void* e);
void QListView_UpdateGeometries(void* ptr);
void QListView_UpdateGeometriesDefault(void* ptr);
int QListView_VerticalOffset(void* ptr);
int QListView_VerticalOffsetDefault(void* ptr);
void* QListView_ViewOptions(void* ptr);
void* QListView_ViewOptionsDefault(void* ptr);
void* QListView_ViewportSizeHint(void* ptr);
void* QListView_ViewportSizeHintDefault(void* ptr);
void* QListView_VisualRect(void* ptr, void* index);
void* QListView_VisualRectDefault(void* ptr, void* index);
void* QListView_VisualRegionForSelection(void* ptr, void* selection);
void* QListView_VisualRegionForSelectionDefault(void* ptr, void* selection);
void QListView_WheelEvent(void* ptr, void* e);
void QListView_WheelEventDefault(void* ptr, void* e);
void QListView_DestroyQListView(void* ptr);
void* QListView_selectedIndexes_atList(void* ptr, int i);
char QListView_ViewportEvent(void* ptr, void* event);
char QListView_ViewportEventDefault(void* ptr, void* event);
void QListView_ClearSelection(void* ptr);
void QListView_ClearSelectionDefault(void* ptr);
void QListView_CloseEditor(void* ptr, void* editor, long long hint);
void QListView_CloseEditorDefault(void* ptr, void* editor, long long hint);
void QListView_CommitData(void* ptr, void* editor);
void QListView_CommitDataDefault(void* ptr, void* editor);
void QListView_DragEnterEvent(void* ptr, void* event);
void QListView_DragEnterEventDefault(void* ptr, void* event);
void QListView_Edit(void* ptr, void* index);
void QListView_EditDefault(void* ptr, void* index);
char QListView_Edit2(void* ptr, void* index, long long trigger, void* event);
char QListView_Edit2Default(void* ptr, void* index, long long trigger, void* event);
void QListView_EditorDestroyed(void* ptr, void* editor);
void QListView_EditorDestroyedDefault(void* ptr, void* editor);
void QListView_FocusInEvent(void* ptr, void* event);
void QListView_FocusInEventDefault(void* ptr, void* event);
char QListView_FocusNextPrevChild(void* ptr, char next);
char QListView_FocusNextPrevChildDefault(void* ptr, char next);
void QListView_FocusOutEvent(void* ptr, void* event);
void QListView_FocusOutEventDefault(void* ptr, void* event);
void QListView_InputMethodEvent(void* ptr, void* event);
void QListView_InputMethodEventDefault(void* ptr, void* event);
void* QListView_InputMethodQuery(void* ptr, long long query);
void* QListView_InputMethodQueryDefault(void* ptr, long long query);
void QListView_KeyPressEvent(void* ptr, void* event);
void QListView_KeyPressEventDefault(void* ptr, void* event);
void QListView_KeyboardSearch(void* ptr, char* search);
void QListView_KeyboardSearchDefault(void* ptr, char* search);
void QListView_MouseDoubleClickEvent(void* ptr, void* event);
void QListView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QListView_MousePressEvent(void* ptr, void* event);
void QListView_MousePressEventDefault(void* ptr, void* event);
void QListView_Reset(void* ptr);
void QListView_ResetDefault(void* ptr);
void QListView_ScrollToBottom(void* ptr);
void QListView_ScrollToBottomDefault(void* ptr);
void QListView_ScrollToTop(void* ptr);
void QListView_ScrollToTopDefault(void* ptr);
void QListView_SelectAll(void* ptr);
void QListView_SelectAllDefault(void* ptr);
long long QListView_SelectionCommand(void* ptr, void* index, void* event);
long long QListView_SelectionCommandDefault(void* ptr, void* index, void* event);
void QListView_SetCurrentIndex(void* ptr, void* index);
void QListView_SetCurrentIndexDefault(void* ptr, void* index);
void QListView_SetModel(void* ptr, void* model);
void QListView_SetModelDefault(void* ptr, void* model);
void QListView_SetRootIndex(void* ptr, void* index);
void QListView_SetRootIndexDefault(void* ptr, void* index);
void QListView_SetSelectionModel(void* ptr, void* selectionModel);
void QListView_SetSelectionModelDefault(void* ptr, void* selectionModel);
int QListView_SizeHintForColumn(void* ptr, int column);
int QListView_SizeHintForColumnDefault(void* ptr, int column);
int QListView_SizeHintForRow(void* ptr, int row);
int QListView_SizeHintForRowDefault(void* ptr, int row);
void QListView_Update(void* ptr, void* index);
void QListView_UpdateDefault(void* ptr, void* index);
void QListView_ContextMenuEvent(void* ptr, void* e);
void QListView_ContextMenuEventDefault(void* ptr, void* e);
void* QListView_MinimumSizeHint(void* ptr);
void* QListView_MinimumSizeHintDefault(void* ptr);
void QListView_ScrollContentsBy(void* ptr, int dx, int dy);
void QListView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QListView_SetupViewport(void* ptr, void* viewport);
void QListView_SetupViewportDefault(void* ptr, void* viewport);
void* QListView_SizeHint(void* ptr);
void* QListView_SizeHintDefault(void* ptr);
void QListView_ChangeEvent(void* ptr, void* ev);
void QListView_ChangeEventDefault(void* ptr, void* ev);
void QListView_ActionEvent(void* ptr, void* event);
void QListView_ActionEventDefault(void* ptr, void* event);
void QListView_EnterEvent(void* ptr, void* event);
void QListView_EnterEventDefault(void* ptr, void* event);
void QListView_HideEvent(void* ptr, void* event);
void QListView_HideEventDefault(void* ptr, void* event);
void QListView_LeaveEvent(void* ptr, void* event);
void QListView_LeaveEventDefault(void* ptr, void* event);
void QListView_MoveEvent(void* ptr, void* event);
void QListView_MoveEventDefault(void* ptr, void* event);
void QListView_SetEnabled(void* ptr, char vbo);
void QListView_SetEnabledDefault(void* ptr, char vbo);
void QListView_SetStyleSheet(void* ptr, char* styleSheet);
void QListView_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QListView_SetVisible(void* ptr, char visible);
void QListView_SetVisibleDefault(void* ptr, char visible);
void QListView_SetWindowModified(void* ptr, char vbo);
void QListView_SetWindowModifiedDefault(void* ptr, char vbo);
void QListView_SetWindowTitle(void* ptr, char* vqs);
void QListView_SetWindowTitleDefault(void* ptr, char* vqs);
void QListView_ShowEvent(void* ptr, void* event);
void QListView_ShowEventDefault(void* ptr, void* event);
char QListView_Close(void* ptr);
char QListView_CloseDefault(void* ptr);
void QListView_CloseEvent(void* ptr, void* event);
void QListView_CloseEventDefault(void* ptr, void* event);
char QListView_HasHeightForWidth(void* ptr);
char QListView_HasHeightForWidthDefault(void* ptr);
int QListView_HeightForWidth(void* ptr, int w);
int QListView_HeightForWidthDefault(void* ptr, int w);
void QListView_Hide(void* ptr);
void QListView_HideDefault(void* ptr);
void QListView_KeyReleaseEvent(void* ptr, void* event);
void QListView_KeyReleaseEventDefault(void* ptr, void* event);
void QListView_Lower(void* ptr);
void QListView_LowerDefault(void* ptr);
char QListView_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QListView_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QListView_Raise(void* ptr);
void QListView_RaiseDefault(void* ptr);
void QListView_Repaint(void* ptr);
void QListView_RepaintDefault(void* ptr);
void QListView_SetDisabled(void* ptr, char disable);
void QListView_SetDisabledDefault(void* ptr, char disable);
void QListView_SetFocus2(void* ptr);
void QListView_SetFocus2Default(void* ptr);
void QListView_SetHidden(void* ptr, char hidden);
void QListView_SetHiddenDefault(void* ptr, char hidden);
void QListView_Show(void* ptr);
void QListView_ShowDefault(void* ptr);
void QListView_ShowFullScreen(void* ptr);
void QListView_ShowFullScreenDefault(void* ptr);
void QListView_ShowMaximized(void* ptr);
void QListView_ShowMaximizedDefault(void* ptr);
void QListView_ShowMinimized(void* ptr);
void QListView_ShowMinimizedDefault(void* ptr);
void QListView_ShowNormal(void* ptr);
void QListView_ShowNormalDefault(void* ptr);
void QListView_TabletEvent(void* ptr, void* event);
void QListView_TabletEventDefault(void* ptr, void* event);
void QListView_UpdateMicroFocus(void* ptr);
void QListView_UpdateMicroFocusDefault(void* ptr);
void QListView_ChildEvent(void* ptr, void* event);
void QListView_ChildEventDefault(void* ptr, void* event);
void QListView_ConnectNotify(void* ptr, void* sign);
void QListView_ConnectNotifyDefault(void* ptr, void* sign);
void QListView_CustomEvent(void* ptr, void* event);
void QListView_CustomEventDefault(void* ptr, void* event);
void QListView_DeleteLater(void* ptr);
void QListView_DeleteLaterDefault(void* ptr);
void QListView_DisconnectNotify(void* ptr, void* sign);
void QListView_DisconnectNotifyDefault(void* ptr, void* sign);
char QListView_EventFilter(void* ptr, void* watched, void* event);
char QListView_EventFilterDefault(void* ptr, void* watched, void* event);
void* QListView_MetaObject(void* ptr);
void* QListView_MetaObjectDefault(void* ptr);
int QListWidget_Count(void* ptr);
int QListWidget_CurrentRow(void* ptr);
char QListWidget_IsSortingEnabled(void* ptr);
void QListWidget_SetCurrentRow(void* ptr, int row);
void QListWidget_SetSortingEnabled(void* ptr, char enable);
void* QListWidget_NewQListWidget(void* parent);
void QListWidget_AddItem2(void* ptr, void* item);
void QListWidget_AddItem(void* ptr, char* label);
void QListWidget_AddItems(void* ptr, char* labels);
void QListWidget_Clear(void* ptr);
void QListWidget_ClosePersistentEditor(void* ptr, void* item);
void* QListWidget_CurrentItem(void* ptr);
void QListWidget_ConnectCurrentItemChanged(void* ptr);
void QListWidget_DisconnectCurrentItemChanged(void* ptr);
void QListWidget_CurrentItemChanged(void* ptr, void* current, void* previous);
void QListWidget_ConnectCurrentRowChanged(void* ptr);
void QListWidget_DisconnectCurrentRowChanged(void* ptr);
void QListWidget_CurrentRowChanged(void* ptr, int currentRow);
void QListWidget_ConnectCurrentTextChanged(void* ptr);
void QListWidget_DisconnectCurrentTextChanged(void* ptr);
void QListWidget_CurrentTextChanged(void* ptr, char* currentText);
void QListWidget_DropEvent(void* ptr, void* event);
void QListWidget_DropEventDefault(void* ptr, void* event);
char QListWidget_DropMimeData(void* ptr, int index, void* data, long long action);
char QListWidget_DropMimeDataDefault(void* ptr, int index, void* data, long long action);
void QListWidget_EditItem(void* ptr, void* item);
char QListWidget_Event(void* ptr, void* e);
struct QtWidgets_PackedList QListWidget_FindItems(void* ptr, char* text, long long flags);
void* QListWidget_IndexFromItem(void* ptr, void* item);
void QListWidget_InsertItem(void* ptr, int row, void* item);
void QListWidget_InsertItem2(void* ptr, int row, char* label);
void QListWidget_InsertItems(void* ptr, int row, char* labels);
void* QListWidget_Item(void* ptr, int row);
void QListWidget_ConnectItemActivated(void* ptr);
void QListWidget_DisconnectItemActivated(void* ptr);
void QListWidget_ItemActivated(void* ptr, void* item);
void* QListWidget_ItemAt(void* ptr, void* p);
void* QListWidget_ItemAt2(void* ptr, int x, int y);
void QListWidget_ConnectItemChanged(void* ptr);
void QListWidget_DisconnectItemChanged(void* ptr);
void QListWidget_ItemChanged(void* ptr, void* item);
void QListWidget_ConnectItemClicked(void* ptr);
void QListWidget_DisconnectItemClicked(void* ptr);
void QListWidget_ItemClicked(void* ptr, void* item);
void QListWidget_ConnectItemDoubleClicked(void* ptr);
void QListWidget_DisconnectItemDoubleClicked(void* ptr);
void QListWidget_ItemDoubleClicked(void* ptr, void* item);
void QListWidget_ConnectItemEntered(void* ptr);
void QListWidget_DisconnectItemEntered(void* ptr);
void QListWidget_ItemEntered(void* ptr, void* item);
void* QListWidget_ItemFromIndex(void* ptr, void* index);
void QListWidget_ConnectItemPressed(void* ptr);
void QListWidget_DisconnectItemPressed(void* ptr);
void QListWidget_ItemPressed(void* ptr, void* item);
void QListWidget_ConnectItemSelectionChanged(void* ptr);
void QListWidget_DisconnectItemSelectionChanged(void* ptr);
void QListWidget_ItemSelectionChanged(void* ptr);
void* QListWidget_ItemWidget(void* ptr, void* item);
struct QtWidgets_PackedList QListWidget_Items(void* ptr, void* data);
struct QtWidgets_PackedString QListWidget_MimeTypes(void* ptr);
struct QtWidgets_PackedString QListWidget_MimeTypesDefault(void* ptr);
void QListWidget_OpenPersistentEditor(void* ptr, void* item);
void QListWidget_RemoveItemWidget(void* ptr, void* item);
int QListWidget_Row(void* ptr, void* item);
void QListWidget_ScrollToItem(void* ptr, void* item, long long hint);
struct QtWidgets_PackedList QListWidget_SelectedItems(void* ptr);
void QListWidget_SetCurrentItem(void* ptr, void* item);
void QListWidget_SetCurrentItem2(void* ptr, void* item, long long command);
void QListWidget_SetCurrentRow2(void* ptr, int row, long long command);
void QListWidget_SetItemWidget(void* ptr, void* item, void* widget);
void QListWidget_SetSelectionModel(void* ptr, void* selectionModel);
void QListWidget_SetSelectionModelDefault(void* ptr, void* selectionModel);
void QListWidget_SortItems(void* ptr, long long order);
long long QListWidget_SupportedDropActions(void* ptr);
long long QListWidget_SupportedDropActionsDefault(void* ptr);
void* QListWidget_TakeItem(void* ptr, int row);
void* QListWidget_VisualItemRect(void* ptr, void* item);
void QListWidget_DestroyQListWidget(void* ptr);
void* QListWidget_findItems_atList(void* ptr, int i);
void* QListWidget_items_atList(void* ptr, int i);
void* QListWidget_selectedItems_atList(void* ptr, int i);
void QListWidget_CurrentChanged(void* ptr, void* current, void* previous);
void QListWidget_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QListWidget_DragLeaveEvent(void* ptr, void* e);
void QListWidget_DragLeaveEventDefault(void* ptr, void* e);
void QListWidget_DragMoveEvent(void* ptr, void* e);
void QListWidget_DragMoveEventDefault(void* ptr, void* e);
int QListWidget_HorizontalOffset(void* ptr);
int QListWidget_HorizontalOffsetDefault(void* ptr);
void* QListWidget_IndexAt(void* ptr, void* p);
void* QListWidget_IndexAtDefault(void* ptr, void* p);
char QListWidget_IsIndexHidden(void* ptr, void* index);
char QListWidget_IsIndexHiddenDefault(void* ptr, void* index);
void QListWidget_MouseMoveEvent(void* ptr, void* e);
void QListWidget_MouseMoveEventDefault(void* ptr, void* e);
void QListWidget_MouseReleaseEvent(void* ptr, void* e);
void QListWidget_MouseReleaseEventDefault(void* ptr, void* e);
void* QListWidget_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QListWidget_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
void QListWidget_PaintEvent(void* ptr, void* e);
void QListWidget_PaintEventDefault(void* ptr, void* e);
void QListWidget_ResizeEvent(void* ptr, void* e);
void QListWidget_ResizeEventDefault(void* ptr, void* e);
void QListWidget_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QListWidget_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QListWidget_RowsInserted(void* ptr, void* parent, int start, int end);
void QListWidget_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QListWidget_ScrollTo(void* ptr, void* index, long long hint);
void QListWidget_ScrollToDefault(void* ptr, void* index, long long hint);
void QListWidget_SelectionChanged(void* ptr, void* selected, void* deselected);
void QListWidget_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
void QListWidget_SetSelection(void* ptr, void* rect, long long command);
void QListWidget_SetSelectionDefault(void* ptr, void* rect, long long command);
void QListWidget_StartDrag(void* ptr, long long supportedActions);
void QListWidget_StartDragDefault(void* ptr, long long supportedActions);
void QListWidget_UpdateGeometries(void* ptr);
void QListWidget_UpdateGeometriesDefault(void* ptr);
int QListWidget_VerticalOffset(void* ptr);
int QListWidget_VerticalOffsetDefault(void* ptr);
void* QListWidget_ViewOptions(void* ptr);
void* QListWidget_ViewOptionsDefault(void* ptr);
void* QListWidget_ViewportSizeHint(void* ptr);
void* QListWidget_ViewportSizeHintDefault(void* ptr);
void* QListWidget_VisualRect(void* ptr, void* index);
void* QListWidget_VisualRectDefault(void* ptr, void* index);
void* QListWidget_VisualRegionForSelection(void* ptr, void* selection);
void* QListWidget_VisualRegionForSelectionDefault(void* ptr, void* selection);
void QListWidget_WheelEvent(void* ptr, void* e);
void QListWidget_WheelEventDefault(void* ptr, void* e);
char QListWidget_ViewportEvent(void* ptr, void* event);
char QListWidget_ViewportEventDefault(void* ptr, void* event);
void QListWidget_ClearSelection(void* ptr);
void QListWidget_ClearSelectionDefault(void* ptr);
void QListWidget_CloseEditor(void* ptr, void* editor, long long hint);
void QListWidget_CloseEditorDefault(void* ptr, void* editor, long long hint);
void QListWidget_CommitData(void* ptr, void* editor);
void QListWidget_CommitDataDefault(void* ptr, void* editor);
void QListWidget_DragEnterEvent(void* ptr, void* event);
void QListWidget_DragEnterEventDefault(void* ptr, void* event);
void QListWidget_Edit(void* ptr, void* index);
void QListWidget_EditDefault(void* ptr, void* index);
char QListWidget_Edit2(void* ptr, void* index, long long trigger, void* event);
char QListWidget_Edit2Default(void* ptr, void* index, long long trigger, void* event);
void QListWidget_EditorDestroyed(void* ptr, void* editor);
void QListWidget_EditorDestroyedDefault(void* ptr, void* editor);
void QListWidget_FocusInEvent(void* ptr, void* event);
void QListWidget_FocusInEventDefault(void* ptr, void* event);
char QListWidget_FocusNextPrevChild(void* ptr, char next);
char QListWidget_FocusNextPrevChildDefault(void* ptr, char next);
void QListWidget_FocusOutEvent(void* ptr, void* event);
void QListWidget_FocusOutEventDefault(void* ptr, void* event);
void QListWidget_InputMethodEvent(void* ptr, void* event);
void QListWidget_InputMethodEventDefault(void* ptr, void* event);
void* QListWidget_InputMethodQuery(void* ptr, long long query);
void* QListWidget_InputMethodQueryDefault(void* ptr, long long query);
void QListWidget_KeyPressEvent(void* ptr, void* event);
void QListWidget_KeyPressEventDefault(void* ptr, void* event);
void QListWidget_KeyboardSearch(void* ptr, char* search);
void QListWidget_KeyboardSearchDefault(void* ptr, char* search);
void QListWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QListWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QListWidget_MousePressEvent(void* ptr, void* event);
void QListWidget_MousePressEventDefault(void* ptr, void* event);
void QListWidget_Reset(void* ptr);
void QListWidget_ResetDefault(void* ptr);
void QListWidget_ScrollToBottom(void* ptr);
void QListWidget_ScrollToBottomDefault(void* ptr);
void QListWidget_ScrollToTop(void* ptr);
void QListWidget_ScrollToTopDefault(void* ptr);
void QListWidget_SelectAll(void* ptr);
void QListWidget_SelectAllDefault(void* ptr);
long long QListWidget_SelectionCommand(void* ptr, void* index, void* event);
long long QListWidget_SelectionCommandDefault(void* ptr, void* index, void* event);
void QListWidget_SetCurrentIndex(void* ptr, void* index);
void QListWidget_SetCurrentIndexDefault(void* ptr, void* index);
void QListWidget_SetModel(void* ptr, void* model);
void QListWidget_SetModelDefault(void* ptr, void* model);
void QListWidget_SetRootIndex(void* ptr, void* index);
void QListWidget_SetRootIndexDefault(void* ptr, void* index);
int QListWidget_SizeHintForColumn(void* ptr, int column);
int QListWidget_SizeHintForColumnDefault(void* ptr, int column);
int QListWidget_SizeHintForRow(void* ptr, int row);
int QListWidget_SizeHintForRowDefault(void* ptr, int row);
void QListWidget_Update(void* ptr, void* index);
void QListWidget_UpdateDefault(void* ptr, void* index);
void QListWidget_ContextMenuEvent(void* ptr, void* e);
void QListWidget_ContextMenuEventDefault(void* ptr, void* e);
void* QListWidget_MinimumSizeHint(void* ptr);
void* QListWidget_MinimumSizeHintDefault(void* ptr);
void QListWidget_ScrollContentsBy(void* ptr, int dx, int dy);
void QListWidget_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QListWidget_SetupViewport(void* ptr, void* viewport);
void QListWidget_SetupViewportDefault(void* ptr, void* viewport);
void* QListWidget_SizeHint(void* ptr);
void* QListWidget_SizeHintDefault(void* ptr);
void QListWidget_ChangeEvent(void* ptr, void* ev);
void QListWidget_ChangeEventDefault(void* ptr, void* ev);
void QListWidget_ActionEvent(void* ptr, void* event);
void QListWidget_ActionEventDefault(void* ptr, void* event);
void QListWidget_EnterEvent(void* ptr, void* event);
void QListWidget_EnterEventDefault(void* ptr, void* event);
void QListWidget_HideEvent(void* ptr, void* event);
void QListWidget_HideEventDefault(void* ptr, void* event);
void QListWidget_LeaveEvent(void* ptr, void* event);
void QListWidget_LeaveEventDefault(void* ptr, void* event);
void QListWidget_MoveEvent(void* ptr, void* event);
void QListWidget_MoveEventDefault(void* ptr, void* event);
void QListWidget_SetEnabled(void* ptr, char vbo);
void QListWidget_SetEnabledDefault(void* ptr, char vbo);
void QListWidget_SetStyleSheet(void* ptr, char* styleSheet);
void QListWidget_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QListWidget_SetVisible(void* ptr, char visible);
void QListWidget_SetVisibleDefault(void* ptr, char visible);
void QListWidget_SetWindowModified(void* ptr, char vbo);
void QListWidget_SetWindowModifiedDefault(void* ptr, char vbo);
void QListWidget_SetWindowTitle(void* ptr, char* vqs);
void QListWidget_SetWindowTitleDefault(void* ptr, char* vqs);
void QListWidget_ShowEvent(void* ptr, void* event);
void QListWidget_ShowEventDefault(void* ptr, void* event);
char QListWidget_Close(void* ptr);
char QListWidget_CloseDefault(void* ptr);
void QListWidget_CloseEvent(void* ptr, void* event);
void QListWidget_CloseEventDefault(void* ptr, void* event);
char QListWidget_HasHeightForWidth(void* ptr);
char QListWidget_HasHeightForWidthDefault(void* ptr);
int QListWidget_HeightForWidth(void* ptr, int w);
int QListWidget_HeightForWidthDefault(void* ptr, int w);
void QListWidget_Hide(void* ptr);
void QListWidget_HideDefault(void* ptr);
void QListWidget_KeyReleaseEvent(void* ptr, void* event);
void QListWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QListWidget_Lower(void* ptr);
void QListWidget_LowerDefault(void* ptr);
char QListWidget_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QListWidget_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QListWidget_Raise(void* ptr);
void QListWidget_RaiseDefault(void* ptr);
void QListWidget_Repaint(void* ptr);
void QListWidget_RepaintDefault(void* ptr);
void QListWidget_SetDisabled(void* ptr, char disable);
void QListWidget_SetDisabledDefault(void* ptr, char disable);
void QListWidget_SetFocus2(void* ptr);
void QListWidget_SetFocus2Default(void* ptr);
void QListWidget_SetHidden(void* ptr, char hidden);
void QListWidget_SetHiddenDefault(void* ptr, char hidden);
void QListWidget_Show(void* ptr);
void QListWidget_ShowDefault(void* ptr);
void QListWidget_ShowFullScreen(void* ptr);
void QListWidget_ShowFullScreenDefault(void* ptr);
void QListWidget_ShowMaximized(void* ptr);
void QListWidget_ShowMaximizedDefault(void* ptr);
void QListWidget_ShowMinimized(void* ptr);
void QListWidget_ShowMinimizedDefault(void* ptr);
void QListWidget_ShowNormal(void* ptr);
void QListWidget_ShowNormalDefault(void* ptr);
void QListWidget_TabletEvent(void* ptr, void* event);
void QListWidget_TabletEventDefault(void* ptr, void* event);
void QListWidget_UpdateMicroFocus(void* ptr);
void QListWidget_UpdateMicroFocusDefault(void* ptr);
void QListWidget_ChildEvent(void* ptr, void* event);
void QListWidget_ChildEventDefault(void* ptr, void* event);
void QListWidget_ConnectNotify(void* ptr, void* sign);
void QListWidget_ConnectNotifyDefault(void* ptr, void* sign);
void QListWidget_CustomEvent(void* ptr, void* event);
void QListWidget_CustomEventDefault(void* ptr, void* event);
void QListWidget_DeleteLater(void* ptr);
void QListWidget_DeleteLaterDefault(void* ptr);
void QListWidget_DisconnectNotify(void* ptr, void* sign);
void QListWidget_DisconnectNotifyDefault(void* ptr, void* sign);
char QListWidget_EventFilter(void* ptr, void* watched, void* event);
char QListWidget_EventFilterDefault(void* ptr, void* watched, void* event);
void* QListWidget_MetaObject(void* ptr);
void* QListWidget_MetaObjectDefault(void* ptr);
void* QListWidgetItem_NewQListWidgetItem(void* parent, int ty);
void* QListWidgetItem_NewQListWidgetItem3(void* icon, char* text, void* parent, int ty);
void* QListWidgetItem_NewQListWidgetItem2(char* text, void* parent, int ty);
void QListWidgetItem_SetFlags(void* ptr, long long flags);
void* QListWidgetItem_NewQListWidgetItem4(void* other);
void* QListWidgetItem_Background(void* ptr);
long long QListWidgetItem_CheckState(void* ptr);
void* QListWidgetItem_Clone(void* ptr);
void* QListWidgetItem_CloneDefault(void* ptr);
void* QListWidgetItem_Data(void* ptr, int role);
void* QListWidgetItem_DataDefault(void* ptr, int role);
long long QListWidgetItem_Flags(void* ptr);
void* QListWidgetItem_Font(void* ptr);
void* QListWidgetItem_Foreground(void* ptr);
void* QListWidgetItem_Icon(void* ptr);
char QListWidgetItem_IsHidden(void* ptr);
char QListWidgetItem_IsSelected(void* ptr);
void* QListWidgetItem_ListWidget(void* ptr);
void QListWidgetItem_SetBackground(void* ptr, void* brush);
void QListWidgetItem_SetCheckState(void* ptr, long long state);
void QListWidgetItem_SetData(void* ptr, int role, void* value);
void QListWidgetItem_SetDataDefault(void* ptr, int role, void* value);
void QListWidgetItem_SetFont(void* ptr, void* font);
void QListWidgetItem_SetForeground(void* ptr, void* brush);
void QListWidgetItem_SetHidden(void* ptr, char hide);
void QListWidgetItem_SetIcon(void* ptr, void* icon);
void QListWidgetItem_SetSelected(void* ptr, char sele);
void QListWidgetItem_SetSizeHint(void* ptr, void* size);
void QListWidgetItem_SetStatusTip(void* ptr, char* statusTip);
void QListWidgetItem_SetText(void* ptr, char* text);
void QListWidgetItem_SetTextAlignment(void* ptr, int alignment);
void QListWidgetItem_SetToolTip(void* ptr, char* toolTip);
void QListWidgetItem_SetWhatsThis(void* ptr, char* whatsThis);
void* QListWidgetItem_SizeHint(void* ptr);
struct QtWidgets_PackedString QListWidgetItem_StatusTip(void* ptr);
struct QtWidgets_PackedString QListWidgetItem_Text(void* ptr);
int QListWidgetItem_TextAlignment(void* ptr);
struct QtWidgets_PackedString QListWidgetItem_ToolTip(void* ptr);
int QListWidgetItem_Type(void* ptr);
struct QtWidgets_PackedString QListWidgetItem_WhatsThis(void* ptr);
void QListWidgetItem_DestroyQListWidgetItem(void* ptr);
void QListWidgetItem_DestroyQListWidgetItemDefault(void* ptr);
void QMacCocoaViewContainer_DestroyQMacCocoaViewContainer(void* ptr);
void QMacCocoaViewContainer_DestroyQMacCocoaViewContainerDefault(void* ptr);
void QMacCocoaViewContainer_ActionEvent(void* ptr, void* event);
void QMacCocoaViewContainer_ActionEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_DragEnterEvent(void* ptr, void* event);
void QMacCocoaViewContainer_DragEnterEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_DragLeaveEvent(void* ptr, void* event);
void QMacCocoaViewContainer_DragLeaveEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_DragMoveEvent(void* ptr, void* event);
void QMacCocoaViewContainer_DragMoveEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_DropEvent(void* ptr, void* event);
void QMacCocoaViewContainer_DropEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_EnterEvent(void* ptr, void* event);
void QMacCocoaViewContainer_EnterEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_FocusInEvent(void* ptr, void* event);
void QMacCocoaViewContainer_FocusInEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_FocusOutEvent(void* ptr, void* event);
void QMacCocoaViewContainer_FocusOutEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_HideEvent(void* ptr, void* event);
void QMacCocoaViewContainer_HideEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_LeaveEvent(void* ptr, void* event);
void QMacCocoaViewContainer_LeaveEventDefault(void* ptr, void* event);
void* QMacCocoaViewContainer_MinimumSizeHint(void* ptr);
void* QMacCocoaViewContainer_MinimumSizeHintDefault(void* ptr);
void QMacCocoaViewContainer_MoveEvent(void* ptr, void* event);
void QMacCocoaViewContainer_MoveEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_PaintEvent(void* ptr, void* event);
void QMacCocoaViewContainer_PaintEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_SetEnabled(void* ptr, char vbo);
void QMacCocoaViewContainer_SetEnabledDefault(void* ptr, char vbo);
void QMacCocoaViewContainer_SetStyleSheet(void* ptr, char* styleSheet);
void QMacCocoaViewContainer_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QMacCocoaViewContainer_SetVisible(void* ptr, char visible);
void QMacCocoaViewContainer_SetVisibleDefault(void* ptr, char visible);
void QMacCocoaViewContainer_SetWindowModified(void* ptr, char vbo);
void QMacCocoaViewContainer_SetWindowModifiedDefault(void* ptr, char vbo);
void QMacCocoaViewContainer_SetWindowTitle(void* ptr, char* vqs);
void QMacCocoaViewContainer_SetWindowTitleDefault(void* ptr, char* vqs);
void QMacCocoaViewContainer_ShowEvent(void* ptr, void* event);
void QMacCocoaViewContainer_ShowEventDefault(void* ptr, void* event);
void* QMacCocoaViewContainer_SizeHint(void* ptr);
void* QMacCocoaViewContainer_SizeHintDefault(void* ptr);
void QMacCocoaViewContainer_ChangeEvent(void* ptr, void* event);
void QMacCocoaViewContainer_ChangeEventDefault(void* ptr, void* event);
char QMacCocoaViewContainer_Close(void* ptr);
char QMacCocoaViewContainer_CloseDefault(void* ptr);
void QMacCocoaViewContainer_CloseEvent(void* ptr, void* event);
void QMacCocoaViewContainer_CloseEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_ContextMenuEvent(void* ptr, void* event);
void QMacCocoaViewContainer_ContextMenuEventDefault(void* ptr, void* event);
char QMacCocoaViewContainer_FocusNextPrevChild(void* ptr, char next);
char QMacCocoaViewContainer_FocusNextPrevChildDefault(void* ptr, char next);
char QMacCocoaViewContainer_HasHeightForWidth(void* ptr);
char QMacCocoaViewContainer_HasHeightForWidthDefault(void* ptr);
int QMacCocoaViewContainer_HeightForWidth(void* ptr, int w);
int QMacCocoaViewContainer_HeightForWidthDefault(void* ptr, int w);
void QMacCocoaViewContainer_Hide(void* ptr);
void QMacCocoaViewContainer_HideDefault(void* ptr);
void QMacCocoaViewContainer_InputMethodEvent(void* ptr, void* event);
void QMacCocoaViewContainer_InputMethodEventDefault(void* ptr, void* event);
void* QMacCocoaViewContainer_InputMethodQuery(void* ptr, long long query);
void* QMacCocoaViewContainer_InputMethodQueryDefault(void* ptr, long long query);
void QMacCocoaViewContainer_KeyPressEvent(void* ptr, void* event);
void QMacCocoaViewContainer_KeyPressEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_KeyReleaseEvent(void* ptr, void* event);
void QMacCocoaViewContainer_KeyReleaseEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_Lower(void* ptr);
void QMacCocoaViewContainer_LowerDefault(void* ptr);
void QMacCocoaViewContainer_MouseDoubleClickEvent(void* ptr, void* event);
void QMacCocoaViewContainer_MouseDoubleClickEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_MouseMoveEvent(void* ptr, void* event);
void QMacCocoaViewContainer_MouseMoveEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_MousePressEvent(void* ptr, void* event);
void QMacCocoaViewContainer_MousePressEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_MouseReleaseEvent(void* ptr, void* event);
void QMacCocoaViewContainer_MouseReleaseEventDefault(void* ptr, void* event);
char QMacCocoaViewContainer_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QMacCocoaViewContainer_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QMacCocoaViewContainer_Raise(void* ptr);
void QMacCocoaViewContainer_RaiseDefault(void* ptr);
void QMacCocoaViewContainer_Repaint(void* ptr);
void QMacCocoaViewContainer_RepaintDefault(void* ptr);
void QMacCocoaViewContainer_ResizeEvent(void* ptr, void* event);
void QMacCocoaViewContainer_ResizeEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_SetDisabled(void* ptr, char disable);
void QMacCocoaViewContainer_SetDisabledDefault(void* ptr, char disable);
void QMacCocoaViewContainer_SetFocus2(void* ptr);
void QMacCocoaViewContainer_SetFocus2Default(void* ptr);
void QMacCocoaViewContainer_SetHidden(void* ptr, char hidden);
void QMacCocoaViewContainer_SetHiddenDefault(void* ptr, char hidden);
void QMacCocoaViewContainer_Show(void* ptr);
void QMacCocoaViewContainer_ShowDefault(void* ptr);
void QMacCocoaViewContainer_ShowFullScreen(void* ptr);
void QMacCocoaViewContainer_ShowFullScreenDefault(void* ptr);
void QMacCocoaViewContainer_ShowMaximized(void* ptr);
void QMacCocoaViewContainer_ShowMaximizedDefault(void* ptr);
void QMacCocoaViewContainer_ShowMinimized(void* ptr);
void QMacCocoaViewContainer_ShowMinimizedDefault(void* ptr);
void QMacCocoaViewContainer_ShowNormal(void* ptr);
void QMacCocoaViewContainer_ShowNormalDefault(void* ptr);
void QMacCocoaViewContainer_TabletEvent(void* ptr, void* event);
void QMacCocoaViewContainer_TabletEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_Update(void* ptr);
void QMacCocoaViewContainer_UpdateDefault(void* ptr);
void QMacCocoaViewContainer_UpdateMicroFocus(void* ptr);
void QMacCocoaViewContainer_UpdateMicroFocusDefault(void* ptr);
void QMacCocoaViewContainer_WheelEvent(void* ptr, void* event);
void QMacCocoaViewContainer_WheelEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_TimerEvent(void* ptr, void* event);
void QMacCocoaViewContainer_TimerEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_ChildEvent(void* ptr, void* event);
void QMacCocoaViewContainer_ChildEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_ConnectNotify(void* ptr, void* sign);
void QMacCocoaViewContainer_ConnectNotifyDefault(void* ptr, void* sign);
void QMacCocoaViewContainer_CustomEvent(void* ptr, void* event);
void QMacCocoaViewContainer_CustomEventDefault(void* ptr, void* event);
void QMacCocoaViewContainer_DeleteLater(void* ptr);
void QMacCocoaViewContainer_DeleteLaterDefault(void* ptr);
void QMacCocoaViewContainer_DisconnectNotify(void* ptr, void* sign);
void QMacCocoaViewContainer_DisconnectNotifyDefault(void* ptr, void* sign);
char QMacCocoaViewContainer_EventFilter(void* ptr, void* watched, void* event);
char QMacCocoaViewContainer_EventFilterDefault(void* ptr, void* watched, void* event);
void* QMacCocoaViewContainer_MetaObject(void* ptr);
void* QMacCocoaViewContainer_MetaObjectDefault(void* ptr);
char QMacNativeWidget_Event(void* ptr, void* ev);
void* QMacNativeWidget_SizeHint(void* ptr);
void* QMacNativeWidget_SizeHintDefault(void* ptr);
void QMacNativeWidget_DestroyQMacNativeWidget(void* ptr);
void QMacNativeWidget_ActionEvent(void* ptr, void* event);
void QMacNativeWidget_ActionEventDefault(void* ptr, void* event);
void QMacNativeWidget_DragEnterEvent(void* ptr, void* event);
void QMacNativeWidget_DragEnterEventDefault(void* ptr, void* event);
void QMacNativeWidget_DragLeaveEvent(void* ptr, void* event);
void QMacNativeWidget_DragLeaveEventDefault(void* ptr, void* event);
void QMacNativeWidget_DragMoveEvent(void* ptr, void* event);
void QMacNativeWidget_DragMoveEventDefault(void* ptr, void* event);
void QMacNativeWidget_DropEvent(void* ptr, void* event);
void QMacNativeWidget_DropEventDefault(void* ptr, void* event);
void QMacNativeWidget_EnterEvent(void* ptr, void* event);
void QMacNativeWidget_EnterEventDefault(void* ptr, void* event);
void QMacNativeWidget_FocusInEvent(void* ptr, void* event);
void QMacNativeWidget_FocusInEventDefault(void* ptr, void* event);
void QMacNativeWidget_FocusOutEvent(void* ptr, void* event);
void QMacNativeWidget_FocusOutEventDefault(void* ptr, void* event);
void QMacNativeWidget_HideEvent(void* ptr, void* event);
void QMacNativeWidget_HideEventDefault(void* ptr, void* event);
void QMacNativeWidget_LeaveEvent(void* ptr, void* event);
void QMacNativeWidget_LeaveEventDefault(void* ptr, void* event);
void* QMacNativeWidget_MinimumSizeHint(void* ptr);
void* QMacNativeWidget_MinimumSizeHintDefault(void* ptr);
void QMacNativeWidget_MoveEvent(void* ptr, void* event);
void QMacNativeWidget_MoveEventDefault(void* ptr, void* event);
void QMacNativeWidget_PaintEvent(void* ptr, void* event);
void QMacNativeWidget_PaintEventDefault(void* ptr, void* event);
void QMacNativeWidget_SetEnabled(void* ptr, char vbo);
void QMacNativeWidget_SetEnabledDefault(void* ptr, char vbo);
void QMacNativeWidget_SetStyleSheet(void* ptr, char* styleSheet);
void QMacNativeWidget_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QMacNativeWidget_SetVisible(void* ptr, char visible);
void QMacNativeWidget_SetVisibleDefault(void* ptr, char visible);
void QMacNativeWidget_SetWindowModified(void* ptr, char vbo);
void QMacNativeWidget_SetWindowModifiedDefault(void* ptr, char vbo);
void QMacNativeWidget_SetWindowTitle(void* ptr, char* vqs);
void QMacNativeWidget_SetWindowTitleDefault(void* ptr, char* vqs);
void QMacNativeWidget_ShowEvent(void* ptr, void* event);
void QMacNativeWidget_ShowEventDefault(void* ptr, void* event);
void QMacNativeWidget_ChangeEvent(void* ptr, void* event);
void QMacNativeWidget_ChangeEventDefault(void* ptr, void* event);
char QMacNativeWidget_Close(void* ptr);
char QMacNativeWidget_CloseDefault(void* ptr);
void QMacNativeWidget_CloseEvent(void* ptr, void* event);
void QMacNativeWidget_CloseEventDefault(void* ptr, void* event);
void QMacNativeWidget_ContextMenuEvent(void* ptr, void* event);
void QMacNativeWidget_ContextMenuEventDefault(void* ptr, void* event);
char QMacNativeWidget_FocusNextPrevChild(void* ptr, char next);
char QMacNativeWidget_FocusNextPrevChildDefault(void* ptr, char next);
char QMacNativeWidget_HasHeightForWidth(void* ptr);
char QMacNativeWidget_HasHeightForWidthDefault(void* ptr);
int QMacNativeWidget_HeightForWidth(void* ptr, int w);
int QMacNativeWidget_HeightForWidthDefault(void* ptr, int w);
void QMacNativeWidget_Hide(void* ptr);
void QMacNativeWidget_HideDefault(void* ptr);
void QMacNativeWidget_InputMethodEvent(void* ptr, void* event);
void QMacNativeWidget_InputMethodEventDefault(void* ptr, void* event);
void* QMacNativeWidget_InputMethodQuery(void* ptr, long long query);
void* QMacNativeWidget_InputMethodQueryDefault(void* ptr, long long query);
void QMacNativeWidget_KeyPressEvent(void* ptr, void* event);
void QMacNativeWidget_KeyPressEventDefault(void* ptr, void* event);
void QMacNativeWidget_KeyReleaseEvent(void* ptr, void* event);
void QMacNativeWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QMacNativeWidget_Lower(void* ptr);
void QMacNativeWidget_LowerDefault(void* ptr);
void QMacNativeWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QMacNativeWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QMacNativeWidget_MouseMoveEvent(void* ptr, void* event);
void QMacNativeWidget_MouseMoveEventDefault(void* ptr, void* event);
void QMacNativeWidget_MousePressEvent(void* ptr, void* event);
void QMacNativeWidget_MousePressEventDefault(void* ptr, void* event);
void QMacNativeWidget_MouseReleaseEvent(void* ptr, void* event);
void QMacNativeWidget_MouseReleaseEventDefault(void* ptr, void* event);
char QMacNativeWidget_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QMacNativeWidget_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QMacNativeWidget_Raise(void* ptr);
void QMacNativeWidget_RaiseDefault(void* ptr);
void QMacNativeWidget_Repaint(void* ptr);
void QMacNativeWidget_RepaintDefault(void* ptr);
void QMacNativeWidget_ResizeEvent(void* ptr, void* event);
void QMacNativeWidget_ResizeEventDefault(void* ptr, void* event);
void QMacNativeWidget_SetDisabled(void* ptr, char disable);
void QMacNativeWidget_SetDisabledDefault(void* ptr, char disable);
void QMacNativeWidget_SetFocus2(void* ptr);
void QMacNativeWidget_SetFocus2Default(void* ptr);
void QMacNativeWidget_SetHidden(void* ptr, char hidden);
void QMacNativeWidget_SetHiddenDefault(void* ptr, char hidden);
void QMacNativeWidget_Show(void* ptr);
void QMacNativeWidget_ShowDefault(void* ptr);
void QMacNativeWidget_ShowFullScreen(void* ptr);
void QMacNativeWidget_ShowFullScreenDefault(void* ptr);
void QMacNativeWidget_ShowMaximized(void* ptr);
void QMacNativeWidget_ShowMaximizedDefault(void* ptr);
void QMacNativeWidget_ShowMinimized(void* ptr);
void QMacNativeWidget_ShowMinimizedDefault(void* ptr);
void QMacNativeWidget_ShowNormal(void* ptr);
void QMacNativeWidget_ShowNormalDefault(void* ptr);
void QMacNativeWidget_TabletEvent(void* ptr, void* event);
void QMacNativeWidget_TabletEventDefault(void* ptr, void* event);
void QMacNativeWidget_Update(void* ptr);
void QMacNativeWidget_UpdateDefault(void* ptr);
void QMacNativeWidget_UpdateMicroFocus(void* ptr);
void QMacNativeWidget_UpdateMicroFocusDefault(void* ptr);
void QMacNativeWidget_WheelEvent(void* ptr, void* event);
void QMacNativeWidget_WheelEventDefault(void* ptr, void* event);
void QMacNativeWidget_TimerEvent(void* ptr, void* event);
void QMacNativeWidget_TimerEventDefault(void* ptr, void* event);
void QMacNativeWidget_ChildEvent(void* ptr, void* event);
void QMacNativeWidget_ChildEventDefault(void* ptr, void* event);
void QMacNativeWidget_ConnectNotify(void* ptr, void* sign);
void QMacNativeWidget_ConnectNotifyDefault(void* ptr, void* sign);
void QMacNativeWidget_CustomEvent(void* ptr, void* event);
void QMacNativeWidget_CustomEventDefault(void* ptr, void* event);
void QMacNativeWidget_DeleteLater(void* ptr);
void QMacNativeWidget_DeleteLaterDefault(void* ptr);
void QMacNativeWidget_DisconnectNotify(void* ptr, void* sign);
void QMacNativeWidget_DisconnectNotifyDefault(void* ptr, void* sign);
char QMacNativeWidget_EventFilter(void* ptr, void* watched, void* event);
char QMacNativeWidget_EventFilterDefault(void* ptr, void* watched, void* event);
void* QMacNativeWidget_MetaObject(void* ptr);
void* QMacNativeWidget_MetaObjectDefault(void* ptr);
long long QMainWindow_DockOptions(void* ptr);
char QMainWindow_DocumentMode(void* ptr);
void* QMainWindow_IconSize(void* ptr);
char QMainWindow_IsAnimated(void* ptr);
char QMainWindow_IsDockNestingEnabled(void* ptr);
void QMainWindow_SetAnimated(void* ptr, char enabled);
void QMainWindow_SetDockNestingEnabled(void* ptr, char enabled);
void QMainWindow_SetDockOptions(void* ptr, long long options);
void QMainWindow_SetDocumentMode(void* ptr, char enabled);
void QMainWindow_SetIconSize(void* ptr, void* iconSize);
void QMainWindow_SetTabShape(void* ptr, long long tabShape);
void QMainWindow_SetToolButtonStyle(void* ptr, long long toolButtonStyle);
void QMainWindow_SetUnifiedTitleAndToolBarOnMac(void* ptr, char set);
void QMainWindow_SplitDockWidget(void* ptr, void* first, void* second, long long orientation);
long long QMainWindow_TabShape(void* ptr);
struct QtWidgets_PackedList QMainWindow_TabifiedDockWidgets(void* ptr, void* dockwidget);
void QMainWindow_TabifyDockWidget(void* ptr, void* first, void* second);
long long QMainWindow_ToolButtonStyle(void* ptr);
char QMainWindow_UnifiedTitleAndToolBarOnMac(void* ptr);
void* QMainWindow_NewQMainWindow(void* parent, long long flags);
void QMainWindow_AddDockWidget(void* ptr, long long area, void* dockwidget);
void QMainWindow_AddDockWidget2(void* ptr, long long area, void* dockwidget, long long orientation);
void* QMainWindow_AddToolBar3(void* ptr, char* title);
void QMainWindow_AddToolBar2(void* ptr, void* toolbar);
void QMainWindow_AddToolBar(void* ptr, long long area, void* toolbar);
void QMainWindow_AddToolBarBreak(void* ptr, long long area);
void* QMainWindow_CentralWidget(void* ptr);
void QMainWindow_ContextMenuEvent(void* ptr, void* event);
void QMainWindow_ContextMenuEventDefault(void* ptr, void* event);
long long QMainWindow_Corner(void* ptr, long long corner);
void* QMainWindow_CreatePopupMenu(void* ptr);
void* QMainWindow_CreatePopupMenuDefault(void* ptr);
long long QMainWindow_DockWidgetArea(void* ptr, void* dockwidget);
char QMainWindow_Event(void* ptr, void* event);
void QMainWindow_ConnectIconSizeChanged(void* ptr);
void QMainWindow_DisconnectIconSizeChanged(void* ptr);
void QMainWindow_IconSizeChanged(void* ptr, void* iconSize);
void QMainWindow_InsertToolBar(void* ptr, void* before, void* toolbar);
void QMainWindow_InsertToolBarBreak(void* ptr, void* before);
void* QMainWindow_MenuBar(void* ptr);
void* QMainWindow_MenuWidget(void* ptr);
void QMainWindow_RemoveDockWidget(void* ptr, void* dockwidget);
void QMainWindow_RemoveToolBar(void* ptr, void* toolbar);
void QMainWindow_RemoveToolBarBreak(void* ptr, void* before);
char QMainWindow_RestoreDockWidget(void* ptr, void* dockwidget);
char QMainWindow_RestoreState(void* ptr, void* state, int version);
void* QMainWindow_SaveState(void* ptr, int version);
void QMainWindow_SetCentralWidget(void* ptr, void* widget);
void QMainWindow_SetCorner(void* ptr, long long corner, long long area);
void QMainWindow_SetMenuBar(void* ptr, void* menuBar);
void QMainWindow_SetMenuWidget(void* ptr, void* menuBar);
void QMainWindow_SetStatusBar(void* ptr, void* statusbar);
void QMainWindow_SetTabPosition(void* ptr, long long areas, long long tabPosition);
void* QMainWindow_StatusBar(void* ptr);
long long QMainWindow_TabPosition(void* ptr, long long area);
void* QMainWindow_TakeCentralWidget(void* ptr);
long long QMainWindow_ToolBarArea(void* ptr, void* toolbar);
char QMainWindow_ToolBarBreak(void* ptr, void* toolbar);
void QMainWindow_ConnectToolButtonStyleChanged(void* ptr);
void QMainWindow_DisconnectToolButtonStyleChanged(void* ptr);
void QMainWindow_ToolButtonStyleChanged(void* ptr, long long toolButtonStyle);
void QMainWindow_DestroyQMainWindow(void* ptr);
void* QMainWindow_tabifiedDockWidgets_atList(void* ptr, int i);
void QMainWindow_ActionEvent(void* ptr, void* event);
void QMainWindow_ActionEventDefault(void* ptr, void* event);
void QMainWindow_DragEnterEvent(void* ptr, void* event);
void QMainWindow_DragEnterEventDefault(void* ptr, void* event);
void QMainWindow_DragLeaveEvent(void* ptr, void* event);
void QMainWindow_DragLeaveEventDefault(void* ptr, void* event);
void QMainWindow_DragMoveEvent(void* ptr, void* event);
void QMainWindow_DragMoveEventDefault(void* ptr, void* event);
void QMainWindow_DropEvent(void* ptr, void* event);
void QMainWindow_DropEventDefault(void* ptr, void* event);
void QMainWindow_EnterEvent(void* ptr, void* event);
void QMainWindow_EnterEventDefault(void* ptr, void* event);
void QMainWindow_FocusInEvent(void* ptr, void* event);
void QMainWindow_FocusInEventDefault(void* ptr, void* event);
void QMainWindow_FocusOutEvent(void* ptr, void* event);
void QMainWindow_FocusOutEventDefault(void* ptr, void* event);
void QMainWindow_HideEvent(void* ptr, void* event);
void QMainWindow_HideEventDefault(void* ptr, void* event);
void QMainWindow_LeaveEvent(void* ptr, void* event);
void QMainWindow_LeaveEventDefault(void* ptr, void* event);
void* QMainWindow_MinimumSizeHint(void* ptr);
void* QMainWindow_MinimumSizeHintDefault(void* ptr);
void QMainWindow_MoveEvent(void* ptr, void* event);
void QMainWindow_MoveEventDefault(void* ptr, void* event);
void QMainWindow_PaintEvent(void* ptr, void* event);
void QMainWindow_PaintEventDefault(void* ptr, void* event);
void QMainWindow_SetEnabled(void* ptr, char vbo);
void QMainWindow_SetEnabledDefault(void* ptr, char vbo);
void QMainWindow_SetStyleSheet(void* ptr, char* styleSheet);
void QMainWindow_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QMainWindow_SetVisible(void* ptr, char visible);
void QMainWindow_SetVisibleDefault(void* ptr, char visible);
void QMainWindow_SetWindowModified(void* ptr, char vbo);
void QMainWindow_SetWindowModifiedDefault(void* ptr, char vbo);
void QMainWindow_SetWindowTitle(void* ptr, char* vqs);
void QMainWindow_SetWindowTitleDefault(void* ptr, char* vqs);
void QMainWindow_ShowEvent(void* ptr, void* event);
void QMainWindow_ShowEventDefault(void* ptr, void* event);
void* QMainWindow_SizeHint(void* ptr);
void* QMainWindow_SizeHintDefault(void* ptr);
void QMainWindow_ChangeEvent(void* ptr, void* event);
void QMainWindow_ChangeEventDefault(void* ptr, void* event);
char QMainWindow_Close(void* ptr);
char QMainWindow_CloseDefault(void* ptr);
void QMainWindow_CloseEvent(void* ptr, void* event);
void QMainWindow_CloseEventDefault(void* ptr, void* event);
char QMainWindow_FocusNextPrevChild(void* ptr, char next);
char QMainWindow_FocusNextPrevChildDefault(void* ptr, char next);
char QMainWindow_HasHeightForWidth(void* ptr);
char QMainWindow_HasHeightForWidthDefault(void* ptr);
int QMainWindow_HeightForWidth(void* ptr, int w);
int QMainWindow_HeightForWidthDefault(void* ptr, int w);
void QMainWindow_Hide(void* ptr);
void QMainWindow_HideDefault(void* ptr);
void QMainWindow_InputMethodEvent(void* ptr, void* event);
void QMainWindow_InputMethodEventDefault(void* ptr, void* event);
void* QMainWindow_InputMethodQuery(void* ptr, long long query);
void* QMainWindow_InputMethodQueryDefault(void* ptr, long long query);
void QMainWindow_KeyPressEvent(void* ptr, void* event);
void QMainWindow_KeyPressEventDefault(void* ptr, void* event);
void QMainWindow_KeyReleaseEvent(void* ptr, void* event);
void QMainWindow_KeyReleaseEventDefault(void* ptr, void* event);
void QMainWindow_Lower(void* ptr);
void QMainWindow_LowerDefault(void* ptr);
void QMainWindow_MouseDoubleClickEvent(void* ptr, void* event);
void QMainWindow_MouseDoubleClickEventDefault(void* ptr, void* event);
void QMainWindow_MouseMoveEvent(void* ptr, void* event);
void QMainWindow_MouseMoveEventDefault(void* ptr, void* event);
void QMainWindow_MousePressEvent(void* ptr, void* event);
void QMainWindow_MousePressEventDefault(void* ptr, void* event);
void QMainWindow_MouseReleaseEvent(void* ptr, void* event);
void QMainWindow_MouseReleaseEventDefault(void* ptr, void* event);
char QMainWindow_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QMainWindow_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QMainWindow_Raise(void* ptr);
void QMainWindow_RaiseDefault(void* ptr);
void QMainWindow_Repaint(void* ptr);
void QMainWindow_RepaintDefault(void* ptr);
void QMainWindow_ResizeEvent(void* ptr, void* event);
void QMainWindow_ResizeEventDefault(void* ptr, void* event);
void QMainWindow_SetDisabled(void* ptr, char disable);
void QMainWindow_SetDisabledDefault(void* ptr, char disable);
void QMainWindow_SetFocus2(void* ptr);
void QMainWindow_SetFocus2Default(void* ptr);
void QMainWindow_SetHidden(void* ptr, char hidden);
void QMainWindow_SetHiddenDefault(void* ptr, char hidden);
void QMainWindow_Show(void* ptr);
void QMainWindow_ShowDefault(void* ptr);
void QMainWindow_ShowFullScreen(void* ptr);
void QMainWindow_ShowFullScreenDefault(void* ptr);
void QMainWindow_ShowMaximized(void* ptr);
void QMainWindow_ShowMaximizedDefault(void* ptr);
void QMainWindow_ShowMinimized(void* ptr);
void QMainWindow_ShowMinimizedDefault(void* ptr);
void QMainWindow_ShowNormal(void* ptr);
void QMainWindow_ShowNormalDefault(void* ptr);
void QMainWindow_TabletEvent(void* ptr, void* event);
void QMainWindow_TabletEventDefault(void* ptr, void* event);
void QMainWindow_Update(void* ptr);
void QMainWindow_UpdateDefault(void* ptr);
void QMainWindow_UpdateMicroFocus(void* ptr);
void QMainWindow_UpdateMicroFocusDefault(void* ptr);
void QMainWindow_WheelEvent(void* ptr, void* event);
void QMainWindow_WheelEventDefault(void* ptr, void* event);
void QMainWindow_TimerEvent(void* ptr, void* event);
void QMainWindow_TimerEventDefault(void* ptr, void* event);
void QMainWindow_ChildEvent(void* ptr, void* event);
void QMainWindow_ChildEventDefault(void* ptr, void* event);
void QMainWindow_ConnectNotify(void* ptr, void* sign);
void QMainWindow_ConnectNotifyDefault(void* ptr, void* sign);
void QMainWindow_CustomEvent(void* ptr, void* event);
void QMainWindow_CustomEventDefault(void* ptr, void* event);
void QMainWindow_DeleteLater(void* ptr);
void QMainWindow_DeleteLaterDefault(void* ptr);
void QMainWindow_DisconnectNotify(void* ptr, void* sign);
void QMainWindow_DisconnectNotifyDefault(void* ptr, void* sign);
char QMainWindow_EventFilter(void* ptr, void* watched, void* event);
char QMainWindow_EventFilterDefault(void* ptr, void* watched, void* event);
void* QMainWindow_MetaObject(void* ptr);
void* QMainWindow_MetaObjectDefault(void* ptr);
long long QMdiArea_ActivationOrder(void* ptr);
void* QMdiArea_Background(void* ptr);
char QMdiArea_DocumentMode(void* ptr);
void QMdiArea_SetActivationOrder(void* ptr, long long order);
void QMdiArea_SetBackground(void* ptr, void* background);
void QMdiArea_SetDocumentMode(void* ptr, char enabled);
void QMdiArea_SetTabPosition(void* ptr, long long position);
void QMdiArea_SetTabShape(void* ptr, long long shape);
void QMdiArea_SetTabsClosable(void* ptr, char closable);
void QMdiArea_SetTabsMovable(void* ptr, char movable);
void QMdiArea_SetViewMode(void* ptr, long long mode);
long long QMdiArea_TabPosition(void* ptr);
long long QMdiArea_TabShape(void* ptr);
char QMdiArea_TabsClosable(void* ptr);
char QMdiArea_TabsMovable(void* ptr);
long long QMdiArea_ViewMode(void* ptr);
void* QMdiArea_NewQMdiArea(void* parent);
void QMdiArea_ActivateNextSubWindow(void* ptr);
void QMdiArea_ActivatePreviousSubWindow(void* ptr);
void* QMdiArea_ActiveSubWindow(void* ptr);
void* QMdiArea_AddSubWindow(void* ptr, void* widget, long long windowFlags);
void QMdiArea_CascadeSubWindows(void* ptr);
void QMdiArea_ChildEvent(void* ptr, void* childEvent);
void QMdiArea_CloseActiveSubWindow(void* ptr);
void QMdiArea_CloseAllSubWindows(void* ptr);
void* QMdiArea_CurrentSubWindow(void* ptr);
char QMdiArea_Event(void* ptr, void* event);
char QMdiArea_EventFilter(void* ptr, void* object, void* event);
void* QMdiArea_MinimumSizeHint(void* ptr);
void* QMdiArea_MinimumSizeHintDefault(void* ptr);
void QMdiArea_PaintEvent(void* ptr, void* paintEvent);
void QMdiArea_PaintEventDefault(void* ptr, void* paintEvent);
void QMdiArea_RemoveSubWindow(void* ptr, void* widget);
void QMdiArea_ResizeEvent(void* ptr, void* resizeEvent);
void QMdiArea_ResizeEventDefault(void* ptr, void* resizeEvent);
void QMdiArea_ScrollContentsBy(void* ptr, int dx, int dy);
void QMdiArea_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QMdiArea_SetActiveSubWindow(void* ptr, void* window);
void QMdiArea_SetOption(void* ptr, long long option, char on);
void QMdiArea_SetupViewport(void* ptr, void* viewport);
void QMdiArea_SetupViewportDefault(void* ptr, void* viewport);
void QMdiArea_ShowEvent(void* ptr, void* showEvent);
void QMdiArea_ShowEventDefault(void* ptr, void* showEvent);
void* QMdiArea_SizeHint(void* ptr);
void* QMdiArea_SizeHintDefault(void* ptr);
void QMdiArea_ConnectSubWindowActivated(void* ptr);
void QMdiArea_DisconnectSubWindowActivated(void* ptr);
void QMdiArea_SubWindowActivated(void* ptr, void* window);
struct QtWidgets_PackedList QMdiArea_SubWindowList(void* ptr, long long order);
char QMdiArea_TestOption(void* ptr, long long option);
void QMdiArea_TileSubWindows(void* ptr);
void QMdiArea_TimerEvent(void* ptr, void* timerEvent);
char QMdiArea_ViewportEvent(void* ptr, void* event);
char QMdiArea_ViewportEventDefault(void* ptr, void* event);
void QMdiArea_DestroyQMdiArea(void* ptr);
void* QMdiArea_subWindowList_atList(void* ptr, int i);
void QMdiArea_DragEnterEvent(void* ptr, void* event);
void QMdiArea_DragEnterEventDefault(void* ptr, void* event);
void QMdiArea_DragLeaveEvent(void* ptr, void* event);
void QMdiArea_DragLeaveEventDefault(void* ptr, void* event);
void QMdiArea_DragMoveEvent(void* ptr, void* event);
void QMdiArea_DragMoveEventDefault(void* ptr, void* event);
void QMdiArea_DropEvent(void* ptr, void* event);
void QMdiArea_DropEventDefault(void* ptr, void* event);
void QMdiArea_ContextMenuEvent(void* ptr, void* e);
void QMdiArea_ContextMenuEventDefault(void* ptr, void* e);
void QMdiArea_KeyPressEvent(void* ptr, void* e);
void QMdiArea_KeyPressEventDefault(void* ptr, void* e);
void QMdiArea_MouseDoubleClickEvent(void* ptr, void* e);
void QMdiArea_MouseDoubleClickEventDefault(void* ptr, void* e);
void QMdiArea_MouseMoveEvent(void* ptr, void* e);
void QMdiArea_MouseMoveEventDefault(void* ptr, void* e);
void QMdiArea_MousePressEvent(void* ptr, void* e);
void QMdiArea_MousePressEventDefault(void* ptr, void* e);
void QMdiArea_MouseReleaseEvent(void* ptr, void* e);
void QMdiArea_MouseReleaseEventDefault(void* ptr, void* e);
void* QMdiArea_ViewportSizeHint(void* ptr);
void* QMdiArea_ViewportSizeHintDefault(void* ptr);
void QMdiArea_WheelEvent(void* ptr, void* e);
void QMdiArea_WheelEventDefault(void* ptr, void* e);
void QMdiArea_ChangeEvent(void* ptr, void* ev);
void QMdiArea_ChangeEventDefault(void* ptr, void* ev);
void QMdiArea_ActionEvent(void* ptr, void* event);
void QMdiArea_ActionEventDefault(void* ptr, void* event);
void QMdiArea_EnterEvent(void* ptr, void* event);
void QMdiArea_EnterEventDefault(void* ptr, void* event);
void QMdiArea_FocusInEvent(void* ptr, void* event);
void QMdiArea_FocusInEventDefault(void* ptr, void* event);
void QMdiArea_FocusOutEvent(void* ptr, void* event);
void QMdiArea_FocusOutEventDefault(void* ptr, void* event);
void QMdiArea_HideEvent(void* ptr, void* event);
void QMdiArea_HideEventDefault(void* ptr, void* event);
void QMdiArea_LeaveEvent(void* ptr, void* event);
void QMdiArea_LeaveEventDefault(void* ptr, void* event);
void QMdiArea_MoveEvent(void* ptr, void* event);
void QMdiArea_MoveEventDefault(void* ptr, void* event);
void QMdiArea_SetEnabled(void* ptr, char vbo);
void QMdiArea_SetEnabledDefault(void* ptr, char vbo);
void QMdiArea_SetStyleSheet(void* ptr, char* styleSheet);
void QMdiArea_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QMdiArea_SetVisible(void* ptr, char visible);
void QMdiArea_SetVisibleDefault(void* ptr, char visible);
void QMdiArea_SetWindowModified(void* ptr, char vbo);
void QMdiArea_SetWindowModifiedDefault(void* ptr, char vbo);
void QMdiArea_SetWindowTitle(void* ptr, char* vqs);
void QMdiArea_SetWindowTitleDefault(void* ptr, char* vqs);
char QMdiArea_Close(void* ptr);
char QMdiArea_CloseDefault(void* ptr);
void QMdiArea_CloseEvent(void* ptr, void* event);
void QMdiArea_CloseEventDefault(void* ptr, void* event);
char QMdiArea_FocusNextPrevChild(void* ptr, char next);
char QMdiArea_FocusNextPrevChildDefault(void* ptr, char next);
char QMdiArea_HasHeightForWidth(void* ptr);
char QMdiArea_HasHeightForWidthDefault(void* ptr);
int QMdiArea_HeightForWidth(void* ptr, int w);
int QMdiArea_HeightForWidthDefault(void* ptr, int w);
void QMdiArea_Hide(void* ptr);
void QMdiArea_HideDefault(void* ptr);
void QMdiArea_InputMethodEvent(void* ptr, void* event);
void QMdiArea_InputMethodEventDefault(void* ptr, void* event);
void* QMdiArea_InputMethodQuery(void* ptr, long long query);
void* QMdiArea_InputMethodQueryDefault(void* ptr, long long query);
void QMdiArea_KeyReleaseEvent(void* ptr, void* event);
void QMdiArea_KeyReleaseEventDefault(void* ptr, void* event);
void QMdiArea_Lower(void* ptr);
void QMdiArea_LowerDefault(void* ptr);
char QMdiArea_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QMdiArea_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QMdiArea_Raise(void* ptr);
void QMdiArea_RaiseDefault(void* ptr);
void QMdiArea_Repaint(void* ptr);
void QMdiArea_RepaintDefault(void* ptr);
void QMdiArea_SetDisabled(void* ptr, char disable);
void QMdiArea_SetDisabledDefault(void* ptr, char disable);
void QMdiArea_SetFocus2(void* ptr);
void QMdiArea_SetFocus2Default(void* ptr);
void QMdiArea_SetHidden(void* ptr, char hidden);
void QMdiArea_SetHiddenDefault(void* ptr, char hidden);
void QMdiArea_Show(void* ptr);
void QMdiArea_ShowDefault(void* ptr);
void QMdiArea_ShowFullScreen(void* ptr);
void QMdiArea_ShowFullScreenDefault(void* ptr);
void QMdiArea_ShowMaximized(void* ptr);
void QMdiArea_ShowMaximizedDefault(void* ptr);
void QMdiArea_ShowMinimized(void* ptr);
void QMdiArea_ShowMinimizedDefault(void* ptr);
void QMdiArea_ShowNormal(void* ptr);
void QMdiArea_ShowNormalDefault(void* ptr);
void QMdiArea_TabletEvent(void* ptr, void* event);
void QMdiArea_TabletEventDefault(void* ptr, void* event);
void QMdiArea_Update(void* ptr);
void QMdiArea_UpdateDefault(void* ptr);
void QMdiArea_UpdateMicroFocus(void* ptr);
void QMdiArea_UpdateMicroFocusDefault(void* ptr);
void QMdiArea_ConnectNotify(void* ptr, void* sign);
void QMdiArea_ConnectNotifyDefault(void* ptr, void* sign);
void QMdiArea_CustomEvent(void* ptr, void* event);
void QMdiArea_CustomEventDefault(void* ptr, void* event);
void QMdiArea_DeleteLater(void* ptr);
void QMdiArea_DeleteLaterDefault(void* ptr);
void QMdiArea_DisconnectNotify(void* ptr, void* sign);
void QMdiArea_DisconnectNotifyDefault(void* ptr, void* sign);
void* QMdiArea_MetaObject(void* ptr);
void* QMdiArea_MetaObjectDefault(void* ptr);
int QMdiSubWindow_KeyboardPageStep(void* ptr);
int QMdiSubWindow_KeyboardSingleStep(void* ptr);
void QMdiSubWindow_SetKeyboardPageStep(void* ptr, int step);
void QMdiSubWindow_SetKeyboardSingleStep(void* ptr, int step);
void* QMdiSubWindow_NewQMdiSubWindow(void* parent, long long flags);
void QMdiSubWindow_ConnectAboutToActivate(void* ptr);
void QMdiSubWindow_DisconnectAboutToActivate(void* ptr);
void QMdiSubWindow_AboutToActivate(void* ptr);
void QMdiSubWindow_ChangeEvent(void* ptr, void* changeEvent);
void QMdiSubWindow_ChangeEventDefault(void* ptr, void* changeEvent);
void QMdiSubWindow_ChildEvent(void* ptr, void* childEvent);
void QMdiSubWindow_CloseEvent(void* ptr, void* closeEvent);
void QMdiSubWindow_CloseEventDefault(void* ptr, void* closeEvent);
void QMdiSubWindow_ContextMenuEvent(void* ptr, void* contextMenuEvent);
void QMdiSubWindow_ContextMenuEventDefault(void* ptr, void* contextMenuEvent);
char QMdiSubWindow_Event(void* ptr, void* event);
char QMdiSubWindow_EventFilter(void* ptr, void* object, void* event);
void QMdiSubWindow_FocusInEvent(void* ptr, void* focusInEvent);
void QMdiSubWindow_FocusInEventDefault(void* ptr, void* focusInEvent);
void QMdiSubWindow_FocusOutEvent(void* ptr, void* focusOutEvent);
void QMdiSubWindow_FocusOutEventDefault(void* ptr, void* focusOutEvent);
void QMdiSubWindow_HideEvent(void* ptr, void* hideEvent);
void QMdiSubWindow_HideEventDefault(void* ptr, void* hideEvent);
char QMdiSubWindow_IsShaded(void* ptr);
void QMdiSubWindow_KeyPressEvent(void* ptr, void* keyEvent);
void QMdiSubWindow_KeyPressEventDefault(void* ptr, void* keyEvent);
void QMdiSubWindow_LeaveEvent(void* ptr, void* leaveEvent);
void QMdiSubWindow_LeaveEventDefault(void* ptr, void* leaveEvent);
void* QMdiSubWindow_MdiArea(void* ptr);
void* QMdiSubWindow_MinimumSizeHint(void* ptr);
void* QMdiSubWindow_MinimumSizeHintDefault(void* ptr);
void QMdiSubWindow_MouseDoubleClickEvent(void* ptr, void* mouseEvent);
void QMdiSubWindow_MouseDoubleClickEventDefault(void* ptr, void* mouseEvent);
void QMdiSubWindow_MouseMoveEvent(void* ptr, void* mouseEvent);
void QMdiSubWindow_MouseMoveEventDefault(void* ptr, void* mouseEvent);
void QMdiSubWindow_MousePressEvent(void* ptr, void* mouseEvent);
void QMdiSubWindow_MousePressEventDefault(void* ptr, void* mouseEvent);
void QMdiSubWindow_MouseReleaseEvent(void* ptr, void* mouseEvent);
void QMdiSubWindow_MouseReleaseEventDefault(void* ptr, void* mouseEvent);
void QMdiSubWindow_MoveEvent(void* ptr, void* moveEvent);
void QMdiSubWindow_MoveEventDefault(void* ptr, void* moveEvent);
void QMdiSubWindow_PaintEvent(void* ptr, void* paintEvent);
void QMdiSubWindow_PaintEventDefault(void* ptr, void* paintEvent);
void QMdiSubWindow_ResizeEvent(void* ptr, void* resizeEvent);
void QMdiSubWindow_ResizeEventDefault(void* ptr, void* resizeEvent);
void QMdiSubWindow_SetOption(void* ptr, long long option, char on);
void QMdiSubWindow_SetSystemMenu(void* ptr, void* systemMenu);
void QMdiSubWindow_SetWidget(void* ptr, void* widget);
void QMdiSubWindow_ShowEvent(void* ptr, void* showEvent);
void QMdiSubWindow_ShowEventDefault(void* ptr, void* showEvent);
void QMdiSubWindow_ShowShaded(void* ptr);
void QMdiSubWindow_ShowSystemMenu(void* ptr);
void* QMdiSubWindow_SizeHint(void* ptr);
void* QMdiSubWindow_SizeHintDefault(void* ptr);
void* QMdiSubWindow_SystemMenu(void* ptr);
char QMdiSubWindow_TestOption(void* ptr, long long option);
void QMdiSubWindow_TimerEvent(void* ptr, void* timerEvent);
void* QMdiSubWindow_Widget(void* ptr);
void QMdiSubWindow_ConnectWindowStateChanged(void* ptr);
void QMdiSubWindow_DisconnectWindowStateChanged(void* ptr);
void QMdiSubWindow_WindowStateChanged(void* ptr, long long oldState, long long newState);
void QMdiSubWindow_DestroyQMdiSubWindow(void* ptr);
void QMdiSubWindow_ActionEvent(void* ptr, void* event);
void QMdiSubWindow_ActionEventDefault(void* ptr, void* event);
void QMdiSubWindow_DragEnterEvent(void* ptr, void* event);
void QMdiSubWindow_DragEnterEventDefault(void* ptr, void* event);
void QMdiSubWindow_DragLeaveEvent(void* ptr, void* event);
void QMdiSubWindow_DragLeaveEventDefault(void* ptr, void* event);
void QMdiSubWindow_DragMoveEvent(void* ptr, void* event);
void QMdiSubWindow_DragMoveEventDefault(void* ptr, void* event);
void QMdiSubWindow_DropEvent(void* ptr, void* event);
void QMdiSubWindow_DropEventDefault(void* ptr, void* event);
void QMdiSubWindow_EnterEvent(void* ptr, void* event);
void QMdiSubWindow_EnterEventDefault(void* ptr, void* event);
void QMdiSubWindow_SetEnabled(void* ptr, char vbo);
void QMdiSubWindow_SetEnabledDefault(void* ptr, char vbo);
void QMdiSubWindow_SetStyleSheet(void* ptr, char* styleSheet);
void QMdiSubWindow_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QMdiSubWindow_SetVisible(void* ptr, char visible);
void QMdiSubWindow_SetVisibleDefault(void* ptr, char visible);
void QMdiSubWindow_SetWindowModified(void* ptr, char vbo);
void QMdiSubWindow_SetWindowModifiedDefault(void* ptr, char vbo);
void QMdiSubWindow_SetWindowTitle(void* ptr, char* vqs);
void QMdiSubWindow_SetWindowTitleDefault(void* ptr, char* vqs);
char QMdiSubWindow_Close(void* ptr);
char QMdiSubWindow_CloseDefault(void* ptr);
char QMdiSubWindow_FocusNextPrevChild(void* ptr, char next);
char QMdiSubWindow_FocusNextPrevChildDefault(void* ptr, char next);
char QMdiSubWindow_HasHeightForWidth(void* ptr);
char QMdiSubWindow_HasHeightForWidthDefault(void* ptr);
int QMdiSubWindow_HeightForWidth(void* ptr, int w);
int QMdiSubWindow_HeightForWidthDefault(void* ptr, int w);
void QMdiSubWindow_Hide(void* ptr);
void QMdiSubWindow_HideDefault(void* ptr);
void QMdiSubWindow_InputMethodEvent(void* ptr, void* event);
void QMdiSubWindow_InputMethodEventDefault(void* ptr, void* event);
void* QMdiSubWindow_InputMethodQuery(void* ptr, long long query);
void* QMdiSubWindow_InputMethodQueryDefault(void* ptr, long long query);
void QMdiSubWindow_KeyReleaseEvent(void* ptr, void* event);
void QMdiSubWindow_KeyReleaseEventDefault(void* ptr, void* event);
void QMdiSubWindow_Lower(void* ptr);
void QMdiSubWindow_LowerDefault(void* ptr);
char QMdiSubWindow_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QMdiSubWindow_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QMdiSubWindow_Raise(void* ptr);
void QMdiSubWindow_RaiseDefault(void* ptr);
void QMdiSubWindow_Repaint(void* ptr);
void QMdiSubWindow_RepaintDefault(void* ptr);
void QMdiSubWindow_SetDisabled(void* ptr, char disable);
void QMdiSubWindow_SetDisabledDefault(void* ptr, char disable);
void QMdiSubWindow_SetFocus2(void* ptr);
void QMdiSubWindow_SetFocus2Default(void* ptr);
void QMdiSubWindow_SetHidden(void* ptr, char hidden);
void QMdiSubWindow_SetHiddenDefault(void* ptr, char hidden);
void QMdiSubWindow_Show(void* ptr);
void QMdiSubWindow_ShowDefault(void* ptr);
void QMdiSubWindow_ShowFullScreen(void* ptr);
void QMdiSubWindow_ShowFullScreenDefault(void* ptr);
void QMdiSubWindow_ShowMaximized(void* ptr);
void QMdiSubWindow_ShowMaximizedDefault(void* ptr);
void QMdiSubWindow_ShowMinimized(void* ptr);
void QMdiSubWindow_ShowMinimizedDefault(void* ptr);
void QMdiSubWindow_ShowNormal(void* ptr);
void QMdiSubWindow_ShowNormalDefault(void* ptr);
void QMdiSubWindow_TabletEvent(void* ptr, void* event);
void QMdiSubWindow_TabletEventDefault(void* ptr, void* event);
void QMdiSubWindow_Update(void* ptr);
void QMdiSubWindow_UpdateDefault(void* ptr);
void QMdiSubWindow_UpdateMicroFocus(void* ptr);
void QMdiSubWindow_UpdateMicroFocusDefault(void* ptr);
void QMdiSubWindow_WheelEvent(void* ptr, void* event);
void QMdiSubWindow_WheelEventDefault(void* ptr, void* event);
void QMdiSubWindow_ConnectNotify(void* ptr, void* sign);
void QMdiSubWindow_ConnectNotifyDefault(void* ptr, void* sign);
void QMdiSubWindow_CustomEvent(void* ptr, void* event);
void QMdiSubWindow_CustomEventDefault(void* ptr, void* event);
void QMdiSubWindow_DeleteLater(void* ptr);
void QMdiSubWindow_DeleteLaterDefault(void* ptr);
void QMdiSubWindow_DisconnectNotify(void* ptr, void* sign);
void QMdiSubWindow_DisconnectNotifyDefault(void* ptr, void* sign);
void* QMdiSubWindow_MetaObject(void* ptr);
void* QMdiSubWindow_MetaObjectDefault(void* ptr);
void* QMenu_Icon(void* ptr);
char QMenu_IsTearOffEnabled(void* ptr);
char QMenu_SeparatorsCollapsible(void* ptr);
void QMenu_SetIcon(void* ptr, void* icon);
void QMenu_SetSeparatorsCollapsible(void* ptr, char collapse);
void QMenu_SetTearOffEnabled(void* ptr, char vbo);
void QMenu_SetTitle(void* ptr, char* title);
void QMenu_SetToolTipsVisible(void* ptr, char visible);
struct QtWidgets_PackedString QMenu_Title(void* ptr);
char QMenu_ToolTipsVisible(void* ptr);
void* QMenu_NewQMenu(void* parent);
void* QMenu_NewQMenu2(char* title, void* parent);
void QMenu_ConnectAboutToHide(void* ptr);
void QMenu_DisconnectAboutToHide(void* ptr);
void QMenu_AboutToHide(void* ptr);
void QMenu_ConnectAboutToShow(void* ptr);
void QMenu_DisconnectAboutToShow(void* ptr);
void QMenu_AboutToShow(void* ptr);
void* QMenu_ActionAt(void* ptr, void* pt);
void QMenu_ActionEvent(void* ptr, void* e);
void QMenu_ActionEventDefault(void* ptr, void* e);
void* QMenu_ActionGeometry(void* ptr, void* act);
void* QMenu_ActiveAction(void* ptr);
void* QMenu_AddAction2(void* ptr, void* icon, char* text);
void* QMenu_AddAction4(void* ptr, void* icon, char* text, void* receiver, char* member, void* shortcut);
void* QMenu_AddAction(void* ptr, char* text);
void* QMenu_AddAction3(void* ptr, char* text, void* receiver, char* member, void* shortcut);
void* QMenu_AddMenu(void* ptr, void* menu);
void* QMenu_AddMenu3(void* ptr, void* icon, char* title);
void* QMenu_AddMenu2(void* ptr, char* title);
void* QMenu_AddSection2(void* ptr, void* icon, char* text);
void* QMenu_AddSection(void* ptr, char* text);
void* QMenu_AddSeparator(void* ptr);
void QMenu_ChangeEvent(void* ptr, void* e);
void QMenu_ChangeEventDefault(void* ptr, void* e);
void QMenu_Clear(void* ptr);
int QMenu_ColumnCount(void* ptr);
void* QMenu_DefaultAction(void* ptr);
void QMenu_EnterEvent(void* ptr, void* vqe);
void QMenu_EnterEventDefault(void* ptr, void* vqe);
char QMenu_Event(void* ptr, void* e);
void* QMenu_Exec(void* ptr);
void* QMenu_Exec2(void* ptr, void* p, void* action);
char QMenu_FocusNextPrevChild(void* ptr, char next);
char QMenu_FocusNextPrevChildDefault(void* ptr, char next);
void QMenu_HideEvent(void* ptr, void* vqh);
void QMenu_HideEventDefault(void* ptr, void* vqh);
void QMenu_HideTearOffMenu(void* ptr);
void QMenu_ConnectHovered(void* ptr);
void QMenu_DisconnectHovered(void* ptr);
void QMenu_Hovered(void* ptr, void* action);
void QMenu_InitStyleOption(void* ptr, void* option, void* action);
void* QMenu_InsertMenu(void* ptr, void* before, void* menu);
void* QMenu_InsertSection2(void* ptr, void* before, void* icon, char* text);
void* QMenu_InsertSection(void* ptr, void* before, char* text);
void* QMenu_InsertSeparator(void* ptr, void* before);
char QMenu_IsEmpty(void* ptr);
char QMenu_IsTearOffMenuVisible(void* ptr);
void QMenu_KeyPressEvent(void* ptr, void* e);
void QMenu_KeyPressEventDefault(void* ptr, void* e);
void QMenu_LeaveEvent(void* ptr, void* vqe);
void QMenu_LeaveEventDefault(void* ptr, void* vqe);
void* QMenu_MenuAction(void* ptr);
void QMenu_MouseMoveEvent(void* ptr, void* e);
void QMenu_MouseMoveEventDefault(void* ptr, void* e);
void QMenu_MousePressEvent(void* ptr, void* e);
void QMenu_MousePressEventDefault(void* ptr, void* e);
void QMenu_MouseReleaseEvent(void* ptr, void* e);
void QMenu_MouseReleaseEventDefault(void* ptr, void* e);
void QMenu_PaintEvent(void* ptr, void* e);
void QMenu_PaintEventDefault(void* ptr, void* e);
void QMenu_Popup(void* ptr, void* p, void* atAction);
void QMenu_SetActiveAction(void* ptr, void* act);
void QMenu_SetAsDockMenu(void* ptr);
void QMenu_SetDefaultAction(void* ptr, void* act);
void QMenu_ShowTearOffMenu2(void* ptr);
void QMenu_ShowTearOffMenu(void* ptr, void* pos);
void* QMenu_SizeHint(void* ptr);
void* QMenu_SizeHintDefault(void* ptr);
void QMenu_TimerEvent(void* ptr, void* e);
void QMenu_ConnectTriggered(void* ptr);
void QMenu_DisconnectTriggered(void* ptr);
void QMenu_Triggered(void* ptr, void* action);
void QMenu_WheelEvent(void* ptr, void* e);
void QMenu_WheelEventDefault(void* ptr, void* e);
void QMenu_DestroyQMenu(void* ptr);
void QMenu_DragEnterEvent(void* ptr, void* event);
void QMenu_DragEnterEventDefault(void* ptr, void* event);
void QMenu_DragLeaveEvent(void* ptr, void* event);
void QMenu_DragLeaveEventDefault(void* ptr, void* event);
void QMenu_DragMoveEvent(void* ptr, void* event);
void QMenu_DragMoveEventDefault(void* ptr, void* event);
void QMenu_DropEvent(void* ptr, void* event);
void QMenu_DropEventDefault(void* ptr, void* event);
void QMenu_FocusInEvent(void* ptr, void* event);
void QMenu_FocusInEventDefault(void* ptr, void* event);
void QMenu_FocusOutEvent(void* ptr, void* event);
void QMenu_FocusOutEventDefault(void* ptr, void* event);
void* QMenu_MinimumSizeHint(void* ptr);
void* QMenu_MinimumSizeHintDefault(void* ptr);
void QMenu_MoveEvent(void* ptr, void* event);
void QMenu_MoveEventDefault(void* ptr, void* event);
void QMenu_SetEnabled(void* ptr, char vbo);
void QMenu_SetEnabledDefault(void* ptr, char vbo);
void QMenu_SetStyleSheet(void* ptr, char* styleSheet);
void QMenu_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QMenu_SetVisible(void* ptr, char visible);
void QMenu_SetVisibleDefault(void* ptr, char visible);
void QMenu_SetWindowModified(void* ptr, char vbo);
void QMenu_SetWindowModifiedDefault(void* ptr, char vbo);
void QMenu_SetWindowTitle(void* ptr, char* vqs);
void QMenu_SetWindowTitleDefault(void* ptr, char* vqs);
void QMenu_ShowEvent(void* ptr, void* event);
void QMenu_ShowEventDefault(void* ptr, void* event);
char QMenu_Close(void* ptr);
char QMenu_CloseDefault(void* ptr);
void QMenu_CloseEvent(void* ptr, void* event);
void QMenu_CloseEventDefault(void* ptr, void* event);
void QMenu_ContextMenuEvent(void* ptr, void* event);
void QMenu_ContextMenuEventDefault(void* ptr, void* event);
char QMenu_HasHeightForWidth(void* ptr);
char QMenu_HasHeightForWidthDefault(void* ptr);
int QMenu_HeightForWidth(void* ptr, int w);
int QMenu_HeightForWidthDefault(void* ptr, int w);
void QMenu_Hide(void* ptr);
void QMenu_HideDefault(void* ptr);
void QMenu_InputMethodEvent(void* ptr, void* event);
void QMenu_InputMethodEventDefault(void* ptr, void* event);
void* QMenu_InputMethodQuery(void* ptr, long long query);
void* QMenu_InputMethodQueryDefault(void* ptr, long long query);
void QMenu_KeyReleaseEvent(void* ptr, void* event);
void QMenu_KeyReleaseEventDefault(void* ptr, void* event);
void QMenu_Lower(void* ptr);
void QMenu_LowerDefault(void* ptr);
void QMenu_MouseDoubleClickEvent(void* ptr, void* event);
void QMenu_MouseDoubleClickEventDefault(void* ptr, void* event);
char QMenu_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QMenu_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QMenu_Raise(void* ptr);
void QMenu_RaiseDefault(void* ptr);
void QMenu_Repaint(void* ptr);
void QMenu_RepaintDefault(void* ptr);
void QMenu_ResizeEvent(void* ptr, void* event);
void QMenu_ResizeEventDefault(void* ptr, void* event);
void QMenu_SetDisabled(void* ptr, char disable);
void QMenu_SetDisabledDefault(void* ptr, char disable);
void QMenu_SetFocus2(void* ptr);
void QMenu_SetFocus2Default(void* ptr);
void QMenu_SetHidden(void* ptr, char hidden);
void QMenu_SetHiddenDefault(void* ptr, char hidden);
void QMenu_Show(void* ptr);
void QMenu_ShowDefault(void* ptr);
void QMenu_ShowFullScreen(void* ptr);
void QMenu_ShowFullScreenDefault(void* ptr);
void QMenu_ShowMaximized(void* ptr);
void QMenu_ShowMaximizedDefault(void* ptr);
void QMenu_ShowMinimized(void* ptr);
void QMenu_ShowMinimizedDefault(void* ptr);
void QMenu_ShowNormal(void* ptr);
void QMenu_ShowNormalDefault(void* ptr);
void QMenu_TabletEvent(void* ptr, void* event);
void QMenu_TabletEventDefault(void* ptr, void* event);
void QMenu_Update(void* ptr);
void QMenu_UpdateDefault(void* ptr);
void QMenu_UpdateMicroFocus(void* ptr);
void QMenu_UpdateMicroFocusDefault(void* ptr);
void QMenu_ChildEvent(void* ptr, void* event);
void QMenu_ChildEventDefault(void* ptr, void* event);
void QMenu_ConnectNotify(void* ptr, void* sign);
void QMenu_ConnectNotifyDefault(void* ptr, void* sign);
void QMenu_CustomEvent(void* ptr, void* event);
void QMenu_CustomEventDefault(void* ptr, void* event);
void QMenu_DeleteLater(void* ptr);
void QMenu_DeleteLaterDefault(void* ptr);
void QMenu_DisconnectNotify(void* ptr, void* sign);
void QMenu_DisconnectNotifyDefault(void* ptr, void* sign);
char QMenu_EventFilter(void* ptr, void* watched, void* event);
char QMenu_EventFilterDefault(void* ptr, void* watched, void* event);
void* QMenu_MetaObject(void* ptr);
void* QMenu_MetaObjectDefault(void* ptr);
char QMenuBar_IsDefaultUp(void* ptr);
char QMenuBar_IsNativeMenuBar(void* ptr);
void QMenuBar_SetCornerWidget(void* ptr, void* widget, long long corner);
void QMenuBar_SetDefaultUp(void* ptr, char vbo);
void QMenuBar_SetNativeMenuBar(void* ptr, char nativeMenuBar);
void* QMenuBar_NewQMenuBar(void* parent);
void* QMenuBar_ActionAt(void* ptr, void* pt);
void QMenuBar_ActionEvent(void* ptr, void* e);
void QMenuBar_ActionEventDefault(void* ptr, void* e);
void* QMenuBar_ActionGeometry(void* ptr, void* act);
void* QMenuBar_ActiveAction(void* ptr);
void* QMenuBar_AddAction(void* ptr, char* text);
void* QMenuBar_AddAction2(void* ptr, char* text, void* receiver, char* member);
void* QMenuBar_AddMenu(void* ptr, void* menu);
void* QMenuBar_AddMenu3(void* ptr, void* icon, char* title);
void* QMenuBar_AddMenu2(void* ptr, char* title);
void* QMenuBar_AddSeparator(void* ptr);
void QMenuBar_ChangeEvent(void* ptr, void* e);
void QMenuBar_ChangeEventDefault(void* ptr, void* e);
void QMenuBar_Clear(void* ptr);
void* QMenuBar_CornerWidget(void* ptr, long long corner);
void* QMenuBar_DefaultAction(void* ptr);
char QMenuBar_Event(void* ptr, void* e);
char QMenuBar_EventFilter(void* ptr, void* object, void* event);
void QMenuBar_FocusInEvent(void* ptr, void* vqf);
void QMenuBar_FocusInEventDefault(void* ptr, void* vqf);
void QMenuBar_FocusOutEvent(void* ptr, void* vqf);
void QMenuBar_FocusOutEventDefault(void* ptr, void* vqf);
int QMenuBar_HeightForWidth(void* ptr, int vin);
int QMenuBar_HeightForWidthDefault(void* ptr, int vin);
void QMenuBar_ConnectHovered(void* ptr);
void QMenuBar_DisconnectHovered(void* ptr);
void QMenuBar_Hovered(void* ptr, void* action);
void QMenuBar_InitStyleOption(void* ptr, void* option, void* action);
void* QMenuBar_InsertMenu(void* ptr, void* before, void* menu);
void* QMenuBar_InsertSeparator(void* ptr, void* before);
void QMenuBar_KeyPressEvent(void* ptr, void* e);
void QMenuBar_KeyPressEventDefault(void* ptr, void* e);
void QMenuBar_LeaveEvent(void* ptr, void* vqe);
void QMenuBar_LeaveEventDefault(void* ptr, void* vqe);
void* QMenuBar_MinimumSizeHint(void* ptr);
void* QMenuBar_MinimumSizeHintDefault(void* ptr);
void QMenuBar_MouseMoveEvent(void* ptr, void* e);
void QMenuBar_MouseMoveEventDefault(void* ptr, void* e);
void QMenuBar_MousePressEvent(void* ptr, void* e);
void QMenuBar_MousePressEventDefault(void* ptr, void* e);
void QMenuBar_MouseReleaseEvent(void* ptr, void* e);
void QMenuBar_MouseReleaseEventDefault(void* ptr, void* e);
void QMenuBar_PaintEvent(void* ptr, void* e);
void QMenuBar_PaintEventDefault(void* ptr, void* e);
void QMenuBar_ResizeEvent(void* ptr, void* vqr);
void QMenuBar_ResizeEventDefault(void* ptr, void* vqr);
void QMenuBar_SetActiveAction(void* ptr, void* act);
void QMenuBar_SetDefaultAction(void* ptr, void* act);
void QMenuBar_SetVisible(void* ptr, char visible);
void QMenuBar_SetVisibleDefault(void* ptr, char visible);
void* QMenuBar_SizeHint(void* ptr);
void* QMenuBar_SizeHintDefault(void* ptr);
void QMenuBar_TimerEvent(void* ptr, void* e);
void QMenuBar_ConnectTriggered(void* ptr);
void QMenuBar_DisconnectTriggered(void* ptr);
void QMenuBar_Triggered(void* ptr, void* action);
void QMenuBar_DestroyQMenuBar(void* ptr);
void QMenuBar_DragEnterEvent(void* ptr, void* event);
void QMenuBar_DragEnterEventDefault(void* ptr, void* event);
void QMenuBar_DragLeaveEvent(void* ptr, void* event);
void QMenuBar_DragLeaveEventDefault(void* ptr, void* event);
void QMenuBar_DragMoveEvent(void* ptr, void* event);
void QMenuBar_DragMoveEventDefault(void* ptr, void* event);
void QMenuBar_DropEvent(void* ptr, void* event);
void QMenuBar_DropEventDefault(void* ptr, void* event);
void QMenuBar_EnterEvent(void* ptr, void* event);
void QMenuBar_EnterEventDefault(void* ptr, void* event);
void QMenuBar_HideEvent(void* ptr, void* event);
void QMenuBar_HideEventDefault(void* ptr, void* event);
void QMenuBar_MoveEvent(void* ptr, void* event);
void QMenuBar_MoveEventDefault(void* ptr, void* event);
void QMenuBar_SetEnabled(void* ptr, char vbo);
void QMenuBar_SetEnabledDefault(void* ptr, char vbo);
void QMenuBar_SetStyleSheet(void* ptr, char* styleSheet);
void QMenuBar_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QMenuBar_SetWindowModified(void* ptr, char vbo);
void QMenuBar_SetWindowModifiedDefault(void* ptr, char vbo);
void QMenuBar_SetWindowTitle(void* ptr, char* vqs);
void QMenuBar_SetWindowTitleDefault(void* ptr, char* vqs);
void QMenuBar_ShowEvent(void* ptr, void* event);
void QMenuBar_ShowEventDefault(void* ptr, void* event);
char QMenuBar_Close(void* ptr);
char QMenuBar_CloseDefault(void* ptr);
void QMenuBar_CloseEvent(void* ptr, void* event);
void QMenuBar_CloseEventDefault(void* ptr, void* event);
void QMenuBar_ContextMenuEvent(void* ptr, void* event);
void QMenuBar_ContextMenuEventDefault(void* ptr, void* event);
char QMenuBar_FocusNextPrevChild(void* ptr, char next);
char QMenuBar_FocusNextPrevChildDefault(void* ptr, char next);
char QMenuBar_HasHeightForWidth(void* ptr);
char QMenuBar_HasHeightForWidthDefault(void* ptr);
void QMenuBar_Hide(void* ptr);
void QMenuBar_HideDefault(void* ptr);
void QMenuBar_InputMethodEvent(void* ptr, void* event);
void QMenuBar_InputMethodEventDefault(void* ptr, void* event);
void* QMenuBar_InputMethodQuery(void* ptr, long long query);
void* QMenuBar_InputMethodQueryDefault(void* ptr, long long query);
void QMenuBar_KeyReleaseEvent(void* ptr, void* event);
void QMenuBar_KeyReleaseEventDefault(void* ptr, void* event);
void QMenuBar_Lower(void* ptr);
void QMenuBar_LowerDefault(void* ptr);
void QMenuBar_MouseDoubleClickEvent(void* ptr, void* event);
void QMenuBar_MouseDoubleClickEventDefault(void* ptr, void* event);
char QMenuBar_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QMenuBar_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QMenuBar_Raise(void* ptr);
void QMenuBar_RaiseDefault(void* ptr);
void QMenuBar_Repaint(void* ptr);
void QMenuBar_RepaintDefault(void* ptr);
void QMenuBar_SetDisabled(void* ptr, char disable);
void QMenuBar_SetDisabledDefault(void* ptr, char disable);
void QMenuBar_SetFocus2(void* ptr);
void QMenuBar_SetFocus2Default(void* ptr);
void QMenuBar_SetHidden(void* ptr, char hidden);
void QMenuBar_SetHiddenDefault(void* ptr, char hidden);
void QMenuBar_Show(void* ptr);
void QMenuBar_ShowDefault(void* ptr);
void QMenuBar_ShowFullScreen(void* ptr);
void QMenuBar_ShowFullScreenDefault(void* ptr);
void QMenuBar_ShowMaximized(void* ptr);
void QMenuBar_ShowMaximizedDefault(void* ptr);
void QMenuBar_ShowMinimized(void* ptr);
void QMenuBar_ShowMinimizedDefault(void* ptr);
void QMenuBar_ShowNormal(void* ptr);
void QMenuBar_ShowNormalDefault(void* ptr);
void QMenuBar_TabletEvent(void* ptr, void* event);
void QMenuBar_TabletEventDefault(void* ptr, void* event);
void QMenuBar_Update(void* ptr);
void QMenuBar_UpdateDefault(void* ptr);
void QMenuBar_UpdateMicroFocus(void* ptr);
void QMenuBar_UpdateMicroFocusDefault(void* ptr);
void QMenuBar_WheelEvent(void* ptr, void* event);
void QMenuBar_WheelEventDefault(void* ptr, void* event);
void QMenuBar_ChildEvent(void* ptr, void* event);
void QMenuBar_ChildEventDefault(void* ptr, void* event);
void QMenuBar_ConnectNotify(void* ptr, void* sign);
void QMenuBar_ConnectNotifyDefault(void* ptr, void* sign);
void QMenuBar_CustomEvent(void* ptr, void* event);
void QMenuBar_CustomEventDefault(void* ptr, void* event);
void QMenuBar_DeleteLater(void* ptr);
void QMenuBar_DeleteLaterDefault(void* ptr);
void QMenuBar_DisconnectNotify(void* ptr, void* sign);
void QMenuBar_DisconnectNotifyDefault(void* ptr, void* sign);
void* QMenuBar_MetaObject(void* ptr);
void* QMenuBar_MetaObjectDefault(void* ptr);
int QMessageBox_ButtonMask_Type();
struct QtWidgets_PackedString QMessageBox_DetailedText(void* ptr);
long long QMessageBox_Icon(void* ptr);
void* QMessageBox_IconPixmap(void* ptr);
struct QtWidgets_PackedString QMessageBox_InformativeText(void* ptr);
void QMessageBox_SetDetailedText(void* ptr, char* text);
void QMessageBox_SetIcon(void* ptr, long long vic);
void QMessageBox_SetIconPixmap(void* ptr, void* pixmap);
void QMessageBox_SetInformativeText(void* ptr, char* text);
void QMessageBox_SetStandardButtons(void* ptr, long long buttons);
void QMessageBox_SetText(void* ptr, char* text);
void QMessageBox_SetTextFormat(void* ptr, long long format);
void QMessageBox_SetTextInteractionFlags(void* ptr, long long flags);
long long QMessageBox_StandardButtons(void* ptr);
struct QtWidgets_PackedString QMessageBox_Text(void* ptr);
long long QMessageBox_TextFormat(void* ptr);
long long QMessageBox_TextInteractionFlags(void* ptr);
void* QMessageBox_NewQMessageBox2(long long icon, char* title, char* text, long long buttons, void* parent, long long f);
void* QMessageBox_NewQMessageBox(void* parent);
void QMessageBox_QMessageBox_About(void* parent, char* title, char* text);
void QMessageBox_QMessageBox_AboutQt(void* parent, char* title);
void* QMessageBox_AddButton3(void* ptr, long long button);
void* QMessageBox_AddButton2(void* ptr, char* text, long long role);
void QMessageBox_AddButton(void* ptr, void* button, long long role);
void* QMessageBox_Button(void* ptr, long long which);
void QMessageBox_ConnectButtonClicked(void* ptr);
void QMessageBox_DisconnectButtonClicked(void* ptr);
void QMessageBox_ButtonClicked(void* ptr, void* button);
long long QMessageBox_ButtonRole(void* ptr, void* button);
struct QtWidgets_PackedList QMessageBox_Buttons(void* ptr);
void QMessageBox_ChangeEvent(void* ptr, void* ev);
void QMessageBox_ChangeEventDefault(void* ptr, void* ev);
void* QMessageBox_CheckBox(void* ptr);
void* QMessageBox_ClickedButton(void* ptr);
void QMessageBox_CloseEvent(void* ptr, void* e);
void QMessageBox_CloseEventDefault(void* ptr, void* e);
long long QMessageBox_QMessageBox_Critical(void* parent, char* title, char* text, long long buttons, long long defaultButton);
void* QMessageBox_DefaultButton(void* ptr);
void* QMessageBox_EscapeButton(void* ptr);
char QMessageBox_Event(void* ptr, void* e);
int QMessageBox_Exec(void* ptr);
int QMessageBox_ExecDefault(void* ptr);
long long QMessageBox_QMessageBox_Information(void* parent, char* title, char* text, long long buttons, long long defaultButton);
void QMessageBox_KeyPressEvent(void* ptr, void* e);
void QMessageBox_KeyPressEventDefault(void* ptr, void* e);
void QMessageBox_Open(void* ptr, void* receiver, char* member);
long long QMessageBox_QMessageBox_Question(void* parent, char* title, char* text, long long buttons, long long defaultButton);
void QMessageBox_RemoveButton(void* ptr, void* button);
void QMessageBox_ResizeEvent(void* ptr, void* event);
void QMessageBox_ResizeEventDefault(void* ptr, void* event);
void QMessageBox_SetCheckBox(void* ptr, void* cb);
void QMessageBox_SetDefaultButton(void* ptr, void* button);
void QMessageBox_SetDefaultButton2(void* ptr, long long button);
void QMessageBox_SetEscapeButton(void* ptr, void* button);
void QMessageBox_SetEscapeButton2(void* ptr, long long button);
void QMessageBox_SetVisible(void* ptr, char visible);
void QMessageBox_SetVisibleDefault(void* ptr, char visible);
void QMessageBox_SetWindowModality(void* ptr, long long windowModality);
void QMessageBox_SetWindowTitle(void* ptr, char* title);
void QMessageBox_ShowEvent(void* ptr, void* e);
void QMessageBox_ShowEventDefault(void* ptr, void* e);
long long QMessageBox_StandardButton(void* ptr, void* button);
long long QMessageBox_QMessageBox_Warning(void* parent, char* title, char* text, long long buttons, long long defaultButton);
void QMessageBox_DestroyQMessageBox(void* ptr);
void* QMessageBox_buttons_atList(void* ptr, int i);
void QMessageBox_Accept(void* ptr);
void QMessageBox_AcceptDefault(void* ptr);
void QMessageBox_ContextMenuEvent(void* ptr, void* e);
void QMessageBox_ContextMenuEventDefault(void* ptr, void* e);
void QMessageBox_Done(void* ptr, int r);
void QMessageBox_DoneDefault(void* ptr, int r);
void* QMessageBox_MinimumSizeHint(void* ptr);
void* QMessageBox_MinimumSizeHintDefault(void* ptr);
void QMessageBox_Reject(void* ptr);
void QMessageBox_RejectDefault(void* ptr);
void* QMessageBox_SizeHint(void* ptr);
void* QMessageBox_SizeHintDefault(void* ptr);
void QMessageBox_ActionEvent(void* ptr, void* event);
void QMessageBox_ActionEventDefault(void* ptr, void* event);
void QMessageBox_DragEnterEvent(void* ptr, void* event);
void QMessageBox_DragEnterEventDefault(void* ptr, void* event);
void QMessageBox_DragLeaveEvent(void* ptr, void* event);
void QMessageBox_DragLeaveEventDefault(void* ptr, void* event);
void QMessageBox_DragMoveEvent(void* ptr, void* event);
void QMessageBox_DragMoveEventDefault(void* ptr, void* event);
void QMessageBox_DropEvent(void* ptr, void* event);
void QMessageBox_DropEventDefault(void* ptr, void* event);
void QMessageBox_EnterEvent(void* ptr, void* event);
void QMessageBox_EnterEventDefault(void* ptr, void* event);
void QMessageBox_FocusInEvent(void* ptr, void* event);
void QMessageBox_FocusInEventDefault(void* ptr, void* event);
void QMessageBox_FocusOutEvent(void* ptr, void* event);
void QMessageBox_FocusOutEventDefault(void* ptr, void* event);
void QMessageBox_HideEvent(void* ptr, void* event);
void QMessageBox_HideEventDefault(void* ptr, void* event);
void QMessageBox_LeaveEvent(void* ptr, void* event);
void QMessageBox_LeaveEventDefault(void* ptr, void* event);
void QMessageBox_MoveEvent(void* ptr, void* event);
void QMessageBox_MoveEventDefault(void* ptr, void* event);
void QMessageBox_PaintEvent(void* ptr, void* event);
void QMessageBox_PaintEventDefault(void* ptr, void* event);
void QMessageBox_SetEnabled(void* ptr, char vbo);
void QMessageBox_SetEnabledDefault(void* ptr, char vbo);
void QMessageBox_SetStyleSheet(void* ptr, char* styleSheet);
void QMessageBox_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QMessageBox_SetWindowModified(void* ptr, char vbo);
void QMessageBox_SetWindowModifiedDefault(void* ptr, char vbo);
char QMessageBox_Close(void* ptr);
char QMessageBox_CloseDefault(void* ptr);
char QMessageBox_FocusNextPrevChild(void* ptr, char next);
char QMessageBox_FocusNextPrevChildDefault(void* ptr, char next);
char QMessageBox_HasHeightForWidth(void* ptr);
char QMessageBox_HasHeightForWidthDefault(void* ptr);
int QMessageBox_HeightForWidth(void* ptr, int w);
int QMessageBox_HeightForWidthDefault(void* ptr, int w);
void QMessageBox_Hide(void* ptr);
void QMessageBox_HideDefault(void* ptr);
void QMessageBox_InputMethodEvent(void* ptr, void* event);
void QMessageBox_InputMethodEventDefault(void* ptr, void* event);
void* QMessageBox_InputMethodQuery(void* ptr, long long query);
void* QMessageBox_InputMethodQueryDefault(void* ptr, long long query);
void QMessageBox_KeyReleaseEvent(void* ptr, void* event);
void QMessageBox_KeyReleaseEventDefault(void* ptr, void* event);
void QMessageBox_Lower(void* ptr);
void QMessageBox_LowerDefault(void* ptr);
void QMessageBox_MouseDoubleClickEvent(void* ptr, void* event);
void QMessageBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QMessageBox_MouseMoveEvent(void* ptr, void* event);
void QMessageBox_MouseMoveEventDefault(void* ptr, void* event);
void QMessageBox_MousePressEvent(void* ptr, void* event);
void QMessageBox_MousePressEventDefault(void* ptr, void* event);
void QMessageBox_MouseReleaseEvent(void* ptr, void* event);
void QMessageBox_MouseReleaseEventDefault(void* ptr, void* event);
char QMessageBox_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QMessageBox_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QMessageBox_Raise(void* ptr);
void QMessageBox_RaiseDefault(void* ptr);
void QMessageBox_Repaint(void* ptr);
void QMessageBox_RepaintDefault(void* ptr);
void QMessageBox_SetDisabled(void* ptr, char disable);
void QMessageBox_SetDisabledDefault(void* ptr, char disable);
void QMessageBox_SetFocus2(void* ptr);
void QMessageBox_SetFocus2Default(void* ptr);
void QMessageBox_SetHidden(void* ptr, char hidden);
void QMessageBox_SetHiddenDefault(void* ptr, char hidden);
void QMessageBox_Show(void* ptr);
void QMessageBox_ShowDefault(void* ptr);
void QMessageBox_ShowFullScreen(void* ptr);
void QMessageBox_ShowFullScreenDefault(void* ptr);
void QMessageBox_ShowMaximized(void* ptr);
void QMessageBox_ShowMaximizedDefault(void* ptr);
void QMessageBox_ShowMinimized(void* ptr);
void QMessageBox_ShowMinimizedDefault(void* ptr);
void QMessageBox_ShowNormal(void* ptr);
void QMessageBox_ShowNormalDefault(void* ptr);
void QMessageBox_TabletEvent(void* ptr, void* event);
void QMessageBox_TabletEventDefault(void* ptr, void* event);
void QMessageBox_Update(void* ptr);
void QMessageBox_UpdateDefault(void* ptr);
void QMessageBox_UpdateMicroFocus(void* ptr);
void QMessageBox_UpdateMicroFocusDefault(void* ptr);
void QMessageBox_WheelEvent(void* ptr, void* event);
void QMessageBox_WheelEventDefault(void* ptr, void* event);
void QMessageBox_TimerEvent(void* ptr, void* event);
void QMessageBox_TimerEventDefault(void* ptr, void* event);
void QMessageBox_ChildEvent(void* ptr, void* event);
void QMessageBox_ChildEventDefault(void* ptr, void* event);
void QMessageBox_ConnectNotify(void* ptr, void* sign);
void QMessageBox_ConnectNotifyDefault(void* ptr, void* sign);
void QMessageBox_CustomEvent(void* ptr, void* event);
void QMessageBox_CustomEventDefault(void* ptr, void* event);
void QMessageBox_DeleteLater(void* ptr);
void QMessageBox_DeleteLaterDefault(void* ptr);
void QMessageBox_DisconnectNotify(void* ptr, void* sign);
void QMessageBox_DisconnectNotifyDefault(void* ptr, void* sign);
void* QMessageBox_MetaObject(void* ptr);
void* QMessageBox_MetaObjectDefault(void* ptr);
void* QMouseEventTransition_NewQMouseEventTransition2(void* object, long long ty, long long button, void* sourceState);
void* QMouseEventTransition_NewQMouseEventTransition(void* sourceState);
long long QMouseEventTransition_Button(void* ptr);
char QMouseEventTransition_EventTest(void* ptr, void* event);
void* QMouseEventTransition_HitTestPath(void* ptr);
long long QMouseEventTransition_ModifierMask(void* ptr);
void QMouseEventTransition_OnTransition(void* ptr, void* event);
void QMouseEventTransition_SetButton(void* ptr, long long button);
void QMouseEventTransition_SetHitTestPath(void* ptr, void* path);
void QMouseEventTransition_SetModifierMask(void* ptr, long long modifierMask);
void QMouseEventTransition_DestroyQMouseEventTransition(void* ptr);
char QMouseEventTransition_Event(void* ptr, void* e);
char QMouseEventTransition_EventDefault(void* ptr, void* e);
void QMouseEventTransition_TimerEvent(void* ptr, void* event);
void QMouseEventTransition_TimerEventDefault(void* ptr, void* event);
void QMouseEventTransition_ChildEvent(void* ptr, void* event);
void QMouseEventTransition_ChildEventDefault(void* ptr, void* event);
void QMouseEventTransition_ConnectNotify(void* ptr, void* sign);
void QMouseEventTransition_ConnectNotifyDefault(void* ptr, void* sign);
void QMouseEventTransition_CustomEvent(void* ptr, void* event);
void QMouseEventTransition_CustomEventDefault(void* ptr, void* event);
void QMouseEventTransition_DeleteLater(void* ptr);
void QMouseEventTransition_DeleteLaterDefault(void* ptr);
void QMouseEventTransition_DisconnectNotify(void* ptr, void* sign);
void QMouseEventTransition_DisconnectNotifyDefault(void* ptr, void* sign);
char QMouseEventTransition_EventFilter(void* ptr, void* watched, void* event);
char QMouseEventTransition_EventFilterDefault(void* ptr, void* watched, void* event);
void* QMouseEventTransition_MetaObject(void* ptr);
void* QMouseEventTransition_MetaObjectDefault(void* ptr);
double QPanGesture_Acceleration(void* ptr);
void* QPanGesture_Delta(void* ptr);
void* QPanGesture_LastOffset(void* ptr);
void* QPanGesture_Offset(void* ptr);
void QPanGesture_SetAcceleration(void* ptr, double value);
void QPanGesture_SetLastOffset(void* ptr, void* value);
void QPanGesture_SetOffset(void* ptr, void* value);
void QPanGesture_DestroyQPanGesture(void* ptr);
void QPanGesture_TimerEvent(void* ptr, void* event);
void QPanGesture_TimerEventDefault(void* ptr, void* event);
void QPanGesture_ChildEvent(void* ptr, void* event);
void QPanGesture_ChildEventDefault(void* ptr, void* event);
void QPanGesture_ConnectNotify(void* ptr, void* sign);
void QPanGesture_ConnectNotifyDefault(void* ptr, void* sign);
void QPanGesture_CustomEvent(void* ptr, void* event);
void QPanGesture_CustomEventDefault(void* ptr, void* event);
void QPanGesture_DeleteLater(void* ptr);
void QPanGesture_DeleteLaterDefault(void* ptr);
void QPanGesture_DisconnectNotify(void* ptr, void* sign);
void QPanGesture_DisconnectNotifyDefault(void* ptr, void* sign);
char QPanGesture_Event(void* ptr, void* e);
char QPanGesture_EventDefault(void* ptr, void* e);
char QPanGesture_EventFilter(void* ptr, void* watched, void* event);
char QPanGesture_EventFilterDefault(void* ptr, void* watched, void* event);
void* QPanGesture_MetaObject(void* ptr);
void* QPanGesture_MetaObjectDefault(void* ptr);
void* QPinchGesture_CenterPoint(void* ptr);
long long QPinchGesture_ChangeFlags(void* ptr);
void* QPinchGesture_LastCenterPoint(void* ptr);
double QPinchGesture_LastRotationAngle(void* ptr);
double QPinchGesture_LastScaleFactor(void* ptr);
double QPinchGesture_RotationAngle(void* ptr);
double QPinchGesture_ScaleFactor(void* ptr);
void QPinchGesture_SetCenterPoint(void* ptr, void* value);
void QPinchGesture_SetChangeFlags(void* ptr, long long value);
void QPinchGesture_SetLastCenterPoint(void* ptr, void* value);
void QPinchGesture_SetLastRotationAngle(void* ptr, double value);
void QPinchGesture_SetLastScaleFactor(void* ptr, double value);
void QPinchGesture_SetRotationAngle(void* ptr, double value);
void QPinchGesture_SetScaleFactor(void* ptr, double value);
void QPinchGesture_SetStartCenterPoint(void* ptr, void* value);
void QPinchGesture_SetTotalChangeFlags(void* ptr, long long value);
void QPinchGesture_SetTotalRotationAngle(void* ptr, double value);
void QPinchGesture_SetTotalScaleFactor(void* ptr, double value);
void* QPinchGesture_StartCenterPoint(void* ptr);
long long QPinchGesture_TotalChangeFlags(void* ptr);
double QPinchGesture_TotalRotationAngle(void* ptr);
double QPinchGesture_TotalScaleFactor(void* ptr);
void QPinchGesture_DestroyQPinchGesture(void* ptr);
void QPinchGesture_TimerEvent(void* ptr, void* event);
void QPinchGesture_TimerEventDefault(void* ptr, void* event);
void QPinchGesture_ChildEvent(void* ptr, void* event);
void QPinchGesture_ChildEventDefault(void* ptr, void* event);
void QPinchGesture_ConnectNotify(void* ptr, void* sign);
void QPinchGesture_ConnectNotifyDefault(void* ptr, void* sign);
void QPinchGesture_CustomEvent(void* ptr, void* event);
void QPinchGesture_CustomEventDefault(void* ptr, void* event);
void QPinchGesture_DeleteLater(void* ptr);
void QPinchGesture_DeleteLaterDefault(void* ptr);
void QPinchGesture_DisconnectNotify(void* ptr, void* sign);
void QPinchGesture_DisconnectNotifyDefault(void* ptr, void* sign);
char QPinchGesture_Event(void* ptr, void* e);
char QPinchGesture_EventDefault(void* ptr, void* e);
char QPinchGesture_EventFilter(void* ptr, void* watched, void* event);
char QPinchGesture_EventFilterDefault(void* ptr, void* watched, void* event);
void* QPinchGesture_MetaObject(void* ptr);
void* QPinchGesture_MetaObjectDefault(void* ptr);
int QPlainTextDocumentLayout_CursorWidth(void* ptr);
void QPlainTextDocumentLayout_SetCursorWidth(void* ptr, int width);
void* QPlainTextDocumentLayout_NewQPlainTextDocumentLayout(void* document);
void* QPlainTextDocumentLayout_BlockBoundingRect(void* ptr, void* block);
void QPlainTextDocumentLayout_DocumentChanged(void* ptr, int from, int charsRemoved, int charsAdded);
void* QPlainTextDocumentLayout_DocumentSize(void* ptr);
void QPlainTextDocumentLayout_Draw(void* ptr, void* vqp, void* vpa);
void QPlainTextDocumentLayout_EnsureBlockLayout(void* ptr, void* block);
void* QPlainTextDocumentLayout_FrameBoundingRect(void* ptr, void* vqt);
int QPlainTextDocumentLayout_HitTest(void* ptr, void* vqp, long long vqt);
int QPlainTextDocumentLayout_PageCount(void* ptr);
void QPlainTextDocumentLayout_RequestUpdate(void* ptr);
void QPlainTextDocumentLayout_DestroyQPlainTextDocumentLayout(void* ptr);
void QPlainTextDocumentLayout_TimerEvent(void* ptr, void* event);
void QPlainTextDocumentLayout_TimerEventDefault(void* ptr, void* event);
void QPlainTextDocumentLayout_ChildEvent(void* ptr, void* event);
void QPlainTextDocumentLayout_ChildEventDefault(void* ptr, void* event);
void QPlainTextDocumentLayout_ConnectNotify(void* ptr, void* sign);
void QPlainTextDocumentLayout_ConnectNotifyDefault(void* ptr, void* sign);
void QPlainTextDocumentLayout_CustomEvent(void* ptr, void* event);
void QPlainTextDocumentLayout_CustomEventDefault(void* ptr, void* event);
void QPlainTextDocumentLayout_DeleteLater(void* ptr);
void QPlainTextDocumentLayout_DeleteLaterDefault(void* ptr);
void QPlainTextDocumentLayout_DisconnectNotify(void* ptr, void* sign);
void QPlainTextDocumentLayout_DisconnectNotifyDefault(void* ptr, void* sign);
char QPlainTextDocumentLayout_Event(void* ptr, void* e);
char QPlainTextDocumentLayout_EventDefault(void* ptr, void* e);
char QPlainTextDocumentLayout_EventFilter(void* ptr, void* watched, void* event);
char QPlainTextDocumentLayout_EventFilterDefault(void* ptr, void* watched, void* event);
void* QPlainTextDocumentLayout_MetaObject(void* ptr);
void* QPlainTextDocumentLayout_MetaObjectDefault(void* ptr);
char QPlainTextEdit_BackgroundVisible(void* ptr);
int QPlainTextEdit_BlockCount(void* ptr);
char QPlainTextEdit_CenterOnScroll(void* ptr);
void QPlainTextEdit_ContextMenuEvent(void* ptr, void* event);
void QPlainTextEdit_ContextMenuEventDefault(void* ptr, void* event);
int QPlainTextEdit_CursorWidth(void* ptr);
char QPlainTextEdit_Find2(void* ptr, void* exp, long long options);
char QPlainTextEdit_IsReadOnly(void* ptr);
long long QPlainTextEdit_LineWrapMode(void* ptr);
char QPlainTextEdit_OverwriteMode(void* ptr);
struct QtWidgets_PackedString QPlainTextEdit_PlaceholderText(void* ptr);
void QPlainTextEdit_Redo(void* ptr);
void QPlainTextEdit_SetBackgroundVisible(void* ptr, char visible);
void QPlainTextEdit_SetCenterOnScroll(void* ptr, char enabled);
void QPlainTextEdit_SetCursorWidth(void* ptr, int width);
void QPlainTextEdit_SetLineWrapMode(void* ptr, long long mode);
void QPlainTextEdit_SetOverwriteMode(void* ptr, char overwrite);
void QPlainTextEdit_SetPlaceholderText(void* ptr, char* placeholderText);
void QPlainTextEdit_SetReadOnly(void* ptr, char ro);
void QPlainTextEdit_SetTabChangesFocus(void* ptr, char b);
void QPlainTextEdit_SetTabStopWidth(void* ptr, int width);
void QPlainTextEdit_SetTextInteractionFlags(void* ptr, long long flags);
void QPlainTextEdit_SetWordWrapMode(void* ptr, long long policy);
char QPlainTextEdit_TabChangesFocus(void* ptr);
int QPlainTextEdit_TabStopWidth(void* ptr);
long long QPlainTextEdit_TextInteractionFlags(void* ptr);
long long QPlainTextEdit_WordWrapMode(void* ptr);
void QPlainTextEdit_ZoomIn(void* ptr, int ran);
void QPlainTextEdit_ZoomOut(void* ptr, int ran);
void* QPlainTextEdit_NewQPlainTextEdit(void* parent);
void* QPlainTextEdit_NewQPlainTextEdit2(char* text, void* parent);
struct QtWidgets_PackedString QPlainTextEdit_AnchorAt(void* ptr, void* pos);
void QPlainTextEdit_AppendHtml(void* ptr, char* html);
void QPlainTextEdit_AppendPlainText(void* ptr, char* text);
void* QPlainTextEdit_BlockBoundingGeometry(void* ptr, void* block);
void* QPlainTextEdit_BlockBoundingRect(void* ptr, void* block);
void QPlainTextEdit_ConnectBlockCountChanged(void* ptr);
void QPlainTextEdit_DisconnectBlockCountChanged(void* ptr);
void QPlainTextEdit_BlockCountChanged(void* ptr, int newBlockCount);
char QPlainTextEdit_CanInsertFromMimeData(void* ptr, void* source);
char QPlainTextEdit_CanInsertFromMimeDataDefault(void* ptr, void* source);
char QPlainTextEdit_CanPaste(void* ptr);
void QPlainTextEdit_CenterCursor(void* ptr);
void QPlainTextEdit_ChangeEvent(void* ptr, void* e);
void QPlainTextEdit_ChangeEventDefault(void* ptr, void* e);
void QPlainTextEdit_Clear(void* ptr);
void* QPlainTextEdit_ContentOffset(void* ptr);
void QPlainTextEdit_Copy(void* ptr);
void QPlainTextEdit_ConnectCopyAvailable(void* ptr);
void QPlainTextEdit_DisconnectCopyAvailable(void* ptr);
void QPlainTextEdit_CopyAvailable(void* ptr, char yes);
void* QPlainTextEdit_CreateMimeDataFromSelection(void* ptr);
void* QPlainTextEdit_CreateMimeDataFromSelectionDefault(void* ptr);
void* QPlainTextEdit_CreateStandardContextMenu(void* ptr);
void* QPlainTextEdit_CreateStandardContextMenu2(void* ptr, void* position);
void* QPlainTextEdit_CurrentCharFormat(void* ptr);
void* QPlainTextEdit_CursorForPosition(void* ptr, void* pos);
void QPlainTextEdit_ConnectCursorPositionChanged(void* ptr);
void QPlainTextEdit_DisconnectCursorPositionChanged(void* ptr);
void QPlainTextEdit_CursorPositionChanged(void* ptr);
void* QPlainTextEdit_CursorRect2(void* ptr);
void* QPlainTextEdit_CursorRect(void* ptr, void* cursor);
void QPlainTextEdit_Cut(void* ptr);
void* QPlainTextEdit_Document(void* ptr);
struct QtWidgets_PackedString QPlainTextEdit_DocumentTitle(void* ptr);
void QPlainTextEdit_DragEnterEvent(void* ptr, void* e);
void QPlainTextEdit_DragEnterEventDefault(void* ptr, void* e);
void QPlainTextEdit_DragLeaveEvent(void* ptr, void* e);
void QPlainTextEdit_DragLeaveEventDefault(void* ptr, void* e);
void QPlainTextEdit_DragMoveEvent(void* ptr, void* e);
void QPlainTextEdit_DragMoveEventDefault(void* ptr, void* e);
void QPlainTextEdit_DropEvent(void* ptr, void* e);
void QPlainTextEdit_DropEventDefault(void* ptr, void* e);
void QPlainTextEdit_EnsureCursorVisible(void* ptr);
char QPlainTextEdit_Find(void* ptr, char* exp, long long options);
void* QPlainTextEdit_FirstVisibleBlock(void* ptr);
void QPlainTextEdit_FocusInEvent(void* ptr, void* e);
void QPlainTextEdit_FocusInEventDefault(void* ptr, void* e);
char QPlainTextEdit_FocusNextPrevChild(void* ptr, char next);
char QPlainTextEdit_FocusNextPrevChildDefault(void* ptr, char next);
void QPlainTextEdit_FocusOutEvent(void* ptr, void* e);
void QPlainTextEdit_FocusOutEventDefault(void* ptr, void* e);
void QPlainTextEdit_InputMethodEvent(void* ptr, void* e);
void QPlainTextEdit_InputMethodEventDefault(void* ptr, void* e);
void* QPlainTextEdit_InputMethodQuery(void* ptr, long long property);
void* QPlainTextEdit_InputMethodQueryDefault(void* ptr, long long property);
void QPlainTextEdit_InsertFromMimeData(void* ptr, void* source);
void QPlainTextEdit_InsertFromMimeDataDefault(void* ptr, void* source);
void QPlainTextEdit_InsertPlainText(void* ptr, char* text);
char QPlainTextEdit_IsUndoRedoEnabled(void* ptr);
void QPlainTextEdit_KeyPressEvent(void* ptr, void* e);
void QPlainTextEdit_KeyPressEventDefault(void* ptr, void* e);
void QPlainTextEdit_KeyReleaseEvent(void* ptr, void* e);
void QPlainTextEdit_KeyReleaseEventDefault(void* ptr, void* e);
void* QPlainTextEdit_LoadResource(void* ptr, int ty, void* name);
void* QPlainTextEdit_LoadResourceDefault(void* ptr, int ty, void* name);
int QPlainTextEdit_MaximumBlockCount(void* ptr);
void QPlainTextEdit_MergeCurrentCharFormat(void* ptr, void* modifier);
void QPlainTextEdit_ConnectModificationChanged(void* ptr);
void QPlainTextEdit_DisconnectModificationChanged(void* ptr);
void QPlainTextEdit_ModificationChanged(void* ptr, char changed);
void QPlainTextEdit_MouseDoubleClickEvent(void* ptr, void* e);
void QPlainTextEdit_MouseDoubleClickEventDefault(void* ptr, void* e);
void QPlainTextEdit_MouseMoveEvent(void* ptr, void* e);
void QPlainTextEdit_MouseMoveEventDefault(void* ptr, void* e);
void QPlainTextEdit_MousePressEvent(void* ptr, void* e);
void QPlainTextEdit_MousePressEventDefault(void* ptr, void* e);
void QPlainTextEdit_MouseReleaseEvent(void* ptr, void* e);
void QPlainTextEdit_MouseReleaseEventDefault(void* ptr, void* e);
void QPlainTextEdit_MoveCursor(void* ptr, long long operation, long long mode);
void QPlainTextEdit_PaintEvent(void* ptr, void* e);
void QPlainTextEdit_PaintEventDefault(void* ptr, void* e);
void QPlainTextEdit_Paste(void* ptr);
void QPlainTextEdit_Print(void* ptr, void* printer);
void QPlainTextEdit_ConnectRedoAvailable(void* ptr);
void QPlainTextEdit_DisconnectRedoAvailable(void* ptr);
void QPlainTextEdit_RedoAvailable(void* ptr, char available);
void QPlainTextEdit_ResizeEvent(void* ptr, void* e);
void QPlainTextEdit_ResizeEventDefault(void* ptr, void* e);
void QPlainTextEdit_ScrollContentsBy(void* ptr, int dx, int dy);
void QPlainTextEdit_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QPlainTextEdit_SelectAll(void* ptr);
void QPlainTextEdit_ConnectSelectionChanged(void* ptr);
void QPlainTextEdit_DisconnectSelectionChanged(void* ptr);
void QPlainTextEdit_SelectionChanged(void* ptr);
void QPlainTextEdit_SetCurrentCharFormat(void* ptr, void* format);
void QPlainTextEdit_SetDocument(void* ptr, void* document);
void QPlainTextEdit_SetDocumentTitle(void* ptr, char* title);
void QPlainTextEdit_SetMaximumBlockCount(void* ptr, int maximum);
void QPlainTextEdit_SetPlainText(void* ptr, char* text);
void QPlainTextEdit_SetTextCursor(void* ptr, void* cursor);
void QPlainTextEdit_SetUndoRedoEnabled(void* ptr, char enable);
void QPlainTextEdit_ShowEvent(void* ptr, void* vqs);
void QPlainTextEdit_ShowEventDefault(void* ptr, void* vqs);
void QPlainTextEdit_ConnectTextChanged(void* ptr);
void QPlainTextEdit_DisconnectTextChanged(void* ptr);
void QPlainTextEdit_TextChanged(void* ptr);
void* QPlainTextEdit_TextCursor(void* ptr);
struct QtWidgets_PackedString QPlainTextEdit_ToPlainText(void* ptr);
void QPlainTextEdit_Undo(void* ptr);
void QPlainTextEdit_ConnectUndoAvailable(void* ptr);
void QPlainTextEdit_DisconnectUndoAvailable(void* ptr);
void QPlainTextEdit_UndoAvailable(void* ptr, char available);
void QPlainTextEdit_ConnectUpdateRequest(void* ptr);
void QPlainTextEdit_DisconnectUpdateRequest(void* ptr);
void QPlainTextEdit_UpdateRequest(void* ptr, void* rect, int dy);
void QPlainTextEdit_WheelEvent(void* ptr, void* e);
void QPlainTextEdit_WheelEventDefault(void* ptr, void* e);
void QPlainTextEdit_DestroyQPlainTextEdit(void* ptr);
void QPlainTextEdit_DestroyQPlainTextEditDefault(void* ptr);
char QPlainTextEdit_ViewportEvent(void* ptr, void* event);
char QPlainTextEdit_ViewportEventDefault(void* ptr, void* event);
void* QPlainTextEdit_MinimumSizeHint(void* ptr);
void* QPlainTextEdit_MinimumSizeHintDefault(void* ptr);
void QPlainTextEdit_SetupViewport(void* ptr, void* viewport);
void QPlainTextEdit_SetupViewportDefault(void* ptr, void* viewport);
void* QPlainTextEdit_SizeHint(void* ptr);
void* QPlainTextEdit_SizeHintDefault(void* ptr);
void* QPlainTextEdit_ViewportSizeHint(void* ptr);
void* QPlainTextEdit_ViewportSizeHintDefault(void* ptr);
void QPlainTextEdit_ActionEvent(void* ptr, void* event);
void QPlainTextEdit_ActionEventDefault(void* ptr, void* event);
void QPlainTextEdit_EnterEvent(void* ptr, void* event);
void QPlainTextEdit_EnterEventDefault(void* ptr, void* event);
void QPlainTextEdit_HideEvent(void* ptr, void* event);
void QPlainTextEdit_HideEventDefault(void* ptr, void* event);
void QPlainTextEdit_LeaveEvent(void* ptr, void* event);
void QPlainTextEdit_LeaveEventDefault(void* ptr, void* event);
void QPlainTextEdit_MoveEvent(void* ptr, void* event);
void QPlainTextEdit_MoveEventDefault(void* ptr, void* event);
void QPlainTextEdit_SetEnabled(void* ptr, char vbo);
void QPlainTextEdit_SetEnabledDefault(void* ptr, char vbo);
void QPlainTextEdit_SetStyleSheet(void* ptr, char* styleSheet);
void QPlainTextEdit_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QPlainTextEdit_SetVisible(void* ptr, char visible);
void QPlainTextEdit_SetVisibleDefault(void* ptr, char visible);
void QPlainTextEdit_SetWindowModified(void* ptr, char vbo);
void QPlainTextEdit_SetWindowModifiedDefault(void* ptr, char vbo);
void QPlainTextEdit_SetWindowTitle(void* ptr, char* vqs);
void QPlainTextEdit_SetWindowTitleDefault(void* ptr, char* vqs);
char QPlainTextEdit_Close(void* ptr);
char QPlainTextEdit_CloseDefault(void* ptr);
void QPlainTextEdit_CloseEvent(void* ptr, void* event);
void QPlainTextEdit_CloseEventDefault(void* ptr, void* event);
char QPlainTextEdit_HasHeightForWidth(void* ptr);
char QPlainTextEdit_HasHeightForWidthDefault(void* ptr);
int QPlainTextEdit_HeightForWidth(void* ptr, int w);
int QPlainTextEdit_HeightForWidthDefault(void* ptr, int w);
void QPlainTextEdit_Hide(void* ptr);
void QPlainTextEdit_HideDefault(void* ptr);
void QPlainTextEdit_Lower(void* ptr);
void QPlainTextEdit_LowerDefault(void* ptr);
char QPlainTextEdit_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QPlainTextEdit_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QPlainTextEdit_Raise(void* ptr);
void QPlainTextEdit_RaiseDefault(void* ptr);
void QPlainTextEdit_Repaint(void* ptr);
void QPlainTextEdit_RepaintDefault(void* ptr);
void QPlainTextEdit_SetDisabled(void* ptr, char disable);
void QPlainTextEdit_SetDisabledDefault(void* ptr, char disable);
void QPlainTextEdit_SetFocus2(void* ptr);
void QPlainTextEdit_SetFocus2Default(void* ptr);
void QPlainTextEdit_SetHidden(void* ptr, char hidden);
void QPlainTextEdit_SetHiddenDefault(void* ptr, char hidden);
void QPlainTextEdit_Show(void* ptr);
void QPlainTextEdit_ShowDefault(void* ptr);
void QPlainTextEdit_ShowFullScreen(void* ptr);
void QPlainTextEdit_ShowFullScreenDefault(void* ptr);
void QPlainTextEdit_ShowMaximized(void* ptr);
void QPlainTextEdit_ShowMaximizedDefault(void* ptr);
void QPlainTextEdit_ShowMinimized(void* ptr);
void QPlainTextEdit_ShowMinimizedDefault(void* ptr);
void QPlainTextEdit_ShowNormal(void* ptr);
void QPlainTextEdit_ShowNormalDefault(void* ptr);
void QPlainTextEdit_TabletEvent(void* ptr, void* event);
void QPlainTextEdit_TabletEventDefault(void* ptr, void* event);
void QPlainTextEdit_Update(void* ptr);
void QPlainTextEdit_UpdateDefault(void* ptr);
void QPlainTextEdit_UpdateMicroFocus(void* ptr);
void QPlainTextEdit_UpdateMicroFocusDefault(void* ptr);
void QPlainTextEdit_TimerEvent(void* ptr, void* event);
void QPlainTextEdit_TimerEventDefault(void* ptr, void* event);
void QPlainTextEdit_ChildEvent(void* ptr, void* event);
void QPlainTextEdit_ChildEventDefault(void* ptr, void* event);
void QPlainTextEdit_ConnectNotify(void* ptr, void* sign);
void QPlainTextEdit_ConnectNotifyDefault(void* ptr, void* sign);
void QPlainTextEdit_CustomEvent(void* ptr, void* event);
void QPlainTextEdit_CustomEventDefault(void* ptr, void* event);
void QPlainTextEdit_DeleteLater(void* ptr);
void QPlainTextEdit_DeleteLaterDefault(void* ptr);
void QPlainTextEdit_DisconnectNotify(void* ptr, void* sign);
void QPlainTextEdit_DisconnectNotifyDefault(void* ptr, void* sign);
char QPlainTextEdit_EventFilter(void* ptr, void* watched, void* event);
char QPlainTextEdit_EventFilterDefault(void* ptr, void* watched, void* event);
void* QPlainTextEdit_MetaObject(void* ptr);
void* QPlainTextEdit_MetaObjectDefault(void* ptr);
long long QProgressBar_Alignment(void* ptr);
struct QtWidgets_PackedString QProgressBar_Format(void* ptr);
char QProgressBar_InvertedAppearance(void* ptr);
char QProgressBar_IsTextVisible(void* ptr);
int QProgressBar_Maximum(void* ptr);
int QProgressBar_Minimum(void* ptr);
long long QProgressBar_Orientation(void* ptr);
void QProgressBar_ResetFormat(void* ptr);
void QProgressBar_SetAlignment(void* ptr, long long alignment);
void QProgressBar_SetFormat(void* ptr, char* format);
void QProgressBar_SetInvertedAppearance(void* ptr, char invert);
void QProgressBar_SetMaximum(void* ptr, int maximum);
void QProgressBar_SetMinimum(void* ptr, int minimum);
void QProgressBar_SetOrientation(void* ptr, long long vqt);
void QProgressBar_SetTextDirection(void* ptr, long long textDirection);
void QProgressBar_SetTextVisible(void* ptr, char visible);
void QProgressBar_SetValue(void* ptr, int value);
struct QtWidgets_PackedString QProgressBar_Text(void* ptr);
struct QtWidgets_PackedString QProgressBar_TextDefault(void* ptr);
long long QProgressBar_TextDirection(void* ptr);
int QProgressBar_Value(void* ptr);
void* QProgressBar_NewQProgressBar(void* parent);
char QProgressBar_Event(void* ptr, void* e);
void QProgressBar_InitStyleOption(void* ptr, void* option);
void* QProgressBar_MinimumSizeHint(void* ptr);
void* QProgressBar_MinimumSizeHintDefault(void* ptr);
void QProgressBar_PaintEvent(void* ptr, void* vqp);
void QProgressBar_PaintEventDefault(void* ptr, void* vqp);
void QProgressBar_Reset(void* ptr);
void QProgressBar_SetRange(void* ptr, int minimum, int maximum);
void* QProgressBar_SizeHint(void* ptr);
void* QProgressBar_SizeHintDefault(void* ptr);
void QProgressBar_ConnectValueChanged(void* ptr);
void QProgressBar_DisconnectValueChanged(void* ptr);
void QProgressBar_ValueChanged(void* ptr, int value);
void QProgressBar_DestroyQProgressBar(void* ptr);
void QProgressBar_ActionEvent(void* ptr, void* event);
void QProgressBar_ActionEventDefault(void* ptr, void* event);
void QProgressBar_DragEnterEvent(void* ptr, void* event);
void QProgressBar_DragEnterEventDefault(void* ptr, void* event);
void QProgressBar_DragLeaveEvent(void* ptr, void* event);
void QProgressBar_DragLeaveEventDefault(void* ptr, void* event);
void QProgressBar_DragMoveEvent(void* ptr, void* event);
void QProgressBar_DragMoveEventDefault(void* ptr, void* event);
void QProgressBar_DropEvent(void* ptr, void* event);
void QProgressBar_DropEventDefault(void* ptr, void* event);
void QProgressBar_EnterEvent(void* ptr, void* event);
void QProgressBar_EnterEventDefault(void* ptr, void* event);
void QProgressBar_FocusInEvent(void* ptr, void* event);
void QProgressBar_FocusInEventDefault(void* ptr, void* event);
void QProgressBar_FocusOutEvent(void* ptr, void* event);
void QProgressBar_FocusOutEventDefault(void* ptr, void* event);
void QProgressBar_HideEvent(void* ptr, void* event);
void QProgressBar_HideEventDefault(void* ptr, void* event);
void QProgressBar_LeaveEvent(void* ptr, void* event);
void QProgressBar_LeaveEventDefault(void* ptr, void* event);
void QProgressBar_MoveEvent(void* ptr, void* event);
void QProgressBar_MoveEventDefault(void* ptr, void* event);
void QProgressBar_SetEnabled(void* ptr, char vbo);
void QProgressBar_SetEnabledDefault(void* ptr, char vbo);
void QProgressBar_SetStyleSheet(void* ptr, char* styleSheet);
void QProgressBar_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QProgressBar_SetVisible(void* ptr, char visible);
void QProgressBar_SetVisibleDefault(void* ptr, char visible);
void QProgressBar_SetWindowModified(void* ptr, char vbo);
void QProgressBar_SetWindowModifiedDefault(void* ptr, char vbo);
void QProgressBar_SetWindowTitle(void* ptr, char* vqs);
void QProgressBar_SetWindowTitleDefault(void* ptr, char* vqs);
void QProgressBar_ShowEvent(void* ptr, void* event);
void QProgressBar_ShowEventDefault(void* ptr, void* event);
void QProgressBar_ChangeEvent(void* ptr, void* event);
void QProgressBar_ChangeEventDefault(void* ptr, void* event);
char QProgressBar_Close(void* ptr);
char QProgressBar_CloseDefault(void* ptr);
void QProgressBar_CloseEvent(void* ptr, void* event);
void QProgressBar_CloseEventDefault(void* ptr, void* event);
void QProgressBar_ContextMenuEvent(void* ptr, void* event);
void QProgressBar_ContextMenuEventDefault(void* ptr, void* event);
char QProgressBar_FocusNextPrevChild(void* ptr, char next);
char QProgressBar_FocusNextPrevChildDefault(void* ptr, char next);
char QProgressBar_HasHeightForWidth(void* ptr);
char QProgressBar_HasHeightForWidthDefault(void* ptr);
int QProgressBar_HeightForWidth(void* ptr, int w);
int QProgressBar_HeightForWidthDefault(void* ptr, int w);
void QProgressBar_Hide(void* ptr);
void QProgressBar_HideDefault(void* ptr);
void QProgressBar_InputMethodEvent(void* ptr, void* event);
void QProgressBar_InputMethodEventDefault(void* ptr, void* event);
void* QProgressBar_InputMethodQuery(void* ptr, long long query);
void* QProgressBar_InputMethodQueryDefault(void* ptr, long long query);
void QProgressBar_KeyPressEvent(void* ptr, void* event);
void QProgressBar_KeyPressEventDefault(void* ptr, void* event);
void QProgressBar_KeyReleaseEvent(void* ptr, void* event);
void QProgressBar_KeyReleaseEventDefault(void* ptr, void* event);
void QProgressBar_Lower(void* ptr);
void QProgressBar_LowerDefault(void* ptr);
void QProgressBar_MouseDoubleClickEvent(void* ptr, void* event);
void QProgressBar_MouseDoubleClickEventDefault(void* ptr, void* event);
void QProgressBar_MouseMoveEvent(void* ptr, void* event);
void QProgressBar_MouseMoveEventDefault(void* ptr, void* event);
void QProgressBar_MousePressEvent(void* ptr, void* event);
void QProgressBar_MousePressEventDefault(void* ptr, void* event);
void QProgressBar_MouseReleaseEvent(void* ptr, void* event);
void QProgressBar_MouseReleaseEventDefault(void* ptr, void* event);
char QProgressBar_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QProgressBar_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QProgressBar_Raise(void* ptr);
void QProgressBar_RaiseDefault(void* ptr);
void QProgressBar_Repaint(void* ptr);
void QProgressBar_RepaintDefault(void* ptr);
void QProgressBar_ResizeEvent(void* ptr, void* event);
void QProgressBar_ResizeEventDefault(void* ptr, void* event);
void QProgressBar_SetDisabled(void* ptr, char disable);
void QProgressBar_SetDisabledDefault(void* ptr, char disable);
void QProgressBar_SetFocus2(void* ptr);
void QProgressBar_SetFocus2Default(void* ptr);
void QProgressBar_SetHidden(void* ptr, char hidden);
void QProgressBar_SetHiddenDefault(void* ptr, char hidden);
void QProgressBar_Show(void* ptr);
void QProgressBar_ShowDefault(void* ptr);
void QProgressBar_ShowFullScreen(void* ptr);
void QProgressBar_ShowFullScreenDefault(void* ptr);
void QProgressBar_ShowMaximized(void* ptr);
void QProgressBar_ShowMaximizedDefault(void* ptr);
void QProgressBar_ShowMinimized(void* ptr);
void QProgressBar_ShowMinimizedDefault(void* ptr);
void QProgressBar_ShowNormal(void* ptr);
void QProgressBar_ShowNormalDefault(void* ptr);
void QProgressBar_TabletEvent(void* ptr, void* event);
void QProgressBar_TabletEventDefault(void* ptr, void* event);
void QProgressBar_Update(void* ptr);
void QProgressBar_UpdateDefault(void* ptr);
void QProgressBar_UpdateMicroFocus(void* ptr);
void QProgressBar_UpdateMicroFocusDefault(void* ptr);
void QProgressBar_WheelEvent(void* ptr, void* event);
void QProgressBar_WheelEventDefault(void* ptr, void* event);
void QProgressBar_TimerEvent(void* ptr, void* event);
void QProgressBar_TimerEventDefault(void* ptr, void* event);
void QProgressBar_ChildEvent(void* ptr, void* event);
void QProgressBar_ChildEventDefault(void* ptr, void* event);
void QProgressBar_ConnectNotify(void* ptr, void* sign);
void QProgressBar_ConnectNotifyDefault(void* ptr, void* sign);
void QProgressBar_CustomEvent(void* ptr, void* event);
void QProgressBar_CustomEventDefault(void* ptr, void* event);
void QProgressBar_DeleteLater(void* ptr);
void QProgressBar_DeleteLaterDefault(void* ptr);
void QProgressBar_DisconnectNotify(void* ptr, void* sign);
void QProgressBar_DisconnectNotifyDefault(void* ptr, void* sign);
char QProgressBar_EventFilter(void* ptr, void* watched, void* event);
char QProgressBar_EventFilterDefault(void* ptr, void* watched, void* event);
void* QProgressBar_MetaObject(void* ptr);
void* QProgressBar_MetaObjectDefault(void* ptr);
char QProgressDialog_AutoClose(void* ptr);
char QProgressDialog_AutoReset(void* ptr);
struct QtWidgets_PackedString QProgressDialog_LabelText(void* ptr);
int QProgressDialog_Maximum(void* ptr);
int QProgressDialog_Minimum(void* ptr);
int QProgressDialog_MinimumDuration(void* ptr);
void QProgressDialog_SetAutoClose(void* ptr, char close);
void QProgressDialog_SetAutoReset(void* ptr, char reset);
void QProgressDialog_SetLabelText(void* ptr, char* text);
void QProgressDialog_SetMaximum(void* ptr, int maximum);
void QProgressDialog_SetMinimum(void* ptr, int minimum);
void QProgressDialog_SetMinimumDuration(void* ptr, int ms);
void QProgressDialog_SetValue(void* ptr, int progress);
int QProgressDialog_Value(void* ptr);
char QProgressDialog_WasCanceled(void* ptr);
void* QProgressDialog_NewQProgressDialog(void* parent, long long f);
void* QProgressDialog_NewQProgressDialog2(char* labelText, char* cancelButtonText, int minimum, int maximum, void* parent, long long f);
void QProgressDialog_Cancel(void* ptr);
void QProgressDialog_ConnectCanceled(void* ptr);
void QProgressDialog_DisconnectCanceled(void* ptr);
void QProgressDialog_Canceled(void* ptr);
void QProgressDialog_ChangeEvent(void* ptr, void* ev);
void QProgressDialog_ChangeEventDefault(void* ptr, void* ev);
void QProgressDialog_CloseEvent(void* ptr, void* e);
void QProgressDialog_CloseEventDefault(void* ptr, void* e);
void QProgressDialog_ForceShow(void* ptr);
void QProgressDialog_Open(void* ptr, void* receiver, char* member);
void QProgressDialog_Reset(void* ptr);
void QProgressDialog_ResizeEvent(void* ptr, void* event);
void QProgressDialog_ResizeEventDefault(void* ptr, void* event);
void QProgressDialog_SetBar(void* ptr, void* bar);
void QProgressDialog_SetCancelButton(void* ptr, void* cancelButton);
void QProgressDialog_SetCancelButtonText(void* ptr, char* cancelButtonText);
void QProgressDialog_SetLabel(void* ptr, void* label);
void QProgressDialog_SetRange(void* ptr, int minimum, int maximum);
void QProgressDialog_ShowEvent(void* ptr, void* e);
void QProgressDialog_ShowEventDefault(void* ptr, void* e);
void* QProgressDialog_SizeHint(void* ptr);
void* QProgressDialog_SizeHintDefault(void* ptr);
void QProgressDialog_DestroyQProgressDialog(void* ptr);
void QProgressDialog_Accept(void* ptr);
void QProgressDialog_AcceptDefault(void* ptr);
void QProgressDialog_ContextMenuEvent(void* ptr, void* e);
void QProgressDialog_ContextMenuEventDefault(void* ptr, void* e);
void QProgressDialog_Done(void* ptr, int r);
void QProgressDialog_DoneDefault(void* ptr, int r);
int QProgressDialog_Exec(void* ptr);
int QProgressDialog_ExecDefault(void* ptr);
void QProgressDialog_KeyPressEvent(void* ptr, void* e);
void QProgressDialog_KeyPressEventDefault(void* ptr, void* e);
void* QProgressDialog_MinimumSizeHint(void* ptr);
void* QProgressDialog_MinimumSizeHintDefault(void* ptr);
void QProgressDialog_Reject(void* ptr);
void QProgressDialog_RejectDefault(void* ptr);
void QProgressDialog_SetVisible(void* ptr, char visible);
void QProgressDialog_SetVisibleDefault(void* ptr, char visible);
void QProgressDialog_ActionEvent(void* ptr, void* event);
void QProgressDialog_ActionEventDefault(void* ptr, void* event);
void QProgressDialog_DragEnterEvent(void* ptr, void* event);
void QProgressDialog_DragEnterEventDefault(void* ptr, void* event);
void QProgressDialog_DragLeaveEvent(void* ptr, void* event);
void QProgressDialog_DragLeaveEventDefault(void* ptr, void* event);
void QProgressDialog_DragMoveEvent(void* ptr, void* event);
void QProgressDialog_DragMoveEventDefault(void* ptr, void* event);
void QProgressDialog_DropEvent(void* ptr, void* event);
void QProgressDialog_DropEventDefault(void* ptr, void* event);
void QProgressDialog_EnterEvent(void* ptr, void* event);
void QProgressDialog_EnterEventDefault(void* ptr, void* event);
void QProgressDialog_FocusInEvent(void* ptr, void* event);
void QProgressDialog_FocusInEventDefault(void* ptr, void* event);
void QProgressDialog_FocusOutEvent(void* ptr, void* event);
void QProgressDialog_FocusOutEventDefault(void* ptr, void* event);
void QProgressDialog_HideEvent(void* ptr, void* event);
void QProgressDialog_HideEventDefault(void* ptr, void* event);
void QProgressDialog_LeaveEvent(void* ptr, void* event);
void QProgressDialog_LeaveEventDefault(void* ptr, void* event);
void QProgressDialog_MoveEvent(void* ptr, void* event);
void QProgressDialog_MoveEventDefault(void* ptr, void* event);
void QProgressDialog_PaintEvent(void* ptr, void* event);
void QProgressDialog_PaintEventDefault(void* ptr, void* event);
void QProgressDialog_SetEnabled(void* ptr, char vbo);
void QProgressDialog_SetEnabledDefault(void* ptr, char vbo);
void QProgressDialog_SetStyleSheet(void* ptr, char* styleSheet);
void QProgressDialog_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QProgressDialog_SetWindowModified(void* ptr, char vbo);
void QProgressDialog_SetWindowModifiedDefault(void* ptr, char vbo);
void QProgressDialog_SetWindowTitle(void* ptr, char* vqs);
void QProgressDialog_SetWindowTitleDefault(void* ptr, char* vqs);
char QProgressDialog_Close(void* ptr);
char QProgressDialog_CloseDefault(void* ptr);
char QProgressDialog_FocusNextPrevChild(void* ptr, char next);
char QProgressDialog_FocusNextPrevChildDefault(void* ptr, char next);
char QProgressDialog_HasHeightForWidth(void* ptr);
char QProgressDialog_HasHeightForWidthDefault(void* ptr);
int QProgressDialog_HeightForWidth(void* ptr, int w);
int QProgressDialog_HeightForWidthDefault(void* ptr, int w);
void QProgressDialog_Hide(void* ptr);
void QProgressDialog_HideDefault(void* ptr);
void QProgressDialog_InputMethodEvent(void* ptr, void* event);
void QProgressDialog_InputMethodEventDefault(void* ptr, void* event);
void* QProgressDialog_InputMethodQuery(void* ptr, long long query);
void* QProgressDialog_InputMethodQueryDefault(void* ptr, long long query);
void QProgressDialog_KeyReleaseEvent(void* ptr, void* event);
void QProgressDialog_KeyReleaseEventDefault(void* ptr, void* event);
void QProgressDialog_Lower(void* ptr);
void QProgressDialog_LowerDefault(void* ptr);
void QProgressDialog_MouseDoubleClickEvent(void* ptr, void* event);
void QProgressDialog_MouseDoubleClickEventDefault(void* ptr, void* event);
void QProgressDialog_MouseMoveEvent(void* ptr, void* event);
void QProgressDialog_MouseMoveEventDefault(void* ptr, void* event);
void QProgressDialog_MousePressEvent(void* ptr, void* event);
void QProgressDialog_MousePressEventDefault(void* ptr, void* event);
void QProgressDialog_MouseReleaseEvent(void* ptr, void* event);
void QProgressDialog_MouseReleaseEventDefault(void* ptr, void* event);
char QProgressDialog_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QProgressDialog_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QProgressDialog_Raise(void* ptr);
void QProgressDialog_RaiseDefault(void* ptr);
void QProgressDialog_Repaint(void* ptr);
void QProgressDialog_RepaintDefault(void* ptr);
void QProgressDialog_SetDisabled(void* ptr, char disable);
void QProgressDialog_SetDisabledDefault(void* ptr, char disable);
void QProgressDialog_SetFocus2(void* ptr);
void QProgressDialog_SetFocus2Default(void* ptr);
void QProgressDialog_SetHidden(void* ptr, char hidden);
void QProgressDialog_SetHiddenDefault(void* ptr, char hidden);
void QProgressDialog_Show(void* ptr);
void QProgressDialog_ShowDefault(void* ptr);
void QProgressDialog_ShowFullScreen(void* ptr);
void QProgressDialog_ShowFullScreenDefault(void* ptr);
void QProgressDialog_ShowMaximized(void* ptr);
void QProgressDialog_ShowMaximizedDefault(void* ptr);
void QProgressDialog_ShowMinimized(void* ptr);
void QProgressDialog_ShowMinimizedDefault(void* ptr);
void QProgressDialog_ShowNormal(void* ptr);
void QProgressDialog_ShowNormalDefault(void* ptr);
void QProgressDialog_TabletEvent(void* ptr, void* event);
void QProgressDialog_TabletEventDefault(void* ptr, void* event);
void QProgressDialog_Update(void* ptr);
void QProgressDialog_UpdateDefault(void* ptr);
void QProgressDialog_UpdateMicroFocus(void* ptr);
void QProgressDialog_UpdateMicroFocusDefault(void* ptr);
void QProgressDialog_WheelEvent(void* ptr, void* event);
void QProgressDialog_WheelEventDefault(void* ptr, void* event);
void QProgressDialog_TimerEvent(void* ptr, void* event);
void QProgressDialog_TimerEventDefault(void* ptr, void* event);
void QProgressDialog_ChildEvent(void* ptr, void* event);
void QProgressDialog_ChildEventDefault(void* ptr, void* event);
void QProgressDialog_ConnectNotify(void* ptr, void* sign);
void QProgressDialog_ConnectNotifyDefault(void* ptr, void* sign);
void QProgressDialog_CustomEvent(void* ptr, void* event);
void QProgressDialog_CustomEventDefault(void* ptr, void* event);
void QProgressDialog_DeleteLater(void* ptr);
void QProgressDialog_DeleteLaterDefault(void* ptr);
void QProgressDialog_DisconnectNotify(void* ptr, void* sign);
void QProgressDialog_DisconnectNotifyDefault(void* ptr, void* sign);
void* QProgressDialog_MetaObject(void* ptr);
void* QProgressDialog_MetaObjectDefault(void* ptr);
void* QProxyStyle_NewQProxyStyle(void* style);
void* QProxyStyle_NewQProxyStyle2(char* key);
void* QProxyStyle_BaseStyle(void* ptr);
void QProxyStyle_DrawComplexControl(void* ptr, long long control, void* option, void* painter, void* widget);
void QProxyStyle_DrawComplexControlDefault(void* ptr, long long control, void* option, void* painter, void* widget);
void QProxyStyle_DrawControl(void* ptr, long long element, void* option, void* painter, void* widget);
void QProxyStyle_DrawControlDefault(void* ptr, long long element, void* option, void* painter, void* widget);
void QProxyStyle_DrawItemPixmap(void* ptr, void* painter, void* rect, int alignment, void* pixmap);
void QProxyStyle_DrawItemPixmapDefault(void* ptr, void* painter, void* rect, int alignment, void* pixmap);
void QProxyStyle_DrawItemText(void* ptr, void* painter, void* rect, int flags, void* pal, char enabled, char* text, long long textRole);
void QProxyStyle_DrawItemTextDefault(void* ptr, void* painter, void* rect, int flags, void* pal, char enabled, char* text, long long textRole);
void QProxyStyle_DrawPrimitive(void* ptr, long long element, void* option, void* painter, void* widget);
void QProxyStyle_DrawPrimitiveDefault(void* ptr, long long element, void* option, void* painter, void* widget);
char QProxyStyle_Event(void* ptr, void* e);
void* QProxyStyle_GeneratedIconPixmap(void* ptr, long long iconMode, void* pixmap, void* opt);
void* QProxyStyle_GeneratedIconPixmapDefault(void* ptr, long long iconMode, void* pixmap, void* opt);
long long QProxyStyle_HitTestComplexControl(void* ptr, long long control, void* option, void* pos, void* widget);
long long QProxyStyle_HitTestComplexControlDefault(void* ptr, long long control, void* option, void* pos, void* widget);
void* QProxyStyle_ItemPixmapRect(void* ptr, void* r, int flags, void* pixmap);
void* QProxyStyle_ItemPixmapRectDefault(void* ptr, void* r, int flags, void* pixmap);
void* QProxyStyle_ItemTextRect(void* ptr, void* fm, void* r, int flags, char enabled, char* text);
void* QProxyStyle_ItemTextRectDefault(void* ptr, void* fm, void* r, int flags, char enabled, char* text);
int QProxyStyle_LayoutSpacing(void* ptr, long long control1, long long control2, long long orientation, void* option, void* widget);
int QProxyStyle_LayoutSpacingDefault(void* ptr, long long control1, long long control2, long long orientation, void* option, void* widget);
int QProxyStyle_PixelMetric(void* ptr, long long metric, void* option, void* widget);
int QProxyStyle_PixelMetricDefault(void* ptr, long long metric, void* option, void* widget);
void QProxyStyle_Polish3(void* ptr, void* app);
void QProxyStyle_Polish3Default(void* ptr, void* app);
void QProxyStyle_Polish2(void* ptr, void* pal);
void QProxyStyle_Polish2Default(void* ptr, void* pal);
void QProxyStyle_Polish(void* ptr, void* widget);
void QProxyStyle_PolishDefault(void* ptr, void* widget);
void QProxyStyle_SetBaseStyle(void* ptr, void* style);
void* QProxyStyle_SizeFromContents(void* ptr, long long ty, void* option, void* size, void* widget);
void* QProxyStyle_SizeFromContentsDefault(void* ptr, long long ty, void* option, void* size, void* widget);
void* QProxyStyle_StandardIcon(void* ptr, long long standardIcon, void* option, void* widget);
void* QProxyStyle_StandardIconDefault(void* ptr, long long standardIcon, void* option, void* widget);
void* QProxyStyle_StandardPalette(void* ptr);
void* QProxyStyle_StandardPaletteDefault(void* ptr);
void* QProxyStyle_StandardPixmap(void* ptr, long long standardPixmap, void* opt, void* widget);
void* QProxyStyle_StandardPixmapDefault(void* ptr, long long standardPixmap, void* opt, void* widget);
int QProxyStyle_StyleHint(void* ptr, long long hint, void* option, void* widget, void* returnData);
int QProxyStyle_StyleHintDefault(void* ptr, long long hint, void* option, void* widget, void* returnData);
void* QProxyStyle_SubControlRect(void* ptr, long long cc, void* option, long long sc, void* widget);
void* QProxyStyle_SubControlRectDefault(void* ptr, long long cc, void* option, long long sc, void* widget);
void* QProxyStyle_SubElementRect(void* ptr, long long element, void* option, void* widget);
void* QProxyStyle_SubElementRectDefault(void* ptr, long long element, void* option, void* widget);
void QProxyStyle_Unpolish2(void* ptr, void* app);
void QProxyStyle_Unpolish2Default(void* ptr, void* app);
void QProxyStyle_Unpolish(void* ptr, void* widget);
void QProxyStyle_UnpolishDefault(void* ptr, void* widget);
void QProxyStyle_DestroyQProxyStyle(void* ptr);
void QProxyStyle_TimerEvent(void* ptr, void* event);
void QProxyStyle_TimerEventDefault(void* ptr, void* event);
void QProxyStyle_ChildEvent(void* ptr, void* event);
void QProxyStyle_ChildEventDefault(void* ptr, void* event);
void QProxyStyle_ConnectNotify(void* ptr, void* sign);
void QProxyStyle_ConnectNotifyDefault(void* ptr, void* sign);
void QProxyStyle_CustomEvent(void* ptr, void* event);
void QProxyStyle_CustomEventDefault(void* ptr, void* event);
void QProxyStyle_DeleteLater(void* ptr);
void QProxyStyle_DeleteLaterDefault(void* ptr);
void QProxyStyle_DisconnectNotify(void* ptr, void* sign);
void QProxyStyle_DisconnectNotifyDefault(void* ptr, void* sign);
char QProxyStyle_EventFilter(void* ptr, void* watched, void* event);
char QProxyStyle_EventFilterDefault(void* ptr, void* watched, void* event);
void* QProxyStyle_MetaObject(void* ptr);
void* QProxyStyle_MetaObjectDefault(void* ptr);
char QPushButton_AutoDefault(void* ptr);
char QPushButton_IsDefault(void* ptr);
char QPushButton_IsFlat(void* ptr);
void QPushButton_SetAutoDefault(void* ptr, char vbo);
void QPushButton_SetDefault(void* ptr, char vbo);
void QPushButton_SetFlat(void* ptr, char vbo);
void* QPushButton_NewQPushButton(void* parent);
void* QPushButton_NewQPushButton3(void* icon, char* text, void* parent);
void* QPushButton_NewQPushButton2(char* text, void* parent);
char QPushButton_Event(void* ptr, void* e);
void QPushButton_FocusInEvent(void* ptr, void* e);
void QPushButton_FocusInEventDefault(void* ptr, void* e);
void QPushButton_FocusOutEvent(void* ptr, void* e);
void QPushButton_FocusOutEventDefault(void* ptr, void* e);
char QPushButton_HitButton(void* ptr, void* pos);
char QPushButton_HitButtonDefault(void* ptr, void* pos);
void QPushButton_InitStyleOption(void* ptr, void* option);
void QPushButton_KeyPressEvent(void* ptr, void* e);
void QPushButton_KeyPressEventDefault(void* ptr, void* e);
void* QPushButton_Menu(void* ptr);
void* QPushButton_MinimumSizeHint(void* ptr);
void* QPushButton_MinimumSizeHintDefault(void* ptr);
void QPushButton_PaintEvent(void* ptr, void* vqp);
void QPushButton_PaintEventDefault(void* ptr, void* vqp);
void QPushButton_SetMenu(void* ptr, void* menu);
void QPushButton_ShowMenu(void* ptr);
void* QPushButton_SizeHint(void* ptr);
void* QPushButton_SizeHintDefault(void* ptr);
void QPushButton_DestroyQPushButton(void* ptr);
void QPushButton_SetChecked(void* ptr, char vbo);
void QPushButton_SetCheckedDefault(void* ptr, char vbo);
void QPushButton_SetIconSize(void* ptr, void* size);
void QPushButton_SetIconSizeDefault(void* ptr, void* size);
void QPushButton_Toggle(void* ptr);
void QPushButton_ToggleDefault(void* ptr);
void QPushButton_AnimateClick(void* ptr, int msec);
void QPushButton_AnimateClickDefault(void* ptr, int msec);
void QPushButton_ChangeEvent(void* ptr, void* e);
void QPushButton_ChangeEventDefault(void* ptr, void* e);
void QPushButton_CheckStateSet(void* ptr);
void QPushButton_CheckStateSetDefault(void* ptr);
void QPushButton_Click(void* ptr);
void QPushButton_ClickDefault(void* ptr);
void QPushButton_KeyReleaseEvent(void* ptr, void* e);
void QPushButton_KeyReleaseEventDefault(void* ptr, void* e);
void QPushButton_MouseMoveEvent(void* ptr, void* e);
void QPushButton_MouseMoveEventDefault(void* ptr, void* e);
void QPushButton_MousePressEvent(void* ptr, void* e);
void QPushButton_MousePressEventDefault(void* ptr, void* e);
void QPushButton_MouseReleaseEvent(void* ptr, void* e);
void QPushButton_MouseReleaseEventDefault(void* ptr, void* e);
void QPushButton_NextCheckState(void* ptr);
void QPushButton_NextCheckStateDefault(void* ptr);
void QPushButton_ActionEvent(void* ptr, void* event);
void QPushButton_ActionEventDefault(void* ptr, void* event);
void QPushButton_DragEnterEvent(void* ptr, void* event);
void QPushButton_DragEnterEventDefault(void* ptr, void* event);
void QPushButton_DragLeaveEvent(void* ptr, void* event);
void QPushButton_DragLeaveEventDefault(void* ptr, void* event);
void QPushButton_DragMoveEvent(void* ptr, void* event);
void QPushButton_DragMoveEventDefault(void* ptr, void* event);
void QPushButton_DropEvent(void* ptr, void* event);
void QPushButton_DropEventDefault(void* ptr, void* event);
void QPushButton_EnterEvent(void* ptr, void* event);
void QPushButton_EnterEventDefault(void* ptr, void* event);
void QPushButton_HideEvent(void* ptr, void* event);
void QPushButton_HideEventDefault(void* ptr, void* event);
void QPushButton_LeaveEvent(void* ptr, void* event);
void QPushButton_LeaveEventDefault(void* ptr, void* event);
void QPushButton_MoveEvent(void* ptr, void* event);
void QPushButton_MoveEventDefault(void* ptr, void* event);
void QPushButton_SetEnabled(void* ptr, char vbo);
void QPushButton_SetEnabledDefault(void* ptr, char vbo);
void QPushButton_SetStyleSheet(void* ptr, char* styleSheet);
void QPushButton_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QPushButton_SetVisible(void* ptr, char visible);
void QPushButton_SetVisibleDefault(void* ptr, char visible);
void QPushButton_SetWindowModified(void* ptr, char vbo);
void QPushButton_SetWindowModifiedDefault(void* ptr, char vbo);
void QPushButton_SetWindowTitle(void* ptr, char* vqs);
void QPushButton_SetWindowTitleDefault(void* ptr, char* vqs);
void QPushButton_ShowEvent(void* ptr, void* event);
void QPushButton_ShowEventDefault(void* ptr, void* event);
char QPushButton_Close(void* ptr);
char QPushButton_CloseDefault(void* ptr);
void QPushButton_CloseEvent(void* ptr, void* event);
void QPushButton_CloseEventDefault(void* ptr, void* event);
void QPushButton_ContextMenuEvent(void* ptr, void* event);
void QPushButton_ContextMenuEventDefault(void* ptr, void* event);
char QPushButton_FocusNextPrevChild(void* ptr, char next);
char QPushButton_FocusNextPrevChildDefault(void* ptr, char next);
char QPushButton_HasHeightForWidth(void* ptr);
char QPushButton_HasHeightForWidthDefault(void* ptr);
int QPushButton_HeightForWidth(void* ptr, int w);
int QPushButton_HeightForWidthDefault(void* ptr, int w);
void QPushButton_Hide(void* ptr);
void QPushButton_HideDefault(void* ptr);
void QPushButton_InputMethodEvent(void* ptr, void* event);
void QPushButton_InputMethodEventDefault(void* ptr, void* event);
void* QPushButton_InputMethodQuery(void* ptr, long long query);
void* QPushButton_InputMethodQueryDefault(void* ptr, long long query);
void QPushButton_Lower(void* ptr);
void QPushButton_LowerDefault(void* ptr);
void QPushButton_MouseDoubleClickEvent(void* ptr, void* event);
void QPushButton_MouseDoubleClickEventDefault(void* ptr, void* event);
char QPushButton_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QPushButton_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QPushButton_Raise(void* ptr);
void QPushButton_RaiseDefault(void* ptr);
void QPushButton_Repaint(void* ptr);
void QPushButton_RepaintDefault(void* ptr);
void QPushButton_ResizeEvent(void* ptr, void* event);
void QPushButton_ResizeEventDefault(void* ptr, void* event);
void QPushButton_SetDisabled(void* ptr, char disable);
void QPushButton_SetDisabledDefault(void* ptr, char disable);
void QPushButton_SetFocus2(void* ptr);
void QPushButton_SetFocus2Default(void* ptr);
void QPushButton_SetHidden(void* ptr, char hidden);
void QPushButton_SetHiddenDefault(void* ptr, char hidden);
void QPushButton_Show(void* ptr);
void QPushButton_ShowDefault(void* ptr);
void QPushButton_ShowFullScreen(void* ptr);
void QPushButton_ShowFullScreenDefault(void* ptr);
void QPushButton_ShowMaximized(void* ptr);
void QPushButton_ShowMaximizedDefault(void* ptr);
void QPushButton_ShowMinimized(void* ptr);
void QPushButton_ShowMinimizedDefault(void* ptr);
void QPushButton_ShowNormal(void* ptr);
void QPushButton_ShowNormalDefault(void* ptr);
void QPushButton_TabletEvent(void* ptr, void* event);
void QPushButton_TabletEventDefault(void* ptr, void* event);
void QPushButton_Update(void* ptr);
void QPushButton_UpdateDefault(void* ptr);
void QPushButton_UpdateMicroFocus(void* ptr);
void QPushButton_UpdateMicroFocusDefault(void* ptr);
void QPushButton_WheelEvent(void* ptr, void* event);
void QPushButton_WheelEventDefault(void* ptr, void* event);
void QPushButton_ChildEvent(void* ptr, void* event);
void QPushButton_ChildEventDefault(void* ptr, void* event);
void QPushButton_ConnectNotify(void* ptr, void* sign);
void QPushButton_ConnectNotifyDefault(void* ptr, void* sign);
void QPushButton_CustomEvent(void* ptr, void* event);
void QPushButton_CustomEventDefault(void* ptr, void* event);
void QPushButton_DeleteLater(void* ptr);
void QPushButton_DeleteLaterDefault(void* ptr);
void QPushButton_DisconnectNotify(void* ptr, void* sign);
void QPushButton_DisconnectNotifyDefault(void* ptr, void* sign);
char QPushButton_EventFilter(void* ptr, void* watched, void* event);
char QPushButton_EventFilterDefault(void* ptr, void* watched, void* event);
void* QPushButton_MetaObject(void* ptr);
void* QPushButton_MetaObjectDefault(void* ptr);
void* QRadioButton_NewQRadioButton(void* parent);
void* QRadioButton_NewQRadioButton2(char* text, void* parent);
char QRadioButton_Event(void* ptr, void* e);
char QRadioButton_HitButton(void* ptr, void* pos);
char QRadioButton_HitButtonDefault(void* ptr, void* pos);
void QRadioButton_InitStyleOption(void* ptr, void* option);
void* QRadioButton_MinimumSizeHint(void* ptr);
void* QRadioButton_MinimumSizeHintDefault(void* ptr);
void QRadioButton_MouseMoveEvent(void* ptr, void* e);
void QRadioButton_MouseMoveEventDefault(void* ptr, void* e);
void QRadioButton_PaintEvent(void* ptr, void* vqp);
void QRadioButton_PaintEventDefault(void* ptr, void* vqp);
void* QRadioButton_SizeHint(void* ptr);
void* QRadioButton_SizeHintDefault(void* ptr);
void QRadioButton_DestroyQRadioButton(void* ptr);
void QRadioButton_SetChecked(void* ptr, char vbo);
void QRadioButton_SetCheckedDefault(void* ptr, char vbo);
void QRadioButton_SetIconSize(void* ptr, void* size);
void QRadioButton_SetIconSizeDefault(void* ptr, void* size);
void QRadioButton_Toggle(void* ptr);
void QRadioButton_ToggleDefault(void* ptr);
void QRadioButton_AnimateClick(void* ptr, int msec);
void QRadioButton_AnimateClickDefault(void* ptr, int msec);
void QRadioButton_ChangeEvent(void* ptr, void* e);
void QRadioButton_ChangeEventDefault(void* ptr, void* e);
void QRadioButton_CheckStateSet(void* ptr);
void QRadioButton_CheckStateSetDefault(void* ptr);
void QRadioButton_Click(void* ptr);
void QRadioButton_ClickDefault(void* ptr);
void QRadioButton_FocusInEvent(void* ptr, void* e);
void QRadioButton_FocusInEventDefault(void* ptr, void* e);
void QRadioButton_FocusOutEvent(void* ptr, void* e);
void QRadioButton_FocusOutEventDefault(void* ptr, void* e);
void QRadioButton_KeyPressEvent(void* ptr, void* e);
void QRadioButton_KeyPressEventDefault(void* ptr, void* e);
void QRadioButton_KeyReleaseEvent(void* ptr, void* e);
void QRadioButton_KeyReleaseEventDefault(void* ptr, void* e);
void QRadioButton_MousePressEvent(void* ptr, void* e);
void QRadioButton_MousePressEventDefault(void* ptr, void* e);
void QRadioButton_MouseReleaseEvent(void* ptr, void* e);
void QRadioButton_MouseReleaseEventDefault(void* ptr, void* e);
void QRadioButton_NextCheckState(void* ptr);
void QRadioButton_NextCheckStateDefault(void* ptr);
void QRadioButton_ActionEvent(void* ptr, void* event);
void QRadioButton_ActionEventDefault(void* ptr, void* event);
void QRadioButton_DragEnterEvent(void* ptr, void* event);
void QRadioButton_DragEnterEventDefault(void* ptr, void* event);
void QRadioButton_DragLeaveEvent(void* ptr, void* event);
void QRadioButton_DragLeaveEventDefault(void* ptr, void* event);
void QRadioButton_DragMoveEvent(void* ptr, void* event);
void QRadioButton_DragMoveEventDefault(void* ptr, void* event);
void QRadioButton_DropEvent(void* ptr, void* event);
void QRadioButton_DropEventDefault(void* ptr, void* event);
void QRadioButton_EnterEvent(void* ptr, void* event);
void QRadioButton_EnterEventDefault(void* ptr, void* event);
void QRadioButton_HideEvent(void* ptr, void* event);
void QRadioButton_HideEventDefault(void* ptr, void* event);
void QRadioButton_LeaveEvent(void* ptr, void* event);
void QRadioButton_LeaveEventDefault(void* ptr, void* event);
void QRadioButton_MoveEvent(void* ptr, void* event);
void QRadioButton_MoveEventDefault(void* ptr, void* event);
void QRadioButton_SetEnabled(void* ptr, char vbo);
void QRadioButton_SetEnabledDefault(void* ptr, char vbo);
void QRadioButton_SetStyleSheet(void* ptr, char* styleSheet);
void QRadioButton_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QRadioButton_SetVisible(void* ptr, char visible);
void QRadioButton_SetVisibleDefault(void* ptr, char visible);
void QRadioButton_SetWindowModified(void* ptr, char vbo);
void QRadioButton_SetWindowModifiedDefault(void* ptr, char vbo);
void QRadioButton_SetWindowTitle(void* ptr, char* vqs);
void QRadioButton_SetWindowTitleDefault(void* ptr, char* vqs);
void QRadioButton_ShowEvent(void* ptr, void* event);
void QRadioButton_ShowEventDefault(void* ptr, void* event);
char QRadioButton_Close(void* ptr);
char QRadioButton_CloseDefault(void* ptr);
void QRadioButton_CloseEvent(void* ptr, void* event);
void QRadioButton_CloseEventDefault(void* ptr, void* event);
void QRadioButton_ContextMenuEvent(void* ptr, void* event);
void QRadioButton_ContextMenuEventDefault(void* ptr, void* event);
char QRadioButton_FocusNextPrevChild(void* ptr, char next);
char QRadioButton_FocusNextPrevChildDefault(void* ptr, char next);
char QRadioButton_HasHeightForWidth(void* ptr);
char QRadioButton_HasHeightForWidthDefault(void* ptr);
int QRadioButton_HeightForWidth(void* ptr, int w);
int QRadioButton_HeightForWidthDefault(void* ptr, int w);
void QRadioButton_Hide(void* ptr);
void QRadioButton_HideDefault(void* ptr);
void QRadioButton_InputMethodEvent(void* ptr, void* event);
void QRadioButton_InputMethodEventDefault(void* ptr, void* event);
void* QRadioButton_InputMethodQuery(void* ptr, long long query);
void* QRadioButton_InputMethodQueryDefault(void* ptr, long long query);
void QRadioButton_Lower(void* ptr);
void QRadioButton_LowerDefault(void* ptr);
void QRadioButton_MouseDoubleClickEvent(void* ptr, void* event);
void QRadioButton_MouseDoubleClickEventDefault(void* ptr, void* event);
char QRadioButton_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QRadioButton_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QRadioButton_Raise(void* ptr);
void QRadioButton_RaiseDefault(void* ptr);
void QRadioButton_Repaint(void* ptr);
void QRadioButton_RepaintDefault(void* ptr);
void QRadioButton_ResizeEvent(void* ptr, void* event);
void QRadioButton_ResizeEventDefault(void* ptr, void* event);
void QRadioButton_SetDisabled(void* ptr, char disable);
void QRadioButton_SetDisabledDefault(void* ptr, char disable);
void QRadioButton_SetFocus2(void* ptr);
void QRadioButton_SetFocus2Default(void* ptr);
void QRadioButton_SetHidden(void* ptr, char hidden);
void QRadioButton_SetHiddenDefault(void* ptr, char hidden);
void QRadioButton_Show(void* ptr);
void QRadioButton_ShowDefault(void* ptr);
void QRadioButton_ShowFullScreen(void* ptr);
void QRadioButton_ShowFullScreenDefault(void* ptr);
void QRadioButton_ShowMaximized(void* ptr);
void QRadioButton_ShowMaximizedDefault(void* ptr);
void QRadioButton_ShowMinimized(void* ptr);
void QRadioButton_ShowMinimizedDefault(void* ptr);
void QRadioButton_ShowNormal(void* ptr);
void QRadioButton_ShowNormalDefault(void* ptr);
void QRadioButton_TabletEvent(void* ptr, void* event);
void QRadioButton_TabletEventDefault(void* ptr, void* event);
void QRadioButton_Update(void* ptr);
void QRadioButton_UpdateDefault(void* ptr);
void QRadioButton_UpdateMicroFocus(void* ptr);
void QRadioButton_UpdateMicroFocusDefault(void* ptr);
void QRadioButton_WheelEvent(void* ptr, void* event);
void QRadioButton_WheelEventDefault(void* ptr, void* event);
void QRadioButton_ChildEvent(void* ptr, void* event);
void QRadioButton_ChildEventDefault(void* ptr, void* event);
void QRadioButton_ConnectNotify(void* ptr, void* sign);
void QRadioButton_ConnectNotifyDefault(void* ptr, void* sign);
void QRadioButton_CustomEvent(void* ptr, void* event);
void QRadioButton_CustomEventDefault(void* ptr, void* event);
void QRadioButton_DeleteLater(void* ptr);
void QRadioButton_DeleteLaterDefault(void* ptr);
void QRadioButton_DisconnectNotify(void* ptr, void* sign);
void QRadioButton_DisconnectNotifyDefault(void* ptr, void* sign);
char QRadioButton_EventFilter(void* ptr, void* watched, void* event);
char QRadioButton_EventFilterDefault(void* ptr, void* watched, void* event);
void* QRadioButton_MetaObject(void* ptr);
void* QRadioButton_MetaObjectDefault(void* ptr);
void QRubberBand_SetGeometry(void* ptr, void* rect);
void* QRubberBand_NewQRubberBand(long long s, void* p);
void QRubberBand_ChangeEvent(void* ptr, void* e);
void QRubberBand_ChangeEventDefault(void* ptr, void* e);
char QRubberBand_Event(void* ptr, void* e);
void QRubberBand_InitStyleOption(void* ptr, void* option);
void QRubberBand_Move2(void* ptr, void* p);
void QRubberBand_Move(void* ptr, int x, int y);
void QRubberBand_MoveEvent(void* ptr, void* vqm);
void QRubberBand_MoveEventDefault(void* ptr, void* vqm);
void QRubberBand_PaintEvent(void* ptr, void* vqp);
void QRubberBand_PaintEventDefault(void* ptr, void* vqp);
void QRubberBand_Resize2(void* ptr, void* size);
void QRubberBand_Resize(void* ptr, int width, int height);
void QRubberBand_ResizeEvent(void* ptr, void* vqr);
void QRubberBand_ResizeEventDefault(void* ptr, void* vqr);
void QRubberBand_SetGeometry2(void* ptr, int x, int y, int width, int height);
long long QRubberBand_Shape(void* ptr);
void QRubberBand_ShowEvent(void* ptr, void* e);
void QRubberBand_ShowEventDefault(void* ptr, void* e);
void QRubberBand_DestroyQRubberBand(void* ptr);
void QRubberBand_ActionEvent(void* ptr, void* event);
void QRubberBand_ActionEventDefault(void* ptr, void* event);
void QRubberBand_DragEnterEvent(void* ptr, void* event);
void QRubberBand_DragEnterEventDefault(void* ptr, void* event);
void QRubberBand_DragLeaveEvent(void* ptr, void* event);
void QRubberBand_DragLeaveEventDefault(void* ptr, void* event);
void QRubberBand_DragMoveEvent(void* ptr, void* event);
void QRubberBand_DragMoveEventDefault(void* ptr, void* event);
void QRubberBand_DropEvent(void* ptr, void* event);
void QRubberBand_DropEventDefault(void* ptr, void* event);
void QRubberBand_EnterEvent(void* ptr, void* event);
void QRubberBand_EnterEventDefault(void* ptr, void* event);
void QRubberBand_FocusInEvent(void* ptr, void* event);
void QRubberBand_FocusInEventDefault(void* ptr, void* event);
void QRubberBand_FocusOutEvent(void* ptr, void* event);
void QRubberBand_FocusOutEventDefault(void* ptr, void* event);
void QRubberBand_HideEvent(void* ptr, void* event);
void QRubberBand_HideEventDefault(void* ptr, void* event);
void QRubberBand_LeaveEvent(void* ptr, void* event);
void QRubberBand_LeaveEventDefault(void* ptr, void* event);
void* QRubberBand_MinimumSizeHint(void* ptr);
void* QRubberBand_MinimumSizeHintDefault(void* ptr);
void QRubberBand_SetEnabled(void* ptr, char vbo);
void QRubberBand_SetEnabledDefault(void* ptr, char vbo);
void QRubberBand_SetStyleSheet(void* ptr, char* styleSheet);
void QRubberBand_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QRubberBand_SetVisible(void* ptr, char visible);
void QRubberBand_SetVisibleDefault(void* ptr, char visible);
void QRubberBand_SetWindowModified(void* ptr, char vbo);
void QRubberBand_SetWindowModifiedDefault(void* ptr, char vbo);
void QRubberBand_SetWindowTitle(void* ptr, char* vqs);
void QRubberBand_SetWindowTitleDefault(void* ptr, char* vqs);
void* QRubberBand_SizeHint(void* ptr);
void* QRubberBand_SizeHintDefault(void* ptr);
char QRubberBand_Close(void* ptr);
char QRubberBand_CloseDefault(void* ptr);
void QRubberBand_CloseEvent(void* ptr, void* event);
void QRubberBand_CloseEventDefault(void* ptr, void* event);
void QRubberBand_ContextMenuEvent(void* ptr, void* event);
void QRubberBand_ContextMenuEventDefault(void* ptr, void* event);
char QRubberBand_FocusNextPrevChild(void* ptr, char next);
char QRubberBand_FocusNextPrevChildDefault(void* ptr, char next);
char QRubberBand_HasHeightForWidth(void* ptr);
char QRubberBand_HasHeightForWidthDefault(void* ptr);
int QRubberBand_HeightForWidth(void* ptr, int w);
int QRubberBand_HeightForWidthDefault(void* ptr, int w);
void QRubberBand_Hide(void* ptr);
void QRubberBand_HideDefault(void* ptr);
void QRubberBand_InputMethodEvent(void* ptr, void* event);
void QRubberBand_InputMethodEventDefault(void* ptr, void* event);
void* QRubberBand_InputMethodQuery(void* ptr, long long query);
void* QRubberBand_InputMethodQueryDefault(void* ptr, long long query);
void QRubberBand_KeyPressEvent(void* ptr, void* event);
void QRubberBand_KeyPressEventDefault(void* ptr, void* event);
void QRubberBand_KeyReleaseEvent(void* ptr, void* event);
void QRubberBand_KeyReleaseEventDefault(void* ptr, void* event);
void QRubberBand_Lower(void* ptr);
void QRubberBand_LowerDefault(void* ptr);
void QRubberBand_MouseDoubleClickEvent(void* ptr, void* event);
void QRubberBand_MouseDoubleClickEventDefault(void* ptr, void* event);
void QRubberBand_MouseMoveEvent(void* ptr, void* event);
void QRubberBand_MouseMoveEventDefault(void* ptr, void* event);
void QRubberBand_MousePressEvent(void* ptr, void* event);
void QRubberBand_MousePressEventDefault(void* ptr, void* event);
void QRubberBand_MouseReleaseEvent(void* ptr, void* event);
void QRubberBand_MouseReleaseEventDefault(void* ptr, void* event);
char QRubberBand_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QRubberBand_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QRubberBand_Raise(void* ptr);
void QRubberBand_RaiseDefault(void* ptr);
void QRubberBand_Repaint(void* ptr);
void QRubberBand_RepaintDefault(void* ptr);
void QRubberBand_SetDisabled(void* ptr, char disable);
void QRubberBand_SetDisabledDefault(void* ptr, char disable);
void QRubberBand_SetFocus2(void* ptr);
void QRubberBand_SetFocus2Default(void* ptr);
void QRubberBand_SetHidden(void* ptr, char hidden);
void QRubberBand_SetHiddenDefault(void* ptr, char hidden);
void QRubberBand_Show(void* ptr);
void QRubberBand_ShowDefault(void* ptr);
void QRubberBand_ShowFullScreen(void* ptr);
void QRubberBand_ShowFullScreenDefault(void* ptr);
void QRubberBand_ShowMaximized(void* ptr);
void QRubberBand_ShowMaximizedDefault(void* ptr);
void QRubberBand_ShowMinimized(void* ptr);
void QRubberBand_ShowMinimizedDefault(void* ptr);
void QRubberBand_ShowNormal(void* ptr);
void QRubberBand_ShowNormalDefault(void* ptr);
void QRubberBand_TabletEvent(void* ptr, void* event);
void QRubberBand_TabletEventDefault(void* ptr, void* event);
void QRubberBand_Update(void* ptr);
void QRubberBand_UpdateDefault(void* ptr);
void QRubberBand_UpdateMicroFocus(void* ptr);
void QRubberBand_UpdateMicroFocusDefault(void* ptr);
void QRubberBand_WheelEvent(void* ptr, void* event);
void QRubberBand_WheelEventDefault(void* ptr, void* event);
void QRubberBand_TimerEvent(void* ptr, void* event);
void QRubberBand_TimerEventDefault(void* ptr, void* event);
void QRubberBand_ChildEvent(void* ptr, void* event);
void QRubberBand_ChildEventDefault(void* ptr, void* event);
void QRubberBand_ConnectNotify(void* ptr, void* sign);
void QRubberBand_ConnectNotifyDefault(void* ptr, void* sign);
void QRubberBand_CustomEvent(void* ptr, void* event);
void QRubberBand_CustomEventDefault(void* ptr, void* event);
void QRubberBand_DeleteLater(void* ptr);
void QRubberBand_DeleteLaterDefault(void* ptr);
void QRubberBand_DisconnectNotify(void* ptr, void* sign);
void QRubberBand_DisconnectNotifyDefault(void* ptr, void* sign);
char QRubberBand_EventFilter(void* ptr, void* watched, void* event);
char QRubberBand_EventFilterDefault(void* ptr, void* watched, void* event);
void* QRubberBand_MetaObject(void* ptr);
void* QRubberBand_MetaObjectDefault(void* ptr);
long long QScrollArea_Alignment(void* ptr);
void QScrollArea_SetAlignment(void* ptr, long long vqt);
void QScrollArea_SetWidget(void* ptr, void* widget);
void QScrollArea_SetWidgetResizable(void* ptr, char resizable);
char QScrollArea_WidgetResizable(void* ptr);
void* QScrollArea_NewQScrollArea(void* parent);
void QScrollArea_EnsureVisible(void* ptr, int x, int y, int xmargin, int ymargin);
void QScrollArea_EnsureWidgetVisible(void* ptr, void* childWidget, int xmargin, int ymargin);
char QScrollArea_Event(void* ptr, void* e);
char QScrollArea_EventFilter(void* ptr, void* o, void* e);
char QScrollArea_FocusNextPrevChild(void* ptr, char next);
char QScrollArea_FocusNextPrevChildDefault(void* ptr, char next);
void QScrollArea_ResizeEvent(void* ptr, void* vqr);
void QScrollArea_ResizeEventDefault(void* ptr, void* vqr);
void QScrollArea_ScrollContentsBy(void* ptr, int dx, int dy);
void QScrollArea_ScrollContentsByDefault(void* ptr, int dx, int dy);
void* QScrollArea_SizeHint(void* ptr);
void* QScrollArea_SizeHintDefault(void* ptr);
void* QScrollArea_TakeWidget(void* ptr);
void* QScrollArea_ViewportSizeHint(void* ptr);
void* QScrollArea_ViewportSizeHintDefault(void* ptr);
void* QScrollArea_Widget(void* ptr);
void QScrollArea_DestroyQScrollArea(void* ptr);
void QScrollArea_DragEnterEvent(void* ptr, void* event);
void QScrollArea_DragEnterEventDefault(void* ptr, void* event);
void QScrollArea_DragLeaveEvent(void* ptr, void* event);
void QScrollArea_DragLeaveEventDefault(void* ptr, void* event);
void QScrollArea_DragMoveEvent(void* ptr, void* event);
void QScrollArea_DragMoveEventDefault(void* ptr, void* event);
void QScrollArea_DropEvent(void* ptr, void* event);
void QScrollArea_DropEventDefault(void* ptr, void* event);
void QScrollArea_PaintEvent(void* ptr, void* event);
void QScrollArea_PaintEventDefault(void* ptr, void* event);
char QScrollArea_ViewportEvent(void* ptr, void* event);
char QScrollArea_ViewportEventDefault(void* ptr, void* event);
void QScrollArea_ContextMenuEvent(void* ptr, void* e);
void QScrollArea_ContextMenuEventDefault(void* ptr, void* e);
void QScrollArea_KeyPressEvent(void* ptr, void* e);
void QScrollArea_KeyPressEventDefault(void* ptr, void* e);
void* QScrollArea_MinimumSizeHint(void* ptr);
void* QScrollArea_MinimumSizeHintDefault(void* ptr);
void QScrollArea_MouseDoubleClickEvent(void* ptr, void* e);
void QScrollArea_MouseDoubleClickEventDefault(void* ptr, void* e);
void QScrollArea_MouseMoveEvent(void* ptr, void* e);
void QScrollArea_MouseMoveEventDefault(void* ptr, void* e);
void QScrollArea_MousePressEvent(void* ptr, void* e);
void QScrollArea_MousePressEventDefault(void* ptr, void* e);
void QScrollArea_MouseReleaseEvent(void* ptr, void* e);
void QScrollArea_MouseReleaseEventDefault(void* ptr, void* e);
void QScrollArea_SetupViewport(void* ptr, void* viewport);
void QScrollArea_SetupViewportDefault(void* ptr, void* viewport);
void QScrollArea_WheelEvent(void* ptr, void* e);
void QScrollArea_WheelEventDefault(void* ptr, void* e);
void QScrollArea_ChangeEvent(void* ptr, void* ev);
void QScrollArea_ChangeEventDefault(void* ptr, void* ev);
void QScrollArea_ActionEvent(void* ptr, void* event);
void QScrollArea_ActionEventDefault(void* ptr, void* event);
void QScrollArea_EnterEvent(void* ptr, void* event);
void QScrollArea_EnterEventDefault(void* ptr, void* event);
void QScrollArea_FocusInEvent(void* ptr, void* event);
void QScrollArea_FocusInEventDefault(void* ptr, void* event);
void QScrollArea_FocusOutEvent(void* ptr, void* event);
void QScrollArea_FocusOutEventDefault(void* ptr, void* event);
void QScrollArea_HideEvent(void* ptr, void* event);
void QScrollArea_HideEventDefault(void* ptr, void* event);
void QScrollArea_LeaveEvent(void* ptr, void* event);
void QScrollArea_LeaveEventDefault(void* ptr, void* event);
void QScrollArea_MoveEvent(void* ptr, void* event);
void QScrollArea_MoveEventDefault(void* ptr, void* event);
void QScrollArea_SetEnabled(void* ptr, char vbo);
void QScrollArea_SetEnabledDefault(void* ptr, char vbo);
void QScrollArea_SetStyleSheet(void* ptr, char* styleSheet);
void QScrollArea_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QScrollArea_SetVisible(void* ptr, char visible);
void QScrollArea_SetVisibleDefault(void* ptr, char visible);
void QScrollArea_SetWindowModified(void* ptr, char vbo);
void QScrollArea_SetWindowModifiedDefault(void* ptr, char vbo);
void QScrollArea_SetWindowTitle(void* ptr, char* vqs);
void QScrollArea_SetWindowTitleDefault(void* ptr, char* vqs);
void QScrollArea_ShowEvent(void* ptr, void* event);
void QScrollArea_ShowEventDefault(void* ptr, void* event);
char QScrollArea_Close(void* ptr);
char QScrollArea_CloseDefault(void* ptr);
void QScrollArea_CloseEvent(void* ptr, void* event);
void QScrollArea_CloseEventDefault(void* ptr, void* event);
char QScrollArea_HasHeightForWidth(void* ptr);
char QScrollArea_HasHeightForWidthDefault(void* ptr);
int QScrollArea_HeightForWidth(void* ptr, int w);
int QScrollArea_HeightForWidthDefault(void* ptr, int w);
void QScrollArea_Hide(void* ptr);
void QScrollArea_HideDefault(void* ptr);
void QScrollArea_InputMethodEvent(void* ptr, void* event);
void QScrollArea_InputMethodEventDefault(void* ptr, void* event);
void* QScrollArea_InputMethodQuery(void* ptr, long long query);
void* QScrollArea_InputMethodQueryDefault(void* ptr, long long query);
void QScrollArea_KeyReleaseEvent(void* ptr, void* event);
void QScrollArea_KeyReleaseEventDefault(void* ptr, void* event);
void QScrollArea_Lower(void* ptr);
void QScrollArea_LowerDefault(void* ptr);
char QScrollArea_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QScrollArea_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QScrollArea_Raise(void* ptr);
void QScrollArea_RaiseDefault(void* ptr);
void QScrollArea_Repaint(void* ptr);
void QScrollArea_RepaintDefault(void* ptr);
void QScrollArea_SetDisabled(void* ptr, char disable);
void QScrollArea_SetDisabledDefault(void* ptr, char disable);
void QScrollArea_SetFocus2(void* ptr);
void QScrollArea_SetFocus2Default(void* ptr);
void QScrollArea_SetHidden(void* ptr, char hidden);
void QScrollArea_SetHiddenDefault(void* ptr, char hidden);
void QScrollArea_Show(void* ptr);
void QScrollArea_ShowDefault(void* ptr);
void QScrollArea_ShowFullScreen(void* ptr);
void QScrollArea_ShowFullScreenDefault(void* ptr);
void QScrollArea_ShowMaximized(void* ptr);
void QScrollArea_ShowMaximizedDefault(void* ptr);
void QScrollArea_ShowMinimized(void* ptr);
void QScrollArea_ShowMinimizedDefault(void* ptr);
void QScrollArea_ShowNormal(void* ptr);
void QScrollArea_ShowNormalDefault(void* ptr);
void QScrollArea_TabletEvent(void* ptr, void* event);
void QScrollArea_TabletEventDefault(void* ptr, void* event);
void QScrollArea_Update(void* ptr);
void QScrollArea_UpdateDefault(void* ptr);
void QScrollArea_UpdateMicroFocus(void* ptr);
void QScrollArea_UpdateMicroFocusDefault(void* ptr);
void QScrollArea_TimerEvent(void* ptr, void* event);
void QScrollArea_TimerEventDefault(void* ptr, void* event);
void QScrollArea_ChildEvent(void* ptr, void* event);
void QScrollArea_ChildEventDefault(void* ptr, void* event);
void QScrollArea_ConnectNotify(void* ptr, void* sign);
void QScrollArea_ConnectNotifyDefault(void* ptr, void* sign);
void QScrollArea_CustomEvent(void* ptr, void* event);
void QScrollArea_CustomEventDefault(void* ptr, void* event);
void QScrollArea_DeleteLater(void* ptr);
void QScrollArea_DeleteLaterDefault(void* ptr);
void QScrollArea_DisconnectNotify(void* ptr, void* sign);
void QScrollArea_DisconnectNotifyDefault(void* ptr, void* sign);
void* QScrollArea_MetaObject(void* ptr);
void* QScrollArea_MetaObjectDefault(void* ptr);
void* QScrollBar_NewQScrollBar(void* parent);
void* QScrollBar_NewQScrollBar2(long long orientation, void* parent);
void QScrollBar_ContextMenuEvent(void* ptr, void* event);
void QScrollBar_ContextMenuEventDefault(void* ptr, void* event);
char QScrollBar_Event(void* ptr, void* event);
void QScrollBar_HideEvent(void* ptr, void* vqh);
void QScrollBar_HideEventDefault(void* ptr, void* vqh);
void QScrollBar_InitStyleOption(void* ptr, void* option);
void QScrollBar_MouseMoveEvent(void* ptr, void* e);
void QScrollBar_MouseMoveEventDefault(void* ptr, void* e);
void QScrollBar_MousePressEvent(void* ptr, void* e);
void QScrollBar_MousePressEventDefault(void* ptr, void* e);
void QScrollBar_MouseReleaseEvent(void* ptr, void* e);
void QScrollBar_MouseReleaseEventDefault(void* ptr, void* e);
void QScrollBar_PaintEvent(void* ptr, void* vqp);
void QScrollBar_PaintEventDefault(void* ptr, void* vqp);
void* QScrollBar_SizeHint(void* ptr);
void* QScrollBar_SizeHintDefault(void* ptr);
void QScrollBar_SliderChange(void* ptr, long long change);
void QScrollBar_SliderChangeDefault(void* ptr, long long change);
void QScrollBar_WheelEvent(void* ptr, void* event);
void QScrollBar_WheelEventDefault(void* ptr, void* event);
void QScrollBar_DestroyQScrollBar(void* ptr);
void QScrollBar_SetOrientation(void* ptr, long long vqt);
void QScrollBar_SetOrientationDefault(void* ptr, long long vqt);
void QScrollBar_SetValue(void* ptr, int vin);
void QScrollBar_SetValueDefault(void* ptr, int vin);
void QScrollBar_ChangeEvent(void* ptr, void* ev);
void QScrollBar_ChangeEventDefault(void* ptr, void* ev);
void QScrollBar_KeyPressEvent(void* ptr, void* ev);
void QScrollBar_KeyPressEventDefault(void* ptr, void* ev);
void QScrollBar_SetRange(void* ptr, int min, int max);
void QScrollBar_SetRangeDefault(void* ptr, int min, int max);
void QScrollBar_ActionEvent(void* ptr, void* event);
void QScrollBar_ActionEventDefault(void* ptr, void* event);
void QScrollBar_DragEnterEvent(void* ptr, void* event);
void QScrollBar_DragEnterEventDefault(void* ptr, void* event);
void QScrollBar_DragLeaveEvent(void* ptr, void* event);
void QScrollBar_DragLeaveEventDefault(void* ptr, void* event);
void QScrollBar_DragMoveEvent(void* ptr, void* event);
void QScrollBar_DragMoveEventDefault(void* ptr, void* event);
void QScrollBar_DropEvent(void* ptr, void* event);
void QScrollBar_DropEventDefault(void* ptr, void* event);
void QScrollBar_EnterEvent(void* ptr, void* event);
void QScrollBar_EnterEventDefault(void* ptr, void* event);
void QScrollBar_FocusInEvent(void* ptr, void* event);
void QScrollBar_FocusInEventDefault(void* ptr, void* event);
void QScrollBar_FocusOutEvent(void* ptr, void* event);
void QScrollBar_FocusOutEventDefault(void* ptr, void* event);
void QScrollBar_LeaveEvent(void* ptr, void* event);
void QScrollBar_LeaveEventDefault(void* ptr, void* event);
void* QScrollBar_MinimumSizeHint(void* ptr);
void* QScrollBar_MinimumSizeHintDefault(void* ptr);
void QScrollBar_MoveEvent(void* ptr, void* event);
void QScrollBar_MoveEventDefault(void* ptr, void* event);
void QScrollBar_SetEnabled(void* ptr, char vbo);
void QScrollBar_SetEnabledDefault(void* ptr, char vbo);
void QScrollBar_SetStyleSheet(void* ptr, char* styleSheet);
void QScrollBar_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QScrollBar_SetVisible(void* ptr, char visible);
void QScrollBar_SetVisibleDefault(void* ptr, char visible);
void QScrollBar_SetWindowModified(void* ptr, char vbo);
void QScrollBar_SetWindowModifiedDefault(void* ptr, char vbo);
void QScrollBar_SetWindowTitle(void* ptr, char* vqs);
void QScrollBar_SetWindowTitleDefault(void* ptr, char* vqs);
void QScrollBar_ShowEvent(void* ptr, void* event);
void QScrollBar_ShowEventDefault(void* ptr, void* event);
char QScrollBar_Close(void* ptr);
char QScrollBar_CloseDefault(void* ptr);
void QScrollBar_CloseEvent(void* ptr, void* event);
void QScrollBar_CloseEventDefault(void* ptr, void* event);
char QScrollBar_FocusNextPrevChild(void* ptr, char next);
char QScrollBar_FocusNextPrevChildDefault(void* ptr, char next);
char QScrollBar_HasHeightForWidth(void* ptr);
char QScrollBar_HasHeightForWidthDefault(void* ptr);
int QScrollBar_HeightForWidth(void* ptr, int w);
int QScrollBar_HeightForWidthDefault(void* ptr, int w);
void QScrollBar_Hide(void* ptr);
void QScrollBar_HideDefault(void* ptr);
void QScrollBar_InputMethodEvent(void* ptr, void* event);
void QScrollBar_InputMethodEventDefault(void* ptr, void* event);
void* QScrollBar_InputMethodQuery(void* ptr, long long query);
void* QScrollBar_InputMethodQueryDefault(void* ptr, long long query);
void QScrollBar_KeyReleaseEvent(void* ptr, void* event);
void QScrollBar_KeyReleaseEventDefault(void* ptr, void* event);
void QScrollBar_Lower(void* ptr);
void QScrollBar_LowerDefault(void* ptr);
void QScrollBar_MouseDoubleClickEvent(void* ptr, void* event);
void QScrollBar_MouseDoubleClickEventDefault(void* ptr, void* event);
char QScrollBar_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QScrollBar_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QScrollBar_Raise(void* ptr);
void QScrollBar_RaiseDefault(void* ptr);
void QScrollBar_Repaint(void* ptr);
void QScrollBar_RepaintDefault(void* ptr);
void QScrollBar_ResizeEvent(void* ptr, void* event);
void QScrollBar_ResizeEventDefault(void* ptr, void* event);
void QScrollBar_SetDisabled(void* ptr, char disable);
void QScrollBar_SetDisabledDefault(void* ptr, char disable);
void QScrollBar_SetFocus2(void* ptr);
void QScrollBar_SetFocus2Default(void* ptr);
void QScrollBar_SetHidden(void* ptr, char hidden);
void QScrollBar_SetHiddenDefault(void* ptr, char hidden);
void QScrollBar_Show(void* ptr);
void QScrollBar_ShowDefault(void* ptr);
void QScrollBar_ShowFullScreen(void* ptr);
void QScrollBar_ShowFullScreenDefault(void* ptr);
void QScrollBar_ShowMaximized(void* ptr);
void QScrollBar_ShowMaximizedDefault(void* ptr);
void QScrollBar_ShowMinimized(void* ptr);
void QScrollBar_ShowMinimizedDefault(void* ptr);
void QScrollBar_ShowNormal(void* ptr);
void QScrollBar_ShowNormalDefault(void* ptr);
void QScrollBar_TabletEvent(void* ptr, void* event);
void QScrollBar_TabletEventDefault(void* ptr, void* event);
void QScrollBar_Update(void* ptr);
void QScrollBar_UpdateDefault(void* ptr);
void QScrollBar_UpdateMicroFocus(void* ptr);
void QScrollBar_UpdateMicroFocusDefault(void* ptr);
void QScrollBar_ChildEvent(void* ptr, void* event);
void QScrollBar_ChildEventDefault(void* ptr, void* event);
void QScrollBar_ConnectNotify(void* ptr, void* sign);
void QScrollBar_ConnectNotifyDefault(void* ptr, void* sign);
void QScrollBar_CustomEvent(void* ptr, void* event);
void QScrollBar_CustomEventDefault(void* ptr, void* event);
void QScrollBar_DeleteLater(void* ptr);
void QScrollBar_DeleteLaterDefault(void* ptr);
void QScrollBar_DisconnectNotify(void* ptr, void* sign);
void QScrollBar_DisconnectNotifyDefault(void* ptr, void* sign);
char QScrollBar_EventFilter(void* ptr, void* watched, void* event);
char QScrollBar_EventFilterDefault(void* ptr, void* watched, void* event);
void* QScrollBar_MetaObject(void* ptr);
void* QScrollBar_MetaObjectDefault(void* ptr);
void* QScroller_ScrollerProperties(void* ptr);
void QScroller_SetScrollerProperties(void* ptr, void* prop);
long long QScroller_State(void* ptr);
struct QtWidgets_PackedList QScroller_QScroller_ActiveScrollers();
void QScroller_EnsureVisible(void* ptr, void* rect, double xmargin, double ymargin);
void QScroller_EnsureVisible2(void* ptr, void* rect, double xmargin, double ymargin, int scrollTime);
void* QScroller_FinalPosition(void* ptr);
long long QScroller_QScroller_GrabGesture(void* target, long long scrollGestureType);
long long QScroller_QScroller_GrabbedGesture(void* target);
char QScroller_HandleInput(void* ptr, long long input, void* position, long long timestamp);
char QScroller_QScroller_HasScroller(void* target);
void* QScroller_PixelPerMeter(void* ptr);
void QScroller_ResendPrepareEvent(void* ptr);
void QScroller_ScrollTo(void* ptr, void* pos);
void QScroller_ScrollTo2(void* ptr, void* pos, int scrollTime);
void* QScroller_QScroller_Scroller(void* target);
void* QScroller_QScroller_Scroller2(void* target);
void QScroller_ConnectScrollerPropertiesChanged(void* ptr);
void QScroller_DisconnectScrollerPropertiesChanged(void* ptr);
void QScroller_ScrollerPropertiesChanged(void* ptr, void* newProperties);
void QScroller_SetSnapPositionsX2(void* ptr, double first, double interval);
void QScroller_SetSnapPositionsY2(void* ptr, double first, double interval);
void QScroller_ConnectStateChanged(void* ptr);
void QScroller_DisconnectStateChanged(void* ptr);
void QScroller_StateChanged(void* ptr, long long newState);
void QScroller_Stop(void* ptr);
void* QScroller_Target(void* ptr);
void QScroller_QScroller_UngrabGesture(void* target);
void* QScroller_Velocity(void* ptr);
void* QScroller_activeScrollers_atList(void* ptr, int i);
void QScroller_TimerEvent(void* ptr, void* event);
void QScroller_TimerEventDefault(void* ptr, void* event);
void QScroller_ChildEvent(void* ptr, void* event);
void QScroller_ChildEventDefault(void* ptr, void* event);
void QScroller_ConnectNotify(void* ptr, void* sign);
void QScroller_ConnectNotifyDefault(void* ptr, void* sign);
void QScroller_CustomEvent(void* ptr, void* event);
void QScroller_CustomEventDefault(void* ptr, void* event);
void QScroller_DeleteLater(void* ptr);
void QScroller_DeleteLaterDefault(void* ptr);
void QScroller_DisconnectNotify(void* ptr, void* sign);
void QScroller_DisconnectNotifyDefault(void* ptr, void* sign);
char QScroller_Event(void* ptr, void* e);
char QScroller_EventDefault(void* ptr, void* e);
char QScroller_EventFilter(void* ptr, void* watched, void* event);
char QScroller_EventFilterDefault(void* ptr, void* watched, void* event);
void* QScroller_MetaObject(void* ptr);
void* QScroller_MetaObjectDefault(void* ptr);
void* QScrollerProperties_NewQScrollerProperties();
void* QScrollerProperties_NewQScrollerProperties2(void* sp);
void* QScrollerProperties_ScrollMetric(void* ptr, long long metric);
void QScrollerProperties_QScrollerProperties_SetDefaultScrollerProperties(void* sp);
void QScrollerProperties_SetScrollMetric(void* ptr, long long metric, void* value);
void QScrollerProperties_QScrollerProperties_UnsetDefaultScrollerProperties();
void QScrollerProperties_DestroyQScrollerProperties(void* ptr);
void QScrollerProperties_DestroyQScrollerPropertiesDefault(void* ptr);
char QShortcut_AutoRepeat(void* ptr);
long long QShortcut_Context(void* ptr);
char QShortcut_IsEnabled(void* ptr);
void* QShortcut_Key(void* ptr);
void QShortcut_SetAutoRepeat(void* ptr, char on);
void QShortcut_SetContext(void* ptr, long long context);
void QShortcut_SetEnabled(void* ptr, char enable);
void QShortcut_SetKey(void* ptr, void* key);
void QShortcut_SetWhatsThis(void* ptr, char* text);
struct QtWidgets_PackedString QShortcut_WhatsThis(void* ptr);
void* QShortcut_NewQShortcut(void* parent);
void* QShortcut_NewQShortcut2(void* key, void* parent, char* member, char* ambiguousMember, long long context);
void QShortcut_ConnectActivated(void* ptr);
void QShortcut_DisconnectActivated(void* ptr);
void QShortcut_Activated(void* ptr);
void QShortcut_ConnectActivatedAmbiguously(void* ptr);
void QShortcut_DisconnectActivatedAmbiguously(void* ptr);
void QShortcut_ActivatedAmbiguously(void* ptr);
int QShortcut_Id(void* ptr);
void* QShortcut_ParentWidget(void* ptr);
void QShortcut_DestroyQShortcut(void* ptr);
void QShortcut_TimerEvent(void* ptr, void* event);
void QShortcut_TimerEventDefault(void* ptr, void* event);
void QShortcut_ChildEvent(void* ptr, void* event);
void QShortcut_ChildEventDefault(void* ptr, void* event);
void QShortcut_ConnectNotify(void* ptr, void* sign);
void QShortcut_ConnectNotifyDefault(void* ptr, void* sign);
void QShortcut_CustomEvent(void* ptr, void* event);
void QShortcut_CustomEventDefault(void* ptr, void* event);
void QShortcut_DeleteLater(void* ptr);
void QShortcut_DeleteLaterDefault(void* ptr);
void QShortcut_DisconnectNotify(void* ptr, void* sign);
void QShortcut_DisconnectNotifyDefault(void* ptr, void* sign);
char QShortcut_Event(void* ptr, void* e);
char QShortcut_EventDefault(void* ptr, void* e);
char QShortcut_EventFilter(void* ptr, void* watched, void* event);
char QShortcut_EventFilterDefault(void* ptr, void* watched, void* event);
void* QShortcut_MetaObject(void* ptr);
void* QShortcut_MetaObjectDefault(void* ptr);
void QSizeGrip_MouseMoveEvent(void* ptr, void* event);
void QSizeGrip_MouseMoveEventDefault(void* ptr, void* event);
void QSizeGrip_MousePressEvent(void* ptr, void* event);
void QSizeGrip_MousePressEventDefault(void* ptr, void* event);
void* QSizeGrip_NewQSizeGrip(void* parent);
char QSizeGrip_Event(void* ptr, void* event);
char QSizeGrip_EventFilter(void* ptr, void* o, void* e);
void QSizeGrip_HideEvent(void* ptr, void* hideEvent);
void QSizeGrip_HideEventDefault(void* ptr, void* hideEvent);
void QSizeGrip_MouseReleaseEvent(void* ptr, void* mouseEvent);
void QSizeGrip_MouseReleaseEventDefault(void* ptr, void* mouseEvent);
void QSizeGrip_MoveEvent(void* ptr, void* moveEvent);
void QSizeGrip_MoveEventDefault(void* ptr, void* moveEvent);
void QSizeGrip_PaintEvent(void* ptr, void* event);
void QSizeGrip_PaintEventDefault(void* ptr, void* event);
void QSizeGrip_SetVisible(void* ptr, char visible);
void QSizeGrip_SetVisibleDefault(void* ptr, char visible);
void QSizeGrip_ShowEvent(void* ptr, void* showEvent);
void QSizeGrip_ShowEventDefault(void* ptr, void* showEvent);
void* QSizeGrip_SizeHint(void* ptr);
void* QSizeGrip_SizeHintDefault(void* ptr);
void QSizeGrip_DestroyQSizeGrip(void* ptr);
void QSizeGrip_ActionEvent(void* ptr, void* event);
void QSizeGrip_ActionEventDefault(void* ptr, void* event);
void QSizeGrip_DragEnterEvent(void* ptr, void* event);
void QSizeGrip_DragEnterEventDefault(void* ptr, void* event);
void QSizeGrip_DragLeaveEvent(void* ptr, void* event);
void QSizeGrip_DragLeaveEventDefault(void* ptr, void* event);
void QSizeGrip_DragMoveEvent(void* ptr, void* event);
void QSizeGrip_DragMoveEventDefault(void* ptr, void* event);
void QSizeGrip_DropEvent(void* ptr, void* event);
void QSizeGrip_DropEventDefault(void* ptr, void* event);
void QSizeGrip_EnterEvent(void* ptr, void* event);
void QSizeGrip_EnterEventDefault(void* ptr, void* event);
void QSizeGrip_FocusInEvent(void* ptr, void* event);
void QSizeGrip_FocusInEventDefault(void* ptr, void* event);
void QSizeGrip_FocusOutEvent(void* ptr, void* event);
void QSizeGrip_FocusOutEventDefault(void* ptr, void* event);
void QSizeGrip_LeaveEvent(void* ptr, void* event);
void QSizeGrip_LeaveEventDefault(void* ptr, void* event);
void* QSizeGrip_MinimumSizeHint(void* ptr);
void* QSizeGrip_MinimumSizeHintDefault(void* ptr);
void QSizeGrip_SetEnabled(void* ptr, char vbo);
void QSizeGrip_SetEnabledDefault(void* ptr, char vbo);
void QSizeGrip_SetStyleSheet(void* ptr, char* styleSheet);
void QSizeGrip_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QSizeGrip_SetWindowModified(void* ptr, char vbo);
void QSizeGrip_SetWindowModifiedDefault(void* ptr, char vbo);
void QSizeGrip_SetWindowTitle(void* ptr, char* vqs);
void QSizeGrip_SetWindowTitleDefault(void* ptr, char* vqs);
void QSizeGrip_ChangeEvent(void* ptr, void* event);
void QSizeGrip_ChangeEventDefault(void* ptr, void* event);
char QSizeGrip_Close(void* ptr);
char QSizeGrip_CloseDefault(void* ptr);
void QSizeGrip_CloseEvent(void* ptr, void* event);
void QSizeGrip_CloseEventDefault(void* ptr, void* event);
void QSizeGrip_ContextMenuEvent(void* ptr, void* event);
void QSizeGrip_ContextMenuEventDefault(void* ptr, void* event);
char QSizeGrip_FocusNextPrevChild(void* ptr, char next);
char QSizeGrip_FocusNextPrevChildDefault(void* ptr, char next);
char QSizeGrip_HasHeightForWidth(void* ptr);
char QSizeGrip_HasHeightForWidthDefault(void* ptr);
int QSizeGrip_HeightForWidth(void* ptr, int w);
int QSizeGrip_HeightForWidthDefault(void* ptr, int w);
void QSizeGrip_Hide(void* ptr);
void QSizeGrip_HideDefault(void* ptr);
void QSizeGrip_InputMethodEvent(void* ptr, void* event);
void QSizeGrip_InputMethodEventDefault(void* ptr, void* event);
void* QSizeGrip_InputMethodQuery(void* ptr, long long query);
void* QSizeGrip_InputMethodQueryDefault(void* ptr, long long query);
void QSizeGrip_KeyPressEvent(void* ptr, void* event);
void QSizeGrip_KeyPressEventDefault(void* ptr, void* event);
void QSizeGrip_KeyReleaseEvent(void* ptr, void* event);
void QSizeGrip_KeyReleaseEventDefault(void* ptr, void* event);
void QSizeGrip_Lower(void* ptr);
void QSizeGrip_LowerDefault(void* ptr);
void QSizeGrip_MouseDoubleClickEvent(void* ptr, void* event);
void QSizeGrip_MouseDoubleClickEventDefault(void* ptr, void* event);
char QSizeGrip_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QSizeGrip_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QSizeGrip_Raise(void* ptr);
void QSizeGrip_RaiseDefault(void* ptr);
void QSizeGrip_Repaint(void* ptr);
void QSizeGrip_RepaintDefault(void* ptr);
void QSizeGrip_ResizeEvent(void* ptr, void* event);
void QSizeGrip_ResizeEventDefault(void* ptr, void* event);
void QSizeGrip_SetDisabled(void* ptr, char disable);
void QSizeGrip_SetDisabledDefault(void* ptr, char disable);
void QSizeGrip_SetFocus2(void* ptr);
void QSizeGrip_SetFocus2Default(void* ptr);
void QSizeGrip_SetHidden(void* ptr, char hidden);
void QSizeGrip_SetHiddenDefault(void* ptr, char hidden);
void QSizeGrip_Show(void* ptr);
void QSizeGrip_ShowDefault(void* ptr);
void QSizeGrip_ShowFullScreen(void* ptr);
void QSizeGrip_ShowFullScreenDefault(void* ptr);
void QSizeGrip_ShowMaximized(void* ptr);
void QSizeGrip_ShowMaximizedDefault(void* ptr);
void QSizeGrip_ShowMinimized(void* ptr);
void QSizeGrip_ShowMinimizedDefault(void* ptr);
void QSizeGrip_ShowNormal(void* ptr);
void QSizeGrip_ShowNormalDefault(void* ptr);
void QSizeGrip_TabletEvent(void* ptr, void* event);
void QSizeGrip_TabletEventDefault(void* ptr, void* event);
void QSizeGrip_Update(void* ptr);
void QSizeGrip_UpdateDefault(void* ptr);
void QSizeGrip_UpdateMicroFocus(void* ptr);
void QSizeGrip_UpdateMicroFocusDefault(void* ptr);
void QSizeGrip_WheelEvent(void* ptr, void* event);
void QSizeGrip_WheelEventDefault(void* ptr, void* event);
void QSizeGrip_TimerEvent(void* ptr, void* event);
void QSizeGrip_TimerEventDefault(void* ptr, void* event);
void QSizeGrip_ChildEvent(void* ptr, void* event);
void QSizeGrip_ChildEventDefault(void* ptr, void* event);
void QSizeGrip_ConnectNotify(void* ptr, void* sign);
void QSizeGrip_ConnectNotifyDefault(void* ptr, void* sign);
void QSizeGrip_CustomEvent(void* ptr, void* event);
void QSizeGrip_CustomEventDefault(void* ptr, void* event);
void QSizeGrip_DeleteLater(void* ptr);
void QSizeGrip_DeleteLaterDefault(void* ptr);
void QSizeGrip_DisconnectNotify(void* ptr, void* sign);
void QSizeGrip_DisconnectNotifyDefault(void* ptr, void* sign);
void* QSizeGrip_MetaObject(void* ptr);
void* QSizeGrip_MetaObjectDefault(void* ptr);
void* QSizePolicy_NewQSizePolicy();
void* QSizePolicy_NewQSizePolicy2(long long horizontal, long long vertical, long long ty);
long long QSizePolicy_ControlType(void* ptr);
long long QSizePolicy_ExpandingDirections(void* ptr);
char QSizePolicy_HasHeightForWidth(void* ptr);
char QSizePolicy_HasWidthForHeight(void* ptr);
long long QSizePolicy_HorizontalPolicy(void* ptr);
int QSizePolicy_HorizontalStretch(void* ptr);
char QSizePolicy_RetainSizeWhenHidden(void* ptr);
void QSizePolicy_SetControlType(void* ptr, long long ty);
void QSizePolicy_SetHeightForWidth(void* ptr, char dependent);
void QSizePolicy_SetHorizontalPolicy(void* ptr, long long policy);
void QSizePolicy_SetHorizontalStretch(void* ptr, int stretchFactor);
void QSizePolicy_SetRetainSizeWhenHidden(void* ptr, char retainSize);
void QSizePolicy_SetVerticalPolicy(void* ptr, long long policy);
void QSizePolicy_SetVerticalStretch(void* ptr, int stretchFactor);
void QSizePolicy_SetWidthForHeight(void* ptr, char dependent);
void QSizePolicy_Transpose(void* ptr);
long long QSizePolicy_VerticalPolicy(void* ptr);
int QSizePolicy_VerticalStretch(void* ptr);
void QSlider_SetTickInterval(void* ptr, int ti);
void QSlider_SetTickPosition(void* ptr, long long position);
int QSlider_TickInterval(void* ptr);
long long QSlider_TickPosition(void* ptr);
void* QSlider_NewQSlider(void* parent);
void* QSlider_NewQSlider2(long long orientation, void* parent);
char QSlider_Event(void* ptr, void* event);
void QSlider_InitStyleOption(void* ptr, void* option);
void* QSlider_MinimumSizeHint(void* ptr);
void* QSlider_MinimumSizeHintDefault(void* ptr);
void QSlider_MouseMoveEvent(void* ptr, void* ev);
void QSlider_MouseMoveEventDefault(void* ptr, void* ev);
void QSlider_MousePressEvent(void* ptr, void* ev);
void QSlider_MousePressEventDefault(void* ptr, void* ev);
void QSlider_MouseReleaseEvent(void* ptr, void* ev);
void QSlider_MouseReleaseEventDefault(void* ptr, void* ev);
void QSlider_PaintEvent(void* ptr, void* ev);
void QSlider_PaintEventDefault(void* ptr, void* ev);
void* QSlider_SizeHint(void* ptr);
void* QSlider_SizeHintDefault(void* ptr);
void QSlider_DestroyQSlider(void* ptr);
void QSlider_SetOrientation(void* ptr, long long vqt);
void QSlider_SetOrientationDefault(void* ptr, long long vqt);
void QSlider_SetValue(void* ptr, int vin);
void QSlider_SetValueDefault(void* ptr, int vin);
void QSlider_ChangeEvent(void* ptr, void* ev);
void QSlider_ChangeEventDefault(void* ptr, void* ev);
void QSlider_KeyPressEvent(void* ptr, void* ev);
void QSlider_KeyPressEventDefault(void* ptr, void* ev);
void QSlider_SetRange(void* ptr, int min, int max);
void QSlider_SetRangeDefault(void* ptr, int min, int max);
void QSlider_SliderChange(void* ptr, long long change);
void QSlider_SliderChangeDefault(void* ptr, long long change);
void QSlider_WheelEvent(void* ptr, void* e);
void QSlider_WheelEventDefault(void* ptr, void* e);
void QSlider_ActionEvent(void* ptr, void* event);
void QSlider_ActionEventDefault(void* ptr, void* event);
void QSlider_DragEnterEvent(void* ptr, void* event);
void QSlider_DragEnterEventDefault(void* ptr, void* event);
void QSlider_DragLeaveEvent(void* ptr, void* event);
void QSlider_DragLeaveEventDefault(void* ptr, void* event);
void QSlider_DragMoveEvent(void* ptr, void* event);
void QSlider_DragMoveEventDefault(void* ptr, void* event);
void QSlider_DropEvent(void* ptr, void* event);
void QSlider_DropEventDefault(void* ptr, void* event);
void QSlider_EnterEvent(void* ptr, void* event);
void QSlider_EnterEventDefault(void* ptr, void* event);
void QSlider_FocusInEvent(void* ptr, void* event);
void QSlider_FocusInEventDefault(void* ptr, void* event);
void QSlider_FocusOutEvent(void* ptr, void* event);
void QSlider_FocusOutEventDefault(void* ptr, void* event);
void QSlider_HideEvent(void* ptr, void* event);
void QSlider_HideEventDefault(void* ptr, void* event);
void QSlider_LeaveEvent(void* ptr, void* event);
void QSlider_LeaveEventDefault(void* ptr, void* event);
void QSlider_MoveEvent(void* ptr, void* event);
void QSlider_MoveEventDefault(void* ptr, void* event);
void QSlider_SetEnabled(void* ptr, char vbo);
void QSlider_SetEnabledDefault(void* ptr, char vbo);
void QSlider_SetStyleSheet(void* ptr, char* styleSheet);
void QSlider_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QSlider_SetVisible(void* ptr, char visible);
void QSlider_SetVisibleDefault(void* ptr, char visible);
void QSlider_SetWindowModified(void* ptr, char vbo);
void QSlider_SetWindowModifiedDefault(void* ptr, char vbo);
void QSlider_SetWindowTitle(void* ptr, char* vqs);
void QSlider_SetWindowTitleDefault(void* ptr, char* vqs);
void QSlider_ShowEvent(void* ptr, void* event);
void QSlider_ShowEventDefault(void* ptr, void* event);
char QSlider_Close(void* ptr);
char QSlider_CloseDefault(void* ptr);
void QSlider_CloseEvent(void* ptr, void* event);
void QSlider_CloseEventDefault(void* ptr, void* event);
void QSlider_ContextMenuEvent(void* ptr, void* event);
void QSlider_ContextMenuEventDefault(void* ptr, void* event);
char QSlider_FocusNextPrevChild(void* ptr, char next);
char QSlider_FocusNextPrevChildDefault(void* ptr, char next);
char QSlider_HasHeightForWidth(void* ptr);
char QSlider_HasHeightForWidthDefault(void* ptr);
int QSlider_HeightForWidth(void* ptr, int w);
int QSlider_HeightForWidthDefault(void* ptr, int w);
void QSlider_Hide(void* ptr);
void QSlider_HideDefault(void* ptr);
void QSlider_InputMethodEvent(void* ptr, void* event);
void QSlider_InputMethodEventDefault(void* ptr, void* event);
void* QSlider_InputMethodQuery(void* ptr, long long query);
void* QSlider_InputMethodQueryDefault(void* ptr, long long query);
void QSlider_KeyReleaseEvent(void* ptr, void* event);
void QSlider_KeyReleaseEventDefault(void* ptr, void* event);
void QSlider_Lower(void* ptr);
void QSlider_LowerDefault(void* ptr);
void QSlider_MouseDoubleClickEvent(void* ptr, void* event);
void QSlider_MouseDoubleClickEventDefault(void* ptr, void* event);
char QSlider_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QSlider_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QSlider_Raise(void* ptr);
void QSlider_RaiseDefault(void* ptr);
void QSlider_Repaint(void* ptr);
void QSlider_RepaintDefault(void* ptr);
void QSlider_ResizeEvent(void* ptr, void* event);
void QSlider_ResizeEventDefault(void* ptr, void* event);
void QSlider_SetDisabled(void* ptr, char disable);
void QSlider_SetDisabledDefault(void* ptr, char disable);
void QSlider_SetFocus2(void* ptr);
void QSlider_SetFocus2Default(void* ptr);
void QSlider_SetHidden(void* ptr, char hidden);
void QSlider_SetHiddenDefault(void* ptr, char hidden);
void QSlider_Show(void* ptr);
void QSlider_ShowDefault(void* ptr);
void QSlider_ShowFullScreen(void* ptr);
void QSlider_ShowFullScreenDefault(void* ptr);
void QSlider_ShowMaximized(void* ptr);
void QSlider_ShowMaximizedDefault(void* ptr);
void QSlider_ShowMinimized(void* ptr);
void QSlider_ShowMinimizedDefault(void* ptr);
void QSlider_ShowNormal(void* ptr);
void QSlider_ShowNormalDefault(void* ptr);
void QSlider_TabletEvent(void* ptr, void* event);
void QSlider_TabletEventDefault(void* ptr, void* event);
void QSlider_Update(void* ptr);
void QSlider_UpdateDefault(void* ptr);
void QSlider_UpdateMicroFocus(void* ptr);
void QSlider_UpdateMicroFocusDefault(void* ptr);
void QSlider_ChildEvent(void* ptr, void* event);
void QSlider_ChildEventDefault(void* ptr, void* event);
void QSlider_ConnectNotify(void* ptr, void* sign);
void QSlider_ConnectNotifyDefault(void* ptr, void* sign);
void QSlider_CustomEvent(void* ptr, void* event);
void QSlider_CustomEventDefault(void* ptr, void* event);
void QSlider_DeleteLater(void* ptr);
void QSlider_DeleteLaterDefault(void* ptr);
void QSlider_DisconnectNotify(void* ptr, void* sign);
void QSlider_DisconnectNotifyDefault(void* ptr, void* sign);
char QSlider_EventFilter(void* ptr, void* watched, void* event);
char QSlider_EventFilterDefault(void* ptr, void* watched, void* event);
void* QSlider_MetaObject(void* ptr);
void* QSlider_MetaObjectDefault(void* ptr);
void* QSpacerItem_NewQSpacerItem(int w, int h, long long hPolicy, long long vPolicy);
void QSpacerItem_ChangeSize(void* ptr, int w, int h, long long hPolicy, long long vPolicy);
long long QSpacerItem_ExpandingDirections(void* ptr);
long long QSpacerItem_ExpandingDirectionsDefault(void* ptr);
void* QSpacerItem_Geometry(void* ptr);
void* QSpacerItem_GeometryDefault(void* ptr);
char QSpacerItem_IsEmpty(void* ptr);
char QSpacerItem_IsEmptyDefault(void* ptr);
void* QSpacerItem_MaximumSize(void* ptr);
void* QSpacerItem_MaximumSizeDefault(void* ptr);
void* QSpacerItem_MinimumSize(void* ptr);
void* QSpacerItem_MinimumSizeDefault(void* ptr);
void QSpacerItem_SetGeometry(void* ptr, void* r);
void QSpacerItem_SetGeometryDefault(void* ptr, void* r);
void* QSpacerItem_SizeHint(void* ptr);
void* QSpacerItem_SizeHintDefault(void* ptr);
void* QSpacerItem_SizePolicy(void* ptr);
void* QSpacerItem_SpacerItem(void* ptr);
void* QSpacerItem_SpacerItemDefault(void* ptr);
void QSpacerItem_DestroyQSpacerItem(void* ptr);
long long QSpacerItem_ControlTypes(void* ptr);
long long QSpacerItem_ControlTypesDefault(void* ptr);
char QSpacerItem_HasHeightForWidth(void* ptr);
char QSpacerItem_HasHeightForWidthDefault(void* ptr);
int QSpacerItem_HeightForWidth(void* ptr, int w);
int QSpacerItem_HeightForWidthDefault(void* ptr, int w);
void QSpacerItem_Invalidate(void* ptr);
void QSpacerItem_InvalidateDefault(void* ptr);
void* QSpacerItem_Layout(void* ptr);
void* QSpacerItem_LayoutDefault(void* ptr);
int QSpacerItem_MinimumHeightForWidth(void* ptr, int w);
int QSpacerItem_MinimumHeightForWidthDefault(void* ptr, int w);
void* QSpacerItem_Widget(void* ptr);
void* QSpacerItem_WidgetDefault(void* ptr);
struct QtWidgets_PackedString QSpinBox_CleanText(void* ptr);
int QSpinBox_DisplayIntegerBase(void* ptr);
int QSpinBox_Maximum(void* ptr);
int QSpinBox_Minimum(void* ptr);
struct QtWidgets_PackedString QSpinBox_Prefix(void* ptr);
void QSpinBox_SetDisplayIntegerBase(void* ptr, int base);
void QSpinBox_SetMaximum(void* ptr, int max);
void QSpinBox_SetMinimum(void* ptr, int min);
void QSpinBox_SetPrefix(void* ptr, char* prefix);
void QSpinBox_SetSingleStep(void* ptr, int val);
void QSpinBox_SetSuffix(void* ptr, char* suffix);
void QSpinBox_SetValue(void* ptr, int val);
int QSpinBox_SingleStep(void* ptr);
struct QtWidgets_PackedString QSpinBox_Suffix(void* ptr);
int QSpinBox_Value(void* ptr);
int QSpinBox_ValueFromText(void* ptr, char* text);
int QSpinBox_ValueFromTextDefault(void* ptr, char* text);
void* QSpinBox_NewQSpinBox(void* parent);
char QSpinBox_Event(void* ptr, void* event);
void QSpinBox_Fixup(void* ptr, char* input);
void QSpinBox_FixupDefault(void* ptr, char* input);
void QSpinBox_SetRange(void* ptr, int minimum, int maximum);
struct QtWidgets_PackedString QSpinBox_TextFromValue(void* ptr, int value);
struct QtWidgets_PackedString QSpinBox_TextFromValueDefault(void* ptr, int value);
long long QSpinBox_Validate(void* ptr, char* text, int pos);
long long QSpinBox_ValidateDefault(void* ptr, char* text, int pos);
void QSpinBox_ConnectValueChanged2(void* ptr);
void QSpinBox_DisconnectValueChanged2(void* ptr);
void QSpinBox_ValueChanged2(void* ptr, char* text);
void QSpinBox_ConnectValueChanged(void* ptr);
void QSpinBox_DisconnectValueChanged(void* ptr);
void QSpinBox_ValueChanged(void* ptr, int i);
void QSpinBox_DestroyQSpinBox(void* ptr);
void QSpinBox_ChangeEvent(void* ptr, void* event);
void QSpinBox_ChangeEventDefault(void* ptr, void* event);
void QSpinBox_Clear(void* ptr);
void QSpinBox_ClearDefault(void* ptr);
void QSpinBox_CloseEvent(void* ptr, void* event);
void QSpinBox_CloseEventDefault(void* ptr, void* event);
void QSpinBox_ContextMenuEvent(void* ptr, void* event);
void QSpinBox_ContextMenuEventDefault(void* ptr, void* event);
void QSpinBox_FocusInEvent(void* ptr, void* event);
void QSpinBox_FocusInEventDefault(void* ptr, void* event);
void QSpinBox_FocusOutEvent(void* ptr, void* event);
void QSpinBox_FocusOutEventDefault(void* ptr, void* event);
void QSpinBox_HideEvent(void* ptr, void* event);
void QSpinBox_HideEventDefault(void* ptr, void* event);
void* QSpinBox_InputMethodQuery(void* ptr, long long query);
void* QSpinBox_InputMethodQueryDefault(void* ptr, long long query);
void QSpinBox_KeyPressEvent(void* ptr, void* event);
void QSpinBox_KeyPressEventDefault(void* ptr, void* event);
void QSpinBox_KeyReleaseEvent(void* ptr, void* event);
void QSpinBox_KeyReleaseEventDefault(void* ptr, void* event);
void* QSpinBox_MinimumSizeHint(void* ptr);
void* QSpinBox_MinimumSizeHintDefault(void* ptr);
void QSpinBox_MouseMoveEvent(void* ptr, void* event);
void QSpinBox_MouseMoveEventDefault(void* ptr, void* event);
void QSpinBox_MousePressEvent(void* ptr, void* event);
void QSpinBox_MousePressEventDefault(void* ptr, void* event);
void QSpinBox_MouseReleaseEvent(void* ptr, void* event);
void QSpinBox_MouseReleaseEventDefault(void* ptr, void* event);
void QSpinBox_PaintEvent(void* ptr, void* event);
void QSpinBox_PaintEventDefault(void* ptr, void* event);
void QSpinBox_ResizeEvent(void* ptr, void* event);
void QSpinBox_ResizeEventDefault(void* ptr, void* event);
void QSpinBox_SelectAll(void* ptr);
void QSpinBox_SelectAllDefault(void* ptr);
void QSpinBox_ShowEvent(void* ptr, void* event);
void QSpinBox_ShowEventDefault(void* ptr, void* event);
void* QSpinBox_SizeHint(void* ptr);
void* QSpinBox_SizeHintDefault(void* ptr);
void QSpinBox_StepBy(void* ptr, int steps);
void QSpinBox_StepByDefault(void* ptr, int steps);
void QSpinBox_StepDown(void* ptr);
void QSpinBox_StepDownDefault(void* ptr);
long long QSpinBox_StepEnabled(void* ptr);
long long QSpinBox_StepEnabledDefault(void* ptr);
void QSpinBox_StepUp(void* ptr);
void QSpinBox_StepUpDefault(void* ptr);
void QSpinBox_WheelEvent(void* ptr, void* event);
void QSpinBox_WheelEventDefault(void* ptr, void* event);
void QSpinBox_ActionEvent(void* ptr, void* event);
void QSpinBox_ActionEventDefault(void* ptr, void* event);
void QSpinBox_DragEnterEvent(void* ptr, void* event);
void QSpinBox_DragEnterEventDefault(void* ptr, void* event);
void QSpinBox_DragLeaveEvent(void* ptr, void* event);
void QSpinBox_DragLeaveEventDefault(void* ptr, void* event);
void QSpinBox_DragMoveEvent(void* ptr, void* event);
void QSpinBox_DragMoveEventDefault(void* ptr, void* event);
void QSpinBox_DropEvent(void* ptr, void* event);
void QSpinBox_DropEventDefault(void* ptr, void* event);
void QSpinBox_EnterEvent(void* ptr, void* event);
void QSpinBox_EnterEventDefault(void* ptr, void* event);
void QSpinBox_LeaveEvent(void* ptr, void* event);
void QSpinBox_LeaveEventDefault(void* ptr, void* event);
void QSpinBox_MoveEvent(void* ptr, void* event);
void QSpinBox_MoveEventDefault(void* ptr, void* event);
void QSpinBox_SetEnabled(void* ptr, char vbo);
void QSpinBox_SetEnabledDefault(void* ptr, char vbo);
void QSpinBox_SetStyleSheet(void* ptr, char* styleSheet);
void QSpinBox_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QSpinBox_SetVisible(void* ptr, char visible);
void QSpinBox_SetVisibleDefault(void* ptr, char visible);
void QSpinBox_SetWindowModified(void* ptr, char vbo);
void QSpinBox_SetWindowModifiedDefault(void* ptr, char vbo);
void QSpinBox_SetWindowTitle(void* ptr, char* vqs);
void QSpinBox_SetWindowTitleDefault(void* ptr, char* vqs);
char QSpinBox_Close(void* ptr);
char QSpinBox_CloseDefault(void* ptr);
char QSpinBox_FocusNextPrevChild(void* ptr, char next);
char QSpinBox_FocusNextPrevChildDefault(void* ptr, char next);
char QSpinBox_HasHeightForWidth(void* ptr);
char QSpinBox_HasHeightForWidthDefault(void* ptr);
int QSpinBox_HeightForWidth(void* ptr, int w);
int QSpinBox_HeightForWidthDefault(void* ptr, int w);
void QSpinBox_Hide(void* ptr);
void QSpinBox_HideDefault(void* ptr);
void QSpinBox_InputMethodEvent(void* ptr, void* event);
void QSpinBox_InputMethodEventDefault(void* ptr, void* event);
void QSpinBox_Lower(void* ptr);
void QSpinBox_LowerDefault(void* ptr);
void QSpinBox_MouseDoubleClickEvent(void* ptr, void* event);
void QSpinBox_MouseDoubleClickEventDefault(void* ptr, void* event);
char QSpinBox_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QSpinBox_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QSpinBox_Raise(void* ptr);
void QSpinBox_RaiseDefault(void* ptr);
void QSpinBox_Repaint(void* ptr);
void QSpinBox_RepaintDefault(void* ptr);
void QSpinBox_SetDisabled(void* ptr, char disable);
void QSpinBox_SetDisabledDefault(void* ptr, char disable);
void QSpinBox_SetFocus2(void* ptr);
void QSpinBox_SetFocus2Default(void* ptr);
void QSpinBox_SetHidden(void* ptr, char hidden);
void QSpinBox_SetHiddenDefault(void* ptr, char hidden);
void QSpinBox_Show(void* ptr);
void QSpinBox_ShowDefault(void* ptr);
void QSpinBox_ShowFullScreen(void* ptr);
void QSpinBox_ShowFullScreenDefault(void* ptr);
void QSpinBox_ShowMaximized(void* ptr);
void QSpinBox_ShowMaximizedDefault(void* ptr);
void QSpinBox_ShowMinimized(void* ptr);
void QSpinBox_ShowMinimizedDefault(void* ptr);
void QSpinBox_ShowNormal(void* ptr);
void QSpinBox_ShowNormalDefault(void* ptr);
void QSpinBox_TabletEvent(void* ptr, void* event);
void QSpinBox_TabletEventDefault(void* ptr, void* event);
void QSpinBox_Update(void* ptr);
void QSpinBox_UpdateDefault(void* ptr);
void QSpinBox_UpdateMicroFocus(void* ptr);
void QSpinBox_UpdateMicroFocusDefault(void* ptr);
void QSpinBox_ChildEvent(void* ptr, void* event);
void QSpinBox_ChildEventDefault(void* ptr, void* event);
void QSpinBox_ConnectNotify(void* ptr, void* sign);
void QSpinBox_ConnectNotifyDefault(void* ptr, void* sign);
void QSpinBox_CustomEvent(void* ptr, void* event);
void QSpinBox_CustomEventDefault(void* ptr, void* event);
void QSpinBox_DeleteLater(void* ptr);
void QSpinBox_DeleteLaterDefault(void* ptr);
void QSpinBox_DisconnectNotify(void* ptr, void* sign);
void QSpinBox_DisconnectNotifyDefault(void* ptr, void* sign);
char QSpinBox_EventFilter(void* ptr, void* watched, void* event);
char QSpinBox_EventFilterDefault(void* ptr, void* watched, void* event);
void* QSpinBox_MetaObject(void* ptr);
void* QSpinBox_MetaObjectDefault(void* ptr);
void* QSplashScreen_NewQSplashScreen2(void* parent, void* pixmap, long long f);
void* QSplashScreen_NewQSplashScreen(void* pixmap, long long f);
void QSplashScreen_ClearMessage(void* ptr);
void QSplashScreen_DrawContents(void* ptr, void* painter);
void QSplashScreen_DrawContentsDefault(void* ptr, void* painter);
char QSplashScreen_Event(void* ptr, void* e);
void QSplashScreen_Finish(void* ptr, void* mainWin);
struct QtWidgets_PackedString QSplashScreen_Message(void* ptr);
void QSplashScreen_ConnectMessageChanged(void* ptr);
void QSplashScreen_DisconnectMessageChanged(void* ptr);
void QSplashScreen_MessageChanged(void* ptr, char* message);
void QSplashScreen_MousePressEvent(void* ptr, void* vqm);
void QSplashScreen_MousePressEventDefault(void* ptr, void* vqm);
void* QSplashScreen_Pixmap(void* ptr);
void QSplashScreen_Repaint(void* ptr);
void QSplashScreen_SetPixmap(void* ptr, void* pixmap);
void QSplashScreen_ShowMessage(void* ptr, char* message, int alignment, void* color);
void QSplashScreen_DestroyQSplashScreen(void* ptr);
void QSplashScreen_DestroyQSplashScreenDefault(void* ptr);
void QSplashScreen_ActionEvent(void* ptr, void* event);
void QSplashScreen_ActionEventDefault(void* ptr, void* event);
void QSplashScreen_DragEnterEvent(void* ptr, void* event);
void QSplashScreen_DragEnterEventDefault(void* ptr, void* event);
void QSplashScreen_DragLeaveEvent(void* ptr, void* event);
void QSplashScreen_DragLeaveEventDefault(void* ptr, void* event);
void QSplashScreen_DragMoveEvent(void* ptr, void* event);
void QSplashScreen_DragMoveEventDefault(void* ptr, void* event);
void QSplashScreen_DropEvent(void* ptr, void* event);
void QSplashScreen_DropEventDefault(void* ptr, void* event);
void QSplashScreen_EnterEvent(void* ptr, void* event);
void QSplashScreen_EnterEventDefault(void* ptr, void* event);
void QSplashScreen_FocusInEvent(void* ptr, void* event);
void QSplashScreen_FocusInEventDefault(void* ptr, void* event);
void QSplashScreen_FocusOutEvent(void* ptr, void* event);
void QSplashScreen_FocusOutEventDefault(void* ptr, void* event);
void QSplashScreen_HideEvent(void* ptr, void* event);
void QSplashScreen_HideEventDefault(void* ptr, void* event);
void QSplashScreen_LeaveEvent(void* ptr, void* event);
void QSplashScreen_LeaveEventDefault(void* ptr, void* event);
void* QSplashScreen_MinimumSizeHint(void* ptr);
void* QSplashScreen_MinimumSizeHintDefault(void* ptr);
void QSplashScreen_MoveEvent(void* ptr, void* event);
void QSplashScreen_MoveEventDefault(void* ptr, void* event);
void QSplashScreen_PaintEvent(void* ptr, void* event);
void QSplashScreen_PaintEventDefault(void* ptr, void* event);
void QSplashScreen_SetEnabled(void* ptr, char vbo);
void QSplashScreen_SetEnabledDefault(void* ptr, char vbo);
void QSplashScreen_SetStyleSheet(void* ptr, char* styleSheet);
void QSplashScreen_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QSplashScreen_SetVisible(void* ptr, char visible);
void QSplashScreen_SetVisibleDefault(void* ptr, char visible);
void QSplashScreen_SetWindowModified(void* ptr, char vbo);
void QSplashScreen_SetWindowModifiedDefault(void* ptr, char vbo);
void QSplashScreen_SetWindowTitle(void* ptr, char* vqs);
void QSplashScreen_SetWindowTitleDefault(void* ptr, char* vqs);
void QSplashScreen_ShowEvent(void* ptr, void* event);
void QSplashScreen_ShowEventDefault(void* ptr, void* event);
void* QSplashScreen_SizeHint(void* ptr);
void* QSplashScreen_SizeHintDefault(void* ptr);
void QSplashScreen_ChangeEvent(void* ptr, void* event);
void QSplashScreen_ChangeEventDefault(void* ptr, void* event);
char QSplashScreen_Close(void* ptr);
char QSplashScreen_CloseDefault(void* ptr);
void QSplashScreen_CloseEvent(void* ptr, void* event);
void QSplashScreen_CloseEventDefault(void* ptr, void* event);
void QSplashScreen_ContextMenuEvent(void* ptr, void* event);
void QSplashScreen_ContextMenuEventDefault(void* ptr, void* event);
char QSplashScreen_FocusNextPrevChild(void* ptr, char next);
char QSplashScreen_FocusNextPrevChildDefault(void* ptr, char next);
char QSplashScreen_HasHeightForWidth(void* ptr);
char QSplashScreen_HasHeightForWidthDefault(void* ptr);
int QSplashScreen_HeightForWidth(void* ptr, int w);
int QSplashScreen_HeightForWidthDefault(void* ptr, int w);
void QSplashScreen_Hide(void* ptr);
void QSplashScreen_HideDefault(void* ptr);
void QSplashScreen_InputMethodEvent(void* ptr, void* event);
void QSplashScreen_InputMethodEventDefault(void* ptr, void* event);
void* QSplashScreen_InputMethodQuery(void* ptr, long long query);
void* QSplashScreen_InputMethodQueryDefault(void* ptr, long long query);
void QSplashScreen_KeyPressEvent(void* ptr, void* event);
void QSplashScreen_KeyPressEventDefault(void* ptr, void* event);
void QSplashScreen_KeyReleaseEvent(void* ptr, void* event);
void QSplashScreen_KeyReleaseEventDefault(void* ptr, void* event);
void QSplashScreen_Lower(void* ptr);
void QSplashScreen_LowerDefault(void* ptr);
void QSplashScreen_MouseDoubleClickEvent(void* ptr, void* event);
void QSplashScreen_MouseDoubleClickEventDefault(void* ptr, void* event);
void QSplashScreen_MouseMoveEvent(void* ptr, void* event);
void QSplashScreen_MouseMoveEventDefault(void* ptr, void* event);
void QSplashScreen_MouseReleaseEvent(void* ptr, void* event);
void QSplashScreen_MouseReleaseEventDefault(void* ptr, void* event);
char QSplashScreen_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QSplashScreen_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QSplashScreen_Raise(void* ptr);
void QSplashScreen_RaiseDefault(void* ptr);
void QSplashScreen_ResizeEvent(void* ptr, void* event);
void QSplashScreen_ResizeEventDefault(void* ptr, void* event);
void QSplashScreen_SetDisabled(void* ptr, char disable);
void QSplashScreen_SetDisabledDefault(void* ptr, char disable);
void QSplashScreen_SetFocus2(void* ptr);
void QSplashScreen_SetFocus2Default(void* ptr);
void QSplashScreen_SetHidden(void* ptr, char hidden);
void QSplashScreen_SetHiddenDefault(void* ptr, char hidden);
void QSplashScreen_Show(void* ptr);
void QSplashScreen_ShowDefault(void* ptr);
void QSplashScreen_ShowFullScreen(void* ptr);
void QSplashScreen_ShowFullScreenDefault(void* ptr);
void QSplashScreen_ShowMaximized(void* ptr);
void QSplashScreen_ShowMaximizedDefault(void* ptr);
void QSplashScreen_ShowMinimized(void* ptr);
void QSplashScreen_ShowMinimizedDefault(void* ptr);
void QSplashScreen_ShowNormal(void* ptr);
void QSplashScreen_ShowNormalDefault(void* ptr);
void QSplashScreen_TabletEvent(void* ptr, void* event);
void QSplashScreen_TabletEventDefault(void* ptr, void* event);
void QSplashScreen_Update(void* ptr);
void QSplashScreen_UpdateDefault(void* ptr);
void QSplashScreen_UpdateMicroFocus(void* ptr);
void QSplashScreen_UpdateMicroFocusDefault(void* ptr);
void QSplashScreen_WheelEvent(void* ptr, void* event);
void QSplashScreen_WheelEventDefault(void* ptr, void* event);
void QSplashScreen_TimerEvent(void* ptr, void* event);
void QSplashScreen_TimerEventDefault(void* ptr, void* event);
void QSplashScreen_ChildEvent(void* ptr, void* event);
void QSplashScreen_ChildEventDefault(void* ptr, void* event);
void QSplashScreen_ConnectNotify(void* ptr, void* sign);
void QSplashScreen_ConnectNotifyDefault(void* ptr, void* sign);
void QSplashScreen_CustomEvent(void* ptr, void* event);
void QSplashScreen_CustomEventDefault(void* ptr, void* event);
void QSplashScreen_DeleteLater(void* ptr);
void QSplashScreen_DeleteLaterDefault(void* ptr);
void QSplashScreen_DisconnectNotify(void* ptr, void* sign);
void QSplashScreen_DisconnectNotifyDefault(void* ptr, void* sign);
char QSplashScreen_EventFilter(void* ptr, void* watched, void* event);
char QSplashScreen_EventFilterDefault(void* ptr, void* watched, void* event);
void* QSplashScreen_MetaObject(void* ptr);
void* QSplashScreen_MetaObjectDefault(void* ptr);
char QSplitter_ChildrenCollapsible(void* ptr);
int QSplitter_HandleWidth(void* ptr);
int QSplitter_IndexOf(void* ptr, void* widget);
char QSplitter_OpaqueResize(void* ptr);
long long QSplitter_Orientation(void* ptr);
void QSplitter_SetChildrenCollapsible(void* ptr, char vbo);
void QSplitter_SetHandleWidth(void* ptr, int vin);
void QSplitter_SetOpaqueResize(void* ptr, char opaque);
void QSplitter_SetOrientation(void* ptr, long long vqt);
void* QSplitter_NewQSplitter(void* parent);
void* QSplitter_NewQSplitter2(long long orientation, void* parent);
void QSplitter_AddWidget(void* ptr, void* widget);
void QSplitter_ChangeEvent(void* ptr, void* ev);
void QSplitter_ChangeEventDefault(void* ptr, void* ev);
void QSplitter_ChildEvent(void* ptr, void* c);
int QSplitter_ClosestLegalPosition(void* ptr, int pos, int index);
int QSplitter_Count(void* ptr);
void* QSplitter_CreateHandle(void* ptr);
void* QSplitter_CreateHandleDefault(void* ptr);
char QSplitter_Event(void* ptr, void* e);
void QSplitter_GetRange(void* ptr, int index, int min, int max);
void* QSplitter_Handle(void* ptr, int index);
void QSplitter_InsertWidget(void* ptr, int index, void* widget);
char QSplitter_IsCollapsible(void* ptr, int index);
void* QSplitter_MinimumSizeHint(void* ptr);
void* QSplitter_MinimumSizeHintDefault(void* ptr);
void QSplitter_MoveSplitter(void* ptr, int pos, int index);
void QSplitter_Refresh(void* ptr);
void QSplitter_ResizeEvent(void* ptr, void* vqr);
void QSplitter_ResizeEventDefault(void* ptr, void* vqr);
char QSplitter_RestoreState(void* ptr, void* state);
void* QSplitter_SaveState(void* ptr);
void QSplitter_SetCollapsible(void* ptr, int index, char collapse);
void QSplitter_SetRubberBand(void* ptr, int pos);
void QSplitter_SetStretchFactor(void* ptr, int index, int stretch);
void* QSplitter_SizeHint(void* ptr);
void* QSplitter_SizeHintDefault(void* ptr);
void QSplitter_ConnectSplitterMoved(void* ptr);
void QSplitter_DisconnectSplitterMoved(void* ptr);
void QSplitter_SplitterMoved(void* ptr, int pos, int index);
void* QSplitter_Widget(void* ptr, int index);
void QSplitter_DestroyQSplitter(void* ptr);
void QSplitter_PaintEvent(void* ptr, void* vqp);
void QSplitter_PaintEventDefault(void* ptr, void* vqp);
void QSplitter_ActionEvent(void* ptr, void* event);
void QSplitter_ActionEventDefault(void* ptr, void* event);
void QSplitter_DragEnterEvent(void* ptr, void* event);
void QSplitter_DragEnterEventDefault(void* ptr, void* event);
void QSplitter_DragLeaveEvent(void* ptr, void* event);
void QSplitter_DragLeaveEventDefault(void* ptr, void* event);
void QSplitter_DragMoveEvent(void* ptr, void* event);
void QSplitter_DragMoveEventDefault(void* ptr, void* event);
void QSplitter_DropEvent(void* ptr, void* event);
void QSplitter_DropEventDefault(void* ptr, void* event);
void QSplitter_EnterEvent(void* ptr, void* event);
void QSplitter_EnterEventDefault(void* ptr, void* event);
void QSplitter_FocusInEvent(void* ptr, void* event);
void QSplitter_FocusInEventDefault(void* ptr, void* event);
void QSplitter_FocusOutEvent(void* ptr, void* event);
void QSplitter_FocusOutEventDefault(void* ptr, void* event);
void QSplitter_HideEvent(void* ptr, void* event);
void QSplitter_HideEventDefault(void* ptr, void* event);
void QSplitter_LeaveEvent(void* ptr, void* event);
void QSplitter_LeaveEventDefault(void* ptr, void* event);
void QSplitter_MoveEvent(void* ptr, void* event);
void QSplitter_MoveEventDefault(void* ptr, void* event);
void QSplitter_SetEnabled(void* ptr, char vbo);
void QSplitter_SetEnabledDefault(void* ptr, char vbo);
void QSplitter_SetStyleSheet(void* ptr, char* styleSheet);
void QSplitter_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QSplitter_SetVisible(void* ptr, char visible);
void QSplitter_SetVisibleDefault(void* ptr, char visible);
void QSplitter_SetWindowModified(void* ptr, char vbo);
void QSplitter_SetWindowModifiedDefault(void* ptr, char vbo);
void QSplitter_SetWindowTitle(void* ptr, char* vqs);
void QSplitter_SetWindowTitleDefault(void* ptr, char* vqs);
void QSplitter_ShowEvent(void* ptr, void* event);
void QSplitter_ShowEventDefault(void* ptr, void* event);
char QSplitter_Close(void* ptr);
char QSplitter_CloseDefault(void* ptr);
void QSplitter_CloseEvent(void* ptr, void* event);
void QSplitter_CloseEventDefault(void* ptr, void* event);
void QSplitter_ContextMenuEvent(void* ptr, void* event);
void QSplitter_ContextMenuEventDefault(void* ptr, void* event);
char QSplitter_FocusNextPrevChild(void* ptr, char next);
char QSplitter_FocusNextPrevChildDefault(void* ptr, char next);
char QSplitter_HasHeightForWidth(void* ptr);
char QSplitter_HasHeightForWidthDefault(void* ptr);
int QSplitter_HeightForWidth(void* ptr, int w);
int QSplitter_HeightForWidthDefault(void* ptr, int w);
void QSplitter_Hide(void* ptr);
void QSplitter_HideDefault(void* ptr);
void QSplitter_InputMethodEvent(void* ptr, void* event);
void QSplitter_InputMethodEventDefault(void* ptr, void* event);
void* QSplitter_InputMethodQuery(void* ptr, long long query);
void* QSplitter_InputMethodQueryDefault(void* ptr, long long query);
void QSplitter_KeyPressEvent(void* ptr, void* event);
void QSplitter_KeyPressEventDefault(void* ptr, void* event);
void QSplitter_KeyReleaseEvent(void* ptr, void* event);
void QSplitter_KeyReleaseEventDefault(void* ptr, void* event);
void QSplitter_Lower(void* ptr);
void QSplitter_LowerDefault(void* ptr);
void QSplitter_MouseDoubleClickEvent(void* ptr, void* event);
void QSplitter_MouseDoubleClickEventDefault(void* ptr, void* event);
void QSplitter_MouseMoveEvent(void* ptr, void* event);
void QSplitter_MouseMoveEventDefault(void* ptr, void* event);
void QSplitter_MousePressEvent(void* ptr, void* event);
void QSplitter_MousePressEventDefault(void* ptr, void* event);
void QSplitter_MouseReleaseEvent(void* ptr, void* event);
void QSplitter_MouseReleaseEventDefault(void* ptr, void* event);
char QSplitter_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QSplitter_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QSplitter_Raise(void* ptr);
void QSplitter_RaiseDefault(void* ptr);
void QSplitter_Repaint(void* ptr);
void QSplitter_RepaintDefault(void* ptr);
void QSplitter_SetDisabled(void* ptr, char disable);
void QSplitter_SetDisabledDefault(void* ptr, char disable);
void QSplitter_SetFocus2(void* ptr);
void QSplitter_SetFocus2Default(void* ptr);
void QSplitter_SetHidden(void* ptr, char hidden);
void QSplitter_SetHiddenDefault(void* ptr, char hidden);
void QSplitter_Show(void* ptr);
void QSplitter_ShowDefault(void* ptr);
void QSplitter_ShowFullScreen(void* ptr);
void QSplitter_ShowFullScreenDefault(void* ptr);
void QSplitter_ShowMaximized(void* ptr);
void QSplitter_ShowMaximizedDefault(void* ptr);
void QSplitter_ShowMinimized(void* ptr);
void QSplitter_ShowMinimizedDefault(void* ptr);
void QSplitter_ShowNormal(void* ptr);
void QSplitter_ShowNormalDefault(void* ptr);
void QSplitter_TabletEvent(void* ptr, void* event);
void QSplitter_TabletEventDefault(void* ptr, void* event);
void QSplitter_Update(void* ptr);
void QSplitter_UpdateDefault(void* ptr);
void QSplitter_UpdateMicroFocus(void* ptr);
void QSplitter_UpdateMicroFocusDefault(void* ptr);
void QSplitter_WheelEvent(void* ptr, void* event);
void QSplitter_WheelEventDefault(void* ptr, void* event);
void QSplitter_TimerEvent(void* ptr, void* event);
void QSplitter_TimerEventDefault(void* ptr, void* event);
void QSplitter_ConnectNotify(void* ptr, void* sign);
void QSplitter_ConnectNotifyDefault(void* ptr, void* sign);
void QSplitter_CustomEvent(void* ptr, void* event);
void QSplitter_CustomEventDefault(void* ptr, void* event);
void QSplitter_DeleteLater(void* ptr);
void QSplitter_DeleteLaterDefault(void* ptr);
void QSplitter_DisconnectNotify(void* ptr, void* sign);
void QSplitter_DisconnectNotifyDefault(void* ptr, void* sign);
char QSplitter_EventFilter(void* ptr, void* watched, void* event);
char QSplitter_EventFilterDefault(void* ptr, void* watched, void* event);
void* QSplitter_MetaObject(void* ptr);
void* QSplitter_MetaObjectDefault(void* ptr);
void* QSplitterHandle_NewQSplitterHandle(long long orientation, void* parent);
int QSplitterHandle_ClosestLegalPosition(void* ptr, int pos);
char QSplitterHandle_Event(void* ptr, void* event);
void QSplitterHandle_MouseMoveEvent(void* ptr, void* e);
void QSplitterHandle_MouseMoveEventDefault(void* ptr, void* e);
void QSplitterHandle_MousePressEvent(void* ptr, void* e);
void QSplitterHandle_MousePressEventDefault(void* ptr, void* e);
void QSplitterHandle_MouseReleaseEvent(void* ptr, void* e);
void QSplitterHandle_MouseReleaseEventDefault(void* ptr, void* e);
void QSplitterHandle_MoveSplitter(void* ptr, int pos);
char QSplitterHandle_OpaqueResize(void* ptr);
long long QSplitterHandle_Orientation(void* ptr);
void QSplitterHandle_PaintEvent(void* ptr, void* vqp);
void QSplitterHandle_PaintEventDefault(void* ptr, void* vqp);
void QSplitterHandle_ResizeEvent(void* ptr, void* event);
void QSplitterHandle_ResizeEventDefault(void* ptr, void* event);
void QSplitterHandle_SetOrientation(void* ptr, long long orientation);
void* QSplitterHandle_SizeHint(void* ptr);
void* QSplitterHandle_SizeHintDefault(void* ptr);
void* QSplitterHandle_Splitter(void* ptr);
void QSplitterHandle_DestroyQSplitterHandle(void* ptr);
void QSplitterHandle_ActionEvent(void* ptr, void* event);
void QSplitterHandle_ActionEventDefault(void* ptr, void* event);
void QSplitterHandle_DragEnterEvent(void* ptr, void* event);
void QSplitterHandle_DragEnterEventDefault(void* ptr, void* event);
void QSplitterHandle_DragLeaveEvent(void* ptr, void* event);
void QSplitterHandle_DragLeaveEventDefault(void* ptr, void* event);
void QSplitterHandle_DragMoveEvent(void* ptr, void* event);
void QSplitterHandle_DragMoveEventDefault(void* ptr, void* event);
void QSplitterHandle_DropEvent(void* ptr, void* event);
void QSplitterHandle_DropEventDefault(void* ptr, void* event);
void QSplitterHandle_EnterEvent(void* ptr, void* event);
void QSplitterHandle_EnterEventDefault(void* ptr, void* event);
void QSplitterHandle_FocusInEvent(void* ptr, void* event);
void QSplitterHandle_FocusInEventDefault(void* ptr, void* event);
void QSplitterHandle_FocusOutEvent(void* ptr, void* event);
void QSplitterHandle_FocusOutEventDefault(void* ptr, void* event);
void QSplitterHandle_HideEvent(void* ptr, void* event);
void QSplitterHandle_HideEventDefault(void* ptr, void* event);
void QSplitterHandle_LeaveEvent(void* ptr, void* event);
void QSplitterHandle_LeaveEventDefault(void* ptr, void* event);
void* QSplitterHandle_MinimumSizeHint(void* ptr);
void* QSplitterHandle_MinimumSizeHintDefault(void* ptr);
void QSplitterHandle_MoveEvent(void* ptr, void* event);
void QSplitterHandle_MoveEventDefault(void* ptr, void* event);
void QSplitterHandle_SetEnabled(void* ptr, char vbo);
void QSplitterHandle_SetEnabledDefault(void* ptr, char vbo);
void QSplitterHandle_SetStyleSheet(void* ptr, char* styleSheet);
void QSplitterHandle_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QSplitterHandle_SetVisible(void* ptr, char visible);
void QSplitterHandle_SetVisibleDefault(void* ptr, char visible);
void QSplitterHandle_SetWindowModified(void* ptr, char vbo);
void QSplitterHandle_SetWindowModifiedDefault(void* ptr, char vbo);
void QSplitterHandle_SetWindowTitle(void* ptr, char* vqs);
void QSplitterHandle_SetWindowTitleDefault(void* ptr, char* vqs);
void QSplitterHandle_ShowEvent(void* ptr, void* event);
void QSplitterHandle_ShowEventDefault(void* ptr, void* event);
void QSplitterHandle_ChangeEvent(void* ptr, void* event);
void QSplitterHandle_ChangeEventDefault(void* ptr, void* event);
char QSplitterHandle_Close(void* ptr);
char QSplitterHandle_CloseDefault(void* ptr);
void QSplitterHandle_CloseEvent(void* ptr, void* event);
void QSplitterHandle_CloseEventDefault(void* ptr, void* event);
void QSplitterHandle_ContextMenuEvent(void* ptr, void* event);
void QSplitterHandle_ContextMenuEventDefault(void* ptr, void* event);
char QSplitterHandle_FocusNextPrevChild(void* ptr, char next);
char QSplitterHandle_FocusNextPrevChildDefault(void* ptr, char next);
char QSplitterHandle_HasHeightForWidth(void* ptr);
char QSplitterHandle_HasHeightForWidthDefault(void* ptr);
int QSplitterHandle_HeightForWidth(void* ptr, int w);
int QSplitterHandle_HeightForWidthDefault(void* ptr, int w);
void QSplitterHandle_Hide(void* ptr);
void QSplitterHandle_HideDefault(void* ptr);
void QSplitterHandle_InputMethodEvent(void* ptr, void* event);
void QSplitterHandle_InputMethodEventDefault(void* ptr, void* event);
void* QSplitterHandle_InputMethodQuery(void* ptr, long long query);
void* QSplitterHandle_InputMethodQueryDefault(void* ptr, long long query);
void QSplitterHandle_KeyPressEvent(void* ptr, void* event);
void QSplitterHandle_KeyPressEventDefault(void* ptr, void* event);
void QSplitterHandle_KeyReleaseEvent(void* ptr, void* event);
void QSplitterHandle_KeyReleaseEventDefault(void* ptr, void* event);
void QSplitterHandle_Lower(void* ptr);
void QSplitterHandle_LowerDefault(void* ptr);
void QSplitterHandle_MouseDoubleClickEvent(void* ptr, void* event);
void QSplitterHandle_MouseDoubleClickEventDefault(void* ptr, void* event);
char QSplitterHandle_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QSplitterHandle_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QSplitterHandle_Raise(void* ptr);
void QSplitterHandle_RaiseDefault(void* ptr);
void QSplitterHandle_Repaint(void* ptr);
void QSplitterHandle_RepaintDefault(void* ptr);
void QSplitterHandle_SetDisabled(void* ptr, char disable);
void QSplitterHandle_SetDisabledDefault(void* ptr, char disable);
void QSplitterHandle_SetFocus2(void* ptr);
void QSplitterHandle_SetFocus2Default(void* ptr);
void QSplitterHandle_SetHidden(void* ptr, char hidden);
void QSplitterHandle_SetHiddenDefault(void* ptr, char hidden);
void QSplitterHandle_Show(void* ptr);
void QSplitterHandle_ShowDefault(void* ptr);
void QSplitterHandle_ShowFullScreen(void* ptr);
void QSplitterHandle_ShowFullScreenDefault(void* ptr);
void QSplitterHandle_ShowMaximized(void* ptr);
void QSplitterHandle_ShowMaximizedDefault(void* ptr);
void QSplitterHandle_ShowMinimized(void* ptr);
void QSplitterHandle_ShowMinimizedDefault(void* ptr);
void QSplitterHandle_ShowNormal(void* ptr);
void QSplitterHandle_ShowNormalDefault(void* ptr);
void QSplitterHandle_TabletEvent(void* ptr, void* event);
void QSplitterHandle_TabletEventDefault(void* ptr, void* event);
void QSplitterHandle_Update(void* ptr);
void QSplitterHandle_UpdateDefault(void* ptr);
void QSplitterHandle_UpdateMicroFocus(void* ptr);
void QSplitterHandle_UpdateMicroFocusDefault(void* ptr);
void QSplitterHandle_WheelEvent(void* ptr, void* event);
void QSplitterHandle_WheelEventDefault(void* ptr, void* event);
void QSplitterHandle_TimerEvent(void* ptr, void* event);
void QSplitterHandle_TimerEventDefault(void* ptr, void* event);
void QSplitterHandle_ChildEvent(void* ptr, void* event);
void QSplitterHandle_ChildEventDefault(void* ptr, void* event);
void QSplitterHandle_ConnectNotify(void* ptr, void* sign);
void QSplitterHandle_ConnectNotifyDefault(void* ptr, void* sign);
void QSplitterHandle_CustomEvent(void* ptr, void* event);
void QSplitterHandle_CustomEventDefault(void* ptr, void* event);
void QSplitterHandle_DeleteLater(void* ptr);
void QSplitterHandle_DeleteLaterDefault(void* ptr);
void QSplitterHandle_DisconnectNotify(void* ptr, void* sign);
void QSplitterHandle_DisconnectNotifyDefault(void* ptr, void* sign);
char QSplitterHandle_EventFilter(void* ptr, void* watched, void* event);
char QSplitterHandle_EventFilterDefault(void* ptr, void* watched, void* event);
void* QSplitterHandle_MetaObject(void* ptr);
void* QSplitterHandle_MetaObjectDefault(void* ptr);
int QStackedLayout_Count(void* ptr);
int QStackedLayout_CountDefault(void* ptr);
int QStackedLayout_CurrentIndex(void* ptr);
void QStackedLayout_SetCurrentIndex(void* ptr, int index);
void QStackedLayout_SetCurrentWidget(void* ptr, void* widget);
void QStackedLayout_SetStackingMode(void* ptr, long long stackingMode);
long long QStackedLayout_StackingMode(void* ptr);
void* QStackedLayout_NewQStackedLayout();
void* QStackedLayout_NewQStackedLayout3(void* parentLayout);
void* QStackedLayout_NewQStackedLayout2(void* parent);
void QStackedLayout_AddItem(void* ptr, void* item);
void QStackedLayout_AddItemDefault(void* ptr, void* item);
int QStackedLayout_AddWidget(void* ptr, void* widget);
void QStackedLayout_ConnectCurrentChanged(void* ptr);
void QStackedLayout_DisconnectCurrentChanged(void* ptr);
void QStackedLayout_CurrentChanged(void* ptr, int index);
void* QStackedLayout_CurrentWidget(void* ptr);
char QStackedLayout_HasHeightForWidth(void* ptr);
char QStackedLayout_HasHeightForWidthDefault(void* ptr);
int QStackedLayout_HeightForWidth(void* ptr, int width);
int QStackedLayout_HeightForWidthDefault(void* ptr, int width);
int QStackedLayout_InsertWidget(void* ptr, int index, void* widget);
void* QStackedLayout_ItemAt(void* ptr, int index);
void* QStackedLayout_ItemAtDefault(void* ptr, int index);
void* QStackedLayout_MinimumSize(void* ptr);
void* QStackedLayout_MinimumSizeDefault(void* ptr);
void QStackedLayout_SetGeometry(void* ptr, void* rect);
void QStackedLayout_SetGeometryDefault(void* ptr, void* rect);
void* QStackedLayout_SizeHint(void* ptr);
void* QStackedLayout_SizeHintDefault(void* ptr);
void* QStackedLayout_TakeAt(void* ptr, int index);
void* QStackedLayout_TakeAtDefault(void* ptr, int index);
void* QStackedLayout_Widget(void* ptr, int index);
void QStackedLayout_ConnectWidgetRemoved(void* ptr);
void QStackedLayout_DisconnectWidgetRemoved(void* ptr);
void QStackedLayout_WidgetRemoved(void* ptr, int index);
void QStackedLayout_DestroyQStackedLayout(void* ptr);
long long QStackedLayout_ControlTypes(void* ptr);
long long QStackedLayout_ControlTypesDefault(void* ptr);
long long QStackedLayout_ExpandingDirections(void* ptr);
long long QStackedLayout_ExpandingDirectionsDefault(void* ptr);
void* QStackedLayout_Geometry(void* ptr);
void* QStackedLayout_GeometryDefault(void* ptr);
int QStackedLayout_IndexOf(void* ptr, void* widget);
int QStackedLayout_IndexOfDefault(void* ptr, void* widget);
void QStackedLayout_Invalidate(void* ptr);
void QStackedLayout_InvalidateDefault(void* ptr);
char QStackedLayout_IsEmpty(void* ptr);
char QStackedLayout_IsEmptyDefault(void* ptr);
void* QStackedLayout_Layout(void* ptr);
void* QStackedLayout_LayoutDefault(void* ptr);
void* QStackedLayout_MaximumSize(void* ptr);
void* QStackedLayout_MaximumSizeDefault(void* ptr);
void QStackedLayout_TimerEvent(void* ptr, void* event);
void QStackedLayout_TimerEventDefault(void* ptr, void* event);
void QStackedLayout_ConnectNotify(void* ptr, void* sign);
void QStackedLayout_ConnectNotifyDefault(void* ptr, void* sign);
void QStackedLayout_CustomEvent(void* ptr, void* event);
void QStackedLayout_CustomEventDefault(void* ptr, void* event);
void QStackedLayout_DeleteLater(void* ptr);
void QStackedLayout_DeleteLaterDefault(void* ptr);
void QStackedLayout_DisconnectNotify(void* ptr, void* sign);
void QStackedLayout_DisconnectNotifyDefault(void* ptr, void* sign);
char QStackedLayout_Event(void* ptr, void* e);
char QStackedLayout_EventDefault(void* ptr, void* e);
char QStackedLayout_EventFilter(void* ptr, void* watched, void* event);
char QStackedLayout_EventFilterDefault(void* ptr, void* watched, void* event);
void* QStackedLayout_MetaObject(void* ptr);
void* QStackedLayout_MetaObjectDefault(void* ptr);
int QStackedLayout_MinimumHeightForWidth(void* ptr, int w);
int QStackedLayout_MinimumHeightForWidthDefault(void* ptr, int w);
void* QStackedLayout_SpacerItem(void* ptr);
void* QStackedLayout_SpacerItemDefault(void* ptr);
int QStackedWidget_Count(void* ptr);
int QStackedWidget_CurrentIndex(void* ptr);
void QStackedWidget_SetCurrentIndex(void* ptr, int index);
void QStackedWidget_SetCurrentWidget(void* ptr, void* widget);
void* QStackedWidget_NewQStackedWidget(void* parent);
int QStackedWidget_AddWidget(void* ptr, void* widget);
void QStackedWidget_ConnectCurrentChanged(void* ptr);
void QStackedWidget_DisconnectCurrentChanged(void* ptr);
void QStackedWidget_CurrentChanged(void* ptr, int index);
void* QStackedWidget_CurrentWidget(void* ptr);
char QStackedWidget_Event(void* ptr, void* e);
int QStackedWidget_IndexOf(void* ptr, void* widget);
int QStackedWidget_InsertWidget(void* ptr, int index, void* widget);
void QStackedWidget_RemoveWidget(void* ptr, void* widget);
void* QStackedWidget_Widget(void* ptr, int index);
void QStackedWidget_ConnectWidgetRemoved(void* ptr);
void QStackedWidget_DisconnectWidgetRemoved(void* ptr);
void QStackedWidget_WidgetRemoved(void* ptr, int index);
void QStackedWidget_DestroyQStackedWidget(void* ptr);
void QStackedWidget_ChangeEvent(void* ptr, void* ev);
void QStackedWidget_ChangeEventDefault(void* ptr, void* ev);
void QStackedWidget_PaintEvent(void* ptr, void* vqp);
void QStackedWidget_PaintEventDefault(void* ptr, void* vqp);
void* QStackedWidget_SizeHint(void* ptr);
void* QStackedWidget_SizeHintDefault(void* ptr);
void QStackedWidget_ActionEvent(void* ptr, void* event);
void QStackedWidget_ActionEventDefault(void* ptr, void* event);
void QStackedWidget_DragEnterEvent(void* ptr, void* event);
void QStackedWidget_DragEnterEventDefault(void* ptr, void* event);
void QStackedWidget_DragLeaveEvent(void* ptr, void* event);
void QStackedWidget_DragLeaveEventDefault(void* ptr, void* event);
void QStackedWidget_DragMoveEvent(void* ptr, void* event);
void QStackedWidget_DragMoveEventDefault(void* ptr, void* event);
void QStackedWidget_DropEvent(void* ptr, void* event);
void QStackedWidget_DropEventDefault(void* ptr, void* event);
void QStackedWidget_EnterEvent(void* ptr, void* event);
void QStackedWidget_EnterEventDefault(void* ptr, void* event);
void QStackedWidget_FocusInEvent(void* ptr, void* event);
void QStackedWidget_FocusInEventDefault(void* ptr, void* event);
void QStackedWidget_FocusOutEvent(void* ptr, void* event);
void QStackedWidget_FocusOutEventDefault(void* ptr, void* event);
void QStackedWidget_HideEvent(void* ptr, void* event);
void QStackedWidget_HideEventDefault(void* ptr, void* event);
void QStackedWidget_LeaveEvent(void* ptr, void* event);
void QStackedWidget_LeaveEventDefault(void* ptr, void* event);
void* QStackedWidget_MinimumSizeHint(void* ptr);
void* QStackedWidget_MinimumSizeHintDefault(void* ptr);
void QStackedWidget_MoveEvent(void* ptr, void* event);
void QStackedWidget_MoveEventDefault(void* ptr, void* event);
void QStackedWidget_SetEnabled(void* ptr, char vbo);
void QStackedWidget_SetEnabledDefault(void* ptr, char vbo);
void QStackedWidget_SetStyleSheet(void* ptr, char* styleSheet);
void QStackedWidget_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QStackedWidget_SetVisible(void* ptr, char visible);
void QStackedWidget_SetVisibleDefault(void* ptr, char visible);
void QStackedWidget_SetWindowModified(void* ptr, char vbo);
void QStackedWidget_SetWindowModifiedDefault(void* ptr, char vbo);
void QStackedWidget_SetWindowTitle(void* ptr, char* vqs);
void QStackedWidget_SetWindowTitleDefault(void* ptr, char* vqs);
void QStackedWidget_ShowEvent(void* ptr, void* event);
void QStackedWidget_ShowEventDefault(void* ptr, void* event);
char QStackedWidget_Close(void* ptr);
char QStackedWidget_CloseDefault(void* ptr);
void QStackedWidget_CloseEvent(void* ptr, void* event);
void QStackedWidget_CloseEventDefault(void* ptr, void* event);
void QStackedWidget_ContextMenuEvent(void* ptr, void* event);
void QStackedWidget_ContextMenuEventDefault(void* ptr, void* event);
char QStackedWidget_FocusNextPrevChild(void* ptr, char next);
char QStackedWidget_FocusNextPrevChildDefault(void* ptr, char next);
char QStackedWidget_HasHeightForWidth(void* ptr);
char QStackedWidget_HasHeightForWidthDefault(void* ptr);
int QStackedWidget_HeightForWidth(void* ptr, int w);
int QStackedWidget_HeightForWidthDefault(void* ptr, int w);
void QStackedWidget_Hide(void* ptr);
void QStackedWidget_HideDefault(void* ptr);
void QStackedWidget_InputMethodEvent(void* ptr, void* event);
void QStackedWidget_InputMethodEventDefault(void* ptr, void* event);
void* QStackedWidget_InputMethodQuery(void* ptr, long long query);
void* QStackedWidget_InputMethodQueryDefault(void* ptr, long long query);
void QStackedWidget_KeyPressEvent(void* ptr, void* event);
void QStackedWidget_KeyPressEventDefault(void* ptr, void* event);
void QStackedWidget_KeyReleaseEvent(void* ptr, void* event);
void QStackedWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QStackedWidget_Lower(void* ptr);
void QStackedWidget_LowerDefault(void* ptr);
void QStackedWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QStackedWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QStackedWidget_MouseMoveEvent(void* ptr, void* event);
void QStackedWidget_MouseMoveEventDefault(void* ptr, void* event);
void QStackedWidget_MousePressEvent(void* ptr, void* event);
void QStackedWidget_MousePressEventDefault(void* ptr, void* event);
void QStackedWidget_MouseReleaseEvent(void* ptr, void* event);
void QStackedWidget_MouseReleaseEventDefault(void* ptr, void* event);
char QStackedWidget_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QStackedWidget_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QStackedWidget_Raise(void* ptr);
void QStackedWidget_RaiseDefault(void* ptr);
void QStackedWidget_Repaint(void* ptr);
void QStackedWidget_RepaintDefault(void* ptr);
void QStackedWidget_ResizeEvent(void* ptr, void* event);
void QStackedWidget_ResizeEventDefault(void* ptr, void* event);
void QStackedWidget_SetDisabled(void* ptr, char disable);
void QStackedWidget_SetDisabledDefault(void* ptr, char disable);
void QStackedWidget_SetFocus2(void* ptr);
void QStackedWidget_SetFocus2Default(void* ptr);
void QStackedWidget_SetHidden(void* ptr, char hidden);
void QStackedWidget_SetHiddenDefault(void* ptr, char hidden);
void QStackedWidget_Show(void* ptr);
void QStackedWidget_ShowDefault(void* ptr);
void QStackedWidget_ShowFullScreen(void* ptr);
void QStackedWidget_ShowFullScreenDefault(void* ptr);
void QStackedWidget_ShowMaximized(void* ptr);
void QStackedWidget_ShowMaximizedDefault(void* ptr);
void QStackedWidget_ShowMinimized(void* ptr);
void QStackedWidget_ShowMinimizedDefault(void* ptr);
void QStackedWidget_ShowNormal(void* ptr);
void QStackedWidget_ShowNormalDefault(void* ptr);
void QStackedWidget_TabletEvent(void* ptr, void* event);
void QStackedWidget_TabletEventDefault(void* ptr, void* event);
void QStackedWidget_Update(void* ptr);
void QStackedWidget_UpdateDefault(void* ptr);
void QStackedWidget_UpdateMicroFocus(void* ptr);
void QStackedWidget_UpdateMicroFocusDefault(void* ptr);
void QStackedWidget_WheelEvent(void* ptr, void* event);
void QStackedWidget_WheelEventDefault(void* ptr, void* event);
void QStackedWidget_TimerEvent(void* ptr, void* event);
void QStackedWidget_TimerEventDefault(void* ptr, void* event);
void QStackedWidget_ChildEvent(void* ptr, void* event);
void QStackedWidget_ChildEventDefault(void* ptr, void* event);
void QStackedWidget_ConnectNotify(void* ptr, void* sign);
void QStackedWidget_ConnectNotifyDefault(void* ptr, void* sign);
void QStackedWidget_CustomEvent(void* ptr, void* event);
void QStackedWidget_CustomEventDefault(void* ptr, void* event);
void QStackedWidget_DeleteLater(void* ptr);
void QStackedWidget_DeleteLaterDefault(void* ptr);
void QStackedWidget_DisconnectNotify(void* ptr, void* sign);
void QStackedWidget_DisconnectNotifyDefault(void* ptr, void* sign);
char QStackedWidget_EventFilter(void* ptr, void* watched, void* event);
char QStackedWidget_EventFilterDefault(void* ptr, void* watched, void* event);
void* QStackedWidget_MetaObject(void* ptr);
void* QStackedWidget_MetaObjectDefault(void* ptr);
char QStatusBar_IsSizeGripEnabled(void* ptr);
void QStatusBar_PaintEvent(void* ptr, void* event);
void QStatusBar_PaintEventDefault(void* ptr, void* event);
void QStatusBar_SetSizeGripEnabled(void* ptr, char vbo);
void* QStatusBar_NewQStatusBar(void* parent);
void QStatusBar_AddPermanentWidget(void* ptr, void* widget, int stretch);
void QStatusBar_AddWidget(void* ptr, void* widget, int stretch);
void QStatusBar_ClearMessage(void* ptr);
struct QtWidgets_PackedString QStatusBar_CurrentMessage(void* ptr);
char QStatusBar_Event(void* ptr, void* e);
void QStatusBar_HideOrShow(void* ptr);
int QStatusBar_InsertPermanentWidget(void* ptr, int index, void* widget, int stretch);
int QStatusBar_InsertWidget(void* ptr, int index, void* widget, int stretch);
void QStatusBar_ConnectMessageChanged(void* ptr);
void QStatusBar_DisconnectMessageChanged(void* ptr);
void QStatusBar_MessageChanged(void* ptr, char* message);
void QStatusBar_Reformat(void* ptr);
void QStatusBar_RemoveWidget(void* ptr, void* widget);
void QStatusBar_ResizeEvent(void* ptr, void* e);
void QStatusBar_ResizeEventDefault(void* ptr, void* e);
void QStatusBar_ShowEvent(void* ptr, void* vqs);
void QStatusBar_ShowEventDefault(void* ptr, void* vqs);
void QStatusBar_ShowMessage(void* ptr, char* message, int timeout);
void QStatusBar_DestroyQStatusBar(void* ptr);
void QStatusBar_DestroyQStatusBarDefault(void* ptr);
void QStatusBar_ActionEvent(void* ptr, void* event);
void QStatusBar_ActionEventDefault(void* ptr, void* event);
void QStatusBar_DragEnterEvent(void* ptr, void* event);
void QStatusBar_DragEnterEventDefault(void* ptr, void* event);
void QStatusBar_DragLeaveEvent(void* ptr, void* event);
void QStatusBar_DragLeaveEventDefault(void* ptr, void* event);
void QStatusBar_DragMoveEvent(void* ptr, void* event);
void QStatusBar_DragMoveEventDefault(void* ptr, void* event);
void QStatusBar_DropEvent(void* ptr, void* event);
void QStatusBar_DropEventDefault(void* ptr, void* event);
void QStatusBar_EnterEvent(void* ptr, void* event);
void QStatusBar_EnterEventDefault(void* ptr, void* event);
void QStatusBar_FocusInEvent(void* ptr, void* event);
void QStatusBar_FocusInEventDefault(void* ptr, void* event);
void QStatusBar_FocusOutEvent(void* ptr, void* event);
void QStatusBar_FocusOutEventDefault(void* ptr, void* event);
void QStatusBar_HideEvent(void* ptr, void* event);
void QStatusBar_HideEventDefault(void* ptr, void* event);
void QStatusBar_LeaveEvent(void* ptr, void* event);
void QStatusBar_LeaveEventDefault(void* ptr, void* event);
void* QStatusBar_MinimumSizeHint(void* ptr);
void* QStatusBar_MinimumSizeHintDefault(void* ptr);
void QStatusBar_MoveEvent(void* ptr, void* event);
void QStatusBar_MoveEventDefault(void* ptr, void* event);
void QStatusBar_SetEnabled(void* ptr, char vbo);
void QStatusBar_SetEnabledDefault(void* ptr, char vbo);
void QStatusBar_SetStyleSheet(void* ptr, char* styleSheet);
void QStatusBar_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QStatusBar_SetVisible(void* ptr, char visible);
void QStatusBar_SetVisibleDefault(void* ptr, char visible);
void QStatusBar_SetWindowModified(void* ptr, char vbo);
void QStatusBar_SetWindowModifiedDefault(void* ptr, char vbo);
void QStatusBar_SetWindowTitle(void* ptr, char* vqs);
void QStatusBar_SetWindowTitleDefault(void* ptr, char* vqs);
void* QStatusBar_SizeHint(void* ptr);
void* QStatusBar_SizeHintDefault(void* ptr);
void QStatusBar_ChangeEvent(void* ptr, void* event);
void QStatusBar_ChangeEventDefault(void* ptr, void* event);
char QStatusBar_Close(void* ptr);
char QStatusBar_CloseDefault(void* ptr);
void QStatusBar_CloseEvent(void* ptr, void* event);
void QStatusBar_CloseEventDefault(void* ptr, void* event);
void QStatusBar_ContextMenuEvent(void* ptr, void* event);
void QStatusBar_ContextMenuEventDefault(void* ptr, void* event);
char QStatusBar_FocusNextPrevChild(void* ptr, char next);
char QStatusBar_FocusNextPrevChildDefault(void* ptr, char next);
char QStatusBar_HasHeightForWidth(void* ptr);
char QStatusBar_HasHeightForWidthDefault(void* ptr);
int QStatusBar_HeightForWidth(void* ptr, int w);
int QStatusBar_HeightForWidthDefault(void* ptr, int w);
void QStatusBar_Hide(void* ptr);
void QStatusBar_HideDefault(void* ptr);
void QStatusBar_InputMethodEvent(void* ptr, void* event);
void QStatusBar_InputMethodEventDefault(void* ptr, void* event);
void* QStatusBar_InputMethodQuery(void* ptr, long long query);
void* QStatusBar_InputMethodQueryDefault(void* ptr, long long query);
void QStatusBar_KeyPressEvent(void* ptr, void* event);
void QStatusBar_KeyPressEventDefault(void* ptr, void* event);
void QStatusBar_KeyReleaseEvent(void* ptr, void* event);
void QStatusBar_KeyReleaseEventDefault(void* ptr, void* event);
void QStatusBar_Lower(void* ptr);
void QStatusBar_LowerDefault(void* ptr);
void QStatusBar_MouseDoubleClickEvent(void* ptr, void* event);
void QStatusBar_MouseDoubleClickEventDefault(void* ptr, void* event);
void QStatusBar_MouseMoveEvent(void* ptr, void* event);
void QStatusBar_MouseMoveEventDefault(void* ptr, void* event);
void QStatusBar_MousePressEvent(void* ptr, void* event);
void QStatusBar_MousePressEventDefault(void* ptr, void* event);
void QStatusBar_MouseReleaseEvent(void* ptr, void* event);
void QStatusBar_MouseReleaseEventDefault(void* ptr, void* event);
char QStatusBar_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QStatusBar_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QStatusBar_Raise(void* ptr);
void QStatusBar_RaiseDefault(void* ptr);
void QStatusBar_Repaint(void* ptr);
void QStatusBar_RepaintDefault(void* ptr);
void QStatusBar_SetDisabled(void* ptr, char disable);
void QStatusBar_SetDisabledDefault(void* ptr, char disable);
void QStatusBar_SetFocus2(void* ptr);
void QStatusBar_SetFocus2Default(void* ptr);
void QStatusBar_SetHidden(void* ptr, char hidden);
void QStatusBar_SetHiddenDefault(void* ptr, char hidden);
void QStatusBar_Show(void* ptr);
void QStatusBar_ShowDefault(void* ptr);
void QStatusBar_ShowFullScreen(void* ptr);
void QStatusBar_ShowFullScreenDefault(void* ptr);
void QStatusBar_ShowMaximized(void* ptr);
void QStatusBar_ShowMaximizedDefault(void* ptr);
void QStatusBar_ShowMinimized(void* ptr);
void QStatusBar_ShowMinimizedDefault(void* ptr);
void QStatusBar_ShowNormal(void* ptr);
void QStatusBar_ShowNormalDefault(void* ptr);
void QStatusBar_TabletEvent(void* ptr, void* event);
void QStatusBar_TabletEventDefault(void* ptr, void* event);
void QStatusBar_Update(void* ptr);
void QStatusBar_UpdateDefault(void* ptr);
void QStatusBar_UpdateMicroFocus(void* ptr);
void QStatusBar_UpdateMicroFocusDefault(void* ptr);
void QStatusBar_WheelEvent(void* ptr, void* event);
void QStatusBar_WheelEventDefault(void* ptr, void* event);
void QStatusBar_TimerEvent(void* ptr, void* event);
void QStatusBar_TimerEventDefault(void* ptr, void* event);
void QStatusBar_ChildEvent(void* ptr, void* event);
void QStatusBar_ChildEventDefault(void* ptr, void* event);
void QStatusBar_ConnectNotify(void* ptr, void* sign);
void QStatusBar_ConnectNotifyDefault(void* ptr, void* sign);
void QStatusBar_CustomEvent(void* ptr, void* event);
void QStatusBar_CustomEventDefault(void* ptr, void* event);
void QStatusBar_DeleteLater(void* ptr);
void QStatusBar_DeleteLaterDefault(void* ptr);
void QStatusBar_DisconnectNotify(void* ptr, void* sign);
void QStatusBar_DisconnectNotifyDefault(void* ptr, void* sign);
char QStatusBar_EventFilter(void* ptr, void* watched, void* event);
char QStatusBar_EventFilterDefault(void* ptr, void* watched, void* event);
void* QStatusBar_MetaObject(void* ptr);
void* QStatusBar_MetaObjectDefault(void* ptr);
int QStyle_PM_MdiSubWindowMinimizedWidth_Type();
int QStyle_PM_HeaderMargin_Type();
int QStyle_PM_HeaderMarkSize_Type();
int QStyle_PM_HeaderGripMargin_Type();
int QStyle_PM_TabBarTabShiftHorizontal_Type();
int QStyle_PM_TabBarTabShiftVertical_Type();
int QStyle_PM_TabBarScrollButtonWidth_Type();
int QStyle_PM_ToolBarFrameWidth_Type();
int QStyle_PM_ToolBarHandleExtent_Type();
int QStyle_PM_ToolBarItemSpacing_Type();
int QStyle_PM_ToolBarItemMargin_Type();
int QStyle_PM_ToolBarSeparatorExtent_Type();
int QStyle_PM_ToolBarExtensionExtent_Type();
int QStyle_PM_SpinBoxSliderHeight_Type();
int QStyle_PM_DefaultTopLevelMargin_Type();
int QStyle_PM_DefaultChildMargin_Type();
int QStyle_PM_DefaultLayoutSpacing_Type();
int QStyle_PM_ToolBarIconSize_Type();
int QStyle_PM_ListViewIconSize_Type();
int QStyle_PM_IconViewIconSize_Type();
int QStyle_PM_SmallIconSize_Type();
int QStyle_PM_LargeIconSize_Type();
int QStyle_PM_FocusFrameVMargin_Type();
int QStyle_PM_FocusFrameHMargin_Type();
int QStyle_PM_ToolTipLabelFrameWidth_Type();
int QStyle_PM_CheckBoxLabelSpacing_Type();
int QStyle_PM_TabBarIconSize_Type();
int QStyle_PM_SizeGripSize_Type();
int QStyle_PM_DockWidgetTitleMargin_Type();
int QStyle_PM_MessageBoxIconSize_Type();
int QStyle_PM_ButtonIconSize_Type();
int QStyle_PM_DockWidgetTitleBarButtonMargin_Type();
int QStyle_PM_RadioButtonLabelSpacing_Type();
int QStyle_PM_LayoutLeftMargin_Type();
int QStyle_PM_LayoutTopMargin_Type();
int QStyle_PM_LayoutRightMargin_Type();
int QStyle_PM_LayoutBottomMargin_Type();
int QStyle_PM_LayoutHorizontalSpacing_Type();
int QStyle_PM_LayoutVerticalSpacing_Type();
int QStyle_PM_TabBar_ScrollButtonOverlap_Type();
int QStyle_PM_TextCursorWidth_Type();
int QStyle_PM_TabCloseIndicatorWidth_Type();
int QStyle_PM_TabCloseIndicatorHeight_Type();
int QStyle_PM_ScrollView_ScrollBarSpacing_Type();
int QStyle_PM_ScrollView_ScrollBarOverlap_Type();
int QStyle_PM_SubMenuOverlap_Type();
int QStyle_PM_TreeViewIndentation_Type();
int QStyle_PM_HeaderDefaultSectionSizeHorizontal_Type();
int QStyle_PM_HeaderDefaultSectionSizeVertical_Type();
int QStyle_PE_FrameTabWidget_Type();
int QStyle_PE_FrameWindow_Type();
int QStyle_PE_FrameButtonBevel_Type();
int QStyle_PE_FrameButtonTool_Type();
int QStyle_PE_FrameTabBarBase_Type();
int QStyle_PE_PanelButtonCommand_Type();
int QStyle_PE_PanelButtonBevel_Type();
int QStyle_PE_PanelButtonTool_Type();
int QStyle_PE_PanelMenuBar_Type();
int QStyle_PE_PanelToolBar_Type();
int QStyle_PE_PanelLineEdit_Type();
int QStyle_PE_IndicatorArrowDown_Type();
int QStyle_PE_IndicatorArrowLeft_Type();
int QStyle_PE_IndicatorArrowRight_Type();
int QStyle_PE_IndicatorArrowUp_Type();
int QStyle_PE_IndicatorBranch_Type();
int QStyle_PE_IndicatorButtonDropDown_Type();
int QStyle_PE_IndicatorViewItemCheck_Type();
int QStyle_PE_IndicatorCheckBox_Type();
int QStyle_PE_IndicatorDockWidgetResizeHandle_Type();
int QStyle_PE_IndicatorHeaderArrow_Type();
int QStyle_PE_IndicatorMenuCheckMark_Type();
int QStyle_PE_IndicatorProgressChunk_Type();
int QStyle_PE_IndicatorRadioButton_Type();
int QStyle_PE_IndicatorSpinDown_Type();
int QStyle_PE_IndicatorSpinMinus_Type();
int QStyle_PE_IndicatorSpinPlus_Type();
int QStyle_PE_IndicatorSpinUp_Type();
int QStyle_PE_IndicatorToolBarHandle_Type();
int QStyle_PE_IndicatorToolBarSeparator_Type();
int QStyle_PE_PanelTipLabel_Type();
int QStyle_PE_IndicatorTabTear_Type();
int QStyle_PE_PanelScrollAreaCorner_Type();
int QStyle_PE_Widget_Type();
int QStyle_PE_IndicatorColumnViewArrow_Type();
int QStyle_PE_IndicatorItemViewItemDrop_Type();
int QStyle_PE_PanelItemViewItem_Type();
int QStyle_PE_PanelItemViewRow_Type();
int QStyle_PE_PanelStatusBar_Type();
int QStyle_PE_IndicatorTabClose_Type();
int QStyle_PE_PanelMenu_Type();
int QStyle_PE_IndicatorTabTearRight_Type();
int QStyle_SH_BlinkCursorWhenTextSelected_Type();
int QStyle_SH_RichText_FullWidthSelection_Type();
int QStyle_SH_Menu_Scrollable_Type();
int QStyle_SH_GroupBox_TextLabelVerticalAlignment_Type();
int QStyle_SH_GroupBox_TextLabelColor_Type();
int QStyle_SH_Menu_SloppySubMenus_Type();
int QStyle_SH_Table_GridLineColor_Type();
int QStyle_SH_LineEdit_PasswordCharacter_Type();
int QStyle_SH_DialogButtons_DefaultButton_Type();
int QStyle_SH_ToolBox_SelectedPageTitleBold_Type();
int QStyle_SH_TabBar_PreferNoArrows_Type();
int QStyle_SH_ScrollBar_LeftClickAbsolutePosition_Type();
int QStyle_SH_ListViewExpand_SelectMouseType_Type();
int QStyle_SH_UnderlineShortcut_Type();
int QStyle_SH_SpinBox_AnimateButton_Type();
int QStyle_SH_SpinBox_KeyPressAutoRepeatRate_Type();
int QStyle_SH_SpinBox_ClickAutoRepeatRate_Type();
int QStyle_SH_Menu_FillScreenWithScroll_Type();
int QStyle_SH_ToolTipLabel_Opacity_Type();
int QStyle_SH_DrawMenuBarSeparator_Type();
int QStyle_SH_TitleBar_ModifyNotification_Type();
int QStyle_SH_Button_FocusPolicy_Type();
int QStyle_SH_MessageBox_UseBorderForButtonSpacing_Type();
int QStyle_SH_TitleBar_AutoRaise_Type();
int QStyle_SH_ToolButton_PopupDelay_Type();
int QStyle_SH_FocusFrame_Mask_Type();
int QStyle_SH_RubberBand_Mask_Type();
int QStyle_SH_WindowFrame_Mask_Type();
int QStyle_SH_SpinControls_DisableOnBounds_Type();
int QStyle_SH_Dial_BackgroundRole_Type();
int QStyle_SH_ComboBox_LayoutDirection_Type();
int QStyle_SH_ItemView_EllipsisLocation_Type();
int QStyle_SH_ItemView_ShowDecorationSelected_Type();
int QStyle_SH_ItemView_ActivateItemOnSingleClick_Type();
int QStyle_SH_ScrollBar_ContextMenu_Type();
int QStyle_SH_ScrollBar_RollBetweenButtons_Type();
int QStyle_SH_Slider_AbsoluteSetButtons_Type();
int QStyle_SH_Slider_PageSetButtons_Type();
int QStyle_SH_Menu_KeyboardSearch_Type();
int QStyle_SH_TabBar_ElideMode_Type();
int QStyle_SH_DialogButtonLayout_Type();
int QStyle_SH_ComboBox_PopupFrameStyle_Type();
int QStyle_SH_MessageBox_TextInteractionFlags_Type();
int QStyle_SH_DialogButtonBox_ButtonsHaveIcons_Type();
int QStyle_SH_SpellCheckUnderlineStyle_Type();
int QStyle_SH_MessageBox_CenterButtons_Type();
int QStyle_SH_Menu_SelectionWrap_Type();
int QStyle_SH_ItemView_MovementWithoutUpdatingSelection_Type();
int QStyle_SH_ToolTip_Mask_Type();
int QStyle_SH_FocusFrame_AboveWidget_Type();
int QStyle_SH_TextControl_FocusIndicatorTextCharFormat_Type();
int QStyle_SH_WizardStyle_Type();
int QStyle_SH_ItemView_ArrowKeysNavigateIntoChildren_Type();
int QStyle_SH_Menu_Mask_Type();
int QStyle_SH_Menu_FlashTriggeredItem_Type();
int QStyle_SH_Menu_FadeOutOnHide_Type();
int QStyle_SH_SpinBox_ClickAutoRepeatThreshold_Type();
int QStyle_SH_ItemView_PaintAlternatingRowColorsForEmptyArea_Type();
int QStyle_SH_FormLayoutWrapPolicy_Type();
int QStyle_SH_TabWidget_DefaultTabPosition_Type();
int QStyle_SH_ToolBar_Movable_Type();
int QStyle_SH_FormLayoutFieldGrowthPolicy_Type();
int QStyle_SH_FormLayoutFormAlignment_Type();
int QStyle_SH_FormLayoutLabelAlignment_Type();
int QStyle_SH_ItemView_DrawDelegateFrame_Type();
int QStyle_SH_TabBar_CloseButtonPosition_Type();
int QStyle_SH_DockWidget_ButtonsHaveFrame_Type();
int QStyle_SH_ToolButtonStyle_Type();
int QStyle_SH_RequestSoftwareInputPanel_Type();
int QStyle_SH_ScrollBar_Transient_Type();
int QStyle_SH_Menu_SupportsSections_Type();
int QStyle_SH_ToolTip_WakeUpDelay_Type();
int QStyle_SH_ToolTip_FallAsleepDelay_Type();
int QStyle_SH_Widget_Animate_Type();
int QStyle_SH_Splitter_OpaqueResize_Type();
int QStyle_SH_ComboBox_UseNativePopup_Type();
int QStyle_SH_LineEdit_PasswordMaskDelay_Type();
int QStyle_SH_TabBar_ChangeCurrentDelay_Type();
int QStyle_SH_Menu_SubMenuUniDirection_Type();
int QStyle_SH_Menu_SubMenuUniDirectionFailCount_Type();
int QStyle_SH_Menu_SubMenuSloppySelectOtherActions_Type();
int QStyle_SH_Menu_SubMenuSloppyCloseTimeout_Type();
int QStyle_SH_Menu_SubMenuResetWhenReenteringParent_Type();
int QStyle_SH_Menu_SubMenuDontStartSloppyOnLeave_Type();
int QStyle_SH_ItemView_ScrollMode_Type();
int QStyle_SE_TabBarTearIndicator_Type();
int QStyle_SE_TreeViewDisclosureItem_Type();
int QStyle_SE_LineEditContents_Type();
int QStyle_SE_FrameContents_Type();
int QStyle_SE_DockWidgetCloseButton_Type();
int QStyle_SE_DockWidgetFloatButton_Type();
int QStyle_SE_DockWidgetTitleBarText_Type();
int QStyle_SE_DockWidgetIcon_Type();
int QStyle_SE_CheckBoxLayoutItem_Type();
int QStyle_SE_ComboBoxLayoutItem_Type();
int QStyle_SE_DateTimeEditLayoutItem_Type();
int QStyle_SE_DialogButtonBoxLayoutItem_Type();
int QStyle_SE_LabelLayoutItem_Type();
int QStyle_SE_ProgressBarLayoutItem_Type();
int QStyle_SE_PushButtonLayoutItem_Type();
int QStyle_SE_RadioButtonLayoutItem_Type();
int QStyle_SE_SliderLayoutItem_Type();
int QStyle_SE_SpinBoxLayoutItem_Type();
int QStyle_SE_ToolButtonLayoutItem_Type();
int QStyle_SE_FrameLayoutItem_Type();
int QStyle_SE_GroupBoxLayoutItem_Type();
int QStyle_SE_TabWidgetLayoutItem_Type();
int QStyle_SE_ItemViewItemDecoration_Type();
int QStyle_SE_ItemViewItemText_Type();
int QStyle_SE_ItemViewItemFocusRect_Type();
int QStyle_SE_TabBarTabLeftButton_Type();
int QStyle_SE_TabBarTabRightButton_Type();
int QStyle_SE_TabBarTabText_Type();
int QStyle_SE_ShapedFrameContents_Type();
int QStyle_SE_ToolBarHandle_Type();
int QStyle_SE_TabBarScrollLeftButton_Type();
int QStyle_SE_TabBarScrollRightButton_Type();
int QStyle_SE_TabBarTearIndicatorRight_Type();
void QStyle_DrawItemPixmap(void* ptr, void* painter, void* rectangle, int alignment, void* pixmap);
void QStyle_DrawItemPixmapDefault(void* ptr, void* painter, void* rectangle, int alignment, void* pixmap);
void QStyle_DrawItemText(void* ptr, void* painter, void* rectangle, int alignment, void* palette, char enabled, char* text, long long textRole);
void QStyle_DrawItemTextDefault(void* ptr, void* painter, void* rectangle, int alignment, void* palette, char enabled, char* text, long long textRole);
void* QStyle_ItemPixmapRect(void* ptr, void* rectangle, int alignment, void* pixmap);
void* QStyle_ItemPixmapRectDefault(void* ptr, void* rectangle, int alignment, void* pixmap);
void* QStyle_ItemTextRect(void* ptr, void* metrics, void* rectangle, int alignment, char enabled, char* text);
void* QStyle_ItemTextRectDefault(void* ptr, void* metrics, void* rectangle, int alignment, char enabled, char* text);
void QStyle_Polish2(void* ptr, void* application);
void QStyle_Polish2Default(void* ptr, void* application);
void QStyle_Polish3(void* ptr, void* palette);
void QStyle_Polish3Default(void* ptr, void* palette);
void* QStyle_Proxy(void* ptr);
int QStyle_QStyle_SliderValueFromPosition(int min, int max, int position, int span, char upsideDown);
void QStyle_Unpolish2(void* ptr, void* application);
void QStyle_Unpolish2Default(void* ptr, void* application);
void* QStyle_QStyle_VisualPos(long long direction, void* boundingRectangle, void* logicalPosition);
void* QStyle_QStyle_VisualRect(long long direction, void* boundingRectangle, void* logicalRectangle);
void* QStyle_NewQStyle();
void* QStyle_QStyle_AlignedRect(long long direction, long long alignment, void* size, void* rectangle);
int QStyle_CombinedLayoutSpacing(void* ptr, long long controls1, long long controls2, long long orientation, void* option, void* widget);
void QStyle_DrawComplexControl(void* ptr, long long control, void* option, void* painter, void* widget);
void QStyle_DrawControl(void* ptr, long long element, void* option, void* painter, void* widget);
void QStyle_DrawPrimitive(void* ptr, long long element, void* option, void* painter, void* widget);
void* QStyle_GeneratedIconPixmap(void* ptr, long long iconMode, void* pixmap, void* option);
long long QStyle_HitTestComplexControl(void* ptr, long long control, void* option, void* position, void* widget);
int QStyle_LayoutSpacing(void* ptr, long long control1, long long control2, long long orientation, void* option, void* widget);
int QStyle_PixelMetric(void* ptr, long long metric, void* option, void* widget);
void QStyle_Polish(void* ptr, void* widget);
void QStyle_PolishDefault(void* ptr, void* widget);
void* QStyle_SizeFromContents(void* ptr, long long ty, void* option, void* contentsSize, void* widget);
int QStyle_QStyle_SliderPositionFromValue(int min, int max, int logicalValue, int span, char upsideDown);
void* QStyle_StandardIcon(void* ptr, long long standardIcon, void* option, void* widget);
void* QStyle_StandardPalette(void* ptr);
void* QStyle_StandardPaletteDefault(void* ptr);
int QStyle_StyleHint(void* ptr, long long hint, void* option, void* widget, void* returnData);
void* QStyle_SubControlRect(void* ptr, long long control, void* option, long long subControl, void* widget);
void* QStyle_SubElementRect(void* ptr, long long element, void* option, void* widget);
void QStyle_Unpolish(void* ptr, void* widget);
void QStyle_UnpolishDefault(void* ptr, void* widget);
long long QStyle_QStyle_VisualAlignment(long long direction, long long alignment);
void QStyle_DestroyQStyle(void* ptr);
void QStyle_DestroyQStyleDefault(void* ptr);
void* QStyle_StandardPixmap(void* ptr, long long standardIcon, void* option, void* widget);
void QStyle_TimerEvent(void* ptr, void* event);
void QStyle_TimerEventDefault(void* ptr, void* event);
void QStyle_ChildEvent(void* ptr, void* event);
void QStyle_ChildEventDefault(void* ptr, void* event);
void QStyle_ConnectNotify(void* ptr, void* sign);
void QStyle_ConnectNotifyDefault(void* ptr, void* sign);
void QStyle_CustomEvent(void* ptr, void* event);
void QStyle_CustomEventDefault(void* ptr, void* event);
void QStyle_DeleteLater(void* ptr);
void QStyle_DeleteLaterDefault(void* ptr);
void QStyle_DisconnectNotify(void* ptr, void* sign);
void QStyle_DisconnectNotifyDefault(void* ptr, void* sign);
char QStyle_Event(void* ptr, void* e);
char QStyle_EventDefault(void* ptr, void* e);
char QStyle_EventFilter(void* ptr, void* watched, void* event);
char QStyle_EventFilterDefault(void* ptr, void* watched, void* event);
void* QStyle_MetaObject(void* ptr);
void* QStyle_MetaObjectDefault(void* ptr);
void* QStyleFactory_QStyleFactory_Create(char* key);
struct QtWidgets_PackedString QStyleFactory_QStyleFactory_Keys();
int QStyleHintReturn_SH_Mask_Type();
int QStyleHintReturn_SH_Variant_Type();
void* QStyleHintReturn_NewQStyleHintReturn(int version, int ty);
int QStyleHintReturn_Type(void* ptr);
void QStyleHintReturn_SetType(void* ptr, int vin);
int QStyleHintReturn_Version(void* ptr);
void QStyleHintReturn_SetVersion(void* ptr, int vin);
void* QStyleHintReturnMask_NewQStyleHintReturnMask();
void QStyleHintReturnMask_DestroyQStyleHintReturnMask(void* ptr);
void* QStyleHintReturnMask_Region(void* ptr);
void QStyleHintReturnMask_SetRegion(void* ptr, void* vqr);
void* QStyleHintReturnVariant_NewQStyleHintReturnVariant();
void QStyleHintReturnVariant_DestroyQStyleHintReturnVariant(void* ptr);
void* QStyleHintReturnVariant_Variant(void* ptr);
void QStyleHintReturnVariant_SetVariant(void* ptr, void* vqv);
int QStyleOption_SO_Slider_Type();
int QStyleOption_SO_SpinBox_Type();
int QStyleOption_SO_ToolButton_Type();
int QStyleOption_SO_ComboBox_Type();
int QStyleOption_SO_TitleBar_Type();
int QStyleOption_SO_GroupBox_Type();
int QStyleOption_SO_SizeGrip_Type();
void* QStyleOption_NewQStyleOption2(void* other);
void* QStyleOption_NewQStyleOption(int version, int ty);
void QStyleOption_InitFrom(void* ptr, void* widget);
void QStyleOption_DestroyQStyleOption(void* ptr);
long long QStyleOption_Direction(void* ptr);
void QStyleOption_SetDirection(void* ptr, long long vqt);
void* QStyleOption_FontMetrics(void* ptr);
void QStyleOption_SetFontMetrics(void* ptr, void* vqf);
void* QStyleOption_Palette(void* ptr);
void QStyleOption_SetPalette(void* ptr, void* vqp);
void* QStyleOption_Rect(void* ptr);
void QStyleOption_SetRect(void* ptr, void* vqr);
long long QStyleOption_State(void* ptr);
void QStyleOption_SetState(void* ptr, long long vqs);
void* QStyleOption_StyleObject(void* ptr);
void QStyleOption_SetStyleObject(void* ptr, void* vqo);
int QStyleOption_Type(void* ptr);
void QStyleOption_SetType(void* ptr, int vin);
int QStyleOption_Version(void* ptr);
void QStyleOption_SetVersion(void* ptr, int vin);
void* QStyleOptionButton_NewQStyleOptionButton();
void* QStyleOptionButton_NewQStyleOptionButton2(void* other);
long long QStyleOptionButton_Features(void* ptr);
void QStyleOptionButton_SetFeatures(void* ptr, long long vbu);
void* QStyleOptionButton_Icon(void* ptr);
void QStyleOptionButton_SetIcon(void* ptr, void* vqi);
void* QStyleOptionButton_IconSize(void* ptr);
void QStyleOptionButton_SetIconSize(void* ptr, void* vqs);
struct QtWidgets_PackedString QStyleOptionButton_Text(void* ptr);
void QStyleOptionButton_SetText(void* ptr, char* vqs);
void* QStyleOptionComboBox_NewQStyleOptionComboBox();
void* QStyleOptionComboBox_NewQStyleOptionComboBox2(void* other);
void* QStyleOptionComboBox_CurrentIcon(void* ptr);
void QStyleOptionComboBox_SetCurrentIcon(void* ptr, void* vqi);
struct QtWidgets_PackedString QStyleOptionComboBox_CurrentText(void* ptr);
void QStyleOptionComboBox_SetCurrentText(void* ptr, char* vqs);
char QStyleOptionComboBox_Editable(void* ptr);
void QStyleOptionComboBox_SetEditable(void* ptr, char vbo);
char QStyleOptionComboBox_Frame(void* ptr);
void QStyleOptionComboBox_SetFrame(void* ptr, char vbo);
void* QStyleOptionComboBox_IconSize(void* ptr);
void QStyleOptionComboBox_SetIconSize(void* ptr, void* vqs);
void* QStyleOptionComboBox_PopupRect(void* ptr);
void QStyleOptionComboBox_SetPopupRect(void* ptr, void* vqr);
void* QStyleOptionComplex_NewQStyleOptionComplex2(void* other);
void* QStyleOptionComplex_NewQStyleOptionComplex(int version, int ty);
long long QStyleOptionComplex_ActiveSubControls(void* ptr);
void QStyleOptionComplex_SetActiveSubControls(void* ptr, long long vqs);
long long QStyleOptionComplex_SubControls(void* ptr);
void QStyleOptionComplex_SetSubControls(void* ptr, long long vqs);
void* QStyleOptionDockWidget_NewQStyleOptionDockWidget();
void* QStyleOptionDockWidget_NewQStyleOptionDockWidget2(void* other);
char QStyleOptionDockWidget_Closable(void* ptr);
void QStyleOptionDockWidget_SetClosable(void* ptr, char vbo);
char QStyleOptionDockWidget_Floatable(void* ptr);
void QStyleOptionDockWidget_SetFloatable(void* ptr, char vbo);
char QStyleOptionDockWidget_Movable(void* ptr);
void QStyleOptionDockWidget_SetMovable(void* ptr, char vbo);
struct QtWidgets_PackedString QStyleOptionDockWidget_Title(void* ptr);
void QStyleOptionDockWidget_SetTitle(void* ptr, char* vqs);
char QStyleOptionDockWidget_VerticalTitleBar(void* ptr);
void QStyleOptionDockWidget_SetVerticalTitleBar(void* ptr, char vbo);
void* QStyleOptionFocusRect_NewQStyleOptionFocusRect();
void* QStyleOptionFocusRect_NewQStyleOptionFocusRect2(void* other);
void* QStyleOptionFocusRect_BackgroundColor(void* ptr);
void QStyleOptionFocusRect_SetBackgroundColor(void* ptr, void* vqc);
void* QStyleOptionFrame_NewQStyleOptionFrame();
void* QStyleOptionFrame_NewQStyleOptionFrame2(void* other);
long long QStyleOptionFrame_Features(void* ptr);
void QStyleOptionFrame_SetFeatures(void* ptr, long long vfr);
long long QStyleOptionFrame_FrameShape(void* ptr);
void QStyleOptionFrame_SetFrameShape(void* ptr, long long vqf);
int QStyleOptionFrame_LineWidth(void* ptr);
void QStyleOptionFrame_SetLineWidth(void* ptr, int vin);
int QStyleOptionFrame_MidLineWidth(void* ptr);
void QStyleOptionFrame_SetMidLineWidth(void* ptr, int vin);
void* QStyleOptionGraphicsItem_NewQStyleOptionGraphicsItem();
void* QStyleOptionGraphicsItem_NewQStyleOptionGraphicsItem2(void* other);
double QStyleOptionGraphicsItem_QStyleOptionGraphicsItem_LevelOfDetailFromTransform(void* worldTransform);
void* QStyleOptionGraphicsItem_ExposedRect(void* ptr);
void QStyleOptionGraphicsItem_SetExposedRect(void* ptr, void* vqr);
void* QStyleOptionGroupBox_NewQStyleOptionGroupBox();
void* QStyleOptionGroupBox_NewQStyleOptionGroupBox2(void* other);
long long QStyleOptionGroupBox_Features(void* ptr);
void QStyleOptionGroupBox_SetFeatures(void* ptr, long long vqs);
int QStyleOptionGroupBox_LineWidth(void* ptr);
void QStyleOptionGroupBox_SetLineWidth(void* ptr, int vin);
int QStyleOptionGroupBox_MidLineWidth(void* ptr);
void QStyleOptionGroupBox_SetMidLineWidth(void* ptr, int vin);
struct QtWidgets_PackedString QStyleOptionGroupBox_Text(void* ptr);
void QStyleOptionGroupBox_SetText(void* ptr, char* vqs);
long long QStyleOptionGroupBox_TextAlignment(void* ptr);
void QStyleOptionGroupBox_SetTextAlignment(void* ptr, long long vqt);
void* QStyleOptionGroupBox_TextColor(void* ptr);
void QStyleOptionGroupBox_SetTextColor(void* ptr, void* vqc);
void* QStyleOptionHeader_NewQStyleOptionHeader();
void* QStyleOptionHeader_NewQStyleOptionHeader2(void* other);
void* QStyleOptionHeader_Icon(void* ptr);
void QStyleOptionHeader_SetIcon(void* ptr, void* vqi);
long long QStyleOptionHeader_IconAlignment(void* ptr);
void QStyleOptionHeader_SetIconAlignment(void* ptr, long long vqt);
long long QStyleOptionHeader_Orientation(void* ptr);
void QStyleOptionHeader_SetOrientation(void* ptr, long long vqt);
long long QStyleOptionHeader_Position(void* ptr);
void QStyleOptionHeader_SetPosition(void* ptr, long long vse);
int QStyleOptionHeader_Section(void* ptr);
void QStyleOptionHeader_SetSection(void* ptr, int vin);
long long QStyleOptionHeader_SelectedPosition(void* ptr);
void QStyleOptionHeader_SetSelectedPosition(void* ptr, long long vse);
long long QStyleOptionHeader_SortIndicator(void* ptr);
void QStyleOptionHeader_SetSortIndicator(void* ptr, long long vso);
struct QtWidgets_PackedString QStyleOptionHeader_Text(void* ptr);
void QStyleOptionHeader_SetText(void* ptr, char* vqs);
long long QStyleOptionHeader_TextAlignment(void* ptr);
void QStyleOptionHeader_SetTextAlignment(void* ptr, long long vqt);
void* QStyleOptionMenuItem_NewQStyleOptionMenuItem();
void* QStyleOptionMenuItem_NewQStyleOptionMenuItem2(void* other);
long long QStyleOptionMenuItem_CheckType(void* ptr);
void QStyleOptionMenuItem_SetCheckType(void* ptr, long long vch);
char QStyleOptionMenuItem_Checked(void* ptr);
void QStyleOptionMenuItem_SetChecked(void* ptr, char vbo);
void* QStyleOptionMenuItem_Font(void* ptr);
void QStyleOptionMenuItem_SetFont(void* ptr, void* vqf);
void* QStyleOptionMenuItem_Icon(void* ptr);
void QStyleOptionMenuItem_SetIcon(void* ptr, void* vqi);
int QStyleOptionMenuItem_MaxIconWidth(void* ptr);
void QStyleOptionMenuItem_SetMaxIconWidth(void* ptr, int vin);
char QStyleOptionMenuItem_MenuHasCheckableItems(void* ptr);
void QStyleOptionMenuItem_SetMenuHasCheckableItems(void* ptr, char vbo);
long long QStyleOptionMenuItem_MenuItemType(void* ptr);
void QStyleOptionMenuItem_SetMenuItemType(void* ptr, long long vme);
void* QStyleOptionMenuItem_MenuRect(void* ptr);
void QStyleOptionMenuItem_SetMenuRect(void* ptr, void* vqr);
int QStyleOptionMenuItem_TabWidth(void* ptr);
void QStyleOptionMenuItem_SetTabWidth(void* ptr, int vin);
struct QtWidgets_PackedString QStyleOptionMenuItem_Text(void* ptr);
void QStyleOptionMenuItem_SetText(void* ptr, char* vqs);
void* QStyleOptionProgressBar_NewQStyleOptionProgressBar();
void* QStyleOptionProgressBar_NewQStyleOptionProgressBar2(void* other);
char QStyleOptionProgressBar_BottomToTop(void* ptr);
void QStyleOptionProgressBar_SetBottomToTop(void* ptr, char vbo);
char QStyleOptionProgressBar_InvertedAppearance(void* ptr);
void QStyleOptionProgressBar_SetInvertedAppearance(void* ptr, char vbo);
int QStyleOptionProgressBar_Maximum(void* ptr);
void QStyleOptionProgressBar_SetMaximum(void* ptr, int vin);
int QStyleOptionProgressBar_Minimum(void* ptr);
void QStyleOptionProgressBar_SetMinimum(void* ptr, int vin);
int QStyleOptionProgressBar_Progress(void* ptr);
void QStyleOptionProgressBar_SetProgress(void* ptr, int vin);
struct QtWidgets_PackedString QStyleOptionProgressBar_Text(void* ptr);
void QStyleOptionProgressBar_SetText(void* ptr, char* vqs);
long long QStyleOptionProgressBar_TextAlignment(void* ptr);
void QStyleOptionProgressBar_SetTextAlignment(void* ptr, long long vqt);
char QStyleOptionProgressBar_TextVisible(void* ptr);
void QStyleOptionProgressBar_SetTextVisible(void* ptr, char vbo);
void* QStyleOptionRubberBand_NewQStyleOptionRubberBand();
void* QStyleOptionRubberBand_NewQStyleOptionRubberBand2(void* other);
char QStyleOptionRubberBand_Opaque(void* ptr);
void QStyleOptionRubberBand_SetOpaque(void* ptr, char vbo);
long long QStyleOptionRubberBand_Shape(void* ptr);
void QStyleOptionRubberBand_SetShape(void* ptr, long long vqr);
void* QStyleOptionSizeGrip_NewQStyleOptionSizeGrip();
void* QStyleOptionSizeGrip_NewQStyleOptionSizeGrip2(void* other);
long long QStyleOptionSizeGrip_Corner(void* ptr);
void QStyleOptionSizeGrip_SetCorner(void* ptr, long long vqt);
void* QStyleOptionSlider_NewQStyleOptionSlider();
void* QStyleOptionSlider_NewQStyleOptionSlider2(void* other);
char QStyleOptionSlider_DialWrapping(void* ptr);
void QStyleOptionSlider_SetDialWrapping(void* ptr, char vbo);
int QStyleOptionSlider_Maximum(void* ptr);
void QStyleOptionSlider_SetMaximum(void* ptr, int vin);
int QStyleOptionSlider_Minimum(void* ptr);
void QStyleOptionSlider_SetMinimum(void* ptr, int vin);
double QStyleOptionSlider_NotchTarget(void* ptr);
void QStyleOptionSlider_SetNotchTarget(void* ptr, double vqr);
long long QStyleOptionSlider_Orientation(void* ptr);
void QStyleOptionSlider_SetOrientation(void* ptr, long long vqt);
int QStyleOptionSlider_PageStep(void* ptr);
void QStyleOptionSlider_SetPageStep(void* ptr, int vin);
int QStyleOptionSlider_SingleStep(void* ptr);
void QStyleOptionSlider_SetSingleStep(void* ptr, int vin);
int QStyleOptionSlider_SliderPosition(void* ptr);
void QStyleOptionSlider_SetSliderPosition(void* ptr, int vin);
int QStyleOptionSlider_SliderValue(void* ptr);
void QStyleOptionSlider_SetSliderValue(void* ptr, int vin);
int QStyleOptionSlider_TickInterval(void* ptr);
void QStyleOptionSlider_SetTickInterval(void* ptr, int vin);
long long QStyleOptionSlider_TickPosition(void* ptr);
void QStyleOptionSlider_SetTickPosition(void* ptr, long long vqs);
char QStyleOptionSlider_UpsideDown(void* ptr);
void QStyleOptionSlider_SetUpsideDown(void* ptr, char vbo);
void* QStyleOptionSpinBox_NewQStyleOptionSpinBox();
void* QStyleOptionSpinBox_NewQStyleOptionSpinBox2(void* other);
long long QStyleOptionSpinBox_ButtonSymbols(void* ptr);
void QStyleOptionSpinBox_SetButtonSymbols(void* ptr, long long vqa);
char QStyleOptionSpinBox_Frame(void* ptr);
void QStyleOptionSpinBox_SetFrame(void* ptr, char vbo);
long long QStyleOptionSpinBox_StepEnabled(void* ptr);
void QStyleOptionSpinBox_SetStepEnabled(void* ptr, long long vqa);
void* QStyleOptionTab_NewQStyleOptionTab();
void* QStyleOptionTab_NewQStyleOptionTab2(void* other);
long long QStyleOptionTab_CornerWidgets(void* ptr);
void QStyleOptionTab_SetCornerWidgets(void* ptr, long long vco);
char QStyleOptionTab_DocumentMode(void* ptr);
void QStyleOptionTab_SetDocumentMode(void* ptr, char vbo);
long long QStyleOptionTab_Features(void* ptr);
void QStyleOptionTab_SetFeatures(void* ptr, long long vta);
void* QStyleOptionTab_Icon(void* ptr);
void QStyleOptionTab_SetIcon(void* ptr, void* vqi);
void* QStyleOptionTab_IconSize(void* ptr);
void QStyleOptionTab_SetIconSize(void* ptr, void* vqs);
void* QStyleOptionTab_LeftButtonSize(void* ptr);
void QStyleOptionTab_SetLeftButtonSize(void* ptr, void* vqs);
long long QStyleOptionTab_Position(void* ptr);
void QStyleOptionTab_SetPosition(void* ptr, long long vta);
void* QStyleOptionTab_RightButtonSize(void* ptr);
void QStyleOptionTab_SetRightButtonSize(void* ptr, void* vqs);
int QStyleOptionTab_Row(void* ptr);
void QStyleOptionTab_SetRow(void* ptr, int vin);
long long QStyleOptionTab_SelectedPosition(void* ptr);
void QStyleOptionTab_SetSelectedPosition(void* ptr, long long vse);
long long QStyleOptionTab_Shape(void* ptr);
void QStyleOptionTab_SetShape(void* ptr, long long vqt);
struct QtWidgets_PackedString QStyleOptionTab_Text(void* ptr);
void QStyleOptionTab_SetText(void* ptr, char* vqs);
void* QStyleOptionTabBarBase_NewQStyleOptionTabBarBase();
void* QStyleOptionTabBarBase_NewQStyleOptionTabBarBase2(void* other);
char QStyleOptionTabBarBase_DocumentMode(void* ptr);
void QStyleOptionTabBarBase_SetDocumentMode(void* ptr, char vbo);
void* QStyleOptionTabBarBase_SelectedTabRect(void* ptr);
void QStyleOptionTabBarBase_SetSelectedTabRect(void* ptr, void* vqr);
long long QStyleOptionTabBarBase_Shape(void* ptr);
void QStyleOptionTabBarBase_SetShape(void* ptr, long long vqt);
void* QStyleOptionTabBarBase_TabBarRect(void* ptr);
void QStyleOptionTabBarBase_SetTabBarRect(void* ptr, void* vqr);
void* QStyleOptionTabWidgetFrame_NewQStyleOptionTabWidgetFrame();
void* QStyleOptionTabWidgetFrame_NewQStyleOptionTabWidgetFrame2(void* other);
void* QStyleOptionTabWidgetFrame_LeftCornerWidgetSize(void* ptr);
void QStyleOptionTabWidgetFrame_SetLeftCornerWidgetSize(void* ptr, void* vqs);
int QStyleOptionTabWidgetFrame_LineWidth(void* ptr);
void QStyleOptionTabWidgetFrame_SetLineWidth(void* ptr, int vin);
int QStyleOptionTabWidgetFrame_MidLineWidth(void* ptr);
void QStyleOptionTabWidgetFrame_SetMidLineWidth(void* ptr, int vin);
void* QStyleOptionTabWidgetFrame_RightCornerWidgetSize(void* ptr);
void QStyleOptionTabWidgetFrame_SetRightCornerWidgetSize(void* ptr, void* vqs);
void* QStyleOptionTabWidgetFrame_SelectedTabRect(void* ptr);
void QStyleOptionTabWidgetFrame_SetSelectedTabRect(void* ptr, void* vqr);
long long QStyleOptionTabWidgetFrame_Shape(void* ptr);
void QStyleOptionTabWidgetFrame_SetShape(void* ptr, long long vqt);
void* QStyleOptionTabWidgetFrame_TabBarRect(void* ptr);
void QStyleOptionTabWidgetFrame_SetTabBarRect(void* ptr, void* vqr);
void* QStyleOptionTabWidgetFrame_TabBarSize(void* ptr);
void QStyleOptionTabWidgetFrame_SetTabBarSize(void* ptr, void* vqs);
void* QStyleOptionTitleBar_NewQStyleOptionTitleBar();
void* QStyleOptionTitleBar_NewQStyleOptionTitleBar2(void* other);
void* QStyleOptionTitleBar_Icon(void* ptr);
void QStyleOptionTitleBar_SetIcon(void* ptr, void* vqi);
struct QtWidgets_PackedString QStyleOptionTitleBar_Text(void* ptr);
void QStyleOptionTitleBar_SetText(void* ptr, char* vqs);
long long QStyleOptionTitleBar_TitleBarFlags(void* ptr);
void QStyleOptionTitleBar_SetTitleBarFlags(void* ptr, long long vqt);
int QStyleOptionTitleBar_TitleBarState(void* ptr);
void QStyleOptionTitleBar_SetTitleBarState(void* ptr, int vin);
void* QStyleOptionToolBar_NewQStyleOptionToolBar();
void* QStyleOptionToolBar_NewQStyleOptionToolBar2(void* other);
long long QStyleOptionToolBar_Features(void* ptr);
void QStyleOptionToolBar_SetFeatures(void* ptr, long long vto);
int QStyleOptionToolBar_LineWidth(void* ptr);
void QStyleOptionToolBar_SetLineWidth(void* ptr, int vin);
int QStyleOptionToolBar_MidLineWidth(void* ptr);
void QStyleOptionToolBar_SetMidLineWidth(void* ptr, int vin);
long long QStyleOptionToolBar_PositionOfLine(void* ptr);
void QStyleOptionToolBar_SetPositionOfLine(void* ptr, long long vto);
long long QStyleOptionToolBar_PositionWithinLine(void* ptr);
void QStyleOptionToolBar_SetPositionWithinLine(void* ptr, long long vto);
long long QStyleOptionToolBar_ToolBarArea(void* ptr);
void QStyleOptionToolBar_SetToolBarArea(void* ptr, long long vqt);
void* QStyleOptionToolBox_NewQStyleOptionToolBox();
void* QStyleOptionToolBox_NewQStyleOptionToolBox2(void* other);
void* QStyleOptionToolBox_Icon(void* ptr);
void QStyleOptionToolBox_SetIcon(void* ptr, void* vqi);
long long QStyleOptionToolBox_Position(void* ptr);
void QStyleOptionToolBox_SetPosition(void* ptr, long long vta);
long long QStyleOptionToolBox_SelectedPosition(void* ptr);
void QStyleOptionToolBox_SetSelectedPosition(void* ptr, long long vse);
struct QtWidgets_PackedString QStyleOptionToolBox_Text(void* ptr);
void QStyleOptionToolBox_SetText(void* ptr, char* vqs);
void* QStyleOptionToolButton_NewQStyleOptionToolButton();
void* QStyleOptionToolButton_NewQStyleOptionToolButton2(void* other);
long long QStyleOptionToolButton_ArrowType(void* ptr);
void QStyleOptionToolButton_SetArrowType(void* ptr, long long vqt);
long long QStyleOptionToolButton_Features(void* ptr);
void QStyleOptionToolButton_SetFeatures(void* ptr, long long vto);
void* QStyleOptionToolButton_Font(void* ptr);
void QStyleOptionToolButton_SetFont(void* ptr, void* vqf);
void* QStyleOptionToolButton_Icon(void* ptr);
void QStyleOptionToolButton_SetIcon(void* ptr, void* vqi);
void* QStyleOptionToolButton_IconSize(void* ptr);
void QStyleOptionToolButton_SetIconSize(void* ptr, void* vqs);
void* QStyleOptionToolButton_Pos(void* ptr);
void QStyleOptionToolButton_SetPos(void* ptr, void* vqp);
struct QtWidgets_PackedString QStyleOptionToolButton_Text(void* ptr);
void QStyleOptionToolButton_SetText(void* ptr, char* vqs);
long long QStyleOptionToolButton_ToolButtonStyle(void* ptr);
void QStyleOptionToolButton_SetToolButtonStyle(void* ptr, long long vqt);
void* QStyleOptionViewItem_NewQStyleOptionViewItem();
void* QStyleOptionViewItem_NewQStyleOptionViewItem2(void* other);
void* QStyleOptionViewItem_BackgroundBrush(void* ptr);
void QStyleOptionViewItem_SetBackgroundBrush(void* ptr, void* vqb);
long long QStyleOptionViewItem_CheckState(void* ptr);
void QStyleOptionViewItem_SetCheckState(void* ptr, long long vqt);
long long QStyleOptionViewItem_DecorationAlignment(void* ptr);
void QStyleOptionViewItem_SetDecorationAlignment(void* ptr, long long vqt);
long long QStyleOptionViewItem_DecorationPosition(void* ptr);
void QStyleOptionViewItem_SetDecorationPosition(void* ptr, long long vpo);
void* QStyleOptionViewItem_DecorationSize(void* ptr);
void QStyleOptionViewItem_SetDecorationSize(void* ptr, void* vqs);
long long QStyleOptionViewItem_DisplayAlignment(void* ptr);
void QStyleOptionViewItem_SetDisplayAlignment(void* ptr, long long vqt);
long long QStyleOptionViewItem_Features(void* ptr);
void QStyleOptionViewItem_SetFeatures(void* ptr, long long vvi);
void* QStyleOptionViewItem_Font(void* ptr);
void QStyleOptionViewItem_SetFont(void* ptr, void* vqf);
void* QStyleOptionViewItem_Icon(void* ptr);
void QStyleOptionViewItem_SetIcon(void* ptr, void* vqi);
void* QStyleOptionViewItem_Index(void* ptr);
void QStyleOptionViewItem_SetIndex(void* ptr, void* vqm);
void* QStyleOptionViewItem_Locale(void* ptr);
void QStyleOptionViewItem_SetLocale(void* ptr, void* vql);
char QStyleOptionViewItem_ShowDecorationSelected(void* ptr);
void QStyleOptionViewItem_SetShowDecorationSelected(void* ptr, char vbo);
struct QtWidgets_PackedString QStyleOptionViewItem_Text(void* ptr);
void QStyleOptionViewItem_SetText(void* ptr, char* vqs);
long long QStyleOptionViewItem_TextElideMode(void* ptr);
void QStyleOptionViewItem_SetTextElideMode(void* ptr, long long vqt);
long long QStyleOptionViewItem_ViewItemPosition(void* ptr);
void QStyleOptionViewItem_SetViewItemPosition(void* ptr, long long vvi);
void* QStyleOptionViewItem_Widget(void* ptr);
void* QStylePainter_NewQStylePainter();
void* QStylePainter_NewQStylePainter3(void* pd, void* widget);
void* QStylePainter_NewQStylePainter2(void* widget);
char QStylePainter_Begin2(void* ptr, void* pd, void* widget);
char QStylePainter_Begin(void* ptr, void* widget);
void QStylePainter_DrawComplexControl(void* ptr, long long cc, void* option);
void QStylePainter_DrawControl(void* ptr, long long ce, void* option);
void QStylePainter_DrawItemPixmap(void* ptr, void* rect, int flags, void* pixmap);
void QStylePainter_DrawItemText(void* ptr, void* rect, int flags, void* pal, char enabled, char* text, long long textRole);
void QStylePainter_DrawPrimitive(void* ptr, long long pe, void* option);
void* QStylePainter_Style(void* ptr);
void* QStylePlugin_NewQStylePlugin(void* parent);
void* QStylePlugin_Create(void* ptr, char* key);
void QStylePlugin_DestroyQStylePlugin(void* ptr);
void QStylePlugin_TimerEvent(void* ptr, void* event);
void QStylePlugin_TimerEventDefault(void* ptr, void* event);
void QStylePlugin_ChildEvent(void* ptr, void* event);
void QStylePlugin_ChildEventDefault(void* ptr, void* event);
void QStylePlugin_ConnectNotify(void* ptr, void* sign);
void QStylePlugin_ConnectNotifyDefault(void* ptr, void* sign);
void QStylePlugin_CustomEvent(void* ptr, void* event);
void QStylePlugin_CustomEventDefault(void* ptr, void* event);
void QStylePlugin_DeleteLater(void* ptr);
void QStylePlugin_DeleteLaterDefault(void* ptr);
void QStylePlugin_DisconnectNotify(void* ptr, void* sign);
void QStylePlugin_DisconnectNotifyDefault(void* ptr, void* sign);
char QStylePlugin_Event(void* ptr, void* e);
char QStylePlugin_EventDefault(void* ptr, void* e);
char QStylePlugin_EventFilter(void* ptr, void* watched, void* event);
char QStylePlugin_EventFilterDefault(void* ptr, void* watched, void* event);
void* QStylePlugin_MetaObject(void* ptr);
void* QStylePlugin_MetaObjectDefault(void* ptr);
char QStyledItemDelegate_EventFilter(void* ptr, void* editor, void* event);
void* QStyledItemDelegate_NewQStyledItemDelegate(void* parent);
void* QStyledItemDelegate_CreateEditor(void* ptr, void* parent, void* option, void* index);
void* QStyledItemDelegate_CreateEditorDefault(void* ptr, void* parent, void* option, void* index);
struct QtWidgets_PackedString QStyledItemDelegate_DisplayText(void* ptr, void* value, void* locale);
struct QtWidgets_PackedString QStyledItemDelegate_DisplayTextDefault(void* ptr, void* value, void* locale);
char QStyledItemDelegate_EditorEvent(void* ptr, void* event, void* model, void* option, void* index);
char QStyledItemDelegate_EditorEventDefault(void* ptr, void* event, void* model, void* option, void* index);
void QStyledItemDelegate_InitStyleOption(void* ptr, void* option, void* index);
void QStyledItemDelegate_InitStyleOptionDefault(void* ptr, void* option, void* index);
void* QStyledItemDelegate_ItemEditorFactory(void* ptr);
void QStyledItemDelegate_Paint(void* ptr, void* painter, void* option, void* index);
void QStyledItemDelegate_PaintDefault(void* ptr, void* painter, void* option, void* index);
void QStyledItemDelegate_SetEditorData(void* ptr, void* editor, void* index);
void QStyledItemDelegate_SetEditorDataDefault(void* ptr, void* editor, void* index);
void QStyledItemDelegate_SetItemEditorFactory(void* ptr, void* factory);
void QStyledItemDelegate_SetModelData(void* ptr, void* editor, void* model, void* index);
void QStyledItemDelegate_SetModelDataDefault(void* ptr, void* editor, void* model, void* index);
void* QStyledItemDelegate_SizeHint(void* ptr, void* option, void* index);
void* QStyledItemDelegate_SizeHintDefault(void* ptr, void* option, void* index);
void QStyledItemDelegate_UpdateEditorGeometry(void* ptr, void* editor, void* option, void* index);
void QStyledItemDelegate_UpdateEditorGeometryDefault(void* ptr, void* editor, void* option, void* index);
void QStyledItemDelegate_DestroyQStyledItemDelegate(void* ptr);
void QStyledItemDelegate_DestroyEditor(void* ptr, void* editor, void* index);
void QStyledItemDelegate_DestroyEditorDefault(void* ptr, void* editor, void* index);
char QStyledItemDelegate_HelpEvent(void* ptr, void* event, void* view, void* option, void* index);
char QStyledItemDelegate_HelpEventDefault(void* ptr, void* event, void* view, void* option, void* index);
void QStyledItemDelegate_TimerEvent(void* ptr, void* event);
void QStyledItemDelegate_TimerEventDefault(void* ptr, void* event);
void QStyledItemDelegate_ChildEvent(void* ptr, void* event);
void QStyledItemDelegate_ChildEventDefault(void* ptr, void* event);
void QStyledItemDelegate_ConnectNotify(void* ptr, void* sign);
void QStyledItemDelegate_ConnectNotifyDefault(void* ptr, void* sign);
void QStyledItemDelegate_CustomEvent(void* ptr, void* event);
void QStyledItemDelegate_CustomEventDefault(void* ptr, void* event);
void QStyledItemDelegate_DeleteLater(void* ptr);
void QStyledItemDelegate_DeleteLaterDefault(void* ptr);
void QStyledItemDelegate_DisconnectNotify(void* ptr, void* sign);
void QStyledItemDelegate_DisconnectNotifyDefault(void* ptr, void* sign);
char QStyledItemDelegate_Event(void* ptr, void* e);
char QStyledItemDelegate_EventDefault(void* ptr, void* e);
void* QStyledItemDelegate_MetaObject(void* ptr);
void* QStyledItemDelegate_MetaObjectDefault(void* ptr);
long long QSwipeGesture_HorizontalDirection(void* ptr);
void QSwipeGesture_SetSwipeAngle(void* ptr, double value);
double QSwipeGesture_SwipeAngle(void* ptr);
long long QSwipeGesture_VerticalDirection(void* ptr);
void QSwipeGesture_DestroyQSwipeGesture(void* ptr);
void QSwipeGesture_TimerEvent(void* ptr, void* event);
void QSwipeGesture_TimerEventDefault(void* ptr, void* event);
void QSwipeGesture_ChildEvent(void* ptr, void* event);
void QSwipeGesture_ChildEventDefault(void* ptr, void* event);
void QSwipeGesture_ConnectNotify(void* ptr, void* sign);
void QSwipeGesture_ConnectNotifyDefault(void* ptr, void* sign);
void QSwipeGesture_CustomEvent(void* ptr, void* event);
void QSwipeGesture_CustomEventDefault(void* ptr, void* event);
void QSwipeGesture_DeleteLater(void* ptr);
void QSwipeGesture_DeleteLaterDefault(void* ptr);
void QSwipeGesture_DisconnectNotify(void* ptr, void* sign);
void QSwipeGesture_DisconnectNotifyDefault(void* ptr, void* sign);
char QSwipeGesture_Event(void* ptr, void* e);
char QSwipeGesture_EventDefault(void* ptr, void* e);
char QSwipeGesture_EventFilter(void* ptr, void* watched, void* event);
char QSwipeGesture_EventFilterDefault(void* ptr, void* watched, void* event);
void* QSwipeGesture_MetaObject(void* ptr);
void* QSwipeGesture_MetaObjectDefault(void* ptr);
void* QSystemTrayIcon_Icon(void* ptr);
char QSystemTrayIcon_IsVisible(void* ptr);
void QSystemTrayIcon_SetIcon(void* ptr, void* icon);
void QSystemTrayIcon_SetToolTip(void* ptr, char* tip);
void QSystemTrayIcon_SetVisible(void* ptr, char visible);
void QSystemTrayIcon_ShowMessage(void* ptr, char* title, char* message, long long icon, int millisecondsTimeoutHint);
struct QtWidgets_PackedString QSystemTrayIcon_ToolTip(void* ptr);
void* QSystemTrayIcon_NewQSystemTrayIcon(void* parent);
void* QSystemTrayIcon_NewQSystemTrayIcon2(void* icon, void* parent);
void QSystemTrayIcon_ConnectActivated(void* ptr);
void QSystemTrayIcon_DisconnectActivated(void* ptr);
void QSystemTrayIcon_Activated(void* ptr, long long reason);
void* QSystemTrayIcon_ContextMenu(void* ptr);
char QSystemTrayIcon_Event(void* ptr, void* e);
void* QSystemTrayIcon_Geometry(void* ptr);
void QSystemTrayIcon_Hide(void* ptr);
char QSystemTrayIcon_QSystemTrayIcon_IsSystemTrayAvailable();
void QSystemTrayIcon_ConnectMessageClicked(void* ptr);
void QSystemTrayIcon_DisconnectMessageClicked(void* ptr);
void QSystemTrayIcon_MessageClicked(void* ptr);
void QSystemTrayIcon_SetContextMenu(void* ptr, void* menu);
void QSystemTrayIcon_Show(void* ptr);
char QSystemTrayIcon_QSystemTrayIcon_SupportsMessages();
void QSystemTrayIcon_DestroyQSystemTrayIcon(void* ptr);
void QSystemTrayIcon_TimerEvent(void* ptr, void* event);
void QSystemTrayIcon_TimerEventDefault(void* ptr, void* event);
void QSystemTrayIcon_ChildEvent(void* ptr, void* event);
void QSystemTrayIcon_ChildEventDefault(void* ptr, void* event);
void QSystemTrayIcon_ConnectNotify(void* ptr, void* sign);
void QSystemTrayIcon_ConnectNotifyDefault(void* ptr, void* sign);
void QSystemTrayIcon_CustomEvent(void* ptr, void* event);
void QSystemTrayIcon_CustomEventDefault(void* ptr, void* event);
void QSystemTrayIcon_DeleteLater(void* ptr);
void QSystemTrayIcon_DeleteLaterDefault(void* ptr);
void QSystemTrayIcon_DisconnectNotify(void* ptr, void* sign);
void QSystemTrayIcon_DisconnectNotifyDefault(void* ptr, void* sign);
char QSystemTrayIcon_EventFilter(void* ptr, void* watched, void* event);
char QSystemTrayIcon_EventFilterDefault(void* ptr, void* watched, void* event);
void* QSystemTrayIcon_MetaObject(void* ptr);
void* QSystemTrayIcon_MetaObjectDefault(void* ptr);
char QTabBar_AutoHide(void* ptr);
char QTabBar_ChangeCurrentOnDrag(void* ptr);
int QTabBar_Count(void* ptr);
int QTabBar_CurrentIndex(void* ptr);
char QTabBar_DocumentMode(void* ptr);
char QTabBar_DrawBase(void* ptr);
long long QTabBar_ElideMode(void* ptr);
char QTabBar_Expanding(void* ptr);
void* QTabBar_IconSize(void* ptr);
char QTabBar_IsMovable(void* ptr);
long long QTabBar_SelectionBehaviorOnRemove(void* ptr);
void QTabBar_SetAutoHide(void* ptr, char hide);
void QTabBar_SetChangeCurrentOnDrag(void* ptr, char change);
void QTabBar_SetCurrentIndex(void* ptr, int index);
void QTabBar_SetDocumentMode(void* ptr, char set);
void QTabBar_SetDrawBase(void* ptr, char drawTheBase);
void QTabBar_SetElideMode(void* ptr, long long vqt);
void QTabBar_SetExpanding(void* ptr, char enabled);
void QTabBar_SetIconSize(void* ptr, void* size);
void QTabBar_SetMovable(void* ptr, char movable);
void QTabBar_SetSelectionBehaviorOnRemove(void* ptr, long long behavior);
void QTabBar_SetShape(void* ptr, long long shape);
void QTabBar_SetTabsClosable(void* ptr, char closable);
void QTabBar_SetUsesScrollButtons(void* ptr, char useButtons);
long long QTabBar_Shape(void* ptr);
char QTabBar_TabsClosable(void* ptr);
char QTabBar_UsesScrollButtons(void* ptr);
void* QTabBar_NewQTabBar(void* parent);
int QTabBar_AddTab2(void* ptr, void* icon, char* text);
int QTabBar_AddTab(void* ptr, char* text);
void QTabBar_ChangeEvent(void* ptr, void* event);
void QTabBar_ChangeEventDefault(void* ptr, void* event);
void QTabBar_ConnectCurrentChanged(void* ptr);
void QTabBar_DisconnectCurrentChanged(void* ptr);
void QTabBar_CurrentChanged(void* ptr, int index);
char QTabBar_Event(void* ptr, void* event);
void QTabBar_HideEvent(void* ptr, void* vqh);
void QTabBar_HideEventDefault(void* ptr, void* vqh);
void QTabBar_InitStyleOption(void* ptr, void* option, int tabIndex);
int QTabBar_InsertTab2(void* ptr, int index, void* icon, char* text);
int QTabBar_InsertTab(void* ptr, int index, char* text);
char QTabBar_IsTabEnabled(void* ptr, int index);
void QTabBar_KeyPressEvent(void* ptr, void* event);
void QTabBar_KeyPressEventDefault(void* ptr, void* event);
void* QTabBar_MinimumSizeHint(void* ptr);
void* QTabBar_MinimumSizeHintDefault(void* ptr);
void* QTabBar_MinimumTabSizeHint(void* ptr, int index);
void* QTabBar_MinimumTabSizeHintDefault(void* ptr, int index);
void QTabBar_MouseMoveEvent(void* ptr, void* event);
void QTabBar_MouseMoveEventDefault(void* ptr, void* event);
void QTabBar_MousePressEvent(void* ptr, void* event);
void QTabBar_MousePressEventDefault(void* ptr, void* event);
void QTabBar_MouseReleaseEvent(void* ptr, void* event);
void QTabBar_MouseReleaseEventDefault(void* ptr, void* event);
void QTabBar_MoveTab(void* ptr, int from, int to);
void QTabBar_PaintEvent(void* ptr, void* vqp);
void QTabBar_PaintEventDefault(void* ptr, void* vqp);
void QTabBar_RemoveTab(void* ptr, int index);
void QTabBar_ResizeEvent(void* ptr, void* vqr);
void QTabBar_ResizeEventDefault(void* ptr, void* vqr);
void QTabBar_SetTabButton(void* ptr, int index, long long position, void* widget);
void QTabBar_SetTabData(void* ptr, int index, void* data);
void QTabBar_SetTabEnabled(void* ptr, int index, char enabled);
void QTabBar_SetTabIcon(void* ptr, int index, void* icon);
void QTabBar_SetTabText(void* ptr, int index, char* text);
void QTabBar_SetTabTextColor(void* ptr, int index, void* color);
void QTabBar_SetTabToolTip(void* ptr, int index, char* tip);
void QTabBar_SetTabWhatsThis(void* ptr, int index, char* text);
void QTabBar_ShowEvent(void* ptr, void* vqs);
void QTabBar_ShowEventDefault(void* ptr, void* vqs);
void* QTabBar_SizeHint(void* ptr);
void* QTabBar_SizeHintDefault(void* ptr);
int QTabBar_TabAt(void* ptr, void* position);
void QTabBar_ConnectTabBarClicked(void* ptr);
void QTabBar_DisconnectTabBarClicked(void* ptr);
void QTabBar_TabBarClicked(void* ptr, int index);
void QTabBar_ConnectTabBarDoubleClicked(void* ptr);
void QTabBar_DisconnectTabBarDoubleClicked(void* ptr);
void QTabBar_TabBarDoubleClicked(void* ptr, int index);
void* QTabBar_TabButton(void* ptr, int index, long long position);
void QTabBar_ConnectTabCloseRequested(void* ptr);
void QTabBar_DisconnectTabCloseRequested(void* ptr);
void QTabBar_TabCloseRequested(void* ptr, int index);
void* QTabBar_TabData(void* ptr, int index);
void* QTabBar_TabIcon(void* ptr, int index);
void QTabBar_TabInserted(void* ptr, int index);
void QTabBar_TabInsertedDefault(void* ptr, int index);
void QTabBar_TabLayoutChange(void* ptr);
void QTabBar_TabLayoutChangeDefault(void* ptr);
void QTabBar_ConnectTabMoved(void* ptr);
void QTabBar_DisconnectTabMoved(void* ptr);
void QTabBar_TabMoved(void* ptr, int from, int to);
void* QTabBar_TabRect(void* ptr, int index);
void QTabBar_TabRemoved(void* ptr, int index);
void QTabBar_TabRemovedDefault(void* ptr, int index);
void* QTabBar_TabSizeHint(void* ptr, int index);
void* QTabBar_TabSizeHintDefault(void* ptr, int index);
struct QtWidgets_PackedString QTabBar_TabText(void* ptr, int index);
void* QTabBar_TabTextColor(void* ptr, int index);
struct QtWidgets_PackedString QTabBar_TabToolTip(void* ptr, int index);
struct QtWidgets_PackedString QTabBar_TabWhatsThis(void* ptr, int index);
void QTabBar_TimerEvent(void* ptr, void* event);
void QTabBar_WheelEvent(void* ptr, void* event);
void QTabBar_WheelEventDefault(void* ptr, void* event);
void QTabBar_DestroyQTabBar(void* ptr);
void QTabBar_ActionEvent(void* ptr, void* event);
void QTabBar_ActionEventDefault(void* ptr, void* event);
void QTabBar_DragEnterEvent(void* ptr, void* event);
void QTabBar_DragEnterEventDefault(void* ptr, void* event);
void QTabBar_DragLeaveEvent(void* ptr, void* event);
void QTabBar_DragLeaveEventDefault(void* ptr, void* event);
void QTabBar_DragMoveEvent(void* ptr, void* event);
void QTabBar_DragMoveEventDefault(void* ptr, void* event);
void QTabBar_DropEvent(void* ptr, void* event);
void QTabBar_DropEventDefault(void* ptr, void* event);
void QTabBar_EnterEvent(void* ptr, void* event);
void QTabBar_EnterEventDefault(void* ptr, void* event);
void QTabBar_FocusInEvent(void* ptr, void* event);
void QTabBar_FocusInEventDefault(void* ptr, void* event);
void QTabBar_FocusOutEvent(void* ptr, void* event);
void QTabBar_FocusOutEventDefault(void* ptr, void* event);
void QTabBar_LeaveEvent(void* ptr, void* event);
void QTabBar_LeaveEventDefault(void* ptr, void* event);
void QTabBar_MoveEvent(void* ptr, void* event);
void QTabBar_MoveEventDefault(void* ptr, void* event);
void QTabBar_SetEnabled(void* ptr, char vbo);
void QTabBar_SetEnabledDefault(void* ptr, char vbo);
void QTabBar_SetStyleSheet(void* ptr, char* styleSheet);
void QTabBar_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QTabBar_SetVisible(void* ptr, char visible);
void QTabBar_SetVisibleDefault(void* ptr, char visible);
void QTabBar_SetWindowModified(void* ptr, char vbo);
void QTabBar_SetWindowModifiedDefault(void* ptr, char vbo);
void QTabBar_SetWindowTitle(void* ptr, char* vqs);
void QTabBar_SetWindowTitleDefault(void* ptr, char* vqs);
char QTabBar_Close(void* ptr);
char QTabBar_CloseDefault(void* ptr);
void QTabBar_CloseEvent(void* ptr, void* event);
void QTabBar_CloseEventDefault(void* ptr, void* event);
void QTabBar_ContextMenuEvent(void* ptr, void* event);
void QTabBar_ContextMenuEventDefault(void* ptr, void* event);
char QTabBar_FocusNextPrevChild(void* ptr, char next);
char QTabBar_FocusNextPrevChildDefault(void* ptr, char next);
char QTabBar_HasHeightForWidth(void* ptr);
char QTabBar_HasHeightForWidthDefault(void* ptr);
int QTabBar_HeightForWidth(void* ptr, int w);
int QTabBar_HeightForWidthDefault(void* ptr, int w);
void QTabBar_Hide(void* ptr);
void QTabBar_HideDefault(void* ptr);
void QTabBar_InputMethodEvent(void* ptr, void* event);
void QTabBar_InputMethodEventDefault(void* ptr, void* event);
void* QTabBar_InputMethodQuery(void* ptr, long long query);
void* QTabBar_InputMethodQueryDefault(void* ptr, long long query);
void QTabBar_KeyReleaseEvent(void* ptr, void* event);
void QTabBar_KeyReleaseEventDefault(void* ptr, void* event);
void QTabBar_Lower(void* ptr);
void QTabBar_LowerDefault(void* ptr);
void QTabBar_MouseDoubleClickEvent(void* ptr, void* event);
void QTabBar_MouseDoubleClickEventDefault(void* ptr, void* event);
char QTabBar_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QTabBar_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QTabBar_Raise(void* ptr);
void QTabBar_RaiseDefault(void* ptr);
void QTabBar_Repaint(void* ptr);
void QTabBar_RepaintDefault(void* ptr);
void QTabBar_SetDisabled(void* ptr, char disable);
void QTabBar_SetDisabledDefault(void* ptr, char disable);
void QTabBar_SetFocus2(void* ptr);
void QTabBar_SetFocus2Default(void* ptr);
void QTabBar_SetHidden(void* ptr, char hidden);
void QTabBar_SetHiddenDefault(void* ptr, char hidden);
void QTabBar_Show(void* ptr);
void QTabBar_ShowDefault(void* ptr);
void QTabBar_ShowFullScreen(void* ptr);
void QTabBar_ShowFullScreenDefault(void* ptr);
void QTabBar_ShowMaximized(void* ptr);
void QTabBar_ShowMaximizedDefault(void* ptr);
void QTabBar_ShowMinimized(void* ptr);
void QTabBar_ShowMinimizedDefault(void* ptr);
void QTabBar_ShowNormal(void* ptr);
void QTabBar_ShowNormalDefault(void* ptr);
void QTabBar_TabletEvent(void* ptr, void* event);
void QTabBar_TabletEventDefault(void* ptr, void* event);
void QTabBar_Update(void* ptr);
void QTabBar_UpdateDefault(void* ptr);
void QTabBar_UpdateMicroFocus(void* ptr);
void QTabBar_UpdateMicroFocusDefault(void* ptr);
void QTabBar_ChildEvent(void* ptr, void* event);
void QTabBar_ChildEventDefault(void* ptr, void* event);
void QTabBar_ConnectNotify(void* ptr, void* sign);
void QTabBar_ConnectNotifyDefault(void* ptr, void* sign);
void QTabBar_CustomEvent(void* ptr, void* event);
void QTabBar_CustomEventDefault(void* ptr, void* event);
void QTabBar_DeleteLater(void* ptr);
void QTabBar_DeleteLaterDefault(void* ptr);
void QTabBar_DisconnectNotify(void* ptr, void* sign);
void QTabBar_DisconnectNotifyDefault(void* ptr, void* sign);
char QTabBar_EventFilter(void* ptr, void* watched, void* event);
char QTabBar_EventFilterDefault(void* ptr, void* watched, void* event);
void* QTabBar_MetaObject(void* ptr);
void* QTabBar_MetaObjectDefault(void* ptr);
int QTabWidget_AddTab2(void* ptr, void* page, void* icon, char* label);
int QTabWidget_AddTab(void* ptr, void* page, char* label);
int QTabWidget_Count(void* ptr);
int QTabWidget_CurrentIndex(void* ptr);
char QTabWidget_DocumentMode(void* ptr);
long long QTabWidget_ElideMode(void* ptr);
void* QTabWidget_IconSize(void* ptr);
int QTabWidget_InsertTab2(void* ptr, int index, void* page, void* icon, char* label);
int QTabWidget_InsertTab(void* ptr, int index, void* page, char* label);
char QTabWidget_IsMovable(void* ptr);
void QTabWidget_PaintEvent(void* ptr, void* event);
void QTabWidget_PaintEventDefault(void* ptr, void* event);
void QTabWidget_SetCornerWidget(void* ptr, void* widget, long long corner);
void QTabWidget_SetCurrentIndex(void* ptr, int index);
void QTabWidget_SetDocumentMode(void* ptr, char set);
void QTabWidget_SetElideMode(void* ptr, long long vqt);
void QTabWidget_SetIconSize(void* ptr, void* size);
void QTabWidget_SetMovable(void* ptr, char movable);
void QTabWidget_SetTabBarAutoHide(void* ptr, char enabled);
void QTabWidget_SetTabPosition(void* ptr, long long vta);
void QTabWidget_SetTabShape(void* ptr, long long s);
void QTabWidget_SetTabsClosable(void* ptr, char closeable);
void QTabWidget_SetUsesScrollButtons(void* ptr, char useButtons);
char QTabWidget_TabBarAutoHide(void* ptr);
long long QTabWidget_TabPosition(void* ptr);
long long QTabWidget_TabShape(void* ptr);
char QTabWidget_TabsClosable(void* ptr);
char QTabWidget_UsesScrollButtons(void* ptr);
void* QTabWidget_NewQTabWidget(void* parent);
void QTabWidget_ChangeEvent(void* ptr, void* ev);
void QTabWidget_ChangeEventDefault(void* ptr, void* ev);
void QTabWidget_Clear(void* ptr);
void* QTabWidget_CornerWidget(void* ptr, long long corner);
void QTabWidget_ConnectCurrentChanged(void* ptr);
void QTabWidget_DisconnectCurrentChanged(void* ptr);
void QTabWidget_CurrentChanged(void* ptr, int index);
void* QTabWidget_CurrentWidget(void* ptr);
char QTabWidget_Event(void* ptr, void* ev);
char QTabWidget_HasHeightForWidth(void* ptr);
char QTabWidget_HasHeightForWidthDefault(void* ptr);
int QTabWidget_HeightForWidth(void* ptr, int width);
int QTabWidget_HeightForWidthDefault(void* ptr, int width);
int QTabWidget_IndexOf(void* ptr, void* w);
void QTabWidget_InitStyleOption(void* ptr, void* option);
char QTabWidget_IsTabEnabled(void* ptr, int index);
void QTabWidget_KeyPressEvent(void* ptr, void* e);
void QTabWidget_KeyPressEventDefault(void* ptr, void* e);
void* QTabWidget_MinimumSizeHint(void* ptr);
void* QTabWidget_MinimumSizeHintDefault(void* ptr);
void QTabWidget_RemoveTab(void* ptr, int index);
void QTabWidget_ResizeEvent(void* ptr, void* e);
void QTabWidget_ResizeEventDefault(void* ptr, void* e);
void QTabWidget_SetCurrentWidget(void* ptr, void* widget);
void QTabWidget_SetTabBar(void* ptr, void* tb);
void QTabWidget_SetTabEnabled(void* ptr, int index, char enable);
void QTabWidget_SetTabIcon(void* ptr, int index, void* icon);
void QTabWidget_SetTabText(void* ptr, int index, char* label);
void QTabWidget_SetTabToolTip(void* ptr, int index, char* tip);
void QTabWidget_SetTabWhatsThis(void* ptr, int index, char* text);
void QTabWidget_ShowEvent(void* ptr, void* vqs);
void QTabWidget_ShowEventDefault(void* ptr, void* vqs);
void* QTabWidget_SizeHint(void* ptr);
void* QTabWidget_SizeHintDefault(void* ptr);
void* QTabWidget_TabBar(void* ptr);
void QTabWidget_ConnectTabBarClicked(void* ptr);
void QTabWidget_DisconnectTabBarClicked(void* ptr);
void QTabWidget_TabBarClicked(void* ptr, int index);
void QTabWidget_ConnectTabBarDoubleClicked(void* ptr);
void QTabWidget_DisconnectTabBarDoubleClicked(void* ptr);
void QTabWidget_TabBarDoubleClicked(void* ptr, int index);
void QTabWidget_ConnectTabCloseRequested(void* ptr);
void QTabWidget_DisconnectTabCloseRequested(void* ptr);
void QTabWidget_TabCloseRequested(void* ptr, int index);
void* QTabWidget_TabIcon(void* ptr, int index);
void QTabWidget_TabInserted(void* ptr, int index);
void QTabWidget_TabInsertedDefault(void* ptr, int index);
void QTabWidget_TabRemoved(void* ptr, int index);
void QTabWidget_TabRemovedDefault(void* ptr, int index);
struct QtWidgets_PackedString QTabWidget_TabText(void* ptr, int index);
struct QtWidgets_PackedString QTabWidget_TabToolTip(void* ptr, int index);
struct QtWidgets_PackedString QTabWidget_TabWhatsThis(void* ptr, int index);
void* QTabWidget_Widget(void* ptr, int index);
void QTabWidget_DestroyQTabWidget(void* ptr);
void QTabWidget_ActionEvent(void* ptr, void* event);
void QTabWidget_ActionEventDefault(void* ptr, void* event);
void QTabWidget_DragEnterEvent(void* ptr, void* event);
void QTabWidget_DragEnterEventDefault(void* ptr, void* event);
void QTabWidget_DragLeaveEvent(void* ptr, void* event);
void QTabWidget_DragLeaveEventDefault(void* ptr, void* event);
void QTabWidget_DragMoveEvent(void* ptr, void* event);
void QTabWidget_DragMoveEventDefault(void* ptr, void* event);
void QTabWidget_DropEvent(void* ptr, void* event);
void QTabWidget_DropEventDefault(void* ptr, void* event);
void QTabWidget_EnterEvent(void* ptr, void* event);
void QTabWidget_EnterEventDefault(void* ptr, void* event);
void QTabWidget_FocusInEvent(void* ptr, void* event);
void QTabWidget_FocusInEventDefault(void* ptr, void* event);
void QTabWidget_FocusOutEvent(void* ptr, void* event);
void QTabWidget_FocusOutEventDefault(void* ptr, void* event);
void QTabWidget_HideEvent(void* ptr, void* event);
void QTabWidget_HideEventDefault(void* ptr, void* event);
void QTabWidget_LeaveEvent(void* ptr, void* event);
void QTabWidget_LeaveEventDefault(void* ptr, void* event);
void QTabWidget_MoveEvent(void* ptr, void* event);
void QTabWidget_MoveEventDefault(void* ptr, void* event);
void QTabWidget_SetEnabled(void* ptr, char vbo);
void QTabWidget_SetEnabledDefault(void* ptr, char vbo);
void QTabWidget_SetStyleSheet(void* ptr, char* styleSheet);
void QTabWidget_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QTabWidget_SetVisible(void* ptr, char visible);
void QTabWidget_SetVisibleDefault(void* ptr, char visible);
void QTabWidget_SetWindowModified(void* ptr, char vbo);
void QTabWidget_SetWindowModifiedDefault(void* ptr, char vbo);
void QTabWidget_SetWindowTitle(void* ptr, char* vqs);
void QTabWidget_SetWindowTitleDefault(void* ptr, char* vqs);
char QTabWidget_Close(void* ptr);
char QTabWidget_CloseDefault(void* ptr);
void QTabWidget_CloseEvent(void* ptr, void* event);
void QTabWidget_CloseEventDefault(void* ptr, void* event);
void QTabWidget_ContextMenuEvent(void* ptr, void* event);
void QTabWidget_ContextMenuEventDefault(void* ptr, void* event);
char QTabWidget_FocusNextPrevChild(void* ptr, char next);
char QTabWidget_FocusNextPrevChildDefault(void* ptr, char next);
void QTabWidget_Hide(void* ptr);
void QTabWidget_HideDefault(void* ptr);
void QTabWidget_InputMethodEvent(void* ptr, void* event);
void QTabWidget_InputMethodEventDefault(void* ptr, void* event);
void* QTabWidget_InputMethodQuery(void* ptr, long long query);
void* QTabWidget_InputMethodQueryDefault(void* ptr, long long query);
void QTabWidget_KeyReleaseEvent(void* ptr, void* event);
void QTabWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QTabWidget_Lower(void* ptr);
void QTabWidget_LowerDefault(void* ptr);
void QTabWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QTabWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QTabWidget_MouseMoveEvent(void* ptr, void* event);
void QTabWidget_MouseMoveEventDefault(void* ptr, void* event);
void QTabWidget_MousePressEvent(void* ptr, void* event);
void QTabWidget_MousePressEventDefault(void* ptr, void* event);
void QTabWidget_MouseReleaseEvent(void* ptr, void* event);
void QTabWidget_MouseReleaseEventDefault(void* ptr, void* event);
char QTabWidget_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QTabWidget_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QTabWidget_Raise(void* ptr);
void QTabWidget_RaiseDefault(void* ptr);
void QTabWidget_Repaint(void* ptr);
void QTabWidget_RepaintDefault(void* ptr);
void QTabWidget_SetDisabled(void* ptr, char disable);
void QTabWidget_SetDisabledDefault(void* ptr, char disable);
void QTabWidget_SetFocus2(void* ptr);
void QTabWidget_SetFocus2Default(void* ptr);
void QTabWidget_SetHidden(void* ptr, char hidden);
void QTabWidget_SetHiddenDefault(void* ptr, char hidden);
void QTabWidget_Show(void* ptr);
void QTabWidget_ShowDefault(void* ptr);
void QTabWidget_ShowFullScreen(void* ptr);
void QTabWidget_ShowFullScreenDefault(void* ptr);
void QTabWidget_ShowMaximized(void* ptr);
void QTabWidget_ShowMaximizedDefault(void* ptr);
void QTabWidget_ShowMinimized(void* ptr);
void QTabWidget_ShowMinimizedDefault(void* ptr);
void QTabWidget_ShowNormal(void* ptr);
void QTabWidget_ShowNormalDefault(void* ptr);
void QTabWidget_TabletEvent(void* ptr, void* event);
void QTabWidget_TabletEventDefault(void* ptr, void* event);
void QTabWidget_Update(void* ptr);
void QTabWidget_UpdateDefault(void* ptr);
void QTabWidget_UpdateMicroFocus(void* ptr);
void QTabWidget_UpdateMicroFocusDefault(void* ptr);
void QTabWidget_WheelEvent(void* ptr, void* event);
void QTabWidget_WheelEventDefault(void* ptr, void* event);
void QTabWidget_TimerEvent(void* ptr, void* event);
void QTabWidget_TimerEventDefault(void* ptr, void* event);
void QTabWidget_ChildEvent(void* ptr, void* event);
void QTabWidget_ChildEventDefault(void* ptr, void* event);
void QTabWidget_ConnectNotify(void* ptr, void* sign);
void QTabWidget_ConnectNotifyDefault(void* ptr, void* sign);
void QTabWidget_CustomEvent(void* ptr, void* event);
void QTabWidget_CustomEventDefault(void* ptr, void* event);
void QTabWidget_DeleteLater(void* ptr);
void QTabWidget_DeleteLaterDefault(void* ptr);
void QTabWidget_DisconnectNotify(void* ptr, void* sign);
void QTabWidget_DisconnectNotifyDefault(void* ptr, void* sign);
char QTabWidget_EventFilter(void* ptr, void* watched, void* event);
char QTabWidget_EventFilterDefault(void* ptr, void* watched, void* event);
void* QTabWidget_MetaObject(void* ptr);
void* QTabWidget_MetaObjectDefault(void* ptr);
long long QTableView_GridStyle(void* ptr);
char QTableView_IsCornerButtonEnabled(void* ptr);
char QTableView_IsSortingEnabled(void* ptr);
void* QTableView_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QTableView_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
void QTableView_SetCornerButtonEnabled(void* ptr, char enable);
void QTableView_SetGridStyle(void* ptr, long long style);
void QTableView_SetSelection(void* ptr, void* rect, long long flags);
void QTableView_SetSelectionDefault(void* ptr, void* rect, long long flags);
void QTableView_SetShowGrid(void* ptr, char show);
void QTableView_SetSpan(void* ptr, int row, int column, int rowSpanCount, int columnSpanCount);
void QTableView_SetWordWrap(void* ptr, char on);
char QTableView_ShowGrid(void* ptr);
char QTableView_WordWrap(void* ptr);
void* QTableView_NewQTableView(void* parent);
void QTableView_ClearSpans(void* ptr);
int QTableView_ColumnAt(void* ptr, int x);
void QTableView_ColumnCountChanged(void* ptr, int oldCount, int newCount);
void QTableView_ColumnMoved(void* ptr, int column, int oldIndex, int newIndex);
void QTableView_ColumnResized(void* ptr, int column, int oldWidth, int newWidth);
int QTableView_ColumnSpan(void* ptr, int row, int column);
int QTableView_ColumnViewportPosition(void* ptr, int column);
int QTableView_ColumnWidth(void* ptr, int column);
void QTableView_CurrentChanged(void* ptr, void* current, void* previous);
void QTableView_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QTableView_HideColumn(void* ptr, int column);
void QTableView_HideRow(void* ptr, int row);
int QTableView_HorizontalOffset(void* ptr);
int QTableView_HorizontalOffsetDefault(void* ptr);
void* QTableView_HorizontalHeader(void* ptr);
void* QTableView_IndexAt(void* ptr, void* pos);
void* QTableView_IndexAtDefault(void* ptr, void* pos);
char QTableView_IsColumnHidden(void* ptr, int column);
char QTableView_IsIndexHidden(void* ptr, void* index);
char QTableView_IsIndexHiddenDefault(void* ptr, void* index);
char QTableView_IsRowHidden(void* ptr, int row);
void QTableView_PaintEvent(void* ptr, void* event);
void QTableView_PaintEventDefault(void* ptr, void* event);
void QTableView_ResizeColumnToContents(void* ptr, int column);
void QTableView_ResizeColumnsToContents(void* ptr);
void QTableView_ResizeRowToContents(void* ptr, int row);
void QTableView_ResizeRowsToContents(void* ptr);
int QTableView_RowAt(void* ptr, int y);
void QTableView_RowCountChanged(void* ptr, int oldCount, int newCount);
int QTableView_RowHeight(void* ptr, int row);
void QTableView_RowMoved(void* ptr, int row, int oldIndex, int newIndex);
void QTableView_RowResized(void* ptr, int row, int oldHeight, int newHeight);
int QTableView_RowSpan(void* ptr, int row, int column);
int QTableView_RowViewportPosition(void* ptr, int row);
void QTableView_SelectColumn(void* ptr, int column);
void QTableView_SelectRow(void* ptr, int row);
void QTableView_SelectionChanged(void* ptr, void* selected, void* deselected);
void QTableView_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
void QTableView_SetColumnHidden(void* ptr, int column, char hide);
void QTableView_SetColumnWidth(void* ptr, int column, int width);
void QTableView_SetHorizontalHeader(void* ptr, void* header);
void QTableView_SetModel(void* ptr, void* model);
void QTableView_SetModelDefault(void* ptr, void* model);
void QTableView_SetRootIndex(void* ptr, void* index);
void QTableView_SetRootIndexDefault(void* ptr, void* index);
void QTableView_SetRowHeight(void* ptr, int row, int height);
void QTableView_SetRowHidden(void* ptr, int row, char hide);
void QTableView_SetSelectionModel(void* ptr, void* selectionModel);
void QTableView_SetSelectionModelDefault(void* ptr, void* selectionModel);
void QTableView_SetSortingEnabled(void* ptr, char enable);
void QTableView_SetVerticalHeader(void* ptr, void* header);
void QTableView_ShowColumn(void* ptr, int column);
void QTableView_ShowRow(void* ptr, int row);
int QTableView_SizeHintForColumn(void* ptr, int column);
int QTableView_SizeHintForColumnDefault(void* ptr, int column);
int QTableView_SizeHintForRow(void* ptr, int row);
int QTableView_SizeHintForRowDefault(void* ptr, int row);
void QTableView_SortByColumn(void* ptr, int column, long long order);
void QTableView_TimerEvent(void* ptr, void* event);
void QTableView_UpdateGeometries(void* ptr);
void QTableView_UpdateGeometriesDefault(void* ptr);
void* QTableView_VerticalHeader(void* ptr);
int QTableView_VerticalOffset(void* ptr);
int QTableView_VerticalOffsetDefault(void* ptr);
void* QTableView_ViewOptions(void* ptr);
void* QTableView_ViewOptionsDefault(void* ptr);
void* QTableView_ViewportSizeHint(void* ptr);
void* QTableView_ViewportSizeHintDefault(void* ptr);
void QTableView_DestroyQTableView(void* ptr);
void* QTableView_selectedIndexes_atList(void* ptr, int i);
void QTableView_DragLeaveEvent(void* ptr, void* event);
void QTableView_DragLeaveEventDefault(void* ptr, void* event);
char QTableView_ViewportEvent(void* ptr, void* event);
char QTableView_ViewportEventDefault(void* ptr, void* event);
void QTableView_ClearSelection(void* ptr);
void QTableView_ClearSelectionDefault(void* ptr);
void QTableView_CloseEditor(void* ptr, void* editor, long long hint);
void QTableView_CloseEditorDefault(void* ptr, void* editor, long long hint);
void QTableView_CommitData(void* ptr, void* editor);
void QTableView_CommitDataDefault(void* ptr, void* editor);
void QTableView_DragEnterEvent(void* ptr, void* event);
void QTableView_DragEnterEventDefault(void* ptr, void* event);
void QTableView_DragMoveEvent(void* ptr, void* event);
void QTableView_DragMoveEventDefault(void* ptr, void* event);
void QTableView_DropEvent(void* ptr, void* event);
void QTableView_DropEventDefault(void* ptr, void* event);
void QTableView_Edit(void* ptr, void* index);
void QTableView_EditDefault(void* ptr, void* index);
char QTableView_Edit2(void* ptr, void* index, long long trigger, void* event);
char QTableView_Edit2Default(void* ptr, void* index, long long trigger, void* event);
void QTableView_EditorDestroyed(void* ptr, void* editor);
void QTableView_EditorDestroyedDefault(void* ptr, void* editor);
void QTableView_FocusInEvent(void* ptr, void* event);
void QTableView_FocusInEventDefault(void* ptr, void* event);
char QTableView_FocusNextPrevChild(void* ptr, char next);
char QTableView_FocusNextPrevChildDefault(void* ptr, char next);
void QTableView_FocusOutEvent(void* ptr, void* event);
void QTableView_FocusOutEventDefault(void* ptr, void* event);
void QTableView_InputMethodEvent(void* ptr, void* event);
void QTableView_InputMethodEventDefault(void* ptr, void* event);
void* QTableView_InputMethodQuery(void* ptr, long long query);
void* QTableView_InputMethodQueryDefault(void* ptr, long long query);
void QTableView_KeyPressEvent(void* ptr, void* event);
void QTableView_KeyPressEventDefault(void* ptr, void* event);
void QTableView_KeyboardSearch(void* ptr, char* search);
void QTableView_KeyboardSearchDefault(void* ptr, char* search);
void QTableView_MouseDoubleClickEvent(void* ptr, void* event);
void QTableView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QTableView_MouseMoveEvent(void* ptr, void* event);
void QTableView_MouseMoveEventDefault(void* ptr, void* event);
void QTableView_MousePressEvent(void* ptr, void* event);
void QTableView_MousePressEventDefault(void* ptr, void* event);
void QTableView_MouseReleaseEvent(void* ptr, void* event);
void QTableView_MouseReleaseEventDefault(void* ptr, void* event);
void QTableView_Reset(void* ptr);
void QTableView_ResetDefault(void* ptr);
void QTableView_ResizeEvent(void* ptr, void* event);
void QTableView_ResizeEventDefault(void* ptr, void* event);
void QTableView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QTableView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QTableView_RowsInserted(void* ptr, void* parent, int start, int end);
void QTableView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QTableView_ScrollTo(void* ptr, void* index, long long hint);
void QTableView_ScrollToDefault(void* ptr, void* index, long long hint);
void QTableView_ScrollToBottom(void* ptr);
void QTableView_ScrollToBottomDefault(void* ptr);
void QTableView_ScrollToTop(void* ptr);
void QTableView_ScrollToTopDefault(void* ptr);
void QTableView_SelectAll(void* ptr);
void QTableView_SelectAllDefault(void* ptr);
long long QTableView_SelectionCommand(void* ptr, void* index, void* event);
long long QTableView_SelectionCommandDefault(void* ptr, void* index, void* event);
void QTableView_SetCurrentIndex(void* ptr, void* index);
void QTableView_SetCurrentIndexDefault(void* ptr, void* index);
void QTableView_StartDrag(void* ptr, long long supportedActions);
void QTableView_StartDragDefault(void* ptr, long long supportedActions);
void QTableView_Update(void* ptr, void* index);
void QTableView_UpdateDefault(void* ptr, void* index);
void* QTableView_VisualRect(void* ptr, void* index);
void* QTableView_VisualRectDefault(void* ptr, void* index);
void* QTableView_VisualRegionForSelection(void* ptr, void* selection);
void* QTableView_VisualRegionForSelectionDefault(void* ptr, void* selection);
void QTableView_ContextMenuEvent(void* ptr, void* e);
void QTableView_ContextMenuEventDefault(void* ptr, void* e);
void* QTableView_MinimumSizeHint(void* ptr);
void* QTableView_MinimumSizeHintDefault(void* ptr);
void QTableView_ScrollContentsBy(void* ptr, int dx, int dy);
void QTableView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QTableView_SetupViewport(void* ptr, void* viewport);
void QTableView_SetupViewportDefault(void* ptr, void* viewport);
void* QTableView_SizeHint(void* ptr);
void* QTableView_SizeHintDefault(void* ptr);
void QTableView_WheelEvent(void* ptr, void* e);
void QTableView_WheelEventDefault(void* ptr, void* e);
void QTableView_ChangeEvent(void* ptr, void* ev);
void QTableView_ChangeEventDefault(void* ptr, void* ev);
void QTableView_ActionEvent(void* ptr, void* event);
void QTableView_ActionEventDefault(void* ptr, void* event);
void QTableView_EnterEvent(void* ptr, void* event);
void QTableView_EnterEventDefault(void* ptr, void* event);
void QTableView_HideEvent(void* ptr, void* event);
void QTableView_HideEventDefault(void* ptr, void* event);
void QTableView_LeaveEvent(void* ptr, void* event);
void QTableView_LeaveEventDefault(void* ptr, void* event);
void QTableView_MoveEvent(void* ptr, void* event);
void QTableView_MoveEventDefault(void* ptr, void* event);
void QTableView_SetEnabled(void* ptr, char vbo);
void QTableView_SetEnabledDefault(void* ptr, char vbo);
void QTableView_SetStyleSheet(void* ptr, char* styleSheet);
void QTableView_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QTableView_SetVisible(void* ptr, char visible);
void QTableView_SetVisibleDefault(void* ptr, char visible);
void QTableView_SetWindowModified(void* ptr, char vbo);
void QTableView_SetWindowModifiedDefault(void* ptr, char vbo);
void QTableView_SetWindowTitle(void* ptr, char* vqs);
void QTableView_SetWindowTitleDefault(void* ptr, char* vqs);
void QTableView_ShowEvent(void* ptr, void* event);
void QTableView_ShowEventDefault(void* ptr, void* event);
char QTableView_Close(void* ptr);
char QTableView_CloseDefault(void* ptr);
void QTableView_CloseEvent(void* ptr, void* event);
void QTableView_CloseEventDefault(void* ptr, void* event);
char QTableView_HasHeightForWidth(void* ptr);
char QTableView_HasHeightForWidthDefault(void* ptr);
int QTableView_HeightForWidth(void* ptr, int w);
int QTableView_HeightForWidthDefault(void* ptr, int w);
void QTableView_Hide(void* ptr);
void QTableView_HideDefault(void* ptr);
void QTableView_KeyReleaseEvent(void* ptr, void* event);
void QTableView_KeyReleaseEventDefault(void* ptr, void* event);
void QTableView_Lower(void* ptr);
void QTableView_LowerDefault(void* ptr);
char QTableView_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QTableView_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QTableView_Raise(void* ptr);
void QTableView_RaiseDefault(void* ptr);
void QTableView_Repaint(void* ptr);
void QTableView_RepaintDefault(void* ptr);
void QTableView_SetDisabled(void* ptr, char disable);
void QTableView_SetDisabledDefault(void* ptr, char disable);
void QTableView_SetFocus2(void* ptr);
void QTableView_SetFocus2Default(void* ptr);
void QTableView_SetHidden(void* ptr, char hidden);
void QTableView_SetHiddenDefault(void* ptr, char hidden);
void QTableView_Show(void* ptr);
void QTableView_ShowDefault(void* ptr);
void QTableView_ShowFullScreen(void* ptr);
void QTableView_ShowFullScreenDefault(void* ptr);
void QTableView_ShowMaximized(void* ptr);
void QTableView_ShowMaximizedDefault(void* ptr);
void QTableView_ShowMinimized(void* ptr);
void QTableView_ShowMinimizedDefault(void* ptr);
void QTableView_ShowNormal(void* ptr);
void QTableView_ShowNormalDefault(void* ptr);
void QTableView_TabletEvent(void* ptr, void* event);
void QTableView_TabletEventDefault(void* ptr, void* event);
void QTableView_UpdateMicroFocus(void* ptr);
void QTableView_UpdateMicroFocusDefault(void* ptr);
void QTableView_ChildEvent(void* ptr, void* event);
void QTableView_ChildEventDefault(void* ptr, void* event);
void QTableView_ConnectNotify(void* ptr, void* sign);
void QTableView_ConnectNotifyDefault(void* ptr, void* sign);
void QTableView_CustomEvent(void* ptr, void* event);
void QTableView_CustomEventDefault(void* ptr, void* event);
void QTableView_DeleteLater(void* ptr);
void QTableView_DeleteLaterDefault(void* ptr);
void QTableView_DisconnectNotify(void* ptr, void* sign);
void QTableView_DisconnectNotifyDefault(void* ptr, void* sign);
char QTableView_EventFilter(void* ptr, void* watched, void* event);
char QTableView_EventFilterDefault(void* ptr, void* watched, void* event);
void* QTableView_MetaObject(void* ptr);
void* QTableView_MetaObjectDefault(void* ptr);
void* QTableWidget_ItemAt(void* ptr, void* point);
void* QTableWidget_NewQTableWidget(void* parent);
void* QTableWidget_NewQTableWidget2(int rows, int columns, void* parent);
void QTableWidget_ConnectCellActivated(void* ptr);
void QTableWidget_DisconnectCellActivated(void* ptr);
void QTableWidget_CellActivated(void* ptr, int row, int column);
void QTableWidget_ConnectCellChanged(void* ptr);
void QTableWidget_DisconnectCellChanged(void* ptr);
void QTableWidget_CellChanged(void* ptr, int row, int column);
void QTableWidget_ConnectCellClicked(void* ptr);
void QTableWidget_DisconnectCellClicked(void* ptr);
void QTableWidget_CellClicked(void* ptr, int row, int column);
void QTableWidget_ConnectCellDoubleClicked(void* ptr);
void QTableWidget_DisconnectCellDoubleClicked(void* ptr);
void QTableWidget_CellDoubleClicked(void* ptr, int row, int column);
void QTableWidget_ConnectCellEntered(void* ptr);
void QTableWidget_DisconnectCellEntered(void* ptr);
void QTableWidget_CellEntered(void* ptr, int row, int column);
void QTableWidget_ConnectCellPressed(void* ptr);
void QTableWidget_DisconnectCellPressed(void* ptr);
void QTableWidget_CellPressed(void* ptr, int row, int column);
void* QTableWidget_CellWidget(void* ptr, int row, int column);
void QTableWidget_Clear(void* ptr);
void QTableWidget_ClearContents(void* ptr);
void QTableWidget_ClosePersistentEditor(void* ptr, void* item);
int QTableWidget_Column(void* ptr, void* item);
int QTableWidget_ColumnCount(void* ptr);
void QTableWidget_ConnectCurrentCellChanged(void* ptr);
void QTableWidget_DisconnectCurrentCellChanged(void* ptr);
void QTableWidget_CurrentCellChanged(void* ptr, int currentRow, int currentColumn, int previousRow, int previousColumn);
int QTableWidget_CurrentColumn(void* ptr);
void* QTableWidget_CurrentItem(void* ptr);
void QTableWidget_ConnectCurrentItemChanged(void* ptr);
void QTableWidget_DisconnectCurrentItemChanged(void* ptr);
void QTableWidget_CurrentItemChanged(void* ptr, void* current, void* previous);
int QTableWidget_CurrentRow(void* ptr);
void QTableWidget_DropEvent(void* ptr, void* event);
void QTableWidget_DropEventDefault(void* ptr, void* event);
char QTableWidget_DropMimeData(void* ptr, int row, int column, void* data, long long action);
char QTableWidget_DropMimeDataDefault(void* ptr, int row, int column, void* data, long long action);
void QTableWidget_EditItem(void* ptr, void* item);
char QTableWidget_Event(void* ptr, void* e);
struct QtWidgets_PackedList QTableWidget_FindItems(void* ptr, char* text, long long flags);
void* QTableWidget_HorizontalHeaderItem(void* ptr, int column);
void* QTableWidget_IndexFromItem(void* ptr, void* item);
void QTableWidget_InsertColumn(void* ptr, int column);
void QTableWidget_InsertRow(void* ptr, int row);
void* QTableWidget_Item(void* ptr, int row, int column);
void QTableWidget_ConnectItemActivated(void* ptr);
void QTableWidget_DisconnectItemActivated(void* ptr);
void QTableWidget_ItemActivated(void* ptr, void* item);
void* QTableWidget_ItemAt2(void* ptr, int ax, int ay);
void QTableWidget_ConnectItemChanged(void* ptr);
void QTableWidget_DisconnectItemChanged(void* ptr);
void QTableWidget_ItemChanged(void* ptr, void* item);
void QTableWidget_ConnectItemClicked(void* ptr);
void QTableWidget_DisconnectItemClicked(void* ptr);
void QTableWidget_ItemClicked(void* ptr, void* item);
void QTableWidget_ConnectItemDoubleClicked(void* ptr);
void QTableWidget_DisconnectItemDoubleClicked(void* ptr);
void QTableWidget_ItemDoubleClicked(void* ptr, void* item);
void QTableWidget_ConnectItemEntered(void* ptr);
void QTableWidget_DisconnectItemEntered(void* ptr);
void QTableWidget_ItemEntered(void* ptr, void* item);
void* QTableWidget_ItemFromIndex(void* ptr, void* index);
void QTableWidget_ConnectItemPressed(void* ptr);
void QTableWidget_DisconnectItemPressed(void* ptr);
void QTableWidget_ItemPressed(void* ptr, void* item);
void* QTableWidget_ItemPrototype(void* ptr);
void QTableWidget_ConnectItemSelectionChanged(void* ptr);
void QTableWidget_DisconnectItemSelectionChanged(void* ptr);
void QTableWidget_ItemSelectionChanged(void* ptr);
struct QtWidgets_PackedList QTableWidget_Items(void* ptr, void* data);
struct QtWidgets_PackedString QTableWidget_MimeTypes(void* ptr);
struct QtWidgets_PackedString QTableWidget_MimeTypesDefault(void* ptr);
void QTableWidget_OpenPersistentEditor(void* ptr, void* item);
void QTableWidget_RemoveCellWidget(void* ptr, int row, int column);
void QTableWidget_RemoveColumn(void* ptr, int column);
void QTableWidget_RemoveRow(void* ptr, int row);
int QTableWidget_Row(void* ptr, void* item);
int QTableWidget_RowCount(void* ptr);
void QTableWidget_ScrollToItem(void* ptr, void* item, long long hint);
struct QtWidgets_PackedList QTableWidget_SelectedItems(void* ptr);
struct QtWidgets_PackedList QTableWidget_SelectedRanges(void* ptr);
void QTableWidget_SetCellWidget(void* ptr, int row, int column, void* widget);
void QTableWidget_SetColumnCount(void* ptr, int columns);
void QTableWidget_SetCurrentCell(void* ptr, int row, int column);
void QTableWidget_SetCurrentCell2(void* ptr, int row, int column, long long command);
void QTableWidget_SetCurrentItem(void* ptr, void* item);
void QTableWidget_SetCurrentItem2(void* ptr, void* item, long long command);
void QTableWidget_SetHorizontalHeaderItem(void* ptr, int column, void* item);
void QTableWidget_SetHorizontalHeaderLabels(void* ptr, char* labels);
void QTableWidget_SetItem(void* ptr, int row, int column, void* item);
void QTableWidget_SetItemPrototype(void* ptr, void* item);
void QTableWidget_SetRangeSelected(void* ptr, void* ran, char sele);
void QTableWidget_SetRowCount(void* ptr, int rows);
void QTableWidget_SetVerticalHeaderItem(void* ptr, int row, void* item);
void QTableWidget_SetVerticalHeaderLabels(void* ptr, char* labels);
void QTableWidget_SortItems(void* ptr, int column, long long order);
long long QTableWidget_SupportedDropActions(void* ptr);
long long QTableWidget_SupportedDropActionsDefault(void* ptr);
void* QTableWidget_TakeHorizontalHeaderItem(void* ptr, int column);
void* QTableWidget_TakeItem(void* ptr, int row, int column);
void* QTableWidget_TakeVerticalHeaderItem(void* ptr, int row);
void* QTableWidget_VerticalHeaderItem(void* ptr, int row);
int QTableWidget_VisualColumn(void* ptr, int logicalColumn);
void* QTableWidget_VisualItemRect(void* ptr, void* item);
int QTableWidget_VisualRow(void* ptr, int logicalRow);
void QTableWidget_DestroyQTableWidget(void* ptr);
void* QTableWidget_findItems_atList(void* ptr, int i);
void* QTableWidget_items_atList(void* ptr, int i);
void* QTableWidget_selectedItems_atList(void* ptr, int i);
void* QTableWidget_selectedRanges_atList(void* ptr, int i);
void* QTableWidget_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QTableWidget_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
void QTableWidget_SetSelection(void* ptr, void* rect, long long flags);
void QTableWidget_SetSelectionDefault(void* ptr, void* rect, long long flags);
void QTableWidget_SetShowGrid(void* ptr, char show);
void QTableWidget_SetShowGridDefault(void* ptr, char show);
void QTableWidget_ColumnCountChanged(void* ptr, int oldCount, int newCount);
void QTableWidget_ColumnCountChangedDefault(void* ptr, int oldCount, int newCount);
void QTableWidget_ColumnMoved(void* ptr, int column, int oldIndex, int newIndex);
void QTableWidget_ColumnMovedDefault(void* ptr, int column, int oldIndex, int newIndex);
void QTableWidget_ColumnResized(void* ptr, int column, int oldWidth, int newWidth);
void QTableWidget_ColumnResizedDefault(void* ptr, int column, int oldWidth, int newWidth);
void QTableWidget_CurrentChanged(void* ptr, void* current, void* previous);
void QTableWidget_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QTableWidget_HideColumn(void* ptr, int column);
void QTableWidget_HideColumnDefault(void* ptr, int column);
void QTableWidget_HideRow(void* ptr, int row);
void QTableWidget_HideRowDefault(void* ptr, int row);
int QTableWidget_HorizontalOffset(void* ptr);
int QTableWidget_HorizontalOffsetDefault(void* ptr);
void* QTableWidget_IndexAt(void* ptr, void* pos);
void* QTableWidget_IndexAtDefault(void* ptr, void* pos);
char QTableWidget_IsIndexHidden(void* ptr, void* index);
char QTableWidget_IsIndexHiddenDefault(void* ptr, void* index);
void QTableWidget_PaintEvent(void* ptr, void* event);
void QTableWidget_PaintEventDefault(void* ptr, void* event);
void QTableWidget_ResizeColumnToContents(void* ptr, int column);
void QTableWidget_ResizeColumnToContentsDefault(void* ptr, int column);
void QTableWidget_ResizeColumnsToContents(void* ptr);
void QTableWidget_ResizeColumnsToContentsDefault(void* ptr);
void QTableWidget_ResizeRowToContents(void* ptr, int row);
void QTableWidget_ResizeRowToContentsDefault(void* ptr, int row);
void QTableWidget_ResizeRowsToContents(void* ptr);
void QTableWidget_ResizeRowsToContentsDefault(void* ptr);
void QTableWidget_RowCountChanged(void* ptr, int oldCount, int newCount);
void QTableWidget_RowCountChangedDefault(void* ptr, int oldCount, int newCount);
void QTableWidget_RowMoved(void* ptr, int row, int oldIndex, int newIndex);
void QTableWidget_RowMovedDefault(void* ptr, int row, int oldIndex, int newIndex);
void QTableWidget_RowResized(void* ptr, int row, int oldHeight, int newHeight);
void QTableWidget_RowResizedDefault(void* ptr, int row, int oldHeight, int newHeight);
void QTableWidget_SelectColumn(void* ptr, int column);
void QTableWidget_SelectColumnDefault(void* ptr, int column);
void QTableWidget_SelectRow(void* ptr, int row);
void QTableWidget_SelectRowDefault(void* ptr, int row);
void QTableWidget_SelectionChanged(void* ptr, void* selected, void* deselected);
void QTableWidget_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
void QTableWidget_SetModel(void* ptr, void* model);
void QTableWidget_SetModelDefault(void* ptr, void* model);
void QTableWidget_SetRootIndex(void* ptr, void* index);
void QTableWidget_SetRootIndexDefault(void* ptr, void* index);
void QTableWidget_SetSelectionModel(void* ptr, void* selectionModel);
void QTableWidget_SetSelectionModelDefault(void* ptr, void* selectionModel);
void QTableWidget_ShowColumn(void* ptr, int column);
void QTableWidget_ShowColumnDefault(void* ptr, int column);
void QTableWidget_ShowRow(void* ptr, int row);
void QTableWidget_ShowRowDefault(void* ptr, int row);
int QTableWidget_SizeHintForColumn(void* ptr, int column);
int QTableWidget_SizeHintForColumnDefault(void* ptr, int column);
int QTableWidget_SizeHintForRow(void* ptr, int row);
int QTableWidget_SizeHintForRowDefault(void* ptr, int row);
void QTableWidget_UpdateGeometries(void* ptr);
void QTableWidget_UpdateGeometriesDefault(void* ptr);
int QTableWidget_VerticalOffset(void* ptr);
int QTableWidget_VerticalOffsetDefault(void* ptr);
void* QTableWidget_ViewOptions(void* ptr);
void* QTableWidget_ViewOptionsDefault(void* ptr);
void* QTableWidget_ViewportSizeHint(void* ptr);
void* QTableWidget_ViewportSizeHintDefault(void* ptr);
void QTableWidget_DragLeaveEvent(void* ptr, void* event);
void QTableWidget_DragLeaveEventDefault(void* ptr, void* event);
char QTableWidget_ViewportEvent(void* ptr, void* event);
char QTableWidget_ViewportEventDefault(void* ptr, void* event);
void QTableWidget_ClearSelection(void* ptr);
void QTableWidget_ClearSelectionDefault(void* ptr);
void QTableWidget_CloseEditor(void* ptr, void* editor, long long hint);
void QTableWidget_CloseEditorDefault(void* ptr, void* editor, long long hint);
void QTableWidget_CommitData(void* ptr, void* editor);
void QTableWidget_CommitDataDefault(void* ptr, void* editor);
void QTableWidget_DragEnterEvent(void* ptr, void* event);
void QTableWidget_DragEnterEventDefault(void* ptr, void* event);
void QTableWidget_DragMoveEvent(void* ptr, void* event);
void QTableWidget_DragMoveEventDefault(void* ptr, void* event);
void QTableWidget_Edit(void* ptr, void* index);
void QTableWidget_EditDefault(void* ptr, void* index);
char QTableWidget_Edit2(void* ptr, void* index, long long trigger, void* event);
char QTableWidget_Edit2Default(void* ptr, void* index, long long trigger, void* event);
void QTableWidget_EditorDestroyed(void* ptr, void* editor);
void QTableWidget_EditorDestroyedDefault(void* ptr, void* editor);
void QTableWidget_FocusInEvent(void* ptr, void* event);
void QTableWidget_FocusInEventDefault(void* ptr, void* event);
char QTableWidget_FocusNextPrevChild(void* ptr, char next);
char QTableWidget_FocusNextPrevChildDefault(void* ptr, char next);
void QTableWidget_FocusOutEvent(void* ptr, void* event);
void QTableWidget_FocusOutEventDefault(void* ptr, void* event);
void QTableWidget_InputMethodEvent(void* ptr, void* event);
void QTableWidget_InputMethodEventDefault(void* ptr, void* event);
void* QTableWidget_InputMethodQuery(void* ptr, long long query);
void* QTableWidget_InputMethodQueryDefault(void* ptr, long long query);
void QTableWidget_KeyPressEvent(void* ptr, void* event);
void QTableWidget_KeyPressEventDefault(void* ptr, void* event);
void QTableWidget_KeyboardSearch(void* ptr, char* search);
void QTableWidget_KeyboardSearchDefault(void* ptr, char* search);
void QTableWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QTableWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QTableWidget_MouseMoveEvent(void* ptr, void* event);
void QTableWidget_MouseMoveEventDefault(void* ptr, void* event);
void QTableWidget_MousePressEvent(void* ptr, void* event);
void QTableWidget_MousePressEventDefault(void* ptr, void* event);
void QTableWidget_MouseReleaseEvent(void* ptr, void* event);
void QTableWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QTableWidget_Reset(void* ptr);
void QTableWidget_ResetDefault(void* ptr);
void QTableWidget_ResizeEvent(void* ptr, void* event);
void QTableWidget_ResizeEventDefault(void* ptr, void* event);
void QTableWidget_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QTableWidget_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QTableWidget_RowsInserted(void* ptr, void* parent, int start, int end);
void QTableWidget_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QTableWidget_ScrollTo(void* ptr, void* index, long long hint);
void QTableWidget_ScrollToDefault(void* ptr, void* index, long long hint);
void QTableWidget_ScrollToBottom(void* ptr);
void QTableWidget_ScrollToBottomDefault(void* ptr);
void QTableWidget_ScrollToTop(void* ptr);
void QTableWidget_ScrollToTopDefault(void* ptr);
void QTableWidget_SelectAll(void* ptr);
void QTableWidget_SelectAllDefault(void* ptr);
long long QTableWidget_SelectionCommand(void* ptr, void* index, void* event);
long long QTableWidget_SelectionCommandDefault(void* ptr, void* index, void* event);
void QTableWidget_SetCurrentIndex(void* ptr, void* index);
void QTableWidget_SetCurrentIndexDefault(void* ptr, void* index);
void QTableWidget_StartDrag(void* ptr, long long supportedActions);
void QTableWidget_StartDragDefault(void* ptr, long long supportedActions);
void QTableWidget_Update(void* ptr, void* index);
void QTableWidget_UpdateDefault(void* ptr, void* index);
void* QTableWidget_VisualRect(void* ptr, void* index);
void* QTableWidget_VisualRectDefault(void* ptr, void* index);
void* QTableWidget_VisualRegionForSelection(void* ptr, void* selection);
void* QTableWidget_VisualRegionForSelectionDefault(void* ptr, void* selection);
void QTableWidget_ContextMenuEvent(void* ptr, void* e);
void QTableWidget_ContextMenuEventDefault(void* ptr, void* e);
void* QTableWidget_MinimumSizeHint(void* ptr);
void* QTableWidget_MinimumSizeHintDefault(void* ptr);
void QTableWidget_ScrollContentsBy(void* ptr, int dx, int dy);
void QTableWidget_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QTableWidget_SetupViewport(void* ptr, void* viewport);
void QTableWidget_SetupViewportDefault(void* ptr, void* viewport);
void* QTableWidget_SizeHint(void* ptr);
void* QTableWidget_SizeHintDefault(void* ptr);
void QTableWidget_WheelEvent(void* ptr, void* e);
void QTableWidget_WheelEventDefault(void* ptr, void* e);
void QTableWidget_ChangeEvent(void* ptr, void* ev);
void QTableWidget_ChangeEventDefault(void* ptr, void* ev);
void QTableWidget_ActionEvent(void* ptr, void* event);
void QTableWidget_ActionEventDefault(void* ptr, void* event);
void QTableWidget_EnterEvent(void* ptr, void* event);
void QTableWidget_EnterEventDefault(void* ptr, void* event);
void QTableWidget_HideEvent(void* ptr, void* event);
void QTableWidget_HideEventDefault(void* ptr, void* event);
void QTableWidget_LeaveEvent(void* ptr, void* event);
void QTableWidget_LeaveEventDefault(void* ptr, void* event);
void QTableWidget_MoveEvent(void* ptr, void* event);
void QTableWidget_MoveEventDefault(void* ptr, void* event);
void QTableWidget_SetEnabled(void* ptr, char vbo);
void QTableWidget_SetEnabledDefault(void* ptr, char vbo);
void QTableWidget_SetStyleSheet(void* ptr, char* styleSheet);
void QTableWidget_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QTableWidget_SetVisible(void* ptr, char visible);
void QTableWidget_SetVisibleDefault(void* ptr, char visible);
void QTableWidget_SetWindowModified(void* ptr, char vbo);
void QTableWidget_SetWindowModifiedDefault(void* ptr, char vbo);
void QTableWidget_SetWindowTitle(void* ptr, char* vqs);
void QTableWidget_SetWindowTitleDefault(void* ptr, char* vqs);
void QTableWidget_ShowEvent(void* ptr, void* event);
void QTableWidget_ShowEventDefault(void* ptr, void* event);
char QTableWidget_Close(void* ptr);
char QTableWidget_CloseDefault(void* ptr);
void QTableWidget_CloseEvent(void* ptr, void* event);
void QTableWidget_CloseEventDefault(void* ptr, void* event);
char QTableWidget_HasHeightForWidth(void* ptr);
char QTableWidget_HasHeightForWidthDefault(void* ptr);
int QTableWidget_HeightForWidth(void* ptr, int w);
int QTableWidget_HeightForWidthDefault(void* ptr, int w);
void QTableWidget_Hide(void* ptr);
void QTableWidget_HideDefault(void* ptr);
void QTableWidget_KeyReleaseEvent(void* ptr, void* event);
void QTableWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QTableWidget_Lower(void* ptr);
void QTableWidget_LowerDefault(void* ptr);
char QTableWidget_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QTableWidget_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QTableWidget_Raise(void* ptr);
void QTableWidget_RaiseDefault(void* ptr);
void QTableWidget_Repaint(void* ptr);
void QTableWidget_RepaintDefault(void* ptr);
void QTableWidget_SetDisabled(void* ptr, char disable);
void QTableWidget_SetDisabledDefault(void* ptr, char disable);
void QTableWidget_SetFocus2(void* ptr);
void QTableWidget_SetFocus2Default(void* ptr);
void QTableWidget_SetHidden(void* ptr, char hidden);
void QTableWidget_SetHiddenDefault(void* ptr, char hidden);
void QTableWidget_Show(void* ptr);
void QTableWidget_ShowDefault(void* ptr);
void QTableWidget_ShowFullScreen(void* ptr);
void QTableWidget_ShowFullScreenDefault(void* ptr);
void QTableWidget_ShowMaximized(void* ptr);
void QTableWidget_ShowMaximizedDefault(void* ptr);
void QTableWidget_ShowMinimized(void* ptr);
void QTableWidget_ShowMinimizedDefault(void* ptr);
void QTableWidget_ShowNormal(void* ptr);
void QTableWidget_ShowNormalDefault(void* ptr);
void QTableWidget_TabletEvent(void* ptr, void* event);
void QTableWidget_TabletEventDefault(void* ptr, void* event);
void QTableWidget_UpdateMicroFocus(void* ptr);
void QTableWidget_UpdateMicroFocusDefault(void* ptr);
void QTableWidget_ChildEvent(void* ptr, void* event);
void QTableWidget_ChildEventDefault(void* ptr, void* event);
void QTableWidget_ConnectNotify(void* ptr, void* sign);
void QTableWidget_ConnectNotifyDefault(void* ptr, void* sign);
void QTableWidget_CustomEvent(void* ptr, void* event);
void QTableWidget_CustomEventDefault(void* ptr, void* event);
void QTableWidget_DeleteLater(void* ptr);
void QTableWidget_DeleteLaterDefault(void* ptr);
void QTableWidget_DisconnectNotify(void* ptr, void* sign);
void QTableWidget_DisconnectNotifyDefault(void* ptr, void* sign);
char QTableWidget_EventFilter(void* ptr, void* watched, void* event);
char QTableWidget_EventFilterDefault(void* ptr, void* watched, void* event);
void* QTableWidget_MetaObject(void* ptr);
void* QTableWidget_MetaObjectDefault(void* ptr);
void QTableWidgetItem_SetFlags(void* ptr, long long flags);
void* QTableWidgetItem_NewQTableWidgetItem3(void* icon, char* text, int ty);
void* QTableWidgetItem_NewQTableWidgetItem2(char* text, int ty);
void* QTableWidgetItem_NewQTableWidgetItem4(void* other);
void* QTableWidgetItem_NewQTableWidgetItem(int ty);
void* QTableWidgetItem_Background(void* ptr);
long long QTableWidgetItem_CheckState(void* ptr);
void* QTableWidgetItem_Clone(void* ptr);
void* QTableWidgetItem_CloneDefault(void* ptr);
int QTableWidgetItem_Column(void* ptr);
void* QTableWidgetItem_Data(void* ptr, int role);
void* QTableWidgetItem_DataDefault(void* ptr, int role);
long long QTableWidgetItem_Flags(void* ptr);
void* QTableWidgetItem_Font(void* ptr);
void* QTableWidgetItem_Foreground(void* ptr);
void* QTableWidgetItem_Icon(void* ptr);
char QTableWidgetItem_IsSelected(void* ptr);
int QTableWidgetItem_Row(void* ptr);
void QTableWidgetItem_SetBackground(void* ptr, void* brush);
void QTableWidgetItem_SetCheckState(void* ptr, long long state);
void QTableWidgetItem_SetData(void* ptr, int role, void* value);
void QTableWidgetItem_SetDataDefault(void* ptr, int role, void* value);
void QTableWidgetItem_SetFont(void* ptr, void* font);
void QTableWidgetItem_SetForeground(void* ptr, void* brush);
void QTableWidgetItem_SetIcon(void* ptr, void* icon);
void QTableWidgetItem_SetSelected(void* ptr, char sele);
void QTableWidgetItem_SetSizeHint(void* ptr, void* size);
void QTableWidgetItem_SetStatusTip(void* ptr, char* statusTip);
void QTableWidgetItem_SetText(void* ptr, char* text);
void QTableWidgetItem_SetTextAlignment(void* ptr, int alignment);
void QTableWidgetItem_SetToolTip(void* ptr, char* toolTip);
void QTableWidgetItem_SetWhatsThis(void* ptr, char* whatsThis);
void* QTableWidgetItem_SizeHint(void* ptr);
struct QtWidgets_PackedString QTableWidgetItem_StatusTip(void* ptr);
void* QTableWidgetItem_TableWidget(void* ptr);
struct QtWidgets_PackedString QTableWidgetItem_Text(void* ptr);
int QTableWidgetItem_TextAlignment(void* ptr);
struct QtWidgets_PackedString QTableWidgetItem_ToolTip(void* ptr);
int QTableWidgetItem_Type(void* ptr);
struct QtWidgets_PackedString QTableWidgetItem_WhatsThis(void* ptr);
void QTableWidgetItem_DestroyQTableWidgetItem(void* ptr);
void QTableWidgetItem_DestroyQTableWidgetItemDefault(void* ptr);
void* QTableWidgetSelectionRange_NewQTableWidgetSelectionRange();
void* QTableWidgetSelectionRange_NewQTableWidgetSelectionRange3(void* other);
void* QTableWidgetSelectionRange_NewQTableWidgetSelectionRange2(int top, int left, int bottom, int right);
int QTableWidgetSelectionRange_BottomRow(void* ptr);
int QTableWidgetSelectionRange_ColumnCount(void* ptr);
int QTableWidgetSelectionRange_LeftColumn(void* ptr);
int QTableWidgetSelectionRange_RightColumn(void* ptr);
int QTableWidgetSelectionRange_RowCount(void* ptr);
int QTableWidgetSelectionRange_TopRow(void* ptr);
void QTableWidgetSelectionRange_DestroyQTableWidgetSelectionRange(void* ptr);
void* QTapAndHoldGesture_Position(void* ptr);
void QTapAndHoldGesture_SetPosition(void* ptr, void* pos);
void QTapAndHoldGesture_QTapAndHoldGesture_SetTimeout(int msecs);
int QTapAndHoldGesture_QTapAndHoldGesture_Timeout();
void QTapAndHoldGesture_DestroyQTapAndHoldGesture(void* ptr);
void QTapAndHoldGesture_TimerEvent(void* ptr, void* event);
void QTapAndHoldGesture_TimerEventDefault(void* ptr, void* event);
void QTapAndHoldGesture_ChildEvent(void* ptr, void* event);
void QTapAndHoldGesture_ChildEventDefault(void* ptr, void* event);
void QTapAndHoldGesture_ConnectNotify(void* ptr, void* sign);
void QTapAndHoldGesture_ConnectNotifyDefault(void* ptr, void* sign);
void QTapAndHoldGesture_CustomEvent(void* ptr, void* event);
void QTapAndHoldGesture_CustomEventDefault(void* ptr, void* event);
void QTapAndHoldGesture_DeleteLater(void* ptr);
void QTapAndHoldGesture_DeleteLaterDefault(void* ptr);
void QTapAndHoldGesture_DisconnectNotify(void* ptr, void* sign);
void QTapAndHoldGesture_DisconnectNotifyDefault(void* ptr, void* sign);
char QTapAndHoldGesture_Event(void* ptr, void* e);
char QTapAndHoldGesture_EventDefault(void* ptr, void* e);
char QTapAndHoldGesture_EventFilter(void* ptr, void* watched, void* event);
char QTapAndHoldGesture_EventFilterDefault(void* ptr, void* watched, void* event);
void* QTapAndHoldGesture_MetaObject(void* ptr);
void* QTapAndHoldGesture_MetaObjectDefault(void* ptr);
void* QTapGesture_Position(void* ptr);
void QTapGesture_SetPosition(void* ptr, void* pos);
void QTapGesture_DestroyQTapGesture(void* ptr);
void QTapGesture_TimerEvent(void* ptr, void* event);
void QTapGesture_TimerEventDefault(void* ptr, void* event);
void QTapGesture_ChildEvent(void* ptr, void* event);
void QTapGesture_ChildEventDefault(void* ptr, void* event);
void QTapGesture_ConnectNotify(void* ptr, void* sign);
void QTapGesture_ConnectNotifyDefault(void* ptr, void* sign);
void QTapGesture_CustomEvent(void* ptr, void* event);
void QTapGesture_CustomEventDefault(void* ptr, void* event);
void QTapGesture_DeleteLater(void* ptr);
void QTapGesture_DeleteLaterDefault(void* ptr);
void QTapGesture_DisconnectNotify(void* ptr, void* sign);
void QTapGesture_DisconnectNotifyDefault(void* ptr, void* sign);
char QTapGesture_Event(void* ptr, void* e);
char QTapGesture_EventDefault(void* ptr, void* e);
char QTapGesture_EventFilter(void* ptr, void* watched, void* event);
char QTapGesture_EventFilterDefault(void* ptr, void* watched, void* event);
void* QTapGesture_MetaObject(void* ptr);
void* QTapGesture_MetaObjectDefault(void* ptr);
char QTextBrowser_OpenExternalLinks(void* ptr);
char QTextBrowser_OpenLinks(void* ptr);
struct QtWidgets_PackedString QTextBrowser_SearchPaths(void* ptr);
void QTextBrowser_SetOpenExternalLinks(void* ptr, char open);
void QTextBrowser_SetOpenLinks(void* ptr, char open);
void QTextBrowser_SetSearchPaths(void* ptr, char* paths);
void QTextBrowser_SetSource(void* ptr, void* name);
void QTextBrowser_SetSourceDefault(void* ptr, void* name);
void* QTextBrowser_Source(void* ptr);
void* QTextBrowser_NewQTextBrowser(void* parent);
void QTextBrowser_ConnectAnchorClicked(void* ptr);
void QTextBrowser_DisconnectAnchorClicked(void* ptr);
void QTextBrowser_AnchorClicked(void* ptr, void* link);
void QTextBrowser_Backward(void* ptr);
void QTextBrowser_BackwardDefault(void* ptr);
void QTextBrowser_ConnectBackwardAvailable(void* ptr);
void QTextBrowser_DisconnectBackwardAvailable(void* ptr);
void QTextBrowser_BackwardAvailable(void* ptr, char available);
int QTextBrowser_BackwardHistoryCount(void* ptr);
void QTextBrowser_ClearHistory(void* ptr);
char QTextBrowser_Event(void* ptr, void* e);
char QTextBrowser_EventDefault(void* ptr, void* e);
char QTextBrowser_FocusNextPrevChild(void* ptr, char next);
char QTextBrowser_FocusNextPrevChildDefault(void* ptr, char next);
void QTextBrowser_FocusOutEvent(void* ptr, void* ev);
void QTextBrowser_FocusOutEventDefault(void* ptr, void* ev);
void QTextBrowser_Forward(void* ptr);
void QTextBrowser_ForwardDefault(void* ptr);
void QTextBrowser_ConnectForwardAvailable(void* ptr);
void QTextBrowser_DisconnectForwardAvailable(void* ptr);
void QTextBrowser_ForwardAvailable(void* ptr, char available);
int QTextBrowser_ForwardHistoryCount(void* ptr);
void QTextBrowser_ConnectHighlighted2(void* ptr);
void QTextBrowser_DisconnectHighlighted2(void* ptr);
void QTextBrowser_Highlighted2(void* ptr, char* link);
void QTextBrowser_ConnectHighlighted(void* ptr);
void QTextBrowser_DisconnectHighlighted(void* ptr);
void QTextBrowser_Highlighted(void* ptr, void* link);
void QTextBrowser_ConnectHistoryChanged(void* ptr);
void QTextBrowser_DisconnectHistoryChanged(void* ptr);
void QTextBrowser_HistoryChanged(void* ptr);
struct QtWidgets_PackedString QTextBrowser_HistoryTitle(void* ptr, int i);
void* QTextBrowser_HistoryUrl(void* ptr, int i);
void QTextBrowser_Home(void* ptr);
void QTextBrowser_HomeDefault(void* ptr);
char QTextBrowser_IsBackwardAvailable(void* ptr);
char QTextBrowser_IsForwardAvailable(void* ptr);
void QTextBrowser_KeyPressEvent(void* ptr, void* ev);
void QTextBrowser_KeyPressEventDefault(void* ptr, void* ev);
void* QTextBrowser_LoadResource(void* ptr, int ty, void* name);
void* QTextBrowser_LoadResourceDefault(void* ptr, int ty, void* name);
void QTextBrowser_MouseMoveEvent(void* ptr, void* e);
void QTextBrowser_MouseMoveEventDefault(void* ptr, void* e);
void QTextBrowser_MousePressEvent(void* ptr, void* e);
void QTextBrowser_MousePressEventDefault(void* ptr, void* e);
void QTextBrowser_MouseReleaseEvent(void* ptr, void* e);
void QTextBrowser_MouseReleaseEventDefault(void* ptr, void* e);
void QTextBrowser_PaintEvent(void* ptr, void* e);
void QTextBrowser_PaintEventDefault(void* ptr, void* e);
void QTextBrowser_Reload(void* ptr);
void QTextBrowser_ReloadDefault(void* ptr);
void QTextBrowser_ConnectSourceChanged(void* ptr);
void QTextBrowser_DisconnectSourceChanged(void* ptr);
void QTextBrowser_SourceChanged(void* ptr, void* src);
char QTextBrowser_IsReadOnly(void* ptr);
void QTextBrowser_SetReadOnly(void* ptr, char vbo);
char QTextBrowser_IsUndoRedoEnabled(void* ptr);
void QTextBrowser_SetUndoRedoEnabled(void* ptr, char vbo);
void QTextBrowser_ContextMenuEvent(void* ptr, void* event);
void QTextBrowser_ContextMenuEventDefault(void* ptr, void* event);
void QTextBrowser_Redo(void* ptr);
void QTextBrowser_RedoDefault(void* ptr);
void QTextBrowser_SetFontWeight(void* ptr, int weight);
void QTextBrowser_SetFontWeightDefault(void* ptr, int weight);
void QTextBrowser_SetHtml(void* ptr, char* text);
void QTextBrowser_SetHtmlDefault(void* ptr, char* text);
void QTextBrowser_ZoomIn(void* ptr, int ran);
void QTextBrowser_ZoomInDefault(void* ptr, int ran);
void QTextBrowser_ZoomOut(void* ptr, int ran);
void QTextBrowser_ZoomOutDefault(void* ptr, int ran);
void QTextBrowser_Append(void* ptr, char* text);
void QTextBrowser_AppendDefault(void* ptr, char* text);
char QTextBrowser_CanInsertFromMimeData(void* ptr, void* source);
char QTextBrowser_CanInsertFromMimeDataDefault(void* ptr, void* source);
void QTextBrowser_ChangeEvent(void* ptr, void* e);
void QTextBrowser_ChangeEventDefault(void* ptr, void* e);
void QTextBrowser_Clear(void* ptr);
void QTextBrowser_ClearDefault(void* ptr);
void QTextBrowser_Copy(void* ptr);
void QTextBrowser_CopyDefault(void* ptr);
void* QTextBrowser_CreateMimeDataFromSelection(void* ptr);
void* QTextBrowser_CreateMimeDataFromSelectionDefault(void* ptr);
void QTextBrowser_Cut(void* ptr);
void QTextBrowser_CutDefault(void* ptr);
void QTextBrowser_DragEnterEvent(void* ptr, void* e);
void QTextBrowser_DragEnterEventDefault(void* ptr, void* e);
void QTextBrowser_DragLeaveEvent(void* ptr, void* e);
void QTextBrowser_DragLeaveEventDefault(void* ptr, void* e);
void QTextBrowser_DragMoveEvent(void* ptr, void* e);
void QTextBrowser_DragMoveEventDefault(void* ptr, void* e);
void QTextBrowser_DropEvent(void* ptr, void* e);
void QTextBrowser_DropEventDefault(void* ptr, void* e);
void QTextBrowser_FocusInEvent(void* ptr, void* e);
void QTextBrowser_FocusInEventDefault(void* ptr, void* e);
void QTextBrowser_InputMethodEvent(void* ptr, void* e);
void QTextBrowser_InputMethodEventDefault(void* ptr, void* e);
void* QTextBrowser_InputMethodQuery(void* ptr, long long property);
void* QTextBrowser_InputMethodQueryDefault(void* ptr, long long property);
void QTextBrowser_InsertFromMimeData(void* ptr, void* source);
void QTextBrowser_InsertFromMimeDataDefault(void* ptr, void* source);
void QTextBrowser_InsertHtml(void* ptr, char* text);
void QTextBrowser_InsertHtmlDefault(void* ptr, char* text);
void QTextBrowser_InsertPlainText(void* ptr, char* text);
void QTextBrowser_InsertPlainTextDefault(void* ptr, char* text);
void QTextBrowser_KeyReleaseEvent(void* ptr, void* e);
void QTextBrowser_KeyReleaseEventDefault(void* ptr, void* e);
void QTextBrowser_MouseDoubleClickEvent(void* ptr, void* e);
void QTextBrowser_MouseDoubleClickEventDefault(void* ptr, void* e);
void QTextBrowser_Paste(void* ptr);
void QTextBrowser_PasteDefault(void* ptr);
void QTextBrowser_ResizeEvent(void* ptr, void* e);
void QTextBrowser_ResizeEventDefault(void* ptr, void* e);
void QTextBrowser_ScrollContentsBy(void* ptr, int dx, int dy);
void QTextBrowser_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QTextBrowser_ScrollToAnchor(void* ptr, char* name);
void QTextBrowser_ScrollToAnchorDefault(void* ptr, char* name);
void QTextBrowser_SelectAll(void* ptr);
void QTextBrowser_SelectAllDefault(void* ptr);
void QTextBrowser_SetAlignment(void* ptr, long long a);
void QTextBrowser_SetAlignmentDefault(void* ptr, long long a);
void QTextBrowser_SetCurrentFont(void* ptr, void* f);
void QTextBrowser_SetCurrentFontDefault(void* ptr, void* f);
void QTextBrowser_SetFontFamily(void* ptr, char* fontFamily);
void QTextBrowser_SetFontFamilyDefault(void* ptr, char* fontFamily);
void QTextBrowser_SetFontItalic(void* ptr, char italic);
void QTextBrowser_SetFontItalicDefault(void* ptr, char italic);
void QTextBrowser_SetFontPointSize(void* ptr, double s);
void QTextBrowser_SetFontPointSizeDefault(void* ptr, double s);
void QTextBrowser_SetFontUnderline(void* ptr, char underline);
void QTextBrowser_SetFontUnderlineDefault(void* ptr, char underline);
void QTextBrowser_SetPlainText(void* ptr, char* text);
void QTextBrowser_SetPlainTextDefault(void* ptr, char* text);
void QTextBrowser_SetText(void* ptr, char* text);
void QTextBrowser_SetTextDefault(void* ptr, char* text);
void QTextBrowser_SetTextBackgroundColor(void* ptr, void* c);
void QTextBrowser_SetTextBackgroundColorDefault(void* ptr, void* c);
void QTextBrowser_SetTextColor(void* ptr, void* c);
void QTextBrowser_SetTextColorDefault(void* ptr, void* c);
void QTextBrowser_ShowEvent(void* ptr, void* vqs);
void QTextBrowser_ShowEventDefault(void* ptr, void* vqs);
void QTextBrowser_Undo(void* ptr);
void QTextBrowser_UndoDefault(void* ptr);
void QTextBrowser_WheelEvent(void* ptr, void* e);
void QTextBrowser_WheelEventDefault(void* ptr, void* e);
char QTextBrowser_ViewportEvent(void* ptr, void* event);
char QTextBrowser_ViewportEventDefault(void* ptr, void* event);
void* QTextBrowser_MinimumSizeHint(void* ptr);
void* QTextBrowser_MinimumSizeHintDefault(void* ptr);
void QTextBrowser_SetupViewport(void* ptr, void* viewport);
void QTextBrowser_SetupViewportDefault(void* ptr, void* viewport);
void* QTextBrowser_SizeHint(void* ptr);
void* QTextBrowser_SizeHintDefault(void* ptr);
void* QTextBrowser_ViewportSizeHint(void* ptr);
void* QTextBrowser_ViewportSizeHintDefault(void* ptr);
void QTextBrowser_ActionEvent(void* ptr, void* event);
void QTextBrowser_ActionEventDefault(void* ptr, void* event);
void QTextBrowser_EnterEvent(void* ptr, void* event);
void QTextBrowser_EnterEventDefault(void* ptr, void* event);
void QTextBrowser_HideEvent(void* ptr, void* event);
void QTextBrowser_HideEventDefault(void* ptr, void* event);
void QTextBrowser_LeaveEvent(void* ptr, void* event);
void QTextBrowser_LeaveEventDefault(void* ptr, void* event);
void QTextBrowser_MoveEvent(void* ptr, void* event);
void QTextBrowser_MoveEventDefault(void* ptr, void* event);
void QTextBrowser_SetEnabled(void* ptr, char vbo);
void QTextBrowser_SetEnabledDefault(void* ptr, char vbo);
void QTextBrowser_SetStyleSheet(void* ptr, char* styleSheet);
void QTextBrowser_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QTextBrowser_SetVisible(void* ptr, char visible);
void QTextBrowser_SetVisibleDefault(void* ptr, char visible);
void QTextBrowser_SetWindowModified(void* ptr, char vbo);
void QTextBrowser_SetWindowModifiedDefault(void* ptr, char vbo);
void QTextBrowser_SetWindowTitle(void* ptr, char* vqs);
void QTextBrowser_SetWindowTitleDefault(void* ptr, char* vqs);
char QTextBrowser_Close(void* ptr);
char QTextBrowser_CloseDefault(void* ptr);
void QTextBrowser_CloseEvent(void* ptr, void* event);
void QTextBrowser_CloseEventDefault(void* ptr, void* event);
char QTextBrowser_HasHeightForWidth(void* ptr);
char QTextBrowser_HasHeightForWidthDefault(void* ptr);
int QTextBrowser_HeightForWidth(void* ptr, int w);
int QTextBrowser_HeightForWidthDefault(void* ptr, int w);
void QTextBrowser_Hide(void* ptr);
void QTextBrowser_HideDefault(void* ptr);
void QTextBrowser_Lower(void* ptr);
void QTextBrowser_LowerDefault(void* ptr);
char QTextBrowser_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QTextBrowser_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QTextBrowser_Raise(void* ptr);
void QTextBrowser_RaiseDefault(void* ptr);
void QTextBrowser_Repaint(void* ptr);
void QTextBrowser_RepaintDefault(void* ptr);
void QTextBrowser_SetDisabled(void* ptr, char disable);
void QTextBrowser_SetDisabledDefault(void* ptr, char disable);
void QTextBrowser_SetFocus2(void* ptr);
void QTextBrowser_SetFocus2Default(void* ptr);
void QTextBrowser_SetHidden(void* ptr, char hidden);
void QTextBrowser_SetHiddenDefault(void* ptr, char hidden);
void QTextBrowser_Show(void* ptr);
void QTextBrowser_ShowDefault(void* ptr);
void QTextBrowser_ShowFullScreen(void* ptr);
void QTextBrowser_ShowFullScreenDefault(void* ptr);
void QTextBrowser_ShowMaximized(void* ptr);
void QTextBrowser_ShowMaximizedDefault(void* ptr);
void QTextBrowser_ShowMinimized(void* ptr);
void QTextBrowser_ShowMinimizedDefault(void* ptr);
void QTextBrowser_ShowNormal(void* ptr);
void QTextBrowser_ShowNormalDefault(void* ptr);
void QTextBrowser_TabletEvent(void* ptr, void* event);
void QTextBrowser_TabletEventDefault(void* ptr, void* event);
void QTextBrowser_Update(void* ptr);
void QTextBrowser_UpdateDefault(void* ptr);
void QTextBrowser_UpdateMicroFocus(void* ptr);
void QTextBrowser_UpdateMicroFocusDefault(void* ptr);
void QTextBrowser_TimerEvent(void* ptr, void* event);
void QTextBrowser_TimerEventDefault(void* ptr, void* event);
void QTextBrowser_ChildEvent(void* ptr, void* event);
void QTextBrowser_ChildEventDefault(void* ptr, void* event);
void QTextBrowser_ConnectNotify(void* ptr, void* sign);
void QTextBrowser_ConnectNotifyDefault(void* ptr, void* sign);
void QTextBrowser_CustomEvent(void* ptr, void* event);
void QTextBrowser_CustomEventDefault(void* ptr, void* event);
void QTextBrowser_DeleteLater(void* ptr);
void QTextBrowser_DeleteLaterDefault(void* ptr);
void QTextBrowser_DisconnectNotify(void* ptr, void* sign);
void QTextBrowser_DisconnectNotifyDefault(void* ptr, void* sign);
char QTextBrowser_EventFilter(void* ptr, void* watched, void* event);
char QTextBrowser_EventFilterDefault(void* ptr, void* watched, void* event);
void* QTextBrowser_MetaObject(void* ptr);
void* QTextBrowser_MetaObjectDefault(void* ptr);
char QTextEdit_AcceptRichText(void* ptr);
long long QTextEdit_AutoFormatting(void* ptr);
void QTextEdit_ContextMenuEvent(void* ptr, void* event);
void QTextEdit_ContextMenuEventDefault(void* ptr, void* event);
int QTextEdit_CursorWidth(void* ptr);
void* QTextEdit_Document(void* ptr);
char QTextEdit_Find2(void* ptr, void* exp, long long options);
char QTextEdit_IsReadOnly(void* ptr);
int QTextEdit_LineWrapColumnOrWidth(void* ptr);
long long QTextEdit_LineWrapMode(void* ptr);
char QTextEdit_OverwriteMode(void* ptr);
void QTextEdit_PaintEvent(void* ptr, void* event);
void QTextEdit_PaintEventDefault(void* ptr, void* event);
struct QtWidgets_PackedString QTextEdit_PlaceholderText(void* ptr);
void QTextEdit_Redo(void* ptr);
void QTextEdit_SetAcceptRichText(void* ptr, char accept);
void QTextEdit_SetAutoFormatting(void* ptr, long long features);
void QTextEdit_SetCursorWidth(void* ptr, int width);
void QTextEdit_SetDocument(void* ptr, void* document);
void QTextEdit_SetFontWeight(void* ptr, int weight);
void QTextEdit_SetHtml(void* ptr, char* text);
void QTextEdit_SetLineWrapColumnOrWidth(void* ptr, int w);
void QTextEdit_SetLineWrapMode(void* ptr, long long mode);
void QTextEdit_SetOverwriteMode(void* ptr, char overwrite);
void QTextEdit_SetPlaceholderText(void* ptr, char* placeholderText);
void QTextEdit_SetReadOnly(void* ptr, char ro);
void QTextEdit_SetTabChangesFocus(void* ptr, char b);
void QTextEdit_SetTabStopWidth(void* ptr, int width);
void QTextEdit_SetTextInteractionFlags(void* ptr, long long flags);
void QTextEdit_SetWordWrapMode(void* ptr, long long policy);
char QTextEdit_TabChangesFocus(void* ptr);
int QTextEdit_TabStopWidth(void* ptr);
long long QTextEdit_TextInteractionFlags(void* ptr);
struct QtWidgets_PackedString QTextEdit_ToHtml(void* ptr);
long long QTextEdit_WordWrapMode(void* ptr);
void QTextEdit_ZoomIn(void* ptr, int ran);
void QTextEdit_ZoomOut(void* ptr, int ran);
void* QTextEdit_NewQTextEdit(void* parent);
void* QTextEdit_NewQTextEdit2(char* text, void* parent);
long long QTextEdit_Alignment(void* ptr);
struct QtWidgets_PackedString QTextEdit_AnchorAt(void* ptr, void* pos);
void QTextEdit_Append(void* ptr, char* text);
char QTextEdit_CanInsertFromMimeData(void* ptr, void* source);
char QTextEdit_CanInsertFromMimeDataDefault(void* ptr, void* source);
char QTextEdit_CanPaste(void* ptr);
void QTextEdit_ChangeEvent(void* ptr, void* e);
void QTextEdit_ChangeEventDefault(void* ptr, void* e);
void QTextEdit_Clear(void* ptr);
void QTextEdit_Copy(void* ptr);
void QTextEdit_ConnectCopyAvailable(void* ptr);
void QTextEdit_DisconnectCopyAvailable(void* ptr);
void QTextEdit_CopyAvailable(void* ptr, char yes);
void* QTextEdit_CreateMimeDataFromSelection(void* ptr);
void* QTextEdit_CreateMimeDataFromSelectionDefault(void* ptr);
void* QTextEdit_CreateStandardContextMenu(void* ptr);
void* QTextEdit_CreateStandardContextMenu2(void* ptr, void* position);
void* QTextEdit_CurrentCharFormat(void* ptr);
void QTextEdit_ConnectCurrentCharFormatChanged(void* ptr);
void QTextEdit_DisconnectCurrentCharFormatChanged(void* ptr);
void QTextEdit_CurrentCharFormatChanged(void* ptr, void* f);
void* QTextEdit_CurrentFont(void* ptr);
void* QTextEdit_CursorForPosition(void* ptr, void* pos);
void QTextEdit_ConnectCursorPositionChanged(void* ptr);
void QTextEdit_DisconnectCursorPositionChanged(void* ptr);
void QTextEdit_CursorPositionChanged(void* ptr);
void* QTextEdit_CursorRect2(void* ptr);
void* QTextEdit_CursorRect(void* ptr, void* cursor);
void QTextEdit_Cut(void* ptr);
struct QtWidgets_PackedString QTextEdit_DocumentTitle(void* ptr);
void QTextEdit_DragEnterEvent(void* ptr, void* e);
void QTextEdit_DragEnterEventDefault(void* ptr, void* e);
void QTextEdit_DragLeaveEvent(void* ptr, void* e);
void QTextEdit_DragLeaveEventDefault(void* ptr, void* e);
void QTextEdit_DragMoveEvent(void* ptr, void* e);
void QTextEdit_DragMoveEventDefault(void* ptr, void* e);
void QTextEdit_DropEvent(void* ptr, void* e);
void QTextEdit_DropEventDefault(void* ptr, void* e);
void QTextEdit_EnsureCursorVisible(void* ptr);
char QTextEdit_Find(void* ptr, char* exp, long long options);
void QTextEdit_FocusInEvent(void* ptr, void* e);
void QTextEdit_FocusInEventDefault(void* ptr, void* e);
char QTextEdit_FocusNextPrevChild(void* ptr, char next);
char QTextEdit_FocusNextPrevChildDefault(void* ptr, char next);
void QTextEdit_FocusOutEvent(void* ptr, void* e);
void QTextEdit_FocusOutEventDefault(void* ptr, void* e);
struct QtWidgets_PackedString QTextEdit_FontFamily(void* ptr);
char QTextEdit_FontItalic(void* ptr);
double QTextEdit_FontPointSize(void* ptr);
char QTextEdit_FontUnderline(void* ptr);
int QTextEdit_FontWeight(void* ptr);
void QTextEdit_InputMethodEvent(void* ptr, void* e);
void QTextEdit_InputMethodEventDefault(void* ptr, void* e);
void* QTextEdit_InputMethodQuery(void* ptr, long long property);
void* QTextEdit_InputMethodQueryDefault(void* ptr, long long property);
void QTextEdit_InsertFromMimeData(void* ptr, void* source);
void QTextEdit_InsertFromMimeDataDefault(void* ptr, void* source);
void QTextEdit_InsertHtml(void* ptr, char* text);
void QTextEdit_InsertPlainText(void* ptr, char* text);
char QTextEdit_IsUndoRedoEnabled(void* ptr);
void QTextEdit_KeyPressEvent(void* ptr, void* e);
void QTextEdit_KeyPressEventDefault(void* ptr, void* e);
void QTextEdit_KeyReleaseEvent(void* ptr, void* e);
void QTextEdit_KeyReleaseEventDefault(void* ptr, void* e);
void* QTextEdit_LoadResource(void* ptr, int ty, void* name);
void* QTextEdit_LoadResourceDefault(void* ptr, int ty, void* name);
void QTextEdit_MergeCurrentCharFormat(void* ptr, void* modifier);
void QTextEdit_MouseDoubleClickEvent(void* ptr, void* e);
void QTextEdit_MouseDoubleClickEventDefault(void* ptr, void* e);
void QTextEdit_MouseMoveEvent(void* ptr, void* e);
void QTextEdit_MouseMoveEventDefault(void* ptr, void* e);
void QTextEdit_MousePressEvent(void* ptr, void* e);
void QTextEdit_MousePressEventDefault(void* ptr, void* e);
void QTextEdit_MouseReleaseEvent(void* ptr, void* e);
void QTextEdit_MouseReleaseEventDefault(void* ptr, void* e);
void QTextEdit_MoveCursor(void* ptr, long long operation, long long mode);
void QTextEdit_Paste(void* ptr);
void QTextEdit_Print(void* ptr, void* printer);
void QTextEdit_ConnectRedoAvailable(void* ptr);
void QTextEdit_DisconnectRedoAvailable(void* ptr);
void QTextEdit_RedoAvailable(void* ptr, char available);
void QTextEdit_ResizeEvent(void* ptr, void* e);
void QTextEdit_ResizeEventDefault(void* ptr, void* e);
void QTextEdit_ScrollContentsBy(void* ptr, int dx, int dy);
void QTextEdit_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QTextEdit_ScrollToAnchor(void* ptr, char* name);
void QTextEdit_SelectAll(void* ptr);
void QTextEdit_ConnectSelectionChanged(void* ptr);
void QTextEdit_DisconnectSelectionChanged(void* ptr);
void QTextEdit_SelectionChanged(void* ptr);
void QTextEdit_SetAlignment(void* ptr, long long a);
void QTextEdit_SetCurrentCharFormat(void* ptr, void* format);
void QTextEdit_SetCurrentFont(void* ptr, void* f);
void QTextEdit_SetDocumentTitle(void* ptr, char* title);
void QTextEdit_SetFontFamily(void* ptr, char* fontFamily);
void QTextEdit_SetFontItalic(void* ptr, char italic);
void QTextEdit_SetFontPointSize(void* ptr, double s);
void QTextEdit_SetFontUnderline(void* ptr, char underline);
void QTextEdit_SetPlainText(void* ptr, char* text);
void QTextEdit_SetText(void* ptr, char* text);
void QTextEdit_SetTextBackgroundColor(void* ptr, void* c);
void QTextEdit_SetTextColor(void* ptr, void* c);
void QTextEdit_SetTextCursor(void* ptr, void* cursor);
void QTextEdit_SetUndoRedoEnabled(void* ptr, char enable);
void QTextEdit_ShowEvent(void* ptr, void* vqs);
void QTextEdit_ShowEventDefault(void* ptr, void* vqs);
void* QTextEdit_TextBackgroundColor(void* ptr);
void QTextEdit_ConnectTextChanged(void* ptr);
void QTextEdit_DisconnectTextChanged(void* ptr);
void QTextEdit_TextChanged(void* ptr);
void* QTextEdit_TextColor(void* ptr);
void* QTextEdit_TextCursor(void* ptr);
struct QtWidgets_PackedString QTextEdit_ToPlainText(void* ptr);
void QTextEdit_Undo(void* ptr);
void QTextEdit_ConnectUndoAvailable(void* ptr);
void QTextEdit_DisconnectUndoAvailable(void* ptr);
void QTextEdit_UndoAvailable(void* ptr, char available);
void QTextEdit_WheelEvent(void* ptr, void* e);
void QTextEdit_WheelEventDefault(void* ptr, void* e);
void QTextEdit_DestroyQTextEdit(void* ptr);
void QTextEdit_DestroyQTextEditDefault(void* ptr);
char QTextEdit_ViewportEvent(void* ptr, void* event);
char QTextEdit_ViewportEventDefault(void* ptr, void* event);
void* QTextEdit_MinimumSizeHint(void* ptr);
void* QTextEdit_MinimumSizeHintDefault(void* ptr);
void QTextEdit_SetupViewport(void* ptr, void* viewport);
void QTextEdit_SetupViewportDefault(void* ptr, void* viewport);
void* QTextEdit_SizeHint(void* ptr);
void* QTextEdit_SizeHintDefault(void* ptr);
void* QTextEdit_ViewportSizeHint(void* ptr);
void* QTextEdit_ViewportSizeHintDefault(void* ptr);
void QTextEdit_ActionEvent(void* ptr, void* event);
void QTextEdit_ActionEventDefault(void* ptr, void* event);
void QTextEdit_EnterEvent(void* ptr, void* event);
void QTextEdit_EnterEventDefault(void* ptr, void* event);
void QTextEdit_HideEvent(void* ptr, void* event);
void QTextEdit_HideEventDefault(void* ptr, void* event);
void QTextEdit_LeaveEvent(void* ptr, void* event);
void QTextEdit_LeaveEventDefault(void* ptr, void* event);
void QTextEdit_MoveEvent(void* ptr, void* event);
void QTextEdit_MoveEventDefault(void* ptr, void* event);
void QTextEdit_SetEnabled(void* ptr, char vbo);
void QTextEdit_SetEnabledDefault(void* ptr, char vbo);
void QTextEdit_SetStyleSheet(void* ptr, char* styleSheet);
void QTextEdit_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QTextEdit_SetVisible(void* ptr, char visible);
void QTextEdit_SetVisibleDefault(void* ptr, char visible);
void QTextEdit_SetWindowModified(void* ptr, char vbo);
void QTextEdit_SetWindowModifiedDefault(void* ptr, char vbo);
void QTextEdit_SetWindowTitle(void* ptr, char* vqs);
void QTextEdit_SetWindowTitleDefault(void* ptr, char* vqs);
char QTextEdit_Close(void* ptr);
char QTextEdit_CloseDefault(void* ptr);
void QTextEdit_CloseEvent(void* ptr, void* event);
void QTextEdit_CloseEventDefault(void* ptr, void* event);
char QTextEdit_HasHeightForWidth(void* ptr);
char QTextEdit_HasHeightForWidthDefault(void* ptr);
int QTextEdit_HeightForWidth(void* ptr, int w);
int QTextEdit_HeightForWidthDefault(void* ptr, int w);
void QTextEdit_Hide(void* ptr);
void QTextEdit_HideDefault(void* ptr);
void QTextEdit_Lower(void* ptr);
void QTextEdit_LowerDefault(void* ptr);
char QTextEdit_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QTextEdit_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QTextEdit_Raise(void* ptr);
void QTextEdit_RaiseDefault(void* ptr);
void QTextEdit_Repaint(void* ptr);
void QTextEdit_RepaintDefault(void* ptr);
void QTextEdit_SetDisabled(void* ptr, char disable);
void QTextEdit_SetDisabledDefault(void* ptr, char disable);
void QTextEdit_SetFocus2(void* ptr);
void QTextEdit_SetFocus2Default(void* ptr);
void QTextEdit_SetHidden(void* ptr, char hidden);
void QTextEdit_SetHiddenDefault(void* ptr, char hidden);
void QTextEdit_Show(void* ptr);
void QTextEdit_ShowDefault(void* ptr);
void QTextEdit_ShowFullScreen(void* ptr);
void QTextEdit_ShowFullScreenDefault(void* ptr);
void QTextEdit_ShowMaximized(void* ptr);
void QTextEdit_ShowMaximizedDefault(void* ptr);
void QTextEdit_ShowMinimized(void* ptr);
void QTextEdit_ShowMinimizedDefault(void* ptr);
void QTextEdit_ShowNormal(void* ptr);
void QTextEdit_ShowNormalDefault(void* ptr);
void QTextEdit_TabletEvent(void* ptr, void* event);
void QTextEdit_TabletEventDefault(void* ptr, void* event);
void QTextEdit_Update(void* ptr);
void QTextEdit_UpdateDefault(void* ptr);
void QTextEdit_UpdateMicroFocus(void* ptr);
void QTextEdit_UpdateMicroFocusDefault(void* ptr);
void QTextEdit_TimerEvent(void* ptr, void* event);
void QTextEdit_TimerEventDefault(void* ptr, void* event);
void QTextEdit_ChildEvent(void* ptr, void* event);
void QTextEdit_ChildEventDefault(void* ptr, void* event);
void QTextEdit_ConnectNotify(void* ptr, void* sign);
void QTextEdit_ConnectNotifyDefault(void* ptr, void* sign);
void QTextEdit_CustomEvent(void* ptr, void* event);
void QTextEdit_CustomEventDefault(void* ptr, void* event);
void QTextEdit_DeleteLater(void* ptr);
void QTextEdit_DeleteLaterDefault(void* ptr);
void QTextEdit_DisconnectNotify(void* ptr, void* sign);
void QTextEdit_DisconnectNotifyDefault(void* ptr, void* sign);
char QTextEdit_EventFilter(void* ptr, void* watched, void* event);
char QTextEdit_EventFilterDefault(void* ptr, void* watched, void* event);
void* QTextEdit_MetaObject(void* ptr);
void* QTextEdit_MetaObjectDefault(void* ptr);
void* QTileRules_NewQTileRules(long long horizontalRule, long long verticalRule);
void* QTileRules_NewQTileRules2(long long rule);
long long QTileRules_Horizontal(void* ptr);
void QTileRules_SetHorizontal(void* ptr, long long vqt);
long long QTileRules_Vertical(void* ptr);
void QTileRules_SetVertical(void* ptr, long long vqt);
void* QTimeEdit_NewQTimeEdit(void* parent);
void* QTimeEdit_NewQTimeEdit2(void* time, void* parent);
void QTimeEdit_DestroyQTimeEdit(void* ptr);
void QTimeEdit_SetDate(void* ptr, void* date);
void QTimeEdit_SetDateDefault(void* ptr, void* date);
void QTimeEdit_SetDateTime(void* ptr, void* dateTime);
void QTimeEdit_SetDateTimeDefault(void* ptr, void* dateTime);
void QTimeEdit_SetTime(void* ptr, void* time);
void QTimeEdit_SetTimeDefault(void* ptr, void* time);
void QTimeEdit_Clear(void* ptr);
void QTimeEdit_ClearDefault(void* ptr);
void* QTimeEdit_DateTimeFromText(void* ptr, char* text);
void* QTimeEdit_DateTimeFromTextDefault(void* ptr, char* text);
void QTimeEdit_Fixup(void* ptr, char* input);
void QTimeEdit_FixupDefault(void* ptr, char* input);
void QTimeEdit_FocusInEvent(void* ptr, void* event);
void QTimeEdit_FocusInEventDefault(void* ptr, void* event);
char QTimeEdit_FocusNextPrevChild(void* ptr, char next);
char QTimeEdit_FocusNextPrevChildDefault(void* ptr, char next);
void QTimeEdit_KeyPressEvent(void* ptr, void* event);
void QTimeEdit_KeyPressEventDefault(void* ptr, void* event);
void QTimeEdit_MousePressEvent(void* ptr, void* event);
void QTimeEdit_MousePressEventDefault(void* ptr, void* event);
void QTimeEdit_PaintEvent(void* ptr, void* event);
void QTimeEdit_PaintEventDefault(void* ptr, void* event);
void* QTimeEdit_SizeHint(void* ptr);
void* QTimeEdit_SizeHintDefault(void* ptr);
void QTimeEdit_StepBy(void* ptr, int steps);
void QTimeEdit_StepByDefault(void* ptr, int steps);
long long QTimeEdit_StepEnabled(void* ptr);
long long QTimeEdit_StepEnabledDefault(void* ptr);
struct QtWidgets_PackedString QTimeEdit_TextFromDateTime(void* ptr, void* dateTime);
struct QtWidgets_PackedString QTimeEdit_TextFromDateTimeDefault(void* ptr, void* dateTime);
long long QTimeEdit_Validate(void* ptr, char* text, int pos);
long long QTimeEdit_ValidateDefault(void* ptr, char* text, int pos);
void QTimeEdit_WheelEvent(void* ptr, void* event);
void QTimeEdit_WheelEventDefault(void* ptr, void* event);
void QTimeEdit_ChangeEvent(void* ptr, void* event);
void QTimeEdit_ChangeEventDefault(void* ptr, void* event);
void QTimeEdit_CloseEvent(void* ptr, void* event);
void QTimeEdit_CloseEventDefault(void* ptr, void* event);
void QTimeEdit_ContextMenuEvent(void* ptr, void* event);
void QTimeEdit_ContextMenuEventDefault(void* ptr, void* event);
void QTimeEdit_FocusOutEvent(void* ptr, void* event);
void QTimeEdit_FocusOutEventDefault(void* ptr, void* event);
void QTimeEdit_HideEvent(void* ptr, void* event);
void QTimeEdit_HideEventDefault(void* ptr, void* event);
void* QTimeEdit_InputMethodQuery(void* ptr, long long query);
void* QTimeEdit_InputMethodQueryDefault(void* ptr, long long query);
void QTimeEdit_KeyReleaseEvent(void* ptr, void* event);
void QTimeEdit_KeyReleaseEventDefault(void* ptr, void* event);
void* QTimeEdit_MinimumSizeHint(void* ptr);
void* QTimeEdit_MinimumSizeHintDefault(void* ptr);
void QTimeEdit_MouseMoveEvent(void* ptr, void* event);
void QTimeEdit_MouseMoveEventDefault(void* ptr, void* event);
void QTimeEdit_MouseReleaseEvent(void* ptr, void* event);
void QTimeEdit_MouseReleaseEventDefault(void* ptr, void* event);
void QTimeEdit_ResizeEvent(void* ptr, void* event);
void QTimeEdit_ResizeEventDefault(void* ptr, void* event);
void QTimeEdit_SelectAll(void* ptr);
void QTimeEdit_SelectAllDefault(void* ptr);
void QTimeEdit_ShowEvent(void* ptr, void* event);
void QTimeEdit_ShowEventDefault(void* ptr, void* event);
void QTimeEdit_StepDown(void* ptr);
void QTimeEdit_StepDownDefault(void* ptr);
void QTimeEdit_StepUp(void* ptr);
void QTimeEdit_StepUpDefault(void* ptr);
void QTimeEdit_ActionEvent(void* ptr, void* event);
void QTimeEdit_ActionEventDefault(void* ptr, void* event);
void QTimeEdit_DragEnterEvent(void* ptr, void* event);
void QTimeEdit_DragEnterEventDefault(void* ptr, void* event);
void QTimeEdit_DragLeaveEvent(void* ptr, void* event);
void QTimeEdit_DragLeaveEventDefault(void* ptr, void* event);
void QTimeEdit_DragMoveEvent(void* ptr, void* event);
void QTimeEdit_DragMoveEventDefault(void* ptr, void* event);
void QTimeEdit_DropEvent(void* ptr, void* event);
void QTimeEdit_DropEventDefault(void* ptr, void* event);
void QTimeEdit_EnterEvent(void* ptr, void* event);
void QTimeEdit_EnterEventDefault(void* ptr, void* event);
void QTimeEdit_LeaveEvent(void* ptr, void* event);
void QTimeEdit_LeaveEventDefault(void* ptr, void* event);
void QTimeEdit_MoveEvent(void* ptr, void* event);
void QTimeEdit_MoveEventDefault(void* ptr, void* event);
void QTimeEdit_SetEnabled(void* ptr, char vbo);
void QTimeEdit_SetEnabledDefault(void* ptr, char vbo);
void QTimeEdit_SetStyleSheet(void* ptr, char* styleSheet);
void QTimeEdit_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QTimeEdit_SetVisible(void* ptr, char visible);
void QTimeEdit_SetVisibleDefault(void* ptr, char visible);
void QTimeEdit_SetWindowModified(void* ptr, char vbo);
void QTimeEdit_SetWindowModifiedDefault(void* ptr, char vbo);
void QTimeEdit_SetWindowTitle(void* ptr, char* vqs);
void QTimeEdit_SetWindowTitleDefault(void* ptr, char* vqs);
char QTimeEdit_Close(void* ptr);
char QTimeEdit_CloseDefault(void* ptr);
char QTimeEdit_HasHeightForWidth(void* ptr);
char QTimeEdit_HasHeightForWidthDefault(void* ptr);
int QTimeEdit_HeightForWidth(void* ptr, int w);
int QTimeEdit_HeightForWidthDefault(void* ptr, int w);
void QTimeEdit_Hide(void* ptr);
void QTimeEdit_HideDefault(void* ptr);
void QTimeEdit_InputMethodEvent(void* ptr, void* event);
void QTimeEdit_InputMethodEventDefault(void* ptr, void* event);
void QTimeEdit_Lower(void* ptr);
void QTimeEdit_LowerDefault(void* ptr);
void QTimeEdit_MouseDoubleClickEvent(void* ptr, void* event);
void QTimeEdit_MouseDoubleClickEventDefault(void* ptr, void* event);
char QTimeEdit_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QTimeEdit_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QTimeEdit_Raise(void* ptr);
void QTimeEdit_RaiseDefault(void* ptr);
void QTimeEdit_Repaint(void* ptr);
void QTimeEdit_RepaintDefault(void* ptr);
void QTimeEdit_SetDisabled(void* ptr, char disable);
void QTimeEdit_SetDisabledDefault(void* ptr, char disable);
void QTimeEdit_SetFocus2(void* ptr);
void QTimeEdit_SetFocus2Default(void* ptr);
void QTimeEdit_SetHidden(void* ptr, char hidden);
void QTimeEdit_SetHiddenDefault(void* ptr, char hidden);
void QTimeEdit_Show(void* ptr);
void QTimeEdit_ShowDefault(void* ptr);
void QTimeEdit_ShowFullScreen(void* ptr);
void QTimeEdit_ShowFullScreenDefault(void* ptr);
void QTimeEdit_ShowMaximized(void* ptr);
void QTimeEdit_ShowMaximizedDefault(void* ptr);
void QTimeEdit_ShowMinimized(void* ptr);
void QTimeEdit_ShowMinimizedDefault(void* ptr);
void QTimeEdit_ShowNormal(void* ptr);
void QTimeEdit_ShowNormalDefault(void* ptr);
void QTimeEdit_TabletEvent(void* ptr, void* event);
void QTimeEdit_TabletEventDefault(void* ptr, void* event);
void QTimeEdit_Update(void* ptr);
void QTimeEdit_UpdateDefault(void* ptr);
void QTimeEdit_UpdateMicroFocus(void* ptr);
void QTimeEdit_UpdateMicroFocusDefault(void* ptr);
void QTimeEdit_ChildEvent(void* ptr, void* event);
void QTimeEdit_ChildEventDefault(void* ptr, void* event);
void QTimeEdit_ConnectNotify(void* ptr, void* sign);
void QTimeEdit_ConnectNotifyDefault(void* ptr, void* sign);
void QTimeEdit_CustomEvent(void* ptr, void* event);
void QTimeEdit_CustomEventDefault(void* ptr, void* event);
void QTimeEdit_DeleteLater(void* ptr);
void QTimeEdit_DeleteLaterDefault(void* ptr);
void QTimeEdit_DisconnectNotify(void* ptr, void* sign);
void QTimeEdit_DisconnectNotifyDefault(void* ptr, void* sign);
char QTimeEdit_EventFilter(void* ptr, void* watched, void* event);
char QTimeEdit_EventFilterDefault(void* ptr, void* watched, void* event);
void* QTimeEdit_MetaObject(void* ptr);
void* QTimeEdit_MetaObjectDefault(void* ptr);
long long QToolBar_AllowedAreas(void* ptr);
void* QToolBar_IconSize(void* ptr);
char QToolBar_IsFloatable(void* ptr);
char QToolBar_IsFloating(void* ptr);
char QToolBar_IsMovable(void* ptr);
long long QToolBar_Orientation(void* ptr);
void QToolBar_SetAllowedAreas(void* ptr, long long areas);
void QToolBar_SetFloatable(void* ptr, char floatable);
void QToolBar_SetIconSize(void* ptr, void* iconSize);
void QToolBar_SetMovable(void* ptr, char movable);
void QToolBar_SetOrientation(void* ptr, long long orientation);
void QToolBar_SetToolButtonStyle(void* ptr, long long toolButtonStyle);
long long QToolBar_ToolButtonStyle(void* ptr);
void* QToolBar_NewQToolBar2(void* parent);
void* QToolBar_NewQToolBar(char* title, void* parent);
void* QToolBar_ActionAt(void* ptr, void* p);
void* QToolBar_ActionAt2(void* ptr, int x, int y);
void QToolBar_ActionEvent(void* ptr, void* event);
void QToolBar_ActionEventDefault(void* ptr, void* event);
void QToolBar_ConnectActionTriggered(void* ptr);
void QToolBar_DisconnectActionTriggered(void* ptr);
void QToolBar_ActionTriggered(void* ptr, void* action);
void* QToolBar_AddAction2(void* ptr, void* icon, char* text);
void* QToolBar_AddAction4(void* ptr, void* icon, char* text, void* receiver, char* member);
void* QToolBar_AddAction(void* ptr, char* text);
void* QToolBar_AddAction3(void* ptr, char* text, void* receiver, char* member);
void* QToolBar_AddSeparator(void* ptr);
void* QToolBar_AddWidget(void* ptr, void* widget);
void QToolBar_ConnectAllowedAreasChanged(void* ptr);
void QToolBar_DisconnectAllowedAreasChanged(void* ptr);
void QToolBar_AllowedAreasChanged(void* ptr, long long allowedAreas);
void QToolBar_ChangeEvent(void* ptr, void* event);
void QToolBar_ChangeEventDefault(void* ptr, void* event);
void QToolBar_Clear(void* ptr);
char QToolBar_Event(void* ptr, void* event);
void QToolBar_ConnectIconSizeChanged(void* ptr);
void QToolBar_DisconnectIconSizeChanged(void* ptr);
void QToolBar_IconSizeChanged(void* ptr, void* iconSize);
void* QToolBar_InsertSeparator(void* ptr, void* before);
void* QToolBar_InsertWidget(void* ptr, void* before, void* widget);
char QToolBar_IsAreaAllowed(void* ptr, long long area);
void QToolBar_ConnectMovableChanged(void* ptr);
void QToolBar_DisconnectMovableChanged(void* ptr);
void QToolBar_MovableChanged(void* ptr, char movable);
void QToolBar_ConnectOrientationChanged(void* ptr);
void QToolBar_DisconnectOrientationChanged(void* ptr);
void QToolBar_OrientationChanged(void* ptr, long long orientation);
void QToolBar_PaintEvent(void* ptr, void* event);
void QToolBar_PaintEventDefault(void* ptr, void* event);
void* QToolBar_ToggleViewAction(void* ptr);
void QToolBar_ConnectToolButtonStyleChanged(void* ptr);
void QToolBar_DisconnectToolButtonStyleChanged(void* ptr);
void QToolBar_ToolButtonStyleChanged(void* ptr, long long toolButtonStyle);
void QToolBar_ConnectTopLevelChanged(void* ptr);
void QToolBar_DisconnectTopLevelChanged(void* ptr);
void QToolBar_TopLevelChanged(void* ptr, char topLevel);
void QToolBar_ConnectVisibilityChanged(void* ptr);
void QToolBar_DisconnectVisibilityChanged(void* ptr);
void QToolBar_VisibilityChanged(void* ptr, char visible);
void* QToolBar_WidgetForAction(void* ptr, void* action);
void QToolBar_DestroyQToolBar(void* ptr);
void QToolBar_DragEnterEvent(void* ptr, void* event);
void QToolBar_DragEnterEventDefault(void* ptr, void* event);
void QToolBar_DragLeaveEvent(void* ptr, void* event);
void QToolBar_DragLeaveEventDefault(void* ptr, void* event);
void QToolBar_DragMoveEvent(void* ptr, void* event);
void QToolBar_DragMoveEventDefault(void* ptr, void* event);
void QToolBar_DropEvent(void* ptr, void* event);
void QToolBar_DropEventDefault(void* ptr, void* event);
void QToolBar_EnterEvent(void* ptr, void* event);
void QToolBar_EnterEventDefault(void* ptr, void* event);
void QToolBar_FocusInEvent(void* ptr, void* event);
void QToolBar_FocusInEventDefault(void* ptr, void* event);
void QToolBar_FocusOutEvent(void* ptr, void* event);
void QToolBar_FocusOutEventDefault(void* ptr, void* event);
void QToolBar_HideEvent(void* ptr, void* event);
void QToolBar_HideEventDefault(void* ptr, void* event);
void QToolBar_LeaveEvent(void* ptr, void* event);
void QToolBar_LeaveEventDefault(void* ptr, void* event);
void* QToolBar_MinimumSizeHint(void* ptr);
void* QToolBar_MinimumSizeHintDefault(void* ptr);
void QToolBar_MoveEvent(void* ptr, void* event);
void QToolBar_MoveEventDefault(void* ptr, void* event);
void QToolBar_SetEnabled(void* ptr, char vbo);
void QToolBar_SetEnabledDefault(void* ptr, char vbo);
void QToolBar_SetStyleSheet(void* ptr, char* styleSheet);
void QToolBar_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QToolBar_SetVisible(void* ptr, char visible);
void QToolBar_SetVisibleDefault(void* ptr, char visible);
void QToolBar_SetWindowModified(void* ptr, char vbo);
void QToolBar_SetWindowModifiedDefault(void* ptr, char vbo);
void QToolBar_SetWindowTitle(void* ptr, char* vqs);
void QToolBar_SetWindowTitleDefault(void* ptr, char* vqs);
void QToolBar_ShowEvent(void* ptr, void* event);
void QToolBar_ShowEventDefault(void* ptr, void* event);
void* QToolBar_SizeHint(void* ptr);
void* QToolBar_SizeHintDefault(void* ptr);
char QToolBar_Close(void* ptr);
char QToolBar_CloseDefault(void* ptr);
void QToolBar_CloseEvent(void* ptr, void* event);
void QToolBar_CloseEventDefault(void* ptr, void* event);
void QToolBar_ContextMenuEvent(void* ptr, void* event);
void QToolBar_ContextMenuEventDefault(void* ptr, void* event);
char QToolBar_FocusNextPrevChild(void* ptr, char next);
char QToolBar_FocusNextPrevChildDefault(void* ptr, char next);
char QToolBar_HasHeightForWidth(void* ptr);
char QToolBar_HasHeightForWidthDefault(void* ptr);
int QToolBar_HeightForWidth(void* ptr, int w);
int QToolBar_HeightForWidthDefault(void* ptr, int w);
void QToolBar_Hide(void* ptr);
void QToolBar_HideDefault(void* ptr);
void QToolBar_InputMethodEvent(void* ptr, void* event);
void QToolBar_InputMethodEventDefault(void* ptr, void* event);
void* QToolBar_InputMethodQuery(void* ptr, long long query);
void* QToolBar_InputMethodQueryDefault(void* ptr, long long query);
void QToolBar_KeyPressEvent(void* ptr, void* event);
void QToolBar_KeyPressEventDefault(void* ptr, void* event);
void QToolBar_KeyReleaseEvent(void* ptr, void* event);
void QToolBar_KeyReleaseEventDefault(void* ptr, void* event);
void QToolBar_Lower(void* ptr);
void QToolBar_LowerDefault(void* ptr);
void QToolBar_MouseDoubleClickEvent(void* ptr, void* event);
void QToolBar_MouseDoubleClickEventDefault(void* ptr, void* event);
void QToolBar_MouseMoveEvent(void* ptr, void* event);
void QToolBar_MouseMoveEventDefault(void* ptr, void* event);
void QToolBar_MousePressEvent(void* ptr, void* event);
void QToolBar_MousePressEventDefault(void* ptr, void* event);
void QToolBar_MouseReleaseEvent(void* ptr, void* event);
void QToolBar_MouseReleaseEventDefault(void* ptr, void* event);
char QToolBar_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QToolBar_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QToolBar_Raise(void* ptr);
void QToolBar_RaiseDefault(void* ptr);
void QToolBar_Repaint(void* ptr);
void QToolBar_RepaintDefault(void* ptr);
void QToolBar_ResizeEvent(void* ptr, void* event);
void QToolBar_ResizeEventDefault(void* ptr, void* event);
void QToolBar_SetDisabled(void* ptr, char disable);
void QToolBar_SetDisabledDefault(void* ptr, char disable);
void QToolBar_SetFocus2(void* ptr);
void QToolBar_SetFocus2Default(void* ptr);
void QToolBar_SetHidden(void* ptr, char hidden);
void QToolBar_SetHiddenDefault(void* ptr, char hidden);
void QToolBar_Show(void* ptr);
void QToolBar_ShowDefault(void* ptr);
void QToolBar_ShowFullScreen(void* ptr);
void QToolBar_ShowFullScreenDefault(void* ptr);
void QToolBar_ShowMaximized(void* ptr);
void QToolBar_ShowMaximizedDefault(void* ptr);
void QToolBar_ShowMinimized(void* ptr);
void QToolBar_ShowMinimizedDefault(void* ptr);
void QToolBar_ShowNormal(void* ptr);
void QToolBar_ShowNormalDefault(void* ptr);
void QToolBar_TabletEvent(void* ptr, void* event);
void QToolBar_TabletEventDefault(void* ptr, void* event);
void QToolBar_Update(void* ptr);
void QToolBar_UpdateDefault(void* ptr);
void QToolBar_UpdateMicroFocus(void* ptr);
void QToolBar_UpdateMicroFocusDefault(void* ptr);
void QToolBar_WheelEvent(void* ptr, void* event);
void QToolBar_WheelEventDefault(void* ptr, void* event);
void QToolBar_TimerEvent(void* ptr, void* event);
void QToolBar_TimerEventDefault(void* ptr, void* event);
void QToolBar_ChildEvent(void* ptr, void* event);
void QToolBar_ChildEventDefault(void* ptr, void* event);
void QToolBar_ConnectNotify(void* ptr, void* sign);
void QToolBar_ConnectNotifyDefault(void* ptr, void* sign);
void QToolBar_CustomEvent(void* ptr, void* event);
void QToolBar_CustomEventDefault(void* ptr, void* event);
void QToolBar_DeleteLater(void* ptr);
void QToolBar_DeleteLaterDefault(void* ptr);
void QToolBar_DisconnectNotify(void* ptr, void* sign);
void QToolBar_DisconnectNotifyDefault(void* ptr, void* sign);
char QToolBar_EventFilter(void* ptr, void* watched, void* event);
char QToolBar_EventFilterDefault(void* ptr, void* watched, void* event);
void* QToolBar_MetaObject(void* ptr);
void* QToolBar_MetaObjectDefault(void* ptr);
int QToolBox_Count(void* ptr);
int QToolBox_CurrentIndex(void* ptr);
void QToolBox_SetCurrentIndex(void* ptr, int index);
void* QToolBox_NewQToolBox(void* parent, long long f);
int QToolBox_AddItem2(void* ptr, void* w, char* text);
int QToolBox_AddItem(void* ptr, void* widget, void* iconSet, char* text);
void QToolBox_ChangeEvent(void* ptr, void* ev);
void QToolBox_ChangeEventDefault(void* ptr, void* ev);
void QToolBox_ConnectCurrentChanged(void* ptr);
void QToolBox_DisconnectCurrentChanged(void* ptr);
void QToolBox_CurrentChanged(void* ptr, int index);
void* QToolBox_CurrentWidget(void* ptr);
char QToolBox_Event(void* ptr, void* e);
int QToolBox_IndexOf(void* ptr, void* widget);
int QToolBox_InsertItem(void* ptr, int index, void* widget, void* icon, char* text);
int QToolBox_InsertItem2(void* ptr, int index, void* widget, char* text);
char QToolBox_IsItemEnabled(void* ptr, int index);
void* QToolBox_ItemIcon(void* ptr, int index);
void QToolBox_ItemInserted(void* ptr, int index);
void QToolBox_ItemInsertedDefault(void* ptr, int index);
void QToolBox_ItemRemoved(void* ptr, int index);
void QToolBox_ItemRemovedDefault(void* ptr, int index);
struct QtWidgets_PackedString QToolBox_ItemText(void* ptr, int index);
struct QtWidgets_PackedString QToolBox_ItemToolTip(void* ptr, int index);
void QToolBox_RemoveItem(void* ptr, int index);
void QToolBox_SetCurrentWidget(void* ptr, void* widget);
void QToolBox_SetItemEnabled(void* ptr, int index, char enabled);
void QToolBox_SetItemIcon(void* ptr, int index, void* icon);
void QToolBox_SetItemText(void* ptr, int index, char* text);
void QToolBox_SetItemToolTip(void* ptr, int index, char* toolTip);
void QToolBox_ShowEvent(void* ptr, void* e);
void QToolBox_ShowEventDefault(void* ptr, void* e);
void* QToolBox_Widget(void* ptr, int index);
void QToolBox_DestroyQToolBox(void* ptr);
void QToolBox_PaintEvent(void* ptr, void* vqp);
void QToolBox_PaintEventDefault(void* ptr, void* vqp);
void* QToolBox_SizeHint(void* ptr);
void* QToolBox_SizeHintDefault(void* ptr);
void QToolBox_ActionEvent(void* ptr, void* event);
void QToolBox_ActionEventDefault(void* ptr, void* event);
void QToolBox_DragEnterEvent(void* ptr, void* event);
void QToolBox_DragEnterEventDefault(void* ptr, void* event);
void QToolBox_DragLeaveEvent(void* ptr, void* event);
void QToolBox_DragLeaveEventDefault(void* ptr, void* event);
void QToolBox_DragMoveEvent(void* ptr, void* event);
void QToolBox_DragMoveEventDefault(void* ptr, void* event);
void QToolBox_DropEvent(void* ptr, void* event);
void QToolBox_DropEventDefault(void* ptr, void* event);
void QToolBox_EnterEvent(void* ptr, void* event);
void QToolBox_EnterEventDefault(void* ptr, void* event);
void QToolBox_FocusInEvent(void* ptr, void* event);
void QToolBox_FocusInEventDefault(void* ptr, void* event);
void QToolBox_FocusOutEvent(void* ptr, void* event);
void QToolBox_FocusOutEventDefault(void* ptr, void* event);
void QToolBox_HideEvent(void* ptr, void* event);
void QToolBox_HideEventDefault(void* ptr, void* event);
void QToolBox_LeaveEvent(void* ptr, void* event);
void QToolBox_LeaveEventDefault(void* ptr, void* event);
void* QToolBox_MinimumSizeHint(void* ptr);
void* QToolBox_MinimumSizeHintDefault(void* ptr);
void QToolBox_MoveEvent(void* ptr, void* event);
void QToolBox_MoveEventDefault(void* ptr, void* event);
void QToolBox_SetEnabled(void* ptr, char vbo);
void QToolBox_SetEnabledDefault(void* ptr, char vbo);
void QToolBox_SetStyleSheet(void* ptr, char* styleSheet);
void QToolBox_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QToolBox_SetVisible(void* ptr, char visible);
void QToolBox_SetVisibleDefault(void* ptr, char visible);
void QToolBox_SetWindowModified(void* ptr, char vbo);
void QToolBox_SetWindowModifiedDefault(void* ptr, char vbo);
void QToolBox_SetWindowTitle(void* ptr, char* vqs);
void QToolBox_SetWindowTitleDefault(void* ptr, char* vqs);
char QToolBox_Close(void* ptr);
char QToolBox_CloseDefault(void* ptr);
void QToolBox_CloseEvent(void* ptr, void* event);
void QToolBox_CloseEventDefault(void* ptr, void* event);
void QToolBox_ContextMenuEvent(void* ptr, void* event);
void QToolBox_ContextMenuEventDefault(void* ptr, void* event);
char QToolBox_FocusNextPrevChild(void* ptr, char next);
char QToolBox_FocusNextPrevChildDefault(void* ptr, char next);
char QToolBox_HasHeightForWidth(void* ptr);
char QToolBox_HasHeightForWidthDefault(void* ptr);
int QToolBox_HeightForWidth(void* ptr, int w);
int QToolBox_HeightForWidthDefault(void* ptr, int w);
void QToolBox_Hide(void* ptr);
void QToolBox_HideDefault(void* ptr);
void QToolBox_InputMethodEvent(void* ptr, void* event);
void QToolBox_InputMethodEventDefault(void* ptr, void* event);
void* QToolBox_InputMethodQuery(void* ptr, long long query);
void* QToolBox_InputMethodQueryDefault(void* ptr, long long query);
void QToolBox_KeyPressEvent(void* ptr, void* event);
void QToolBox_KeyPressEventDefault(void* ptr, void* event);
void QToolBox_KeyReleaseEvent(void* ptr, void* event);
void QToolBox_KeyReleaseEventDefault(void* ptr, void* event);
void QToolBox_Lower(void* ptr);
void QToolBox_LowerDefault(void* ptr);
void QToolBox_MouseDoubleClickEvent(void* ptr, void* event);
void QToolBox_MouseDoubleClickEventDefault(void* ptr, void* event);
void QToolBox_MouseMoveEvent(void* ptr, void* event);
void QToolBox_MouseMoveEventDefault(void* ptr, void* event);
void QToolBox_MousePressEvent(void* ptr, void* event);
void QToolBox_MousePressEventDefault(void* ptr, void* event);
void QToolBox_MouseReleaseEvent(void* ptr, void* event);
void QToolBox_MouseReleaseEventDefault(void* ptr, void* event);
char QToolBox_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QToolBox_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QToolBox_Raise(void* ptr);
void QToolBox_RaiseDefault(void* ptr);
void QToolBox_Repaint(void* ptr);
void QToolBox_RepaintDefault(void* ptr);
void QToolBox_ResizeEvent(void* ptr, void* event);
void QToolBox_ResizeEventDefault(void* ptr, void* event);
void QToolBox_SetDisabled(void* ptr, char disable);
void QToolBox_SetDisabledDefault(void* ptr, char disable);
void QToolBox_SetFocus2(void* ptr);
void QToolBox_SetFocus2Default(void* ptr);
void QToolBox_SetHidden(void* ptr, char hidden);
void QToolBox_SetHiddenDefault(void* ptr, char hidden);
void QToolBox_Show(void* ptr);
void QToolBox_ShowDefault(void* ptr);
void QToolBox_ShowFullScreen(void* ptr);
void QToolBox_ShowFullScreenDefault(void* ptr);
void QToolBox_ShowMaximized(void* ptr);
void QToolBox_ShowMaximizedDefault(void* ptr);
void QToolBox_ShowMinimized(void* ptr);
void QToolBox_ShowMinimizedDefault(void* ptr);
void QToolBox_ShowNormal(void* ptr);
void QToolBox_ShowNormalDefault(void* ptr);
void QToolBox_TabletEvent(void* ptr, void* event);
void QToolBox_TabletEventDefault(void* ptr, void* event);
void QToolBox_Update(void* ptr);
void QToolBox_UpdateDefault(void* ptr);
void QToolBox_UpdateMicroFocus(void* ptr);
void QToolBox_UpdateMicroFocusDefault(void* ptr);
void QToolBox_WheelEvent(void* ptr, void* event);
void QToolBox_WheelEventDefault(void* ptr, void* event);
void QToolBox_TimerEvent(void* ptr, void* event);
void QToolBox_TimerEventDefault(void* ptr, void* event);
void QToolBox_ChildEvent(void* ptr, void* event);
void QToolBox_ChildEventDefault(void* ptr, void* event);
void QToolBox_ConnectNotify(void* ptr, void* sign);
void QToolBox_ConnectNotifyDefault(void* ptr, void* sign);
void QToolBox_CustomEvent(void* ptr, void* event);
void QToolBox_CustomEventDefault(void* ptr, void* event);
void QToolBox_DeleteLater(void* ptr);
void QToolBox_DeleteLaterDefault(void* ptr);
void QToolBox_DisconnectNotify(void* ptr, void* sign);
void QToolBox_DisconnectNotifyDefault(void* ptr, void* sign);
char QToolBox_EventFilter(void* ptr, void* watched, void* event);
char QToolBox_EventFilterDefault(void* ptr, void* watched, void* event);
void* QToolBox_MetaObject(void* ptr);
void* QToolBox_MetaObjectDefault(void* ptr);
long long QToolButton_ArrowType(void* ptr);
char QToolButton_AutoRaise(void* ptr);
void QToolButton_PaintEvent(void* ptr, void* event);
void QToolButton_PaintEventDefault(void* ptr, void* event);
long long QToolButton_PopupMode(void* ptr);
void QToolButton_SetArrowType(void* ptr, long long ty);
void QToolButton_SetAutoRaise(void* ptr, char enable);
void QToolButton_SetPopupMode(void* ptr, long long mode);
void QToolButton_SetToolButtonStyle(void* ptr, long long style);
long long QToolButton_ToolButtonStyle(void* ptr);
void* QToolButton_NewQToolButton(void* parent);
void QToolButton_ActionEvent(void* ptr, void* event);
void QToolButton_ActionEventDefault(void* ptr, void* event);
void QToolButton_ChangeEvent(void* ptr, void* e);
void QToolButton_ChangeEventDefault(void* ptr, void* e);
void* QToolButton_DefaultAction(void* ptr);
void QToolButton_EnterEvent(void* ptr, void* e);
void QToolButton_EnterEventDefault(void* ptr, void* e);
char QToolButton_Event(void* ptr, void* event);
char QToolButton_HitButton(void* ptr, void* pos);
char QToolButton_HitButtonDefault(void* ptr, void* pos);
void QToolButton_InitStyleOption(void* ptr, void* option);
void QToolButton_LeaveEvent(void* ptr, void* e);
void QToolButton_LeaveEventDefault(void* ptr, void* e);
void* QToolButton_Menu(void* ptr);
void* QToolButton_MinimumSizeHint(void* ptr);
void* QToolButton_MinimumSizeHintDefault(void* ptr);
void QToolButton_MousePressEvent(void* ptr, void* e);
void QToolButton_MousePressEventDefault(void* ptr, void* e);
void QToolButton_MouseReleaseEvent(void* ptr, void* e);
void QToolButton_MouseReleaseEventDefault(void* ptr, void* e);
void QToolButton_NextCheckState(void* ptr);
void QToolButton_NextCheckStateDefault(void* ptr);
void QToolButton_SetDefaultAction(void* ptr, void* action);
void QToolButton_SetMenu(void* ptr, void* menu);
void QToolButton_ShowMenu(void* ptr);
void* QToolButton_SizeHint(void* ptr);
void* QToolButton_SizeHintDefault(void* ptr);
void QToolButton_TimerEvent(void* ptr, void* e);
void QToolButton_ConnectTriggered(void* ptr);
void QToolButton_DisconnectTriggered(void* ptr);
void QToolButton_Triggered(void* ptr, void* action);
void QToolButton_DestroyQToolButton(void* ptr);
void QToolButton_SetChecked(void* ptr, char vbo);
void QToolButton_SetCheckedDefault(void* ptr, char vbo);
void QToolButton_SetIconSize(void* ptr, void* size);
void QToolButton_SetIconSizeDefault(void* ptr, void* size);
void QToolButton_Toggle(void* ptr);
void QToolButton_ToggleDefault(void* ptr);
void QToolButton_AnimateClick(void* ptr, int msec);
void QToolButton_AnimateClickDefault(void* ptr, int msec);
void QToolButton_CheckStateSet(void* ptr);
void QToolButton_CheckStateSetDefault(void* ptr);
void QToolButton_Click(void* ptr);
void QToolButton_ClickDefault(void* ptr);
void QToolButton_FocusInEvent(void* ptr, void* e);
void QToolButton_FocusInEventDefault(void* ptr, void* e);
void QToolButton_FocusOutEvent(void* ptr, void* e);
void QToolButton_FocusOutEventDefault(void* ptr, void* e);
void QToolButton_KeyPressEvent(void* ptr, void* e);
void QToolButton_KeyPressEventDefault(void* ptr, void* e);
void QToolButton_KeyReleaseEvent(void* ptr, void* e);
void QToolButton_KeyReleaseEventDefault(void* ptr, void* e);
void QToolButton_MouseMoveEvent(void* ptr, void* e);
void QToolButton_MouseMoveEventDefault(void* ptr, void* e);
void QToolButton_DragEnterEvent(void* ptr, void* event);
void QToolButton_DragEnterEventDefault(void* ptr, void* event);
void QToolButton_DragLeaveEvent(void* ptr, void* event);
void QToolButton_DragLeaveEventDefault(void* ptr, void* event);
void QToolButton_DragMoveEvent(void* ptr, void* event);
void QToolButton_DragMoveEventDefault(void* ptr, void* event);
void QToolButton_DropEvent(void* ptr, void* event);
void QToolButton_DropEventDefault(void* ptr, void* event);
void QToolButton_HideEvent(void* ptr, void* event);
void QToolButton_HideEventDefault(void* ptr, void* event);
void QToolButton_MoveEvent(void* ptr, void* event);
void QToolButton_MoveEventDefault(void* ptr, void* event);
void QToolButton_SetEnabled(void* ptr, char vbo);
void QToolButton_SetEnabledDefault(void* ptr, char vbo);
void QToolButton_SetStyleSheet(void* ptr, char* styleSheet);
void QToolButton_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QToolButton_SetVisible(void* ptr, char visible);
void QToolButton_SetVisibleDefault(void* ptr, char visible);
void QToolButton_SetWindowModified(void* ptr, char vbo);
void QToolButton_SetWindowModifiedDefault(void* ptr, char vbo);
void QToolButton_SetWindowTitle(void* ptr, char* vqs);
void QToolButton_SetWindowTitleDefault(void* ptr, char* vqs);
void QToolButton_ShowEvent(void* ptr, void* event);
void QToolButton_ShowEventDefault(void* ptr, void* event);
char QToolButton_Close(void* ptr);
char QToolButton_CloseDefault(void* ptr);
void QToolButton_CloseEvent(void* ptr, void* event);
void QToolButton_CloseEventDefault(void* ptr, void* event);
void QToolButton_ContextMenuEvent(void* ptr, void* event);
void QToolButton_ContextMenuEventDefault(void* ptr, void* event);
char QToolButton_FocusNextPrevChild(void* ptr, char next);
char QToolButton_FocusNextPrevChildDefault(void* ptr, char next);
char QToolButton_HasHeightForWidth(void* ptr);
char QToolButton_HasHeightForWidthDefault(void* ptr);
int QToolButton_HeightForWidth(void* ptr, int w);
int QToolButton_HeightForWidthDefault(void* ptr, int w);
void QToolButton_Hide(void* ptr);
void QToolButton_HideDefault(void* ptr);
void QToolButton_InputMethodEvent(void* ptr, void* event);
void QToolButton_InputMethodEventDefault(void* ptr, void* event);
void* QToolButton_InputMethodQuery(void* ptr, long long query);
void* QToolButton_InputMethodQueryDefault(void* ptr, long long query);
void QToolButton_Lower(void* ptr);
void QToolButton_LowerDefault(void* ptr);
void QToolButton_MouseDoubleClickEvent(void* ptr, void* event);
void QToolButton_MouseDoubleClickEventDefault(void* ptr, void* event);
char QToolButton_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QToolButton_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QToolButton_Raise(void* ptr);
void QToolButton_RaiseDefault(void* ptr);
void QToolButton_Repaint(void* ptr);
void QToolButton_RepaintDefault(void* ptr);
void QToolButton_ResizeEvent(void* ptr, void* event);
void QToolButton_ResizeEventDefault(void* ptr, void* event);
void QToolButton_SetDisabled(void* ptr, char disable);
void QToolButton_SetDisabledDefault(void* ptr, char disable);
void QToolButton_SetFocus2(void* ptr);
void QToolButton_SetFocus2Default(void* ptr);
void QToolButton_SetHidden(void* ptr, char hidden);
void QToolButton_SetHiddenDefault(void* ptr, char hidden);
void QToolButton_Show(void* ptr);
void QToolButton_ShowDefault(void* ptr);
void QToolButton_ShowFullScreen(void* ptr);
void QToolButton_ShowFullScreenDefault(void* ptr);
void QToolButton_ShowMaximized(void* ptr);
void QToolButton_ShowMaximizedDefault(void* ptr);
void QToolButton_ShowMinimized(void* ptr);
void QToolButton_ShowMinimizedDefault(void* ptr);
void QToolButton_ShowNormal(void* ptr);
void QToolButton_ShowNormalDefault(void* ptr);
void QToolButton_TabletEvent(void* ptr, void* event);
void QToolButton_TabletEventDefault(void* ptr, void* event);
void QToolButton_Update(void* ptr);
void QToolButton_UpdateDefault(void* ptr);
void QToolButton_UpdateMicroFocus(void* ptr);
void QToolButton_UpdateMicroFocusDefault(void* ptr);
void QToolButton_WheelEvent(void* ptr, void* event);
void QToolButton_WheelEventDefault(void* ptr, void* event);
void QToolButton_ChildEvent(void* ptr, void* event);
void QToolButton_ChildEventDefault(void* ptr, void* event);
void QToolButton_ConnectNotify(void* ptr, void* sign);
void QToolButton_ConnectNotifyDefault(void* ptr, void* sign);
void QToolButton_CustomEvent(void* ptr, void* event);
void QToolButton_CustomEventDefault(void* ptr, void* event);
void QToolButton_DeleteLater(void* ptr);
void QToolButton_DeleteLaterDefault(void* ptr);
void QToolButton_DisconnectNotify(void* ptr, void* sign);
void QToolButton_DisconnectNotifyDefault(void* ptr, void* sign);
char QToolButton_EventFilter(void* ptr, void* watched, void* event);
char QToolButton_EventFilterDefault(void* ptr, void* watched, void* event);
void* QToolButton_MetaObject(void* ptr);
void* QToolButton_MetaObjectDefault(void* ptr);
void* QToolTip_QToolTip_Font();
void QToolTip_QToolTip_HideText();
char QToolTip_QToolTip_IsVisible();
void* QToolTip_QToolTip_Palette();
void QToolTip_QToolTip_SetFont(void* font);
void QToolTip_QToolTip_SetPalette(void* palette);
void QToolTip_QToolTip_ShowText2(void* pos, char* text, void* w);
void QToolTip_QToolTip_ShowText(void* pos, char* text, void* w, void* rect);
void QToolTip_QToolTip_ShowText3(void* pos, char* text, void* w, void* rect, int msecDisplayTime);
struct QtWidgets_PackedString QToolTip_QToolTip_Text();
char QTreeView_AllColumnsShowFocus(void* ptr);
int QTreeView_AutoExpandDelay(void* ptr);
void QTreeView_Collapse(void* ptr, void* index);
void QTreeView_Expand(void* ptr, void* index);
char QTreeView_ExpandsOnDoubleClick(void* ptr);
int QTreeView_Indentation(void* ptr);
char QTreeView_IsAnimated(void* ptr);
char QTreeView_IsExpanded(void* ptr, void* index);
char QTreeView_IsHeaderHidden(void* ptr);
char QTreeView_IsSortingEnabled(void* ptr);
char QTreeView_ItemsExpandable(void* ptr);
void QTreeView_ResetIndentation(void* ptr);
char QTreeView_RootIsDecorated(void* ptr);
void QTreeView_SetAllColumnsShowFocus(void* ptr, char enable);
void QTreeView_SetAnimated(void* ptr, char enable);
void QTreeView_SetAutoExpandDelay(void* ptr, int delay);
void QTreeView_SetExpandsOnDoubleClick(void* ptr, char enable);
void QTreeView_SetHeaderHidden(void* ptr, char hide);
void QTreeView_SetIndentation(void* ptr, int i);
void QTreeView_SetItemsExpandable(void* ptr, char enable);
void QTreeView_SetRootIsDecorated(void* ptr, char show);
void QTreeView_SetSortingEnabled(void* ptr, char enable);
void QTreeView_SetUniformRowHeights(void* ptr, char uniform);
void QTreeView_SetWordWrap(void* ptr, char on);
char QTreeView_UniformRowHeights(void* ptr);
char QTreeView_WordWrap(void* ptr);
void* QTreeView_NewQTreeView(void* parent);
void QTreeView_CollapseAll(void* ptr);
void QTreeView_ConnectCollapsed(void* ptr);
void QTreeView_DisconnectCollapsed(void* ptr);
void QTreeView_Collapsed(void* ptr, void* index);
int QTreeView_ColumnAt(void* ptr, int x);
void QTreeView_ColumnCountChanged(void* ptr, int oldCount, int newCount);
void QTreeView_ColumnMoved(void* ptr);
void QTreeView_ColumnResized(void* ptr, int column, int oldSize, int newSize);
int QTreeView_ColumnViewportPosition(void* ptr, int column);
int QTreeView_ColumnWidth(void* ptr, int column);
void QTreeView_CurrentChanged(void* ptr, void* current, void* previous);
void QTreeView_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QTreeView_DragMoveEvent(void* ptr, void* event);
void QTreeView_DragMoveEventDefault(void* ptr, void* event);
void QTreeView_DrawBranches(void* ptr, void* painter, void* rect, void* index);
void QTreeView_DrawBranchesDefault(void* ptr, void* painter, void* rect, void* index);
void QTreeView_DrawRow(void* ptr, void* painter, void* option, void* index);
void QTreeView_DrawRowDefault(void* ptr, void* painter, void* option, void* index);
void QTreeView_DrawTree(void* ptr, void* painter, void* region);
void QTreeView_ExpandAll(void* ptr);
void QTreeView_ExpandToDepth(void* ptr, int depth);
void QTreeView_ConnectExpanded(void* ptr);
void QTreeView_DisconnectExpanded(void* ptr);
void QTreeView_Expanded(void* ptr, void* index);
void* QTreeView_Header(void* ptr);
void QTreeView_HideColumn(void* ptr, int column);
int QTreeView_HorizontalOffset(void* ptr);
int QTreeView_HorizontalOffsetDefault(void* ptr);
void* QTreeView_IndexAbove(void* ptr, void* index);
void* QTreeView_IndexAt(void* ptr, void* point);
void* QTreeView_IndexAtDefault(void* ptr, void* point);
void* QTreeView_IndexBelow(void* ptr, void* index);
int QTreeView_IndexRowSizeHint(void* ptr, void* index);
char QTreeView_IsColumnHidden(void* ptr, int column);
char QTreeView_IsFirstColumnSpanned(void* ptr, int row, void* parent);
char QTreeView_IsIndexHidden(void* ptr, void* index);
char QTreeView_IsIndexHiddenDefault(void* ptr, void* index);
char QTreeView_IsRowHidden(void* ptr, int row, void* parent);
void QTreeView_KeyPressEvent(void* ptr, void* event);
void QTreeView_KeyPressEventDefault(void* ptr, void* event);
void QTreeView_KeyboardSearch(void* ptr, char* search);
void QTreeView_KeyboardSearchDefault(void* ptr, char* search);
void QTreeView_MouseDoubleClickEvent(void* ptr, void* event);
void QTreeView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QTreeView_MouseMoveEvent(void* ptr, void* event);
void QTreeView_MouseMoveEventDefault(void* ptr, void* event);
void QTreeView_MousePressEvent(void* ptr, void* event);
void QTreeView_MousePressEventDefault(void* ptr, void* event);
void QTreeView_MouseReleaseEvent(void* ptr, void* event);
void QTreeView_MouseReleaseEventDefault(void* ptr, void* event);
void* QTreeView_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QTreeView_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
void QTreeView_PaintEvent(void* ptr, void* event);
void QTreeView_PaintEventDefault(void* ptr, void* event);
void QTreeView_Reset(void* ptr);
void QTreeView_ResetDefault(void* ptr);
void QTreeView_ResizeColumnToContents(void* ptr, int column);
int QTreeView_RowHeight(void* ptr, void* index);
void QTreeView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QTreeView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QTreeView_RowsInserted(void* ptr, void* parent, int start, int end);
void QTreeView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QTreeView_RowsRemoved(void* ptr, void* parent, int start, int end);
void QTreeView_ScrollContentsBy(void* ptr, int dx, int dy);
void QTreeView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QTreeView_ScrollTo(void* ptr, void* index, long long hint);
void QTreeView_ScrollToDefault(void* ptr, void* index, long long hint);
void QTreeView_SelectAll(void* ptr);
void QTreeView_SelectAllDefault(void* ptr);
void QTreeView_SelectionChanged(void* ptr, void* selected, void* deselected);
void QTreeView_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
void QTreeView_SetColumnHidden(void* ptr, int column, char hide);
void QTreeView_SetColumnWidth(void* ptr, int column, int width);
void QTreeView_SetExpanded(void* ptr, void* index, char expanded);
void QTreeView_SetFirstColumnSpanned(void* ptr, int row, void* parent, char span);
void QTreeView_SetHeader(void* ptr, void* header);
void QTreeView_SetModel(void* ptr, void* model);
void QTreeView_SetModelDefault(void* ptr, void* model);
void QTreeView_SetRootIndex(void* ptr, void* index);
void QTreeView_SetRootIndexDefault(void* ptr, void* index);
void QTreeView_SetRowHidden(void* ptr, int row, void* parent, char hide);
void QTreeView_SetSelection(void* ptr, void* rect, long long command);
void QTreeView_SetSelectionDefault(void* ptr, void* rect, long long command);
void QTreeView_SetSelectionModel(void* ptr, void* selectionModel);
void QTreeView_SetSelectionModelDefault(void* ptr, void* selectionModel);
void QTreeView_SetTreePosition(void* ptr, int index);
void QTreeView_ShowColumn(void* ptr, int column);
int QTreeView_SizeHintForColumn(void* ptr, int column);
int QTreeView_SizeHintForColumnDefault(void* ptr, int column);
void QTreeView_SortByColumn(void* ptr, int column, long long order);
void QTreeView_TimerEvent(void* ptr, void* event);
int QTreeView_TreePosition(void* ptr);
void QTreeView_UpdateGeometries(void* ptr);
void QTreeView_UpdateGeometriesDefault(void* ptr);
int QTreeView_VerticalOffset(void* ptr);
int QTreeView_VerticalOffsetDefault(void* ptr);
char QTreeView_ViewportEvent(void* ptr, void* event);
char QTreeView_ViewportEventDefault(void* ptr, void* event);
void* QTreeView_ViewportSizeHint(void* ptr);
void* QTreeView_ViewportSizeHintDefault(void* ptr);
void* QTreeView_VisualRect(void* ptr, void* index);
void* QTreeView_VisualRectDefault(void* ptr, void* index);
void* QTreeView_VisualRegionForSelection(void* ptr, void* selection);
void* QTreeView_VisualRegionForSelectionDefault(void* ptr, void* selection);
void QTreeView_DestroyQTreeView(void* ptr);
void* QTreeView_selectedIndexes_atList(void* ptr, int i);
void QTreeView_DragLeaveEvent(void* ptr, void* event);
void QTreeView_DragLeaveEventDefault(void* ptr, void* event);
void QTreeView_ClearSelection(void* ptr);
void QTreeView_ClearSelectionDefault(void* ptr);
void QTreeView_CloseEditor(void* ptr, void* editor, long long hint);
void QTreeView_CloseEditorDefault(void* ptr, void* editor, long long hint);
void QTreeView_CommitData(void* ptr, void* editor);
void QTreeView_CommitDataDefault(void* ptr, void* editor);
void QTreeView_DragEnterEvent(void* ptr, void* event);
void QTreeView_DragEnterEventDefault(void* ptr, void* event);
void QTreeView_DropEvent(void* ptr, void* event);
void QTreeView_DropEventDefault(void* ptr, void* event);
void QTreeView_Edit(void* ptr, void* index);
void QTreeView_EditDefault(void* ptr, void* index);
char QTreeView_Edit2(void* ptr, void* index, long long trigger, void* event);
char QTreeView_Edit2Default(void* ptr, void* index, long long trigger, void* event);
void QTreeView_EditorDestroyed(void* ptr, void* editor);
void QTreeView_EditorDestroyedDefault(void* ptr, void* editor);
void QTreeView_FocusInEvent(void* ptr, void* event);
void QTreeView_FocusInEventDefault(void* ptr, void* event);
char QTreeView_FocusNextPrevChild(void* ptr, char next);
char QTreeView_FocusNextPrevChildDefault(void* ptr, char next);
void QTreeView_FocusOutEvent(void* ptr, void* event);
void QTreeView_FocusOutEventDefault(void* ptr, void* event);
void QTreeView_InputMethodEvent(void* ptr, void* event);
void QTreeView_InputMethodEventDefault(void* ptr, void* event);
void* QTreeView_InputMethodQuery(void* ptr, long long query);
void* QTreeView_InputMethodQueryDefault(void* ptr, long long query);
void QTreeView_ResizeEvent(void* ptr, void* event);
void QTreeView_ResizeEventDefault(void* ptr, void* event);
void QTreeView_ScrollToBottom(void* ptr);
void QTreeView_ScrollToBottomDefault(void* ptr);
void QTreeView_ScrollToTop(void* ptr);
void QTreeView_ScrollToTopDefault(void* ptr);
long long QTreeView_SelectionCommand(void* ptr, void* index, void* event);
long long QTreeView_SelectionCommandDefault(void* ptr, void* index, void* event);
void QTreeView_SetCurrentIndex(void* ptr, void* index);
void QTreeView_SetCurrentIndexDefault(void* ptr, void* index);
int QTreeView_SizeHintForRow(void* ptr, int row);
int QTreeView_SizeHintForRowDefault(void* ptr, int row);
void QTreeView_StartDrag(void* ptr, long long supportedActions);
void QTreeView_StartDragDefault(void* ptr, long long supportedActions);
void QTreeView_Update(void* ptr, void* index);
void QTreeView_UpdateDefault(void* ptr, void* index);
void* QTreeView_ViewOptions(void* ptr);
void* QTreeView_ViewOptionsDefault(void* ptr);
void QTreeView_ContextMenuEvent(void* ptr, void* e);
void QTreeView_ContextMenuEventDefault(void* ptr, void* e);
void* QTreeView_MinimumSizeHint(void* ptr);
void* QTreeView_MinimumSizeHintDefault(void* ptr);
void QTreeView_SetupViewport(void* ptr, void* viewport);
void QTreeView_SetupViewportDefault(void* ptr, void* viewport);
void* QTreeView_SizeHint(void* ptr);
void* QTreeView_SizeHintDefault(void* ptr);
void QTreeView_WheelEvent(void* ptr, void* e);
void QTreeView_WheelEventDefault(void* ptr, void* e);
void QTreeView_ChangeEvent(void* ptr, void* ev);
void QTreeView_ChangeEventDefault(void* ptr, void* ev);
void QTreeView_ActionEvent(void* ptr, void* event);
void QTreeView_ActionEventDefault(void* ptr, void* event);
void QTreeView_EnterEvent(void* ptr, void* event);
void QTreeView_EnterEventDefault(void* ptr, void* event);
void QTreeView_HideEvent(void* ptr, void* event);
void QTreeView_HideEventDefault(void* ptr, void* event);
void QTreeView_LeaveEvent(void* ptr, void* event);
void QTreeView_LeaveEventDefault(void* ptr, void* event);
void QTreeView_MoveEvent(void* ptr, void* event);
void QTreeView_MoveEventDefault(void* ptr, void* event);
void QTreeView_SetEnabled(void* ptr, char vbo);
void QTreeView_SetEnabledDefault(void* ptr, char vbo);
void QTreeView_SetStyleSheet(void* ptr, char* styleSheet);
void QTreeView_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QTreeView_SetVisible(void* ptr, char visible);
void QTreeView_SetVisibleDefault(void* ptr, char visible);
void QTreeView_SetWindowModified(void* ptr, char vbo);
void QTreeView_SetWindowModifiedDefault(void* ptr, char vbo);
void QTreeView_SetWindowTitle(void* ptr, char* vqs);
void QTreeView_SetWindowTitleDefault(void* ptr, char* vqs);
void QTreeView_ShowEvent(void* ptr, void* event);
void QTreeView_ShowEventDefault(void* ptr, void* event);
char QTreeView_Close(void* ptr);
char QTreeView_CloseDefault(void* ptr);
void QTreeView_CloseEvent(void* ptr, void* event);
void QTreeView_CloseEventDefault(void* ptr, void* event);
char QTreeView_HasHeightForWidth(void* ptr);
char QTreeView_HasHeightForWidthDefault(void* ptr);
int QTreeView_HeightForWidth(void* ptr, int w);
int QTreeView_HeightForWidthDefault(void* ptr, int w);
void QTreeView_Hide(void* ptr);
void QTreeView_HideDefault(void* ptr);
void QTreeView_KeyReleaseEvent(void* ptr, void* event);
void QTreeView_KeyReleaseEventDefault(void* ptr, void* event);
void QTreeView_Lower(void* ptr);
void QTreeView_LowerDefault(void* ptr);
char QTreeView_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QTreeView_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QTreeView_Raise(void* ptr);
void QTreeView_RaiseDefault(void* ptr);
void QTreeView_Repaint(void* ptr);
void QTreeView_RepaintDefault(void* ptr);
void QTreeView_SetDisabled(void* ptr, char disable);
void QTreeView_SetDisabledDefault(void* ptr, char disable);
void QTreeView_SetFocus2(void* ptr);
void QTreeView_SetFocus2Default(void* ptr);
void QTreeView_SetHidden(void* ptr, char hidden);
void QTreeView_SetHiddenDefault(void* ptr, char hidden);
void QTreeView_Show(void* ptr);
void QTreeView_ShowDefault(void* ptr);
void QTreeView_ShowFullScreen(void* ptr);
void QTreeView_ShowFullScreenDefault(void* ptr);
void QTreeView_ShowMaximized(void* ptr);
void QTreeView_ShowMaximizedDefault(void* ptr);
void QTreeView_ShowMinimized(void* ptr);
void QTreeView_ShowMinimizedDefault(void* ptr);
void QTreeView_ShowNormal(void* ptr);
void QTreeView_ShowNormalDefault(void* ptr);
void QTreeView_TabletEvent(void* ptr, void* event);
void QTreeView_TabletEventDefault(void* ptr, void* event);
void QTreeView_UpdateMicroFocus(void* ptr);
void QTreeView_UpdateMicroFocusDefault(void* ptr);
void QTreeView_ChildEvent(void* ptr, void* event);
void QTreeView_ChildEventDefault(void* ptr, void* event);
void QTreeView_ConnectNotify(void* ptr, void* sign);
void QTreeView_ConnectNotifyDefault(void* ptr, void* sign);
void QTreeView_CustomEvent(void* ptr, void* event);
void QTreeView_CustomEventDefault(void* ptr, void* event);
void QTreeView_DeleteLater(void* ptr);
void QTreeView_DeleteLaterDefault(void* ptr);
void QTreeView_DisconnectNotify(void* ptr, void* sign);
void QTreeView_DisconnectNotifyDefault(void* ptr, void* sign);
char QTreeView_EventFilter(void* ptr, void* watched, void* event);
char QTreeView_EventFilterDefault(void* ptr, void* watched, void* event);
void* QTreeView_MetaObject(void* ptr);
void* QTreeView_MetaObjectDefault(void* ptr);
int QTreeWidget_ColumnCount(void* ptr);
void QTreeWidget_SetColumnCount(void* ptr, int columns);
int QTreeWidget_TopLevelItemCount(void* ptr);
void* QTreeWidget_NewQTreeWidget(void* parent);
void QTreeWidget_AddTopLevelItem(void* ptr, void* item);
void QTreeWidget_Clear(void* ptr);
void QTreeWidget_ClosePersistentEditor(void* ptr, void* item, int column);
void QTreeWidget_CollapseItem(void* ptr, void* item);
int QTreeWidget_CurrentColumn(void* ptr);
void* QTreeWidget_CurrentItem(void* ptr);
void QTreeWidget_ConnectCurrentItemChanged(void* ptr);
void QTreeWidget_DisconnectCurrentItemChanged(void* ptr);
void QTreeWidget_CurrentItemChanged(void* ptr, void* current, void* previous);
void QTreeWidget_DropEvent(void* ptr, void* event);
void QTreeWidget_DropEventDefault(void* ptr, void* event);
char QTreeWidget_DropMimeData(void* ptr, void* parent, int index, void* data, long long action);
char QTreeWidget_DropMimeDataDefault(void* ptr, void* parent, int index, void* data, long long action);
void QTreeWidget_EditItem(void* ptr, void* item, int column);
char QTreeWidget_Event(void* ptr, void* e);
void QTreeWidget_ExpandItem(void* ptr, void* item);
struct QtWidgets_PackedList QTreeWidget_FindItems(void* ptr, char* text, long long flags, int column);
void* QTreeWidget_HeaderItem(void* ptr);
void* QTreeWidget_IndexFromItem(void* ptr, void* item, int column);
int QTreeWidget_IndexOfTopLevelItem(void* ptr, void* item);
void QTreeWidget_InsertTopLevelItem(void* ptr, int index, void* item);
void* QTreeWidget_InvisibleRootItem(void* ptr);
char QTreeWidget_IsFirstItemColumnSpanned(void* ptr, void* item);
void* QTreeWidget_ItemAbove(void* ptr, void* item);
void QTreeWidget_ConnectItemActivated(void* ptr);
void QTreeWidget_DisconnectItemActivated(void* ptr);
void QTreeWidget_ItemActivated(void* ptr, void* item, int column);
void* QTreeWidget_ItemAt(void* ptr, void* p);
void* QTreeWidget_ItemAt2(void* ptr, int x, int y);
void* QTreeWidget_ItemBelow(void* ptr, void* item);
void QTreeWidget_ConnectItemChanged(void* ptr);
void QTreeWidget_DisconnectItemChanged(void* ptr);
void QTreeWidget_ItemChanged(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemClicked(void* ptr);
void QTreeWidget_DisconnectItemClicked(void* ptr);
void QTreeWidget_ItemClicked(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemCollapsed(void* ptr);
void QTreeWidget_DisconnectItemCollapsed(void* ptr);
void QTreeWidget_ItemCollapsed(void* ptr, void* item);
void QTreeWidget_ConnectItemDoubleClicked(void* ptr);
void QTreeWidget_DisconnectItemDoubleClicked(void* ptr);
void QTreeWidget_ItemDoubleClicked(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemEntered(void* ptr);
void QTreeWidget_DisconnectItemEntered(void* ptr);
void QTreeWidget_ItemEntered(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemExpanded(void* ptr);
void QTreeWidget_DisconnectItemExpanded(void* ptr);
void QTreeWidget_ItemExpanded(void* ptr, void* item);
void* QTreeWidget_ItemFromIndex(void* ptr, void* index);
void QTreeWidget_ConnectItemPressed(void* ptr);
void QTreeWidget_DisconnectItemPressed(void* ptr);
void QTreeWidget_ItemPressed(void* ptr, void* item, int column);
void QTreeWidget_ConnectItemSelectionChanged(void* ptr);
void QTreeWidget_DisconnectItemSelectionChanged(void* ptr);
void QTreeWidget_ItemSelectionChanged(void* ptr);
void* QTreeWidget_ItemWidget(void* ptr, void* item, int column);
struct QtWidgets_PackedString QTreeWidget_MimeTypes(void* ptr);
struct QtWidgets_PackedString QTreeWidget_MimeTypesDefault(void* ptr);
void QTreeWidget_OpenPersistentEditor(void* ptr, void* item, int column);
void QTreeWidget_RemoveItemWidget(void* ptr, void* item, int column);
void QTreeWidget_ScrollToItem(void* ptr, void* item, long long hint);
struct QtWidgets_PackedList QTreeWidget_SelectedItems(void* ptr);
void QTreeWidget_SetCurrentItem(void* ptr, void* item);
void QTreeWidget_SetCurrentItem2(void* ptr, void* item, int column);
void QTreeWidget_SetCurrentItem3(void* ptr, void* item, int column, long long command);
void QTreeWidget_SetFirstItemColumnSpanned(void* ptr, void* item, char span);
void QTreeWidget_SetHeaderItem(void* ptr, void* item);
void QTreeWidget_SetHeaderLabel(void* ptr, char* label);
void QTreeWidget_SetHeaderLabels(void* ptr, char* labels);
void QTreeWidget_SetItemWidget(void* ptr, void* item, int column, void* widget);
void QTreeWidget_SetSelectionModel(void* ptr, void* selectionModel);
void QTreeWidget_SetSelectionModelDefault(void* ptr, void* selectionModel);
int QTreeWidget_SortColumn(void* ptr);
void QTreeWidget_SortItems(void* ptr, int column, long long order);
long long QTreeWidget_SupportedDropActions(void* ptr);
long long QTreeWidget_SupportedDropActionsDefault(void* ptr);
void* QTreeWidget_TakeTopLevelItem(void* ptr, int index);
void* QTreeWidget_TopLevelItem(void* ptr, int index);
void* QTreeWidget_VisualItemRect(void* ptr, void* item);
void QTreeWidget_DestroyQTreeWidget(void* ptr);
void* QTreeWidget_findItems_atList(void* ptr, int i);
void* QTreeWidget_selectedItems_atList(void* ptr, int i);
void QTreeWidget_Collapse(void* ptr, void* index);
void QTreeWidget_CollapseDefault(void* ptr, void* index);
void QTreeWidget_Expand(void* ptr, void* index);
void QTreeWidget_ExpandDefault(void* ptr, void* index);
void QTreeWidget_CollapseAll(void* ptr);
void QTreeWidget_CollapseAllDefault(void* ptr);
void QTreeWidget_ColumnCountChanged(void* ptr, int oldCount, int newCount);
void QTreeWidget_ColumnCountChangedDefault(void* ptr, int oldCount, int newCount);
void QTreeWidget_ColumnMoved(void* ptr);
void QTreeWidget_ColumnMovedDefault(void* ptr);
void QTreeWidget_ColumnResized(void* ptr, int column, int oldSize, int newSize);
void QTreeWidget_ColumnResizedDefault(void* ptr, int column, int oldSize, int newSize);
void QTreeWidget_CurrentChanged(void* ptr, void* current, void* previous);
void QTreeWidget_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QTreeWidget_DragMoveEvent(void* ptr, void* event);
void QTreeWidget_DragMoveEventDefault(void* ptr, void* event);
void QTreeWidget_DrawBranches(void* ptr, void* painter, void* rect, void* index);
void QTreeWidget_DrawBranchesDefault(void* ptr, void* painter, void* rect, void* index);
void QTreeWidget_DrawRow(void* ptr, void* painter, void* option, void* index);
void QTreeWidget_DrawRowDefault(void* ptr, void* painter, void* option, void* index);
void QTreeWidget_ExpandAll(void* ptr);
void QTreeWidget_ExpandAllDefault(void* ptr);
void QTreeWidget_ExpandToDepth(void* ptr, int depth);
void QTreeWidget_ExpandToDepthDefault(void* ptr, int depth);
void QTreeWidget_HideColumn(void* ptr, int column);
void QTreeWidget_HideColumnDefault(void* ptr, int column);
int QTreeWidget_HorizontalOffset(void* ptr);
int QTreeWidget_HorizontalOffsetDefault(void* ptr);
void* QTreeWidget_IndexAt(void* ptr, void* point);
void* QTreeWidget_IndexAtDefault(void* ptr, void* point);
char QTreeWidget_IsIndexHidden(void* ptr, void* index);
char QTreeWidget_IsIndexHiddenDefault(void* ptr, void* index);
void QTreeWidget_KeyPressEvent(void* ptr, void* event);
void QTreeWidget_KeyPressEventDefault(void* ptr, void* event);
void QTreeWidget_KeyboardSearch(void* ptr, char* search);
void QTreeWidget_KeyboardSearchDefault(void* ptr, char* search);
void QTreeWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QTreeWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QTreeWidget_MouseMoveEvent(void* ptr, void* event);
void QTreeWidget_MouseMoveEventDefault(void* ptr, void* event);
void QTreeWidget_MousePressEvent(void* ptr, void* event);
void QTreeWidget_MousePressEventDefault(void* ptr, void* event);
void QTreeWidget_MouseReleaseEvent(void* ptr, void* event);
void QTreeWidget_MouseReleaseEventDefault(void* ptr, void* event);
void* QTreeWidget_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QTreeWidget_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
void QTreeWidget_PaintEvent(void* ptr, void* event);
void QTreeWidget_PaintEventDefault(void* ptr, void* event);
void QTreeWidget_Reset(void* ptr);
void QTreeWidget_ResetDefault(void* ptr);
void QTreeWidget_ResizeColumnToContents(void* ptr, int column);
void QTreeWidget_ResizeColumnToContentsDefault(void* ptr, int column);
void QTreeWidget_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QTreeWidget_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QTreeWidget_RowsInserted(void* ptr, void* parent, int start, int end);
void QTreeWidget_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QTreeWidget_RowsRemoved(void* ptr, void* parent, int start, int end);
void QTreeWidget_RowsRemovedDefault(void* ptr, void* parent, int start, int end);
void QTreeWidget_ScrollContentsBy(void* ptr, int dx, int dy);
void QTreeWidget_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QTreeWidget_ScrollTo(void* ptr, void* index, long long hint);
void QTreeWidget_ScrollToDefault(void* ptr, void* index, long long hint);
void QTreeWidget_SelectAll(void* ptr);
void QTreeWidget_SelectAllDefault(void* ptr);
void QTreeWidget_SelectionChanged(void* ptr, void* selected, void* deselected);
void QTreeWidget_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
void QTreeWidget_SetModel(void* ptr, void* model);
void QTreeWidget_SetModelDefault(void* ptr, void* model);
void QTreeWidget_SetRootIndex(void* ptr, void* index);
void QTreeWidget_SetRootIndexDefault(void* ptr, void* index);
void QTreeWidget_SetSelection(void* ptr, void* rect, long long command);
void QTreeWidget_SetSelectionDefault(void* ptr, void* rect, long long command);
void QTreeWidget_ShowColumn(void* ptr, int column);
void QTreeWidget_ShowColumnDefault(void* ptr, int column);
int QTreeWidget_SizeHintForColumn(void* ptr, int column);
int QTreeWidget_SizeHintForColumnDefault(void* ptr, int column);
void QTreeWidget_UpdateGeometries(void* ptr);
void QTreeWidget_UpdateGeometriesDefault(void* ptr);
int QTreeWidget_VerticalOffset(void* ptr);
int QTreeWidget_VerticalOffsetDefault(void* ptr);
char QTreeWidget_ViewportEvent(void* ptr, void* event);
char QTreeWidget_ViewportEventDefault(void* ptr, void* event);
void* QTreeWidget_ViewportSizeHint(void* ptr);
void* QTreeWidget_ViewportSizeHintDefault(void* ptr);
void* QTreeWidget_VisualRect(void* ptr, void* index);
void* QTreeWidget_VisualRectDefault(void* ptr, void* index);
void* QTreeWidget_VisualRegionForSelection(void* ptr, void* selection);
void* QTreeWidget_VisualRegionForSelectionDefault(void* ptr, void* selection);
void QTreeWidget_DragLeaveEvent(void* ptr, void* event);
void QTreeWidget_DragLeaveEventDefault(void* ptr, void* event);
void QTreeWidget_ClearSelection(void* ptr);
void QTreeWidget_ClearSelectionDefault(void* ptr);
void QTreeWidget_CloseEditor(void* ptr, void* editor, long long hint);
void QTreeWidget_CloseEditorDefault(void* ptr, void* editor, long long hint);
void QTreeWidget_CommitData(void* ptr, void* editor);
void QTreeWidget_CommitDataDefault(void* ptr, void* editor);
void QTreeWidget_DragEnterEvent(void* ptr, void* event);
void QTreeWidget_DragEnterEventDefault(void* ptr, void* event);
void QTreeWidget_Edit(void* ptr, void* index);
void QTreeWidget_EditDefault(void* ptr, void* index);
char QTreeWidget_Edit2(void* ptr, void* index, long long trigger, void* event);
char QTreeWidget_Edit2Default(void* ptr, void* index, long long trigger, void* event);
void QTreeWidget_EditorDestroyed(void* ptr, void* editor);
void QTreeWidget_EditorDestroyedDefault(void* ptr, void* editor);
void QTreeWidget_FocusInEvent(void* ptr, void* event);
void QTreeWidget_FocusInEventDefault(void* ptr, void* event);
char QTreeWidget_FocusNextPrevChild(void* ptr, char next);
char QTreeWidget_FocusNextPrevChildDefault(void* ptr, char next);
void QTreeWidget_FocusOutEvent(void* ptr, void* event);
void QTreeWidget_FocusOutEventDefault(void* ptr, void* event);
void QTreeWidget_InputMethodEvent(void* ptr, void* event);
void QTreeWidget_InputMethodEventDefault(void* ptr, void* event);
void* QTreeWidget_InputMethodQuery(void* ptr, long long query);
void* QTreeWidget_InputMethodQueryDefault(void* ptr, long long query);
void QTreeWidget_ResizeEvent(void* ptr, void* event);
void QTreeWidget_ResizeEventDefault(void* ptr, void* event);
void QTreeWidget_ScrollToBottom(void* ptr);
void QTreeWidget_ScrollToBottomDefault(void* ptr);
void QTreeWidget_ScrollToTop(void* ptr);
void QTreeWidget_ScrollToTopDefault(void* ptr);
long long QTreeWidget_SelectionCommand(void* ptr, void* index, void* event);
long long QTreeWidget_SelectionCommandDefault(void* ptr, void* index, void* event);
void QTreeWidget_SetCurrentIndex(void* ptr, void* index);
void QTreeWidget_SetCurrentIndexDefault(void* ptr, void* index);
int QTreeWidget_SizeHintForRow(void* ptr, int row);
int QTreeWidget_SizeHintForRowDefault(void* ptr, int row);
void QTreeWidget_StartDrag(void* ptr, long long supportedActions);
void QTreeWidget_StartDragDefault(void* ptr, long long supportedActions);
void QTreeWidget_Update(void* ptr, void* index);
void QTreeWidget_UpdateDefault(void* ptr, void* index);
void* QTreeWidget_ViewOptions(void* ptr);
void* QTreeWidget_ViewOptionsDefault(void* ptr);
void QTreeWidget_ContextMenuEvent(void* ptr, void* e);
void QTreeWidget_ContextMenuEventDefault(void* ptr, void* e);
void* QTreeWidget_MinimumSizeHint(void* ptr);
void* QTreeWidget_MinimumSizeHintDefault(void* ptr);
void QTreeWidget_SetupViewport(void* ptr, void* viewport);
void QTreeWidget_SetupViewportDefault(void* ptr, void* viewport);
void* QTreeWidget_SizeHint(void* ptr);
void* QTreeWidget_SizeHintDefault(void* ptr);
void QTreeWidget_WheelEvent(void* ptr, void* e);
void QTreeWidget_WheelEventDefault(void* ptr, void* e);
void QTreeWidget_ChangeEvent(void* ptr, void* ev);
void QTreeWidget_ChangeEventDefault(void* ptr, void* ev);
void QTreeWidget_ActionEvent(void* ptr, void* event);
void QTreeWidget_ActionEventDefault(void* ptr, void* event);
void QTreeWidget_EnterEvent(void* ptr, void* event);
void QTreeWidget_EnterEventDefault(void* ptr, void* event);
void QTreeWidget_HideEvent(void* ptr, void* event);
void QTreeWidget_HideEventDefault(void* ptr, void* event);
void QTreeWidget_LeaveEvent(void* ptr, void* event);
void QTreeWidget_LeaveEventDefault(void* ptr, void* event);
void QTreeWidget_MoveEvent(void* ptr, void* event);
void QTreeWidget_MoveEventDefault(void* ptr, void* event);
void QTreeWidget_SetEnabled(void* ptr, char vbo);
void QTreeWidget_SetEnabledDefault(void* ptr, char vbo);
void QTreeWidget_SetStyleSheet(void* ptr, char* styleSheet);
void QTreeWidget_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QTreeWidget_SetVisible(void* ptr, char visible);
void QTreeWidget_SetVisibleDefault(void* ptr, char visible);
void QTreeWidget_SetWindowModified(void* ptr, char vbo);
void QTreeWidget_SetWindowModifiedDefault(void* ptr, char vbo);
void QTreeWidget_SetWindowTitle(void* ptr, char* vqs);
void QTreeWidget_SetWindowTitleDefault(void* ptr, char* vqs);
void QTreeWidget_ShowEvent(void* ptr, void* event);
void QTreeWidget_ShowEventDefault(void* ptr, void* event);
char QTreeWidget_Close(void* ptr);
char QTreeWidget_CloseDefault(void* ptr);
void QTreeWidget_CloseEvent(void* ptr, void* event);
void QTreeWidget_CloseEventDefault(void* ptr, void* event);
char QTreeWidget_HasHeightForWidth(void* ptr);
char QTreeWidget_HasHeightForWidthDefault(void* ptr);
int QTreeWidget_HeightForWidth(void* ptr, int w);
int QTreeWidget_HeightForWidthDefault(void* ptr, int w);
void QTreeWidget_Hide(void* ptr);
void QTreeWidget_HideDefault(void* ptr);
void QTreeWidget_KeyReleaseEvent(void* ptr, void* event);
void QTreeWidget_KeyReleaseEventDefault(void* ptr, void* event);
void QTreeWidget_Lower(void* ptr);
void QTreeWidget_LowerDefault(void* ptr);
char QTreeWidget_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QTreeWidget_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QTreeWidget_Raise(void* ptr);
void QTreeWidget_RaiseDefault(void* ptr);
void QTreeWidget_Repaint(void* ptr);
void QTreeWidget_RepaintDefault(void* ptr);
void QTreeWidget_SetDisabled(void* ptr, char disable);
void QTreeWidget_SetDisabledDefault(void* ptr, char disable);
void QTreeWidget_SetFocus2(void* ptr);
void QTreeWidget_SetFocus2Default(void* ptr);
void QTreeWidget_SetHidden(void* ptr, char hidden);
void QTreeWidget_SetHiddenDefault(void* ptr, char hidden);
void QTreeWidget_Show(void* ptr);
void QTreeWidget_ShowDefault(void* ptr);
void QTreeWidget_ShowFullScreen(void* ptr);
void QTreeWidget_ShowFullScreenDefault(void* ptr);
void QTreeWidget_ShowMaximized(void* ptr);
void QTreeWidget_ShowMaximizedDefault(void* ptr);
void QTreeWidget_ShowMinimized(void* ptr);
void QTreeWidget_ShowMinimizedDefault(void* ptr);
void QTreeWidget_ShowNormal(void* ptr);
void QTreeWidget_ShowNormalDefault(void* ptr);
void QTreeWidget_TabletEvent(void* ptr, void* event);
void QTreeWidget_TabletEventDefault(void* ptr, void* event);
void QTreeWidget_UpdateMicroFocus(void* ptr);
void QTreeWidget_UpdateMicroFocusDefault(void* ptr);
void QTreeWidget_ChildEvent(void* ptr, void* event);
void QTreeWidget_ChildEventDefault(void* ptr, void* event);
void QTreeWidget_ConnectNotify(void* ptr, void* sign);
void QTreeWidget_ConnectNotifyDefault(void* ptr, void* sign);
void QTreeWidget_CustomEvent(void* ptr, void* event);
void QTreeWidget_CustomEventDefault(void* ptr, void* event);
void QTreeWidget_DeleteLater(void* ptr);
void QTreeWidget_DeleteLaterDefault(void* ptr);
void QTreeWidget_DisconnectNotify(void* ptr, void* sign);
void QTreeWidget_DisconnectNotifyDefault(void* ptr, void* sign);
char QTreeWidget_EventFilter(void* ptr, void* watched, void* event);
char QTreeWidget_EventFilterDefault(void* ptr, void* watched, void* event);
void* QTreeWidget_MetaObject(void* ptr);
void* QTreeWidget_MetaObjectDefault(void* ptr);
void* QTreeWidgetItem_NewQTreeWidgetItem5(void* parent, void* preceding, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem4(void* parent, char* strin, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem3(void* parent, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem8(void* parent, void* preceding, int ty);
long long QTreeWidgetItem_Flags(void* ptr);
void QTreeWidgetItem_SetFlags(void* ptr, long long flags);
void* QTreeWidgetItem_NewQTreeWidgetItem7(void* parent, char* strin, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem6(void* parent, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem2(char* strin, int ty);
void* QTreeWidgetItem_NewQTreeWidgetItem9(void* other);
void* QTreeWidgetItem_NewQTreeWidgetItem(int ty);
void QTreeWidgetItem_AddChild(void* ptr, void* child);
void* QTreeWidgetItem_Background(void* ptr, int column);
long long QTreeWidgetItem_CheckState(void* ptr, int column);
void* QTreeWidgetItem_Child(void* ptr, int index);
int QTreeWidgetItem_ChildCount(void* ptr);
long long QTreeWidgetItem_ChildIndicatorPolicy(void* ptr);
int QTreeWidgetItem_ColumnCount(void* ptr);
void* QTreeWidgetItem_Data(void* ptr, int column, int role);
void* QTreeWidgetItem_DataDefault(void* ptr, int column, int role);
void QTreeWidgetItem_EmitDataChanged(void* ptr);
void* QTreeWidgetItem_Clone(void* ptr);
void* QTreeWidgetItem_CloneDefault(void* ptr);
void* QTreeWidgetItem_Font(void* ptr, int column);
void* QTreeWidgetItem_Foreground(void* ptr, int column);
void* QTreeWidgetItem_Icon(void* ptr, int column);
int QTreeWidgetItem_IndexOfChild(void* ptr, void* child);
void QTreeWidgetItem_InsertChild(void* ptr, int index, void* child);
char QTreeWidgetItem_IsDisabled(void* ptr);
char QTreeWidgetItem_IsExpanded(void* ptr);
char QTreeWidgetItem_IsFirstColumnSpanned(void* ptr);
char QTreeWidgetItem_IsHidden(void* ptr);
char QTreeWidgetItem_IsSelected(void* ptr);
void* QTreeWidgetItem_Parent(void* ptr);
void QTreeWidgetItem_RemoveChild(void* ptr, void* child);
void QTreeWidgetItem_SetBackground(void* ptr, int column, void* brush);
void QTreeWidgetItem_SetCheckState(void* ptr, int column, long long state);
void QTreeWidgetItem_SetChildIndicatorPolicy(void* ptr, long long policy);
void QTreeWidgetItem_SetData(void* ptr, int column, int role, void* value);
void QTreeWidgetItem_SetDataDefault(void* ptr, int column, int role, void* value);
void QTreeWidgetItem_SetDisabled(void* ptr, char disabled);
void QTreeWidgetItem_SetExpanded(void* ptr, char expand);
void QTreeWidgetItem_SetFirstColumnSpanned(void* ptr, char span);
void QTreeWidgetItem_SetFont(void* ptr, int column, void* font);
void QTreeWidgetItem_SetForeground(void* ptr, int column, void* brush);
void QTreeWidgetItem_SetHidden(void* ptr, char hide);
void QTreeWidgetItem_SetIcon(void* ptr, int column, void* icon);
void QTreeWidgetItem_SetSelected(void* ptr, char sele);
void QTreeWidgetItem_SetSizeHint(void* ptr, int column, void* size);
void QTreeWidgetItem_SetStatusTip(void* ptr, int column, char* statusTip);
void QTreeWidgetItem_SetText(void* ptr, int column, char* text);
void QTreeWidgetItem_SetTextAlignment(void* ptr, int column, int alignment);
void QTreeWidgetItem_SetToolTip(void* ptr, int column, char* toolTip);
void QTreeWidgetItem_SetWhatsThis(void* ptr, int column, char* whatsThis);
void* QTreeWidgetItem_SizeHint(void* ptr, int column);
void QTreeWidgetItem_SortChildren(void* ptr, int column, long long order);
struct QtWidgets_PackedString QTreeWidgetItem_StatusTip(void* ptr, int column);
void* QTreeWidgetItem_TakeChild(void* ptr, int index);
struct QtWidgets_PackedList QTreeWidgetItem_TakeChildren(void* ptr);
struct QtWidgets_PackedString QTreeWidgetItem_Text(void* ptr, int column);
int QTreeWidgetItem_TextAlignment(void* ptr, int column);
struct QtWidgets_PackedString QTreeWidgetItem_ToolTip(void* ptr, int column);
void* QTreeWidgetItem_TreeWidget(void* ptr);
int QTreeWidgetItem_Type(void* ptr);
struct QtWidgets_PackedString QTreeWidgetItem_WhatsThis(void* ptr, int column);
void QTreeWidgetItem_DestroyQTreeWidgetItem(void* ptr);
void QTreeWidgetItem_DestroyQTreeWidgetItemDefault(void* ptr);
void* QTreeWidgetItem_takeChildren_atList(void* ptr, int i);
void* QUndoCommand_NewQUndoCommand(void* parent);
void* QUndoCommand_NewQUndoCommand2(char* text, void* parent);
struct QtWidgets_PackedString QUndoCommand_ActionText(void* ptr);
void* QUndoCommand_Child(void* ptr, int index);
int QUndoCommand_ChildCount(void* ptr);
int QUndoCommand_Id(void* ptr);
int QUndoCommand_IdDefault(void* ptr);
char QUndoCommand_MergeWith(void* ptr, void* command);
char QUndoCommand_MergeWithDefault(void* ptr, void* command);
void QUndoCommand_Redo(void* ptr);
void QUndoCommand_RedoDefault(void* ptr);
void QUndoCommand_SetText(void* ptr, char* text);
struct QtWidgets_PackedString QUndoCommand_Text(void* ptr);
void QUndoCommand_Undo(void* ptr);
void QUndoCommand_UndoDefault(void* ptr);
void QUndoCommand_DestroyQUndoCommand(void* ptr);
void QUndoCommand_DestroyQUndoCommandDefault(void* ptr);
void* QUndoGroup_NewQUndoGroup(void* parent);
void* QUndoGroup_ActiveStack(void* ptr);
void QUndoGroup_ConnectActiveStackChanged(void* ptr);
void QUndoGroup_DisconnectActiveStackChanged(void* ptr);
void QUndoGroup_ActiveStackChanged(void* ptr, void* stack);
void QUndoGroup_AddStack(void* ptr, void* stack);
char QUndoGroup_CanRedo(void* ptr);
void QUndoGroup_ConnectCanRedoChanged(void* ptr);
void QUndoGroup_DisconnectCanRedoChanged(void* ptr);
void QUndoGroup_CanRedoChanged(void* ptr, char canRedo);
char QUndoGroup_CanUndo(void* ptr);
void QUndoGroup_ConnectCanUndoChanged(void* ptr);
void QUndoGroup_DisconnectCanUndoChanged(void* ptr);
void QUndoGroup_CanUndoChanged(void* ptr, char canUndo);
void QUndoGroup_ConnectCleanChanged(void* ptr);
void QUndoGroup_DisconnectCleanChanged(void* ptr);
void QUndoGroup_CleanChanged(void* ptr, char clean);
void* QUndoGroup_CreateRedoAction(void* ptr, void* parent, char* prefix);
void* QUndoGroup_CreateUndoAction(void* ptr, void* parent, char* prefix);
void QUndoGroup_ConnectIndexChanged(void* ptr);
void QUndoGroup_DisconnectIndexChanged(void* ptr);
void QUndoGroup_IndexChanged(void* ptr, int idx);
char QUndoGroup_IsClean(void* ptr);
void QUndoGroup_Redo(void* ptr);
struct QtWidgets_PackedString QUndoGroup_RedoText(void* ptr);
void QUndoGroup_ConnectRedoTextChanged(void* ptr);
void QUndoGroup_DisconnectRedoTextChanged(void* ptr);
void QUndoGroup_RedoTextChanged(void* ptr, char* redoText);
void QUndoGroup_RemoveStack(void* ptr, void* stack);
void QUndoGroup_SetActiveStack(void* ptr, void* stack);
struct QtWidgets_PackedList QUndoGroup_Stacks(void* ptr);
void QUndoGroup_Undo(void* ptr);
struct QtWidgets_PackedString QUndoGroup_UndoText(void* ptr);
void QUndoGroup_ConnectUndoTextChanged(void* ptr);
void QUndoGroup_DisconnectUndoTextChanged(void* ptr);
void QUndoGroup_UndoTextChanged(void* ptr, char* undoText);
void QUndoGroup_DestroyQUndoGroup(void* ptr);
void* QUndoGroup_stacks_atList(void* ptr, int i);
void QUndoGroup_TimerEvent(void* ptr, void* event);
void QUndoGroup_TimerEventDefault(void* ptr, void* event);
void QUndoGroup_ChildEvent(void* ptr, void* event);
void QUndoGroup_ChildEventDefault(void* ptr, void* event);
void QUndoGroup_ConnectNotify(void* ptr, void* sign);
void QUndoGroup_ConnectNotifyDefault(void* ptr, void* sign);
void QUndoGroup_CustomEvent(void* ptr, void* event);
void QUndoGroup_CustomEventDefault(void* ptr, void* event);
void QUndoGroup_DeleteLater(void* ptr);
void QUndoGroup_DeleteLaterDefault(void* ptr);
void QUndoGroup_DisconnectNotify(void* ptr, void* sign);
void QUndoGroup_DisconnectNotifyDefault(void* ptr, void* sign);
char QUndoGroup_Event(void* ptr, void* e);
char QUndoGroup_EventDefault(void* ptr, void* e);
char QUndoGroup_EventFilter(void* ptr, void* watched, void* event);
char QUndoGroup_EventFilterDefault(void* ptr, void* watched, void* event);
void* QUndoGroup_MetaObject(void* ptr);
void* QUndoGroup_MetaObjectDefault(void* ptr);
char QUndoStack_IsActive(void* ptr);
void QUndoStack_SetActive(void* ptr, char active);
void QUndoStack_SetUndoLimit(void* ptr, int limit);
int QUndoStack_UndoLimit(void* ptr);
void* QUndoStack_NewQUndoStack(void* parent);
void QUndoStack_BeginMacro(void* ptr, char* text);
char QUndoStack_CanRedo(void* ptr);
void QUndoStack_ConnectCanRedoChanged(void* ptr);
void QUndoStack_DisconnectCanRedoChanged(void* ptr);
void QUndoStack_CanRedoChanged(void* ptr, char canRedo);
char QUndoStack_CanUndo(void* ptr);
void QUndoStack_ConnectCanUndoChanged(void* ptr);
void QUndoStack_DisconnectCanUndoChanged(void* ptr);
void QUndoStack_CanUndoChanged(void* ptr, char canUndo);
void QUndoStack_ConnectCleanChanged(void* ptr);
void QUndoStack_DisconnectCleanChanged(void* ptr);
void QUndoStack_CleanChanged(void* ptr, char clean);
int QUndoStack_CleanIndex(void* ptr);
void QUndoStack_Clear(void* ptr);
void* QUndoStack_Command(void* ptr, int index);
int QUndoStack_Count(void* ptr);
void* QUndoStack_CreateRedoAction(void* ptr, void* parent, char* prefix);
void* QUndoStack_CreateUndoAction(void* ptr, void* parent, char* prefix);
void QUndoStack_EndMacro(void* ptr);
int QUndoStack_Index(void* ptr);
void QUndoStack_ConnectIndexChanged(void* ptr);
void QUndoStack_DisconnectIndexChanged(void* ptr);
void QUndoStack_IndexChanged(void* ptr, int idx);
char QUndoStack_IsClean(void* ptr);
void QUndoStack_Push(void* ptr, void* cmd);
void QUndoStack_Redo(void* ptr);
struct QtWidgets_PackedString QUndoStack_RedoText(void* ptr);
void QUndoStack_ConnectRedoTextChanged(void* ptr);
void QUndoStack_DisconnectRedoTextChanged(void* ptr);
void QUndoStack_RedoTextChanged(void* ptr, char* redoText);
void QUndoStack_SetClean(void* ptr);
void QUndoStack_SetIndex(void* ptr, int idx);
struct QtWidgets_PackedString QUndoStack_Text(void* ptr, int idx);
void QUndoStack_Undo(void* ptr);
struct QtWidgets_PackedString QUndoStack_UndoText(void* ptr);
void QUndoStack_ConnectUndoTextChanged(void* ptr);
void QUndoStack_DisconnectUndoTextChanged(void* ptr);
void QUndoStack_UndoTextChanged(void* ptr, char* undoText);
void QUndoStack_DestroyQUndoStack(void* ptr);
void QUndoStack_TimerEvent(void* ptr, void* event);
void QUndoStack_TimerEventDefault(void* ptr, void* event);
void QUndoStack_ChildEvent(void* ptr, void* event);
void QUndoStack_ChildEventDefault(void* ptr, void* event);
void QUndoStack_ConnectNotify(void* ptr, void* sign);
void QUndoStack_ConnectNotifyDefault(void* ptr, void* sign);
void QUndoStack_CustomEvent(void* ptr, void* event);
void QUndoStack_CustomEventDefault(void* ptr, void* event);
void QUndoStack_DeleteLater(void* ptr);
void QUndoStack_DeleteLaterDefault(void* ptr);
void QUndoStack_DisconnectNotify(void* ptr, void* sign);
void QUndoStack_DisconnectNotifyDefault(void* ptr, void* sign);
char QUndoStack_Event(void* ptr, void* e);
char QUndoStack_EventDefault(void* ptr, void* e);
char QUndoStack_EventFilter(void* ptr, void* watched, void* event);
char QUndoStack_EventFilterDefault(void* ptr, void* watched, void* event);
void* QUndoStack_MetaObject(void* ptr);
void* QUndoStack_MetaObjectDefault(void* ptr);
void* QUndoView_CleanIcon(void* ptr);
struct QtWidgets_PackedString QUndoView_EmptyLabel(void* ptr);
void QUndoView_SetCleanIcon(void* ptr, void* icon);
void QUndoView_SetEmptyLabel(void* ptr, char* label);
void* QUndoView_NewQUndoView3(void* group, void* parent);
void* QUndoView_NewQUndoView2(void* stack, void* parent);
void* QUndoView_NewQUndoView(void* parent);
void* QUndoView_Group(void* ptr);
void QUndoView_SetGroup(void* ptr, void* group);
void QUndoView_SetStack(void* ptr, void* stack);
void* QUndoView_Stack(void* ptr);
void QUndoView_DestroyQUndoView(void* ptr);
void QUndoView_CurrentChanged(void* ptr, void* current, void* previous);
void QUndoView_CurrentChangedDefault(void* ptr, void* current, void* previous);
void QUndoView_DragLeaveEvent(void* ptr, void* e);
void QUndoView_DragLeaveEventDefault(void* ptr, void* e);
void QUndoView_DragMoveEvent(void* ptr, void* e);
void QUndoView_DragMoveEventDefault(void* ptr, void* e);
void QUndoView_DropEvent(void* ptr, void* e);
void QUndoView_DropEventDefault(void* ptr, void* e);
int QUndoView_HorizontalOffset(void* ptr);
int QUndoView_HorizontalOffsetDefault(void* ptr);
void* QUndoView_IndexAt(void* ptr, void* p);
void* QUndoView_IndexAtDefault(void* ptr, void* p);
char QUndoView_IsIndexHidden(void* ptr, void* index);
char QUndoView_IsIndexHiddenDefault(void* ptr, void* index);
void QUndoView_MouseMoveEvent(void* ptr, void* e);
void QUndoView_MouseMoveEventDefault(void* ptr, void* e);
void QUndoView_MouseReleaseEvent(void* ptr, void* e);
void QUndoView_MouseReleaseEventDefault(void* ptr, void* e);
void* QUndoView_MoveCursor(void* ptr, long long cursorAction, long long modifiers);
void* QUndoView_MoveCursorDefault(void* ptr, long long cursorAction, long long modifiers);
void QUndoView_PaintEvent(void* ptr, void* e);
void QUndoView_PaintEventDefault(void* ptr, void* e);
void QUndoView_ResizeEvent(void* ptr, void* e);
void QUndoView_ResizeEventDefault(void* ptr, void* e);
void QUndoView_RowsAboutToBeRemoved(void* ptr, void* parent, int start, int end);
void QUndoView_RowsAboutToBeRemovedDefault(void* ptr, void* parent, int start, int end);
void QUndoView_RowsInserted(void* ptr, void* parent, int start, int end);
void QUndoView_RowsInsertedDefault(void* ptr, void* parent, int start, int end);
void QUndoView_ScrollTo(void* ptr, void* index, long long hint);
void QUndoView_ScrollToDefault(void* ptr, void* index, long long hint);
void QUndoView_SelectionChanged(void* ptr, void* selected, void* deselected);
void QUndoView_SelectionChangedDefault(void* ptr, void* selected, void* deselected);
void QUndoView_SetSelection(void* ptr, void* rect, long long command);
void QUndoView_SetSelectionDefault(void* ptr, void* rect, long long command);
void QUndoView_StartDrag(void* ptr, long long supportedActions);
void QUndoView_StartDragDefault(void* ptr, long long supportedActions);
void QUndoView_UpdateGeometries(void* ptr);
void QUndoView_UpdateGeometriesDefault(void* ptr);
int QUndoView_VerticalOffset(void* ptr);
int QUndoView_VerticalOffsetDefault(void* ptr);
void* QUndoView_ViewOptions(void* ptr);
void* QUndoView_ViewOptionsDefault(void* ptr);
void* QUndoView_ViewportSizeHint(void* ptr);
void* QUndoView_ViewportSizeHintDefault(void* ptr);
void* QUndoView_VisualRect(void* ptr, void* index);
void* QUndoView_VisualRectDefault(void* ptr, void* index);
void* QUndoView_VisualRegionForSelection(void* ptr, void* selection);
void* QUndoView_VisualRegionForSelectionDefault(void* ptr, void* selection);
void QUndoView_WheelEvent(void* ptr, void* e);
void QUndoView_WheelEventDefault(void* ptr, void* e);
char QUndoView_ViewportEvent(void* ptr, void* event);
char QUndoView_ViewportEventDefault(void* ptr, void* event);
void QUndoView_ClearSelection(void* ptr);
void QUndoView_ClearSelectionDefault(void* ptr);
void QUndoView_CloseEditor(void* ptr, void* editor, long long hint);
void QUndoView_CloseEditorDefault(void* ptr, void* editor, long long hint);
void QUndoView_CommitData(void* ptr, void* editor);
void QUndoView_CommitDataDefault(void* ptr, void* editor);
void QUndoView_DragEnterEvent(void* ptr, void* event);
void QUndoView_DragEnterEventDefault(void* ptr, void* event);
void QUndoView_Edit(void* ptr, void* index);
void QUndoView_EditDefault(void* ptr, void* index);
char QUndoView_Edit2(void* ptr, void* index, long long trigger, void* event);
char QUndoView_Edit2Default(void* ptr, void* index, long long trigger, void* event);
void QUndoView_EditorDestroyed(void* ptr, void* editor);
void QUndoView_EditorDestroyedDefault(void* ptr, void* editor);
void QUndoView_FocusInEvent(void* ptr, void* event);
void QUndoView_FocusInEventDefault(void* ptr, void* event);
char QUndoView_FocusNextPrevChild(void* ptr, char next);
char QUndoView_FocusNextPrevChildDefault(void* ptr, char next);
void QUndoView_FocusOutEvent(void* ptr, void* event);
void QUndoView_FocusOutEventDefault(void* ptr, void* event);
void QUndoView_InputMethodEvent(void* ptr, void* event);
void QUndoView_InputMethodEventDefault(void* ptr, void* event);
void* QUndoView_InputMethodQuery(void* ptr, long long query);
void* QUndoView_InputMethodQueryDefault(void* ptr, long long query);
void QUndoView_KeyPressEvent(void* ptr, void* event);
void QUndoView_KeyPressEventDefault(void* ptr, void* event);
void QUndoView_KeyboardSearch(void* ptr, char* search);
void QUndoView_KeyboardSearchDefault(void* ptr, char* search);
void QUndoView_MouseDoubleClickEvent(void* ptr, void* event);
void QUndoView_MouseDoubleClickEventDefault(void* ptr, void* event);
void QUndoView_MousePressEvent(void* ptr, void* event);
void QUndoView_MousePressEventDefault(void* ptr, void* event);
void QUndoView_Reset(void* ptr);
void QUndoView_ResetDefault(void* ptr);
void QUndoView_ScrollToBottom(void* ptr);
void QUndoView_ScrollToBottomDefault(void* ptr);
void QUndoView_ScrollToTop(void* ptr);
void QUndoView_ScrollToTopDefault(void* ptr);
void QUndoView_SelectAll(void* ptr);
void QUndoView_SelectAllDefault(void* ptr);
long long QUndoView_SelectionCommand(void* ptr, void* index, void* event);
long long QUndoView_SelectionCommandDefault(void* ptr, void* index, void* event);
void QUndoView_SetCurrentIndex(void* ptr, void* index);
void QUndoView_SetCurrentIndexDefault(void* ptr, void* index);
void QUndoView_SetModel(void* ptr, void* model);
void QUndoView_SetModelDefault(void* ptr, void* model);
void QUndoView_SetRootIndex(void* ptr, void* index);
void QUndoView_SetRootIndexDefault(void* ptr, void* index);
void QUndoView_SetSelectionModel(void* ptr, void* selectionModel);
void QUndoView_SetSelectionModelDefault(void* ptr, void* selectionModel);
int QUndoView_SizeHintForColumn(void* ptr, int column);
int QUndoView_SizeHintForColumnDefault(void* ptr, int column);
int QUndoView_SizeHintForRow(void* ptr, int row);
int QUndoView_SizeHintForRowDefault(void* ptr, int row);
void QUndoView_Update(void* ptr, void* index);
void QUndoView_UpdateDefault(void* ptr, void* index);
void QUndoView_ContextMenuEvent(void* ptr, void* e);
void QUndoView_ContextMenuEventDefault(void* ptr, void* e);
void* QUndoView_MinimumSizeHint(void* ptr);
void* QUndoView_MinimumSizeHintDefault(void* ptr);
void QUndoView_ScrollContentsBy(void* ptr, int dx, int dy);
void QUndoView_ScrollContentsByDefault(void* ptr, int dx, int dy);
void QUndoView_SetupViewport(void* ptr, void* viewport);
void QUndoView_SetupViewportDefault(void* ptr, void* viewport);
void* QUndoView_SizeHint(void* ptr);
void* QUndoView_SizeHintDefault(void* ptr);
void QUndoView_ChangeEvent(void* ptr, void* ev);
void QUndoView_ChangeEventDefault(void* ptr, void* ev);
void QUndoView_ActionEvent(void* ptr, void* event);
void QUndoView_ActionEventDefault(void* ptr, void* event);
void QUndoView_EnterEvent(void* ptr, void* event);
void QUndoView_EnterEventDefault(void* ptr, void* event);
void QUndoView_HideEvent(void* ptr, void* event);
void QUndoView_HideEventDefault(void* ptr, void* event);
void QUndoView_LeaveEvent(void* ptr, void* event);
void QUndoView_LeaveEventDefault(void* ptr, void* event);
void QUndoView_MoveEvent(void* ptr, void* event);
void QUndoView_MoveEventDefault(void* ptr, void* event);
void QUndoView_SetEnabled(void* ptr, char vbo);
void QUndoView_SetEnabledDefault(void* ptr, char vbo);
void QUndoView_SetStyleSheet(void* ptr, char* styleSheet);
void QUndoView_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QUndoView_SetVisible(void* ptr, char visible);
void QUndoView_SetVisibleDefault(void* ptr, char visible);
void QUndoView_SetWindowModified(void* ptr, char vbo);
void QUndoView_SetWindowModifiedDefault(void* ptr, char vbo);
void QUndoView_SetWindowTitle(void* ptr, char* vqs);
void QUndoView_SetWindowTitleDefault(void* ptr, char* vqs);
void QUndoView_ShowEvent(void* ptr, void* event);
void QUndoView_ShowEventDefault(void* ptr, void* event);
char QUndoView_Close(void* ptr);
char QUndoView_CloseDefault(void* ptr);
void QUndoView_CloseEvent(void* ptr, void* event);
void QUndoView_CloseEventDefault(void* ptr, void* event);
char QUndoView_HasHeightForWidth(void* ptr);
char QUndoView_HasHeightForWidthDefault(void* ptr);
int QUndoView_HeightForWidth(void* ptr, int w);
int QUndoView_HeightForWidthDefault(void* ptr, int w);
void QUndoView_Hide(void* ptr);
void QUndoView_HideDefault(void* ptr);
void QUndoView_KeyReleaseEvent(void* ptr, void* event);
void QUndoView_KeyReleaseEventDefault(void* ptr, void* event);
void QUndoView_Lower(void* ptr);
void QUndoView_LowerDefault(void* ptr);
char QUndoView_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QUndoView_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QUndoView_Raise(void* ptr);
void QUndoView_RaiseDefault(void* ptr);
void QUndoView_Repaint(void* ptr);
void QUndoView_RepaintDefault(void* ptr);
void QUndoView_SetDisabled(void* ptr, char disable);
void QUndoView_SetDisabledDefault(void* ptr, char disable);
void QUndoView_SetFocus2(void* ptr);
void QUndoView_SetFocus2Default(void* ptr);
void QUndoView_SetHidden(void* ptr, char hidden);
void QUndoView_SetHiddenDefault(void* ptr, char hidden);
void QUndoView_Show(void* ptr);
void QUndoView_ShowDefault(void* ptr);
void QUndoView_ShowFullScreen(void* ptr);
void QUndoView_ShowFullScreenDefault(void* ptr);
void QUndoView_ShowMaximized(void* ptr);
void QUndoView_ShowMaximizedDefault(void* ptr);
void QUndoView_ShowMinimized(void* ptr);
void QUndoView_ShowMinimizedDefault(void* ptr);
void QUndoView_ShowNormal(void* ptr);
void QUndoView_ShowNormalDefault(void* ptr);
void QUndoView_TabletEvent(void* ptr, void* event);
void QUndoView_TabletEventDefault(void* ptr, void* event);
void QUndoView_UpdateMicroFocus(void* ptr);
void QUndoView_UpdateMicroFocusDefault(void* ptr);
void QUndoView_ChildEvent(void* ptr, void* event);
void QUndoView_ChildEventDefault(void* ptr, void* event);
void QUndoView_ConnectNotify(void* ptr, void* sign);
void QUndoView_ConnectNotifyDefault(void* ptr, void* sign);
void QUndoView_CustomEvent(void* ptr, void* event);
void QUndoView_CustomEventDefault(void* ptr, void* event);
void QUndoView_DeleteLater(void* ptr);
void QUndoView_DeleteLaterDefault(void* ptr);
void QUndoView_DisconnectNotify(void* ptr, void* sign);
void QUndoView_DisconnectNotifyDefault(void* ptr, void* sign);
char QUndoView_EventFilter(void* ptr, void* watched, void* event);
char QUndoView_EventFilterDefault(void* ptr, void* watched, void* event);
void* QUndoView_MetaObject(void* ptr);
void* QUndoView_MetaObjectDefault(void* ptr);
void* QVBoxLayout_NewQVBoxLayout();
void* QVBoxLayout_NewQVBoxLayout2(void* parent);
void QVBoxLayout_DestroyQVBoxLayout(void* ptr);
void QVBoxLayout_AddItem(void* ptr, void* item);
void QVBoxLayout_AddItemDefault(void* ptr, void* item);
int QVBoxLayout_Count(void* ptr);
int QVBoxLayout_CountDefault(void* ptr);
long long QVBoxLayout_ExpandingDirections(void* ptr);
long long QVBoxLayout_ExpandingDirectionsDefault(void* ptr);
char QVBoxLayout_HasHeightForWidth(void* ptr);
char QVBoxLayout_HasHeightForWidthDefault(void* ptr);
int QVBoxLayout_HeightForWidth(void* ptr, int w);
int QVBoxLayout_HeightForWidthDefault(void* ptr, int w);
void QVBoxLayout_Invalidate(void* ptr);
void QVBoxLayout_InvalidateDefault(void* ptr);
void* QVBoxLayout_ItemAt(void* ptr, int index);
void* QVBoxLayout_ItemAtDefault(void* ptr, int index);
void* QVBoxLayout_MaximumSize(void* ptr);
void* QVBoxLayout_MaximumSizeDefault(void* ptr);
int QVBoxLayout_MinimumHeightForWidth(void* ptr, int w);
int QVBoxLayout_MinimumHeightForWidthDefault(void* ptr, int w);
void* QVBoxLayout_MinimumSize(void* ptr);
void* QVBoxLayout_MinimumSizeDefault(void* ptr);
void QVBoxLayout_SetGeometry(void* ptr, void* r);
void QVBoxLayout_SetGeometryDefault(void* ptr, void* r);
void* QVBoxLayout_SizeHint(void* ptr);
void* QVBoxLayout_SizeHintDefault(void* ptr);
void* QVBoxLayout_TakeAt(void* ptr, int index);
void* QVBoxLayout_TakeAtDefault(void* ptr, int index);
long long QVBoxLayout_ControlTypes(void* ptr);
long long QVBoxLayout_ControlTypesDefault(void* ptr);
void* QVBoxLayout_Geometry(void* ptr);
void* QVBoxLayout_GeometryDefault(void* ptr);
int QVBoxLayout_IndexOf(void* ptr, void* widget);
int QVBoxLayout_IndexOfDefault(void* ptr, void* widget);
char QVBoxLayout_IsEmpty(void* ptr);
char QVBoxLayout_IsEmptyDefault(void* ptr);
void* QVBoxLayout_Layout(void* ptr);
void* QVBoxLayout_LayoutDefault(void* ptr);
void QVBoxLayout_TimerEvent(void* ptr, void* event);
void QVBoxLayout_TimerEventDefault(void* ptr, void* event);
void QVBoxLayout_ConnectNotify(void* ptr, void* sign);
void QVBoxLayout_ConnectNotifyDefault(void* ptr, void* sign);
void QVBoxLayout_CustomEvent(void* ptr, void* event);
void QVBoxLayout_CustomEventDefault(void* ptr, void* event);
void QVBoxLayout_DeleteLater(void* ptr);
void QVBoxLayout_DeleteLaterDefault(void* ptr);
void QVBoxLayout_DisconnectNotify(void* ptr, void* sign);
void QVBoxLayout_DisconnectNotifyDefault(void* ptr, void* sign);
char QVBoxLayout_Event(void* ptr, void* e);
char QVBoxLayout_EventDefault(void* ptr, void* e);
char QVBoxLayout_EventFilter(void* ptr, void* watched, void* event);
char QVBoxLayout_EventFilterDefault(void* ptr, void* watched, void* event);
void* QVBoxLayout_MetaObject(void* ptr);
void* QVBoxLayout_MetaObjectDefault(void* ptr);
void* QVBoxLayout_SpacerItem(void* ptr);
void* QVBoxLayout_SpacerItemDefault(void* ptr);
void* QVBoxLayout_Widget(void* ptr);
void* QVBoxLayout_WidgetDefault(void* ptr);
void* QWhatsThis_QWhatsThis_CreateAction(void* parent);
void QWhatsThis_QWhatsThis_EnterWhatsThisMode();
void QWhatsThis_QWhatsThis_HideText();
char QWhatsThis_QWhatsThis_InWhatsThisMode();
void QWhatsThis_QWhatsThis_LeaveWhatsThisMode();
void QWhatsThis_QWhatsThis_ShowText(void* pos, char* text, void* w);
char QWidget_AcceptDrops(void* ptr);
struct QtWidgets_PackedString QWidget_AccessibleDescription(void* ptr);
struct QtWidgets_PackedString QWidget_AccessibleName(void* ptr);
void QWidget_ActionEvent(void* ptr, void* event);
void QWidget_ActionEventDefault(void* ptr, void* event);
void QWidget_ActivateWindow(void* ptr);
char QWidget_AutoFillBackground(void* ptr);
void* QWidget_BaseSize(void* ptr);
void* QWidget_ChildrenRect(void* ptr);
void* QWidget_ChildrenRegion(void* ptr);
void QWidget_ClearMask(void* ptr);
long long QWidget_ContextMenuPolicy(void* ptr);
void* QWidget_Cursor(void* ptr);
void QWidget_Destroy(void* ptr, char destroyWindow, char destroySubWindows);
void QWidget_DragEnterEvent(void* ptr, void* event);
void QWidget_DragEnterEventDefault(void* ptr, void* event);
void QWidget_DragLeaveEvent(void* ptr, void* event);
void QWidget_DragLeaveEventDefault(void* ptr, void* event);
void QWidget_DragMoveEvent(void* ptr, void* event);
void QWidget_DragMoveEventDefault(void* ptr, void* event);
void QWidget_DropEvent(void* ptr, void* event);
void QWidget_DropEventDefault(void* ptr, void* event);
void QWidget_EnterEvent(void* ptr, void* event);
void QWidget_EnterEventDefault(void* ptr, void* event);
void QWidget_FocusInEvent(void* ptr, void* event);
void QWidget_FocusInEventDefault(void* ptr, void* event);
void QWidget_FocusOutEvent(void* ptr, void* event);
void QWidget_FocusOutEventDefault(void* ptr, void* event);
long long QWidget_FocusPolicy(void* ptr);
void* QWidget_FrameGeometry(void* ptr);
void* QWidget_FrameSize(void* ptr);
void QWidget_GrabKeyboard(void* ptr);
void QWidget_GrabMouse(void* ptr);
void QWidget_GrabMouse2(void* ptr, void* cursor);
char QWidget_HasFocus(void* ptr);
void QWidget_HideEvent(void* ptr, void* event);
void QWidget_HideEventDefault(void* ptr, void* event);
long long QWidget_InputMethodHints(void* ptr);
char QWidget_IsActiveWindow(void* ptr);
char QWidget_IsFullScreen(void* ptr);
char QWidget_IsMaximized(void* ptr);
char QWidget_IsMinimized(void* ptr);
char QWidget_IsWindowModified(void* ptr);
void* QWidget_QWidget_KeyboardGrabber();
long long QWidget_LayoutDirection(void* ptr);
void QWidget_LeaveEvent(void* ptr, void* event);
void QWidget_LeaveEventDefault(void* ptr, void* event);
void* QWidget_Locale(void* ptr);
void* QWidget_MapFromGlobal(void* ptr, void* pos);
void* QWidget_MapToGlobal(void* ptr, void* pos);
void* QWidget_MaximumSize(void* ptr);
int QWidget_Metric(void* ptr, long long m);
void* QWidget_MinimumSize(void* ptr);
void* QWidget_MinimumSizeHint(void* ptr);
void* QWidget_MinimumSizeHintDefault(void* ptr);
void* QWidget_QWidget_MouseGrabber();
void QWidget_Move(void* ptr, void* vqp);
void QWidget_MoveEvent(void* ptr, void* event);
void QWidget_MoveEventDefault(void* ptr, void* event);
void* QWidget_NormalGeometry(void* ptr);
void* QWidget_PaintEngine(void* ptr);
void QWidget_PaintEvent(void* ptr, void* event);
void QWidget_PaintEventDefault(void* ptr, void* event);
void* QWidget_Palette(void* ptr);
void* QWidget_Pos(void* ptr);
void QWidget_ReleaseKeyboard(void* ptr);
void QWidget_ReleaseMouse(void* ptr);
void QWidget_Resize(void* ptr, void* vqs);
void QWidget_SetAcceptDrops(void* ptr, char on);
void QWidget_SetAccessibleDescription(void* ptr, char* description);
void QWidget_SetAccessibleName(void* ptr, char* name);
void QWidget_SetAutoFillBackground(void* ptr, char enabled);
void QWidget_SetContextMenuPolicy(void* ptr, long long policy);
void QWidget_SetCursor(void* ptr, void* vqc);
void QWidget_SetEditFocus(void* ptr, char enable);
void QWidget_SetEnabled(void* ptr, char vbo);
void QWidget_SetFixedSize2(void* ptr, int w, int h);
void QWidget_SetFocusPolicy(void* ptr, long long policy);
void QWidget_SetFont(void* ptr, void* vqf);
void QWidget_SetGeometry(void* ptr, void* vqr);
void QWidget_SetInputMethodHints(void* ptr, long long hints);
void QWidget_SetLayout(void* ptr, void* layout);
void QWidget_SetLayoutDirection(void* ptr, long long direction);
void QWidget_SetLocale(void* ptr, void* locale);
void QWidget_SetMask(void* ptr, void* bitmap);
void QWidget_SetMask2(void* ptr, void* region);
void QWidget_SetMaximumHeight(void* ptr, int maxh);
void QWidget_SetMaximumWidth(void* ptr, int maxw);
void QWidget_SetMinimumHeight(void* ptr, int minh);
void QWidget_SetMinimumWidth(void* ptr, int minw);
void QWidget_SetPalette(void* ptr, void* vqp);
void QWidget_SetSizePolicy(void* ptr, void* vqs);
void QWidget_SetStatusTip(void* ptr, char* vqs);
void QWidget_SetStyleSheet(void* ptr, char* styleSheet);
void QWidget_SetToolTip(void* ptr, char* vqs);
void QWidget_SetToolTipDuration(void* ptr, int msec);
void QWidget_SetUpdatesEnabled(void* ptr, char enable);
void QWidget_SetVisible(void* ptr, char visible);
void QWidget_SetVisibleDefault(void* ptr, char visible);
void QWidget_SetWhatsThis(void* ptr, char* vqs);
void QWidget_SetWindowFilePath(void* ptr, char* filePath);
void QWidget_SetWindowFlags(void* ptr, long long ty);
void QWidget_SetWindowIcon(void* ptr, void* icon);
void QWidget_SetWindowIconText(void* ptr, char* vqs);
void QWidget_SetWindowModality(void* ptr, long long windowModality);
void QWidget_SetWindowModified(void* ptr, char vbo);
void QWidget_SetWindowOpacity(void* ptr, double level);
void QWidget_SetWindowState(void* ptr, long long windowState);
void QWidget_SetWindowTitle(void* ptr, char* vqs);
void QWidget_ShowEvent(void* ptr, void* event);
void QWidget_ShowEventDefault(void* ptr, void* event);
void* QWidget_SizeHint(void* ptr);
void* QWidget_SizeHintDefault(void* ptr);
void* QWidget_SizeIncrement(void* ptr);
void* QWidget_SizePolicy(void* ptr);
struct QtWidgets_PackedString QWidget_StatusTip(void* ptr);
struct QtWidgets_PackedString QWidget_StyleSheet(void* ptr);
struct QtWidgets_PackedString QWidget_ToolTip(void* ptr);
int QWidget_ToolTipDuration(void* ptr);
void QWidget_UnsetCursor(void* ptr);
void QWidget_UnsetLayoutDirection(void* ptr);
void QWidget_UnsetLocale(void* ptr);
struct QtWidgets_PackedString QWidget_WhatsThis(void* ptr);
uintptr_t QWidget_WinId(void* ptr);
struct QtWidgets_PackedString QWidget_WindowFilePath(void* ptr);
void* QWidget_WindowIcon(void* ptr);
struct QtWidgets_PackedString QWidget_WindowIconText(void* ptr);
long long QWidget_WindowModality(void* ptr);
double QWidget_WindowOpacity(void* ptr);
struct QtWidgets_PackedString QWidget_WindowTitle(void* ptr);
int QWidget_X(void* ptr);
int QWidget_Y(void* ptr);
void* QWidget_NewQWidget(void* parent, long long f);
struct QtWidgets_PackedList QWidget_Actions(void* ptr);
void QWidget_AddAction(void* ptr, void* action);
void QWidget_AdjustSize(void* ptr);
long long QWidget_BackgroundRole(void* ptr);
void* QWidget_BackingStore(void* ptr);
void QWidget_ChangeEvent(void* ptr, void* event);
void QWidget_ChangeEventDefault(void* ptr, void* event);
void* QWidget_ChildAt2(void* ptr, void* p);
void* QWidget_ChildAt(void* ptr, int x, int y);
void QWidget_ClearFocus(void* ptr);
char QWidget_Close(void* ptr);
void QWidget_CloseEvent(void* ptr, void* event);
void QWidget_CloseEventDefault(void* ptr, void* event);
void* QWidget_ContentsMargins(void* ptr);
void* QWidget_ContentsRect(void* ptr);
void QWidget_ContextMenuEvent(void* ptr, void* event);
void QWidget_ContextMenuEventDefault(void* ptr, void* event);
void QWidget_Create(void* ptr, uintptr_t window, char initializeWindow, char destroyOldWindow);
void QWidget_ConnectCustomContextMenuRequested(void* ptr);
void QWidget_DisconnectCustomContextMenuRequested(void* ptr);
void QWidget_CustomContextMenuRequested(void* ptr, void* pos);
char QWidget_Event(void* ptr, void* event);
void* QWidget_QWidget_Find(uintptr_t id);
uintptr_t QWidget_EffectiveWinId(void* ptr);
void QWidget_EnsurePolished(void* ptr);
char QWidget_FocusNextChild(void* ptr);
char QWidget_FocusNextPrevChild(void* ptr, char next);
char QWidget_FocusNextPrevChildDefault(void* ptr, char next);
char QWidget_FocusPreviousChild(void* ptr);
void* QWidget_FocusProxy(void* ptr);
void* QWidget_FocusWidget(void* ptr);
void* QWidget_Font(void* ptr);
void* QWidget_FontInfo(void* ptr);
void* QWidget_FontMetrics(void* ptr);
long long QWidget_ForegroundRole(void* ptr);
void* QWidget_Geometry(void* ptr);
void QWidget_GetContentsMargins(void* ptr, int left, int top, int right, int bottom);
void* QWidget_Grab(void* ptr, void* rectangle);
void QWidget_GrabGesture(void* ptr, long long gesture, long long flags);
int QWidget_GrabShortcut(void* ptr, void* key, long long context);
void* QWidget_GraphicsEffect(void* ptr);
void* QWidget_GraphicsProxyWidget(void* ptr);
char QWidget_HasEditFocus(void* ptr);
char QWidget_HasHeightForWidth(void* ptr);
char QWidget_HasHeightForWidthDefault(void* ptr);
char QWidget_HasMouseTracking(void* ptr);
int QWidget_Height(void* ptr);
int QWidget_HeightForWidth(void* ptr, int w);
int QWidget_HeightForWidthDefault(void* ptr, int w);
void QWidget_Hide(void* ptr);
void QWidget_InitPainter(void* ptr, void* painter);
void QWidget_InputMethodEvent(void* ptr, void* event);
void QWidget_InputMethodEventDefault(void* ptr, void* event);
void* QWidget_InputMethodQuery(void* ptr, long long query);
void* QWidget_InputMethodQueryDefault(void* ptr, long long query);
void QWidget_InsertAction(void* ptr, void* before, void* action);
char QWidget_IsAncestorOf(void* ptr, void* child);
char QWidget_IsEnabled(void* ptr);
char QWidget_IsEnabledTo(void* ptr, void* ancestor);
char QWidget_IsHidden(void* ptr);
char QWidget_IsModal(void* ptr);
char QWidget_IsVisible(void* ptr);
char QWidget_IsVisibleTo(void* ptr, void* ancestor);
char QWidget_IsWindow(void* ptr);
void QWidget_KeyPressEvent(void* ptr, void* event);
void QWidget_KeyPressEventDefault(void* ptr, void* event);
void QWidget_KeyReleaseEvent(void* ptr, void* event);
void QWidget_KeyReleaseEventDefault(void* ptr, void* event);
void* QWidget_Layout(void* ptr);
void QWidget_Lower(void* ptr);
void* QWidget_MapFrom(void* ptr, void* parent, void* pos);
void* QWidget_MapFromParent(void* ptr, void* pos);
void* QWidget_MapTo(void* ptr, void* parent, void* pos);
void* QWidget_MapToParent(void* ptr, void* pos);
void* QWidget_Mask(void* ptr);
int QWidget_MaximumHeight(void* ptr);
int QWidget_MaximumWidth(void* ptr);
int QWidget_MinimumHeight(void* ptr);
int QWidget_MinimumWidth(void* ptr);
void QWidget_MouseDoubleClickEvent(void* ptr, void* event);
void QWidget_MouseDoubleClickEventDefault(void* ptr, void* event);
void QWidget_MouseMoveEvent(void* ptr, void* event);
void QWidget_MouseMoveEventDefault(void* ptr, void* event);
void QWidget_MousePressEvent(void* ptr, void* event);
void QWidget_MousePressEventDefault(void* ptr, void* event);
void QWidget_MouseReleaseEvent(void* ptr, void* event);
void QWidget_MouseReleaseEventDefault(void* ptr, void* event);
void QWidget_Move2(void* ptr, int x, int y);
char QWidget_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QWidget_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void* QWidget_NativeParentWidget(void* ptr);
void* QWidget_NextInFocusChain(void* ptr);
void QWidget_OverrideWindowFlags(void* ptr, long long flags);
void* QWidget_ParentWidget(void* ptr);
void* QWidget_PreviousInFocusChain(void* ptr);
void QWidget_Raise(void* ptr);
void* QWidget_Rect(void* ptr);
void QWidget_ReleaseShortcut(void* ptr, int id);
void QWidget_RemoveAction(void* ptr, void* action);
void QWidget_Render(void* ptr, void* target, void* targetOffset, void* sourceRegion, long long renderFlags);
void QWidget_Render2(void* ptr, void* painter, void* targetOffset, void* sourceRegion, long long renderFlags);
void QWidget_Repaint(void* ptr);
void QWidget_Repaint3(void* ptr, void* rect);
void QWidget_Repaint4(void* ptr, void* rgn);
void QWidget_Repaint2(void* ptr, int x, int y, int w, int h);
void QWidget_Resize2(void* ptr, int w, int h);
void QWidget_ResizeEvent(void* ptr, void* event);
void QWidget_ResizeEventDefault(void* ptr, void* event);
char QWidget_RestoreGeometry(void* ptr, void* geometry);
void* QWidget_SaveGeometry(void* ptr);
void QWidget_Scroll(void* ptr, int dx, int dy);
void QWidget_Scroll2(void* ptr, int dx, int dy, void* r);
void QWidget_SetAttribute(void* ptr, long long attribute, char on);
void QWidget_SetBackgroundRole(void* ptr, long long role);
void QWidget_SetBaseSize(void* ptr, void* vqs);
void QWidget_SetBaseSize2(void* ptr, int basew, int baseh);
void QWidget_SetContentsMargins2(void* ptr, void* margins);
void QWidget_SetContentsMargins(void* ptr, int left, int top, int right, int bottom);
void QWidget_SetDisabled(void* ptr, char disable);
void QWidget_SetFixedHeight(void* ptr, int h);
void QWidget_SetFixedSize(void* ptr, void* s);
void QWidget_SetFixedWidth(void* ptr, int w);
void QWidget_SetFocus2(void* ptr);
void QWidget_SetFocus(void* ptr, long long reason);
void QWidget_SetFocusProxy(void* ptr, void* w);
void QWidget_SetForegroundRole(void* ptr, long long role);
void QWidget_SetGeometry2(void* ptr, int x, int y, int w, int h);
void QWidget_SetGraphicsEffect(void* ptr, void* effect);
void QWidget_SetHidden(void* ptr, char hidden);
void QWidget_SetMaximumSize(void* ptr, void* vqs);
void QWidget_SetMaximumSize2(void* ptr, int maxw, int maxh);
void QWidget_SetMinimumSize(void* ptr, void* vqs);
void QWidget_SetMinimumSize2(void* ptr, int minw, int minh);
void QWidget_SetMouseTracking(void* ptr, char enable);
void QWidget_SetParent(void* ptr, void* parent);
void QWidget_SetParent2(void* ptr, void* parent, long long f);
void QWidget_SetShortcutAutoRepeat(void* ptr, int id, char enable);
void QWidget_SetShortcutEnabled(void* ptr, int id, char enable);
void QWidget_SetSizeIncrement(void* ptr, void* vqs);
void QWidget_SetSizeIncrement2(void* ptr, int w, int h);
void QWidget_SetSizePolicy2(void* ptr, long long horizontal, long long vertical);
void QWidget_SetStyle(void* ptr, void* style);
void QWidget_QWidget_SetTabOrder(void* first, void* second);
void QWidget_SetWindowRole(void* ptr, char* role);
void QWidget_SetupUi(void* ptr, void* widget);
void QWidget_Show(void* ptr);
void QWidget_ShowFullScreen(void* ptr);
void QWidget_ShowMaximized(void* ptr);
void QWidget_ShowMinimized(void* ptr);
void QWidget_ShowNormal(void* ptr);
void* QWidget_Size(void* ptr);
void QWidget_StackUnder(void* ptr, void* w);
void* QWidget_Style(void* ptr);
void QWidget_TabletEvent(void* ptr, void* event);
void QWidget_TabletEventDefault(void* ptr, void* event);
char QWidget_TestAttribute(void* ptr, long long attribute);
char QWidget_UnderMouse(void* ptr);
void QWidget_UngrabGesture(void* ptr, long long gesture);
void QWidget_Update(void* ptr);
void QWidget_Update3(void* ptr, void* rect);
void QWidget_Update4(void* ptr, void* rgn);
void QWidget_Update2(void* ptr, int x, int y, int w, int h);
void QWidget_UpdateGeometry(void* ptr);
void QWidget_UpdateMicroFocus(void* ptr);
char QWidget_UpdatesEnabled(void* ptr);
void* QWidget_VisibleRegion(void* ptr);
void QWidget_WheelEvent(void* ptr, void* event);
void QWidget_WheelEventDefault(void* ptr, void* event);
int QWidget_Width(void* ptr);
void* QWidget_Window(void* ptr);
long long QWidget_WindowFlags(void* ptr);
void* QWidget_WindowHandle(void* ptr);
void QWidget_ConnectWindowIconChanged(void* ptr);
void QWidget_DisconnectWindowIconChanged(void* ptr);
void QWidget_WindowIconChanged(void* ptr, void* icon);
struct QtWidgets_PackedString QWidget_WindowRole(void* ptr);
long long QWidget_WindowState(void* ptr);
void QWidget_ConnectWindowTitleChanged(void* ptr);
void QWidget_DisconnectWindowTitleChanged(void* ptr);
void QWidget_WindowTitleChanged(void* ptr, char* title);
long long QWidget_WindowType(void* ptr);
void QWidget_DestroyQWidget(void* ptr);
void* QWidget_QWidget_CreateWindowContainer(void* window, void* parent, long long flags);
void* QWidget_actions_atList(void* ptr, int i);
void QWidget_TimerEvent(void* ptr, void* event);
void QWidget_TimerEventDefault(void* ptr, void* event);
void QWidget_ChildEvent(void* ptr, void* event);
void QWidget_ChildEventDefault(void* ptr, void* event);
void QWidget_ConnectNotify(void* ptr, void* sign);
void QWidget_ConnectNotifyDefault(void* ptr, void* sign);
void QWidget_CustomEvent(void* ptr, void* event);
void QWidget_CustomEventDefault(void* ptr, void* event);
void QWidget_DeleteLater(void* ptr);
void QWidget_DeleteLaterDefault(void* ptr);
void QWidget_DisconnectNotify(void* ptr, void* sign);
void QWidget_DisconnectNotifyDefault(void* ptr, void* sign);
char QWidget_EventFilter(void* ptr, void* watched, void* event);
char QWidget_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWidget_MetaObject(void* ptr);
void* QWidget_MetaObjectDefault(void* ptr);
void* QWidgetAction_NewQWidgetAction(void* parent);
void* QWidgetAction_CreateWidget(void* ptr, void* parent);
void* QWidgetAction_CreateWidgetDefault(void* ptr, void* parent);
struct QtWidgets_PackedList QWidgetAction_CreatedWidgets(void* ptr);
void* QWidgetAction_DefaultWidget(void* ptr);
void QWidgetAction_DeleteWidget(void* ptr, void* widget);
void QWidgetAction_DeleteWidgetDefault(void* ptr, void* widget);
char QWidgetAction_Event(void* ptr, void* event);
char QWidgetAction_EventDefault(void* ptr, void* event);
char QWidgetAction_EventFilter(void* ptr, void* obj, void* event);
char QWidgetAction_EventFilterDefault(void* ptr, void* obj, void* event);
void QWidgetAction_ReleaseWidget(void* ptr, void* widget);
void* QWidgetAction_RequestWidget(void* ptr, void* parent);
void QWidgetAction_SetDefaultWidget(void* ptr, void* widget);
void QWidgetAction_DestroyQWidgetAction(void* ptr);
void QWidgetAction_DestroyQWidgetActionDefault(void* ptr);
void* QWidgetAction_createdWidgets_atList(void* ptr, int i);
void QWidgetAction_SetChecked(void* ptr, char vbo);
void QWidgetAction_SetCheckedDefault(void* ptr, char vbo);
void QWidgetAction_SetEnabled(void* ptr, char vbo);
void QWidgetAction_SetEnabledDefault(void* ptr, char vbo);
void QWidgetAction_SetVisible(void* ptr, char vbo);
void QWidgetAction_SetVisibleDefault(void* ptr, char vbo);
void QWidgetAction_Toggle(void* ptr);
void QWidgetAction_ToggleDefault(void* ptr);
void QWidgetAction_Hover(void* ptr);
void QWidgetAction_HoverDefault(void* ptr);
void QWidgetAction_SetDisabled(void* ptr, char b);
void QWidgetAction_SetDisabledDefault(void* ptr, char b);
void QWidgetAction_Trigger(void* ptr);
void QWidgetAction_TriggerDefault(void* ptr);
void QWidgetAction_TimerEvent(void* ptr, void* event);
void QWidgetAction_TimerEventDefault(void* ptr, void* event);
void QWidgetAction_ChildEvent(void* ptr, void* event);
void QWidgetAction_ChildEventDefault(void* ptr, void* event);
void QWidgetAction_ConnectNotify(void* ptr, void* sign);
void QWidgetAction_ConnectNotifyDefault(void* ptr, void* sign);
void QWidgetAction_CustomEvent(void* ptr, void* event);
void QWidgetAction_CustomEventDefault(void* ptr, void* event);
void QWidgetAction_DeleteLater(void* ptr);
void QWidgetAction_DeleteLaterDefault(void* ptr);
void QWidgetAction_DisconnectNotify(void* ptr, void* sign);
void QWidgetAction_DisconnectNotifyDefault(void* ptr, void* sign);
void* QWidgetAction_MetaObject(void* ptr);
void* QWidgetAction_MetaObjectDefault(void* ptr);
void* QWidgetItem_NewQWidgetItem(void* widget);
long long QWidgetItem_ControlTypes(void* ptr);
long long QWidgetItem_ControlTypesDefault(void* ptr);
long long QWidgetItem_ExpandingDirections(void* ptr);
long long QWidgetItem_ExpandingDirectionsDefault(void* ptr);
void* QWidgetItem_Geometry(void* ptr);
void* QWidgetItem_GeometryDefault(void* ptr);
char QWidgetItem_HasHeightForWidth(void* ptr);
char QWidgetItem_HasHeightForWidthDefault(void* ptr);
int QWidgetItem_HeightForWidth(void* ptr, int w);
int QWidgetItem_HeightForWidthDefault(void* ptr, int w);
char QWidgetItem_IsEmpty(void* ptr);
char QWidgetItem_IsEmptyDefault(void* ptr);
void* QWidgetItem_MaximumSize(void* ptr);
void* QWidgetItem_MaximumSizeDefault(void* ptr);
void* QWidgetItem_MinimumSize(void* ptr);
void* QWidgetItem_MinimumSizeDefault(void* ptr);
void QWidgetItem_SetGeometry(void* ptr, void* rect);
void QWidgetItem_SetGeometryDefault(void* ptr, void* rect);
void* QWidgetItem_SizeHint(void* ptr);
void* QWidgetItem_SizeHintDefault(void* ptr);
void* QWidgetItem_Widget(void* ptr);
void* QWidgetItem_WidgetDefault(void* ptr);
void QWidgetItem_DestroyQWidgetItem(void* ptr);
void* QWidgetItem_Wid(void* ptr);
void QWidgetItem_SetWid(void* ptr, void* vqw);
void QWidgetItem_Invalidate(void* ptr);
void QWidgetItem_InvalidateDefault(void* ptr);
void* QWidgetItem_Layout(void* ptr);
void* QWidgetItem_LayoutDefault(void* ptr);
int QWidgetItem_MinimumHeightForWidth(void* ptr, int w);
int QWidgetItem_MinimumHeightForWidthDefault(void* ptr, int w);
void* QWidgetItem_SpacerItem(void* ptr);
void* QWidgetItem_SpacerItemDefault(void* ptr);
void QWizard_CleanupPage(void* ptr, int id);
void QWizard_CleanupPageDefault(void* ptr, int id);
int QWizard_CurrentId(void* ptr);
char QWizard_HasVisitedPage(void* ptr, int id);
void QWizard_InitializePage(void* ptr, int id);
void QWizard_InitializePageDefault(void* ptr, int id);
long long QWizard_Options(void* ptr);
void* QWizard_Page(void* ptr, int id);
void QWizard_SetOptions(void* ptr, long long options);
void QWizard_SetPage(void* ptr, int id, void* page);
void QWizard_SetStartId(void* ptr, int id);
void QWizard_SetSubTitleFormat(void* ptr, long long format);
void QWizard_SetTitleFormat(void* ptr, long long format);
void QWizard_SetWizardStyle(void* ptr, long long style);
int QWizard_StartId(void* ptr);
long long QWizard_SubTitleFormat(void* ptr);
long long QWizard_TitleFormat(void* ptr);
long long QWizard_WizardStyle(void* ptr);
void* QWizard_NewQWizard(void* parent, long long flags);
int QWizard_AddPage(void* ptr, void* page);
void QWizard_Back(void* ptr);
void* QWizard_Button(void* ptr, long long which);
struct QtWidgets_PackedString QWizard_ButtonText(void* ptr, long long which);
void QWizard_ConnectCurrentIdChanged(void* ptr);
void QWizard_DisconnectCurrentIdChanged(void* ptr);
void QWizard_CurrentIdChanged(void* ptr, int id);
void* QWizard_CurrentPage(void* ptr);
void QWizard_ConnectCustomButtonClicked(void* ptr);
void QWizard_DisconnectCustomButtonClicked(void* ptr);
void QWizard_CustomButtonClicked(void* ptr, int which);
void QWizard_Done(void* ptr, int result);
void QWizard_DoneDefault(void* ptr, int result);
char QWizard_Event(void* ptr, void* event);
void* QWizard_Field(void* ptr, char* name);
void QWizard_ConnectHelpRequested(void* ptr);
void QWizard_DisconnectHelpRequested(void* ptr);
void QWizard_HelpRequested(void* ptr);
char QWizard_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QWizard_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QWizard_Next(void* ptr);
int QWizard_NextId(void* ptr);
int QWizard_NextIdDefault(void* ptr);
void QWizard_ConnectPageAdded(void* ptr);
void QWizard_DisconnectPageAdded(void* ptr);
void QWizard_PageAdded(void* ptr, int id);
void QWizard_ConnectPageRemoved(void* ptr);
void QWizard_DisconnectPageRemoved(void* ptr);
void QWizard_PageRemoved(void* ptr, int id);
void QWizard_PaintEvent(void* ptr, void* event);
void QWizard_PaintEventDefault(void* ptr, void* event);
void* QWizard_Pixmap(void* ptr, long long which);
void QWizard_RemovePage(void* ptr, int id);
void QWizard_ResizeEvent(void* ptr, void* event);
void QWizard_ResizeEventDefault(void* ptr, void* event);
void QWizard_Restart(void* ptr);
void QWizard_SetButton(void* ptr, long long which, void* button);
void QWizard_SetButtonText(void* ptr, long long which, char* text);
void QWizard_SetDefaultProperty(void* ptr, char* className, char* property, char* changedSignal);
void QWizard_SetField(void* ptr, char* name, void* value);
void QWizard_SetOption(void* ptr, long long option, char on);
void QWizard_SetPixmap(void* ptr, long long which, void* pixmap);
void QWizard_SetSideWidget(void* ptr, void* widget);
void QWizard_SetVisible(void* ptr, char visible);
void QWizard_SetVisibleDefault(void* ptr, char visible);
void* QWizard_SideWidget(void* ptr);
void* QWizard_SizeHint(void* ptr);
void* QWizard_SizeHintDefault(void* ptr);
char QWizard_TestOption(void* ptr, long long option);
char QWizard_ValidateCurrentPage(void* ptr);
char QWizard_ValidateCurrentPageDefault(void* ptr);
void QWizard_DestroyQWizard(void* ptr);
void QWizard_Accept(void* ptr);
void QWizard_AcceptDefault(void* ptr);
void QWizard_CloseEvent(void* ptr, void* e);
void QWizard_CloseEventDefault(void* ptr, void* e);
void QWizard_ContextMenuEvent(void* ptr, void* e);
void QWizard_ContextMenuEventDefault(void* ptr, void* e);
int QWizard_Exec(void* ptr);
int QWizard_ExecDefault(void* ptr);
void QWizard_KeyPressEvent(void* ptr, void* e);
void QWizard_KeyPressEventDefault(void* ptr, void* e);
void* QWizard_MinimumSizeHint(void* ptr);
void* QWizard_MinimumSizeHintDefault(void* ptr);
void QWizard_Open(void* ptr);
void QWizard_OpenDefault(void* ptr);
void QWizard_Reject(void* ptr);
void QWizard_RejectDefault(void* ptr);
void QWizard_ShowEvent(void* ptr, void* event);
void QWizard_ShowEventDefault(void* ptr, void* event);
void QWizard_ActionEvent(void* ptr, void* event);
void QWizard_ActionEventDefault(void* ptr, void* event);
void QWizard_DragEnterEvent(void* ptr, void* event);
void QWizard_DragEnterEventDefault(void* ptr, void* event);
void QWizard_DragLeaveEvent(void* ptr, void* event);
void QWizard_DragLeaveEventDefault(void* ptr, void* event);
void QWizard_DragMoveEvent(void* ptr, void* event);
void QWizard_DragMoveEventDefault(void* ptr, void* event);
void QWizard_DropEvent(void* ptr, void* event);
void QWizard_DropEventDefault(void* ptr, void* event);
void QWizard_EnterEvent(void* ptr, void* event);
void QWizard_EnterEventDefault(void* ptr, void* event);
void QWizard_FocusInEvent(void* ptr, void* event);
void QWizard_FocusInEventDefault(void* ptr, void* event);
void QWizard_FocusOutEvent(void* ptr, void* event);
void QWizard_FocusOutEventDefault(void* ptr, void* event);
void QWizard_HideEvent(void* ptr, void* event);
void QWizard_HideEventDefault(void* ptr, void* event);
void QWizard_LeaveEvent(void* ptr, void* event);
void QWizard_LeaveEventDefault(void* ptr, void* event);
void QWizard_MoveEvent(void* ptr, void* event);
void QWizard_MoveEventDefault(void* ptr, void* event);
void QWizard_SetEnabled(void* ptr, char vbo);
void QWizard_SetEnabledDefault(void* ptr, char vbo);
void QWizard_SetStyleSheet(void* ptr, char* styleSheet);
void QWizard_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QWizard_SetWindowModified(void* ptr, char vbo);
void QWizard_SetWindowModifiedDefault(void* ptr, char vbo);
void QWizard_SetWindowTitle(void* ptr, char* vqs);
void QWizard_SetWindowTitleDefault(void* ptr, char* vqs);
void QWizard_ChangeEvent(void* ptr, void* event);
void QWizard_ChangeEventDefault(void* ptr, void* event);
char QWizard_Close(void* ptr);
char QWizard_CloseDefault(void* ptr);
char QWizard_FocusNextPrevChild(void* ptr, char next);
char QWizard_FocusNextPrevChildDefault(void* ptr, char next);
char QWizard_HasHeightForWidth(void* ptr);
char QWizard_HasHeightForWidthDefault(void* ptr);
int QWizard_HeightForWidth(void* ptr, int w);
int QWizard_HeightForWidthDefault(void* ptr, int w);
void QWizard_Hide(void* ptr);
void QWizard_HideDefault(void* ptr);
void QWizard_InputMethodEvent(void* ptr, void* event);
void QWizard_InputMethodEventDefault(void* ptr, void* event);
void* QWizard_InputMethodQuery(void* ptr, long long query);
void* QWizard_InputMethodQueryDefault(void* ptr, long long query);
void QWizard_KeyReleaseEvent(void* ptr, void* event);
void QWizard_KeyReleaseEventDefault(void* ptr, void* event);
void QWizard_Lower(void* ptr);
void QWizard_LowerDefault(void* ptr);
void QWizard_MouseDoubleClickEvent(void* ptr, void* event);
void QWizard_MouseDoubleClickEventDefault(void* ptr, void* event);
void QWizard_MouseMoveEvent(void* ptr, void* event);
void QWizard_MouseMoveEventDefault(void* ptr, void* event);
void QWizard_MousePressEvent(void* ptr, void* event);
void QWizard_MousePressEventDefault(void* ptr, void* event);
void QWizard_MouseReleaseEvent(void* ptr, void* event);
void QWizard_MouseReleaseEventDefault(void* ptr, void* event);
void QWizard_Raise(void* ptr);
void QWizard_RaiseDefault(void* ptr);
void QWizard_Repaint(void* ptr);
void QWizard_RepaintDefault(void* ptr);
void QWizard_SetDisabled(void* ptr, char disable);
void QWizard_SetDisabledDefault(void* ptr, char disable);
void QWizard_SetFocus2(void* ptr);
void QWizard_SetFocus2Default(void* ptr);
void QWizard_SetHidden(void* ptr, char hidden);
void QWizard_SetHiddenDefault(void* ptr, char hidden);
void QWizard_Show(void* ptr);
void QWizard_ShowDefault(void* ptr);
void QWizard_ShowFullScreen(void* ptr);
void QWizard_ShowFullScreenDefault(void* ptr);
void QWizard_ShowMaximized(void* ptr);
void QWizard_ShowMaximizedDefault(void* ptr);
void QWizard_ShowMinimized(void* ptr);
void QWizard_ShowMinimizedDefault(void* ptr);
void QWizard_ShowNormal(void* ptr);
void QWizard_ShowNormalDefault(void* ptr);
void QWizard_TabletEvent(void* ptr, void* event);
void QWizard_TabletEventDefault(void* ptr, void* event);
void QWizard_Update(void* ptr);
void QWizard_UpdateDefault(void* ptr);
void QWizard_UpdateMicroFocus(void* ptr);
void QWizard_UpdateMicroFocusDefault(void* ptr);
void QWizard_WheelEvent(void* ptr, void* event);
void QWizard_WheelEventDefault(void* ptr, void* event);
void QWizard_TimerEvent(void* ptr, void* event);
void QWizard_TimerEventDefault(void* ptr, void* event);
void QWizard_ChildEvent(void* ptr, void* event);
void QWizard_ChildEventDefault(void* ptr, void* event);
void QWizard_ConnectNotify(void* ptr, void* sign);
void QWizard_ConnectNotifyDefault(void* ptr, void* sign);
void QWizard_CustomEvent(void* ptr, void* event);
void QWizard_CustomEventDefault(void* ptr, void* event);
void QWizard_DeleteLater(void* ptr);
void QWizard_DeleteLaterDefault(void* ptr);
void QWizard_DisconnectNotify(void* ptr, void* sign);
void QWizard_DisconnectNotifyDefault(void* ptr, void* sign);
void* QWizard_MetaObject(void* ptr);
void* QWizard_MetaObjectDefault(void* ptr);
void QWizardPage_SetSubTitle(void* ptr, char* subTitle);
void QWizardPage_SetTitle(void* ptr, char* title);
struct QtWidgets_PackedString QWizardPage_SubTitle(void* ptr);
struct QtWidgets_PackedString QWizardPage_Title(void* ptr);
void* QWizardPage_NewQWizardPage(void* parent);
struct QtWidgets_PackedString QWizardPage_ButtonText(void* ptr, long long which);
void QWizardPage_CleanupPage(void* ptr);
void QWizardPage_CleanupPageDefault(void* ptr);
void QWizardPage_ConnectCompleteChanged(void* ptr);
void QWizardPage_DisconnectCompleteChanged(void* ptr);
void QWizardPage_CompleteChanged(void* ptr);
void* QWizardPage_Field(void* ptr, char* name);
void QWizardPage_InitializePage(void* ptr);
void QWizardPage_InitializePageDefault(void* ptr);
char QWizardPage_IsCommitPage(void* ptr);
char QWizardPage_IsComplete(void* ptr);
char QWizardPage_IsCompleteDefault(void* ptr);
char QWizardPage_IsFinalPage(void* ptr);
int QWizardPage_NextId(void* ptr);
int QWizardPage_NextIdDefault(void* ptr);
void* QWizardPage_Pixmap(void* ptr, long long which);
void QWizardPage_RegisterField(void* ptr, char* name, void* widget, char* property, char* changedSignal);
void QWizardPage_SetButtonText(void* ptr, long long which, char* text);
void QWizardPage_SetCommitPage(void* ptr, char commitPage);
void QWizardPage_SetField(void* ptr, char* name, void* value);
void QWizardPage_SetFinalPage(void* ptr, char finalPage);
void QWizardPage_SetPixmap(void* ptr, long long which, void* pixmap);
char QWizardPage_ValidatePage(void* ptr);
char QWizardPage_ValidatePageDefault(void* ptr);
void* QWizardPage_Wizard(void* ptr);
void QWizardPage_DestroyQWizardPage(void* ptr);
void QWizardPage_ActionEvent(void* ptr, void* event);
void QWizardPage_ActionEventDefault(void* ptr, void* event);
void QWizardPage_DragEnterEvent(void* ptr, void* event);
void QWizardPage_DragEnterEventDefault(void* ptr, void* event);
void QWizardPage_DragLeaveEvent(void* ptr, void* event);
void QWizardPage_DragLeaveEventDefault(void* ptr, void* event);
void QWizardPage_DragMoveEvent(void* ptr, void* event);
void QWizardPage_DragMoveEventDefault(void* ptr, void* event);
void QWizardPage_DropEvent(void* ptr, void* event);
void QWizardPage_DropEventDefault(void* ptr, void* event);
void QWizardPage_EnterEvent(void* ptr, void* event);
void QWizardPage_EnterEventDefault(void* ptr, void* event);
void QWizardPage_FocusInEvent(void* ptr, void* event);
void QWizardPage_FocusInEventDefault(void* ptr, void* event);
void QWizardPage_FocusOutEvent(void* ptr, void* event);
void QWizardPage_FocusOutEventDefault(void* ptr, void* event);
void QWizardPage_HideEvent(void* ptr, void* event);
void QWizardPage_HideEventDefault(void* ptr, void* event);
void QWizardPage_LeaveEvent(void* ptr, void* event);
void QWizardPage_LeaveEventDefault(void* ptr, void* event);
void* QWizardPage_MinimumSizeHint(void* ptr);
void* QWizardPage_MinimumSizeHintDefault(void* ptr);
void QWizardPage_MoveEvent(void* ptr, void* event);
void QWizardPage_MoveEventDefault(void* ptr, void* event);
void QWizardPage_PaintEvent(void* ptr, void* event);
void QWizardPage_PaintEventDefault(void* ptr, void* event);
void QWizardPage_SetEnabled(void* ptr, char vbo);
void QWizardPage_SetEnabledDefault(void* ptr, char vbo);
void QWizardPage_SetStyleSheet(void* ptr, char* styleSheet);
void QWizardPage_SetStyleSheetDefault(void* ptr, char* styleSheet);
void QWizardPage_SetVisible(void* ptr, char visible);
void QWizardPage_SetVisibleDefault(void* ptr, char visible);
void QWizardPage_SetWindowModified(void* ptr, char vbo);
void QWizardPage_SetWindowModifiedDefault(void* ptr, char vbo);
void QWizardPage_SetWindowTitle(void* ptr, char* vqs);
void QWizardPage_SetWindowTitleDefault(void* ptr, char* vqs);
void QWizardPage_ShowEvent(void* ptr, void* event);
void QWizardPage_ShowEventDefault(void* ptr, void* event);
void* QWizardPage_SizeHint(void* ptr);
void* QWizardPage_SizeHintDefault(void* ptr);
void QWizardPage_ChangeEvent(void* ptr, void* event);
void QWizardPage_ChangeEventDefault(void* ptr, void* event);
char QWizardPage_Close(void* ptr);
char QWizardPage_CloseDefault(void* ptr);
void QWizardPage_CloseEvent(void* ptr, void* event);
void QWizardPage_CloseEventDefault(void* ptr, void* event);
void QWizardPage_ContextMenuEvent(void* ptr, void* event);
void QWizardPage_ContextMenuEventDefault(void* ptr, void* event);
char QWizardPage_FocusNextPrevChild(void* ptr, char next);
char QWizardPage_FocusNextPrevChildDefault(void* ptr, char next);
char QWizardPage_HasHeightForWidth(void* ptr);
char QWizardPage_HasHeightForWidthDefault(void* ptr);
int QWizardPage_HeightForWidth(void* ptr, int w);
int QWizardPage_HeightForWidthDefault(void* ptr, int w);
void QWizardPage_Hide(void* ptr);
void QWizardPage_HideDefault(void* ptr);
void QWizardPage_InputMethodEvent(void* ptr, void* event);
void QWizardPage_InputMethodEventDefault(void* ptr, void* event);
void* QWizardPage_InputMethodQuery(void* ptr, long long query);
void* QWizardPage_InputMethodQueryDefault(void* ptr, long long query);
void QWizardPage_KeyPressEvent(void* ptr, void* event);
void QWizardPage_KeyPressEventDefault(void* ptr, void* event);
void QWizardPage_KeyReleaseEvent(void* ptr, void* event);
void QWizardPage_KeyReleaseEventDefault(void* ptr, void* event);
void QWizardPage_Lower(void* ptr);
void QWizardPage_LowerDefault(void* ptr);
void QWizardPage_MouseDoubleClickEvent(void* ptr, void* event);
void QWizardPage_MouseDoubleClickEventDefault(void* ptr, void* event);
void QWizardPage_MouseMoveEvent(void* ptr, void* event);
void QWizardPage_MouseMoveEventDefault(void* ptr, void* event);
void QWizardPage_MousePressEvent(void* ptr, void* event);
void QWizardPage_MousePressEventDefault(void* ptr, void* event);
void QWizardPage_MouseReleaseEvent(void* ptr, void* event);
void QWizardPage_MouseReleaseEventDefault(void* ptr, void* event);
char QWizardPage_NativeEvent(void* ptr, void* eventType, void* message, long result);
char QWizardPage_NativeEventDefault(void* ptr, void* eventType, void* message, long result);
void QWizardPage_Raise(void* ptr);
void QWizardPage_RaiseDefault(void* ptr);
void QWizardPage_Repaint(void* ptr);
void QWizardPage_RepaintDefault(void* ptr);
void QWizardPage_ResizeEvent(void* ptr, void* event);
void QWizardPage_ResizeEventDefault(void* ptr, void* event);
void QWizardPage_SetDisabled(void* ptr, char disable);
void QWizardPage_SetDisabledDefault(void* ptr, char disable);
void QWizardPage_SetFocus2(void* ptr);
void QWizardPage_SetFocus2Default(void* ptr);
void QWizardPage_SetHidden(void* ptr, char hidden);
void QWizardPage_SetHiddenDefault(void* ptr, char hidden);
void QWizardPage_Show(void* ptr);
void QWizardPage_ShowDefault(void* ptr);
void QWizardPage_ShowFullScreen(void* ptr);
void QWizardPage_ShowFullScreenDefault(void* ptr);
void QWizardPage_ShowMaximized(void* ptr);
void QWizardPage_ShowMaximizedDefault(void* ptr);
void QWizardPage_ShowMinimized(void* ptr);
void QWizardPage_ShowMinimizedDefault(void* ptr);
void QWizardPage_ShowNormal(void* ptr);
void QWizardPage_ShowNormalDefault(void* ptr);
void QWizardPage_TabletEvent(void* ptr, void* event);
void QWizardPage_TabletEventDefault(void* ptr, void* event);
void QWizardPage_Update(void* ptr);
void QWizardPage_UpdateDefault(void* ptr);
void QWizardPage_UpdateMicroFocus(void* ptr);
void QWizardPage_UpdateMicroFocusDefault(void* ptr);
void QWizardPage_WheelEvent(void* ptr, void* event);
void QWizardPage_WheelEventDefault(void* ptr, void* event);
void QWizardPage_TimerEvent(void* ptr, void* event);
void QWizardPage_TimerEventDefault(void* ptr, void* event);
void QWizardPage_ChildEvent(void* ptr, void* event);
void QWizardPage_ChildEventDefault(void* ptr, void* event);
void QWizardPage_ConnectNotify(void* ptr, void* sign);
void QWizardPage_ConnectNotifyDefault(void* ptr, void* sign);
void QWizardPage_CustomEvent(void* ptr, void* event);
void QWizardPage_CustomEventDefault(void* ptr, void* event);
void QWizardPage_DeleteLater(void* ptr);
void QWizardPage_DeleteLaterDefault(void* ptr);
void QWizardPage_DisconnectNotify(void* ptr, void* sign);
void QWizardPage_DisconnectNotifyDefault(void* ptr, void* sign);
char QWizardPage_EventFilter(void* ptr, void* watched, void* event);
char QWizardPage_EventFilterDefault(void* ptr, void* watched, void* event);
void* QWizardPage_MetaObject(void* ptr);
void* QWizardPage_MetaObjectDefault(void* ptr);

#ifdef __cplusplus
}
#endif

#endif